ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	NMI_Handler:
  26              	.LFB141:
  27              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32h7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32h7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32h7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32h7xx_it.c ****   *
  17:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32h7xx_it.c ****   */
  19:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32h7xx_it.c **** 
  21:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32h7xx_it.c **** #include "main.h"
  23:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  24:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32h7xx_it.c **** 
  28:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32h7xx_it.c **** 
  31:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** 
  33:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32h7xx_it.c **** 
  36:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32h7xx_it.c **** 
  38:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32h7xx_it.c **** 
  41:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32h7xx_it.c **** 
  43:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32h7xx_it.c **** 
  46:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32h7xx_it.c **** 
  48:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32h7xx_it.c **** 
  51:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32h7xx_it.c **** 
  53:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32h7xx_it.c **** 
  56:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32h7xx_it.c **** 
  58:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart1;
  60:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart3;
  61:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32h7xx_it.c **** 
  63:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32h7xx_it.c **** 
  65:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32h7xx_it.c **** /**
  69:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32h7xx_it.c ****   */
  71:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 72 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  73:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32h7xx_it.c **** 
  75:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32h7xx_it.c **** 
  78:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32h7xx_it.c **** }
  33              		.loc 1 79 1 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE141:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 3


  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv5-d16
  46              	HardFault_Handler:
  47              	.LFB142:
  80:Core/Src/stm32h7xx_it.c **** 
  81:Core/Src/stm32h7xx_it.c **** /**
  82:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Core/Src/stm32h7xx_it.c ****   */
  84:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  85:Core/Src/stm32h7xx_it.c **** {
  48              		.loc 1 85 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  86:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Core/Src/stm32h7xx_it.c **** 
  88:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Core/Src/stm32h7xx_it.c ****   while (1)
  55              		.loc 1 89 3 discriminator 1 view .LVU3
  90:Core/Src/stm32h7xx_it.c ****   {
  91:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Core/Src/stm32h7xx_it.c ****   }
  56              		.loc 1 93 3 discriminator 1 view .LVU4
  89:Core/Src/stm32h7xx_it.c ****   {
  57              		.loc 1 89 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE142:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv5-d16
  70              	MemManage_Handler:
  71              	.LFB143:
  94:Core/Src/stm32h7xx_it.c **** }
  95:Core/Src/stm32h7xx_it.c **** 
  96:Core/Src/stm32h7xx_it.c **** /**
  97:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
  98:Core/Src/stm32h7xx_it.c ****   */
  99:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 100:Core/Src/stm32h7xx_it.c **** {
  72              		.loc 1 100 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 4


  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.L5:
 101:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Core/Src/stm32h7xx_it.c **** 
 103:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Core/Src/stm32h7xx_it.c ****   while (1)
  79              		.loc 1 104 3 discriminator 1 view .LVU7
 105:Core/Src/stm32h7xx_it.c ****   {
 106:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32h7xx_it.c ****   }
  80              		.loc 1 108 3 discriminator 1 view .LVU8
 104:Core/Src/stm32h7xx_it.c ****   {
  81              		.loc 1 104 9 discriminator 1 view .LVU9
  82 0000 FEE7     		b	.L5
  83              		.cfi_endproc
  84              	.LFE143:
  86              		.section	.text.BusFault_Handler,"ax",%progbits
  87              		.align	1
  88              		.global	BusFault_Handler
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv5-d16
  94              	BusFault_Handler:
  95              	.LFB144:
 109:Core/Src/stm32h7xx_it.c **** }
 110:Core/Src/stm32h7xx_it.c **** 
 111:Core/Src/stm32h7xx_it.c **** /**
 112:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 113:Core/Src/stm32h7xx_it.c ****   */
 114:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 115:Core/Src/stm32h7xx_it.c **** {
  96              		.loc 1 115 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L7:
 116:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Core/Src/stm32h7xx_it.c **** 
 118:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Core/Src/stm32h7xx_it.c ****   while (1)
 103              		.loc 1 119 3 discriminator 1 view .LVU11
 120:Core/Src/stm32h7xx_it.c ****   {
 121:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Core/Src/stm32h7xx_it.c ****   }
 104              		.loc 1 123 3 discriminator 1 view .LVU12
 119:Core/Src/stm32h7xx_it.c ****   {
 105              		.loc 1 119 9 discriminator 1 view .LVU13
 106 0000 FEE7     		b	.L7
 107              		.cfi_endproc
 108              	.LFE144:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 5


 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv5-d16
 118              	UsageFault_Handler:
 119              	.LFB145:
 124:Core/Src/stm32h7xx_it.c **** }
 125:Core/Src/stm32h7xx_it.c **** 
 126:Core/Src/stm32h7xx_it.c **** /**
 127:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Core/Src/stm32h7xx_it.c ****   */
 129:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 130:Core/Src/stm32h7xx_it.c **** {
 120              		.loc 1 130 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L9:
 131:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Core/Src/stm32h7xx_it.c **** 
 133:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Core/Src/stm32h7xx_it.c ****   while (1)
 127              		.loc 1 134 3 discriminator 1 view .LVU15
 135:Core/Src/stm32h7xx_it.c ****   {
 136:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32h7xx_it.c ****   }
 128              		.loc 1 138 3 discriminator 1 view .LVU16
 134:Core/Src/stm32h7xx_it.c ****   {
 129              		.loc 1 134 9 discriminator 1 view .LVU17
 130 0000 FEE7     		b	.L9
 131              		.cfi_endproc
 132              	.LFE145:
 134              		.section	.text.SVC_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	SVC_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv5-d16
 142              	SVC_Handler:
 143              	.LFB146:
 139:Core/Src/stm32h7xx_it.c **** }
 140:Core/Src/stm32h7xx_it.c **** 
 141:Core/Src/stm32h7xx_it.c **** /**
 142:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Core/Src/stm32h7xx_it.c ****   */
 144:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 145:Core/Src/stm32h7xx_it.c **** {
 144              		.loc 1 145 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 6


 148              		@ link register save eliminated.
 146:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Core/Src/stm32h7xx_it.c **** 
 148:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Core/Src/stm32h7xx_it.c **** 
 151:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Core/Src/stm32h7xx_it.c **** }
 149              		.loc 1 152 1 view .LVU19
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE146:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv5-d16
 162              	DebugMon_Handler:
 163              	.LFB147:
 153:Core/Src/stm32h7xx_it.c **** 
 154:Core/Src/stm32h7xx_it.c **** /**
 155:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 156:Core/Src/stm32h7xx_it.c ****   */
 157:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 158:Core/Src/stm32h7xx_it.c **** {
 164              		.loc 1 158 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 159:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Core/Src/stm32h7xx_it.c **** 
 161:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Core/Src/stm32h7xx_it.c **** 
 164:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Core/Src/stm32h7xx_it.c **** }
 169              		.loc 1 165 1 view .LVU21
 170 0000 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE147:
 174              		.section	.text.PendSV_Handler,"ax",%progbits
 175              		.align	1
 176              		.global	PendSV_Handler
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv5-d16
 182              	PendSV_Handler:
 183              	.LFB148:
 166:Core/Src/stm32h7xx_it.c **** 
 167:Core/Src/stm32h7xx_it.c **** /**
 168:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Core/Src/stm32h7xx_it.c ****   */
 170:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 7


 171:Core/Src/stm32h7xx_it.c **** {
 184              		.loc 1 171 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 172:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Core/Src/stm32h7xx_it.c **** 
 174:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Core/Src/stm32h7xx_it.c **** 
 177:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Core/Src/stm32h7xx_it.c **** }
 189              		.loc 1 178 1 view .LVU23
 190 0000 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE148:
 194              		.section	.text.SysTick_Handler,"ax",%progbits
 195              		.align	1
 196              		.global	SysTick_Handler
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv5-d16
 202              	SysTick_Handler:
 203              	.LFB149:
 179:Core/Src/stm32h7xx_it.c **** 
 180:Core/Src/stm32h7xx_it.c **** /**
 181:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 182:Core/Src/stm32h7xx_it.c ****   */
 183:Core/Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 184:Core/Src/stm32h7xx_it.c **** {
 204              		.loc 1 184 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 08B5     		push	{r3, lr}
 209              	.LCFI0:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 3, -8
 212              		.cfi_offset 14, -4
 185:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Core/Src/stm32h7xx_it.c **** 
 187:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Core/Src/stm32h7xx_it.c ****   HAL_IncTick();
 213              		.loc 1 188 3 view .LVU25
 214 0002 FFF7FEFF 		bl	HAL_IncTick
 215              	.LVL0:
 189:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Core/Src/stm32h7xx_it.c **** 
 191:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Core/Src/stm32h7xx_it.c **** }
 216              		.loc 1 192 1 is_stmt 0 view .LVU26
 217 0006 08BD     		pop	{r3, pc}
 218              		.cfi_endproc
 219              	.LFE149:
 221              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 8


 222              		.align	1
 223              		.global	EXTI9_5_IRQHandler
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv5-d16
 229              	EXTI9_5_IRQHandler:
 230              	.LFB150:
 193:Core/Src/stm32h7xx_it.c **** 
 194:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 195:Core/Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 196:Core/Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 197:Core/Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 198:Core/Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 199:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32h7xx_it.c **** 
 201:Core/Src/stm32h7xx_it.c **** /**
 202:Core/Src/stm32h7xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 203:Core/Src/stm32h7xx_it.c ****   */
 204:Core/Src/stm32h7xx_it.c **** void EXTI9_5_IRQHandler(void)
 205:Core/Src/stm32h7xx_it.c **** {
 231              		.loc 1 205 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 08B5     		push	{r3, lr}
 236              	.LCFI1:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 3, -8
 239              		.cfi_offset 14, -4
 206:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 207:Core/Src/stm32h7xx_it.c **** 	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 240              		.loc 1 207 2 view .LVU28
 241 0002 4020     		movs	r0, #64
 242 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 243              	.LVL1:
 208:Core/Src/stm32h7xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 209:Core/Src/stm32h7xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 244              		.loc 1 209 3 view .LVU29
 245 0008 8020     		movs	r0, #128
 246 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 247              	.LVL2:
 210:Core/Src/stm32h7xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 248              		.loc 1 210 3 view .LVU30
 249 000e 4FF48070 		mov	r0, #256
 250 0012 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 251              	.LVL3:
 211:Core/Src/stm32h7xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_9);
 252              		.loc 1 211 3 view .LVU31
 253 0016 4FF40070 		mov	r0, #512
 254 001a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 255              	.LVL4:
 212:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 213:Core/Src/stm32h7xx_it.c **** 
 214:Core/Src/stm32h7xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 215:Core/Src/stm32h7xx_it.c **** }
 256              		.loc 1 215 1 is_stmt 0 view .LVU32
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 9


 257 001e 08BD     		pop	{r3, pc}
 258              		.cfi_endproc
 259              	.LFE150:
 261              		.section	.text.USART1_IRQHandler,"ax",%progbits
 262              		.align	1
 263              		.global	USART1_IRQHandler
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv5-d16
 269              	USART1_IRQHandler:
 270              	.LFB151:
 216:Core/Src/stm32h7xx_it.c **** 
 217:Core/Src/stm32h7xx_it.c **** /**
 218:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART1 global interrupt.
 219:Core/Src/stm32h7xx_it.c ****   */
 220:Core/Src/stm32h7xx_it.c **** void USART1_IRQHandler(void)
 221:Core/Src/stm32h7xx_it.c **** {
 271              		.loc 1 221 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 08B5     		push	{r3, lr}
 276              	.LCFI2:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 3, -8
 279              		.cfi_offset 14, -4
 222:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 223:Core/Src/stm32h7xx_it.c **** 
 224:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 225:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 280              		.loc 1 225 3 view .LVU34
 281 0002 0248     		ldr	r0, .L19
 282 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 283              	.LVL5:
 226:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 227:Core/Src/stm32h7xx_it.c **** 
 228:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 229:Core/Src/stm32h7xx_it.c **** }
 284              		.loc 1 229 1 is_stmt 0 view .LVU35
 285 0008 08BD     		pop	{r3, pc}
 286              	.L20:
 287 000a 00BF     		.align	2
 288              	.L19:
 289 000c 00000000 		.word	huart1
 290              		.cfi_endproc
 291              	.LFE151:
 293              		.section	.text.USART3_IRQHandler,"ax",%progbits
 294              		.align	1
 295              		.global	USART3_IRQHandler
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv5-d16
 301              	USART3_IRQHandler:
 302              	.LFB152:
 230:Core/Src/stm32h7xx_it.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 10


 231:Core/Src/stm32h7xx_it.c **** /**
 232:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART3 global interrupt.
 233:Core/Src/stm32h7xx_it.c ****   */
 234:Core/Src/stm32h7xx_it.c **** void USART3_IRQHandler(void)
 235:Core/Src/stm32h7xx_it.c **** {
 303              		.loc 1 235 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 08B5     		push	{r3, lr}
 308              	.LCFI3:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 3, -8
 311              		.cfi_offset 14, -4
 236:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 237:Core/Src/stm32h7xx_it.c **** 
 238:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 239:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 312              		.loc 1 239 3 view .LVU37
 313 0002 0248     		ldr	r0, .L23
 314 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 315              	.LVL6:
 240:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 241:Core/Src/stm32h7xx_it.c **** 
 242:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 243:Core/Src/stm32h7xx_it.c **** }
 316              		.loc 1 243 1 is_stmt 0 view .LVU38
 317 0008 08BD     		pop	{r3, pc}
 318              	.L24:
 319 000a 00BF     		.align	2
 320              	.L23:
 321 000c 00000000 		.word	huart3
 322              		.cfi_endproc
 323              	.LFE152:
 325              		.text
 326              	.Letext0:
 327              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 328              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 329              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 330              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 331              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 332              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 333              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 334              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 335              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 336              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 337              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 338              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 339              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 340              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 341              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 342              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
ARM GAS  C:\Users\root\AppData\Local\Temp\ccUeUKBp.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_it.c
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:17     .text.NMI_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:63     .text.MemManage_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:70     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:87     .text.BusFault_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:111    .text.UsageFault_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:118    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:135    .text.SVC_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:142    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:155    .text.DebugMon_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:162    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:175    .text.PendSV_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:182    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:195    .text.SysTick_Handler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:202    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:222    .text.EXTI9_5_IRQHandler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:229    .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:262    .text.USART1_IRQHandler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:269    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:289    .text.USART1_IRQHandler:0000000c $d
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:294    .text.USART3_IRQHandler:00000000 $t
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:301    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\root\AppData\Local\Temp\ccUeUKBp.s:321    .text.USART3_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_UART_IRQHandler
huart1
huart3
