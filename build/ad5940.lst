ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ad5940.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.AD5940_SEQGenSearchReg,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	AD5940_SEQGenSearchReg:
  25              	.LVL0:
  26              	.LFB4:
  27              		.file 1 "ad5940lib/ad5940.c"
   1:ad5940lib/ad5940.c **** /**  
   2:ad5940lib/ad5940.c ****  * @file       ad5940.c
   3:ad5940lib/ad5940.c ****  * @brief      AD5940 library. This file contains all AD5940 library functions. 
   4:ad5940lib/ad5940.c ****  * @author     ADI
   5:ad5940lib/ad5940.c ****  * @date       March 2019
   6:ad5940lib/ad5940.c ****  * @par Revision History:
   7:ad5940lib/ad5940.c ****  * 
   8:ad5940lib/ad5940.c ****  * Copyright (c) 2017-2019 Analog Devices, Inc. All Rights Reserved.
   9:ad5940lib/ad5940.c ****  * 
  10:ad5940lib/ad5940.c ****  * This software is proprietary to Analog Devices, Inc. and its licensors.
  11:ad5940lib/ad5940.c ****  * By using this software you agree to the terms of the associated
  12:ad5940lib/ad5940.c ****  * Analog Devices Software License Agreement.
  13:ad5940lib/ad5940.c **** **/
  14:ad5940lib/ad5940.c **** #include "ad5940.h"
  15:ad5940lib/ad5940.c **** 
  16:ad5940lib/ad5940.c **** /*! \mainpage AD5940 Library Introduction
  17:ad5940lib/ad5940.c ****  * 
  18:ad5940lib/ad5940.c ****  * ![AD5940 EVAL Board](https://www.analog.com/-/media/analog/en/evaluation-board-images/images/eva
  19:ad5940lib/ad5940.c ****  * 
  20:ad5940lib/ad5940.c ****  * # Introduction
  21:ad5940lib/ad5940.c ****  *
  22:ad5940lib/ad5940.c ****  * The documentation is for AD594x library and examples.
  23:ad5940lib/ad5940.c ****  * 
  24:ad5940lib/ad5940.c ****  * # Manual Structure
  25:ad5940lib/ad5940.c ****  *
  26:ad5940lib/ad5940.c ****  * @ref AD5940_Library                                                      
  27:ad5940lib/ad5940.c ****  *  - @ref AD5940_Functions                                                 
  28:ad5940lib/ad5940.c ****  *  - @ref TypeDefinitions                                                    
  29:ad5940lib/ad5940.c ****  * @ref AD5940_Standard_Examples                                            
  30:ad5940lib/ad5940.c ****  * @ref AD5940_System_Examples	                                            
  31:ad5940lib/ad5940.c ****  * 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 2


  32:ad5940lib/ad5940.c ****  * # How to Use It
  33:ad5940lib/ad5940.c ****  *  We provide examples that can directly run out of box.
  34:ad5940lib/ad5940.c ****  *  The files can generally be separated to three parts:
  35:ad5940lib/ad5940.c ****  *    - AD5940 Library files. ad5940.c and ad5940.h specifically. These two files are shared among 
  36:ad5940lib/ad5940.c ****  *    - AD5940 System Examples. The system examples mean system level application like measuring im
  37:ad5940lib/ad5940.c ****  *    - Standard examples. These include basic block level examples like ADC. It shows how to setup
  38:ad5940lib/ad5940.c ****  * 
  39:ad5940lib/ad5940.c ****  * ## Requirements to run these examples
  40:ad5940lib/ad5940.c ****  *  ### Hardware
  41:ad5940lib/ad5940.c ****  *  - Use EVAL_AD5940 or EVAL_AD5941. The default MCU board we used is ADICUP3029. We also provide 
  42:ad5940lib/ad5940.c ****  *  - Or use EVAL_ADuCM355
  43:ad5940lib/ad5940.c ****  *  ### Software
  44:ad5940lib/ad5940.c ****  *  - Pull all the source file from [GitHub](https://github.com/analogdevicesinc/ad5940-examples.gi
  45:ad5940lib/ad5940.c ****  *  - CMSIS pack that related to specific MCU. This normally is done by IDE you use.
  46:ad5940lib/ad5940.c ****  * 
  47:ad5940lib/ad5940.c ****  * ## Materials
  48:ad5940lib/ad5940.c ****  *      Please use this library together with following materials.
  49:ad5940lib/ad5940.c ****  *      - [AD5940 Data Sheet](https://www.analog.com/media/en/technical-documentation/data-sheets/A
  50:ad5940lib/ad5940.c ****  *      - [AD5940 Eval Board](https://www.analog.com/en/design-center/evaluation-hardware-and-softw
  51:ad5940lib/ad5940.c ****  *
  52:ad5940lib/ad5940.c ****  */
  53:ad5940lib/ad5940.c **** 
  54:ad5940lib/ad5940.c **** /* Remove below variables after AD594x is released. */
  55:ad5940lib/ad5940.c **** static BoolFlag bIsS2silicon = bFALSE;
  56:ad5940lib/ad5940.c **** 
  57:ad5940lib/ad5940.c **** /* Declare of SPI functions used to read/write registers */
  58:ad5940lib/ad5940.c **** #ifndef CHIPSEL_M355
  59:ad5940lib/ad5940.c **** static uint32_t AD5940_SPIReadReg(uint16_t RegAddr);
  60:ad5940lib/ad5940.c **** static void AD5940_SPIWriteReg(uint16_t RegAddr, uint32_t RegData);
  61:ad5940lib/ad5940.c **** #else
  62:ad5940lib/ad5940.c **** static uint32_t AD5940_D2DReadReg(uint16_t RegAddr);
  63:ad5940lib/ad5940.c **** static void AD5940_D2DWriteReg(uint16_t RegAddr, uint32_t RegData);
  64:ad5940lib/ad5940.c **** #endif
  65:ad5940lib/ad5940.c **** 
  66:ad5940lib/ad5940.c **** /** 
  67:ad5940lib/ad5940.c ****  * @addtogroup AD5940_Library
  68:ad5940lib/ad5940.c ****  *  The library functions, structures and constants.
  69:ad5940lib/ad5940.c ****  * @{
  70:ad5940lib/ad5940.c ****  *    @defgroup AD5940_Functions
  71:ad5940lib/ad5940.c ****  *    @{
  72:ad5940lib/ad5940.c ****  *        @defgroup Function_Helpers
  73:ad5940lib/ad5940.c ****  *        @brief The functions with no hardware access. They are helpers.
  74:ad5940lib/ad5940.c ****  *        @{
  75:ad5940lib/ad5940.c ****  *            @defgroup Sequencer_Generator_Functions
  76:ad5940lib/ad5940.c ****  *            @brief The set of function used to track all register read and write once it's enable
  77:ad5940lib/ad5940.c ****  *            @{
  78:ad5940lib/ad5940.c **** */
  79:ad5940lib/ad5940.c **** 
  80:ad5940lib/ad5940.c **** #define SEQUENCE_GENERATOR  /*!< Build sequence generator part in to lib. Comment this line to remo
  81:ad5940lib/ad5940.c **** 
  82:ad5940lib/ad5940.c **** #ifdef SEQUENCE_GENERATOR
  83:ad5940lib/ad5940.c **** /**
  84:ad5940lib/ad5940.c ****  * Structure used to store register information(address and its data) 
  85:ad5940lib/ad5940.c ****  * */
  86:ad5940lib/ad5940.c **** typedef struct
  87:ad5940lib/ad5940.c **** {
  88:ad5940lib/ad5940.c ****   uint32_t RegAddr  :8;   /**< 8bit address is enough for sequencer */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 3


  89:ad5940lib/ad5940.c ****   uint32_t RegValue :24;  /**< Reg data is limited to 24bit by sequencer  */
  90:ad5940lib/ad5940.c **** }SEQGenRegInfo_Type;
  91:ad5940lib/ad5940.c **** 
  92:ad5940lib/ad5940.c **** /**
  93:ad5940lib/ad5940.c ****  * Sequencer generator data base.
  94:ad5940lib/ad5940.c **** */
  95:ad5940lib/ad5940.c **** struct
  96:ad5940lib/ad5940.c **** {
  97:ad5940lib/ad5940.c ****   BoolFlag EngineStart;         /**< Flag to mark start of the generator */
  98:ad5940lib/ad5940.c ****   uint32_t BufferSize;          /**< Total buffer size */
  99:ad5940lib/ad5940.c **** 
 100:ad5940lib/ad5940.c ****   uint32_t *pSeqBuff;           /**< The buffer for sequence generator(both sequences and RegInfo) 
 101:ad5940lib/ad5940.c ****   uint32_t SeqLen;              /**< Generated sequence length till now */
 102:ad5940lib/ad5940.c ****   SEQGenRegInfo_Type *pRegInfo; /**< Pointer to buffer where stores register info */
 103:ad5940lib/ad5940.c ****   uint32_t RegCount;            /**< The count of register info available in buffer *pRegInfo. */
 104:ad5940lib/ad5940.c ****   AD5940Err LastError;          /**< The last error message. */
 105:ad5940lib/ad5940.c **** }SeqGenDB;  /* Data base of Seq Generator */
 106:ad5940lib/ad5940.c **** 
 107:ad5940lib/ad5940.c **** /**
 108:ad5940lib/ad5940.c ****  * @brief Manually input a command to sequencer generator.
 109:ad5940lib/ad5940.c ****  * @param CmdWord: The 32-bit width sequencer command word. @ref Sequencer_Helper can be used to ge
 110:ad5940lib/ad5940.c ****  * @return None;
 111:ad5940lib/ad5940.c **** */
 112:ad5940lib/ad5940.c **** void AD5940_SEQGenInsert(uint32_t CmdWord)
 113:ad5940lib/ad5940.c **** {
 114:ad5940lib/ad5940.c ****   uint32_t temp;
 115:ad5940lib/ad5940.c ****   temp  = SeqGenDB.RegCount + SeqGenDB.SeqLen;
 116:ad5940lib/ad5940.c ****   /* Generate Sequence command */
 117:ad5940lib/ad5940.c ****   if(temp < SeqGenDB.BufferSize)
 118:ad5940lib/ad5940.c ****   {
 119:ad5940lib/ad5940.c ****     SeqGenDB.pSeqBuff[SeqGenDB.SeqLen] = CmdWord;
 120:ad5940lib/ad5940.c ****     SeqGenDB.SeqLen ++;
 121:ad5940lib/ad5940.c ****   }
 122:ad5940lib/ad5940.c ****   else  /* There is no buffer */
 123:ad5940lib/ad5940.c ****     SeqGenDB.LastError = AD5940ERR_BUFF;
 124:ad5940lib/ad5940.c **** }
 125:ad5940lib/ad5940.c **** 
 126:ad5940lib/ad5940.c **** /**
 127:ad5940lib/ad5940.c ****  * @brief Search data-base to get current register value.
 128:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 129:ad5940lib/ad5940.c ****  * @param pIndex: Pointer to a variable that used to store index of found register-info.
 130:ad5940lib/ad5940.c ****  * @return Return AD5940ERR_OK if register found in data-base. Otherwise return AD5940ERR_SEQREG.
 131:ad5940lib/ad5940.c **** */
 132:ad5940lib/ad5940.c **** static AD5940Err AD5940_SEQGenSearchReg(uint32_t RegAddr, uint32_t *pIndex)
 133:ad5940lib/ad5940.c **** {
  28              		.loc 1 133 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 134:ad5940lib/ad5940.c ****   uint32_t i;
  33              		.loc 1 134 3 view .LVU1
 135:ad5940lib/ad5940.c **** 
 136:ad5940lib/ad5940.c ****   RegAddr = (RegAddr>>2)&0xff;
  34              		.loc 1 136 3 view .LVU2
  35              		.loc 1 136 11 is_stmt 0 view .LVU3
  36 0000 C0F38700 		ubfx	r0, r0, #2, #8
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 4


  37              	.LVL1:
 137:ad5940lib/ad5940.c ****   for(i=0;i<SeqGenDB.RegCount;i++)
  38              		.loc 1 137 3 is_stmt 1 view .LVU4
  39              		.loc 1 137 8 is_stmt 0 view .LVU5
  40 0004 0023     		movs	r3, #0
  41              	.LVL2:
  42              	.L2:
  43              		.loc 1 137 11 is_stmt 1 discriminator 1 view .LVU6
  44              		.loc 1 137 21 is_stmt 0 discriminator 1 view .LVU7
  45 0006 094A     		ldr	r2, .L8
  46 0008 5269     		ldr	r2, [r2, #20]
  47              		.loc 1 137 3 discriminator 1 view .LVU8
  48 000a 9A42     		cmp	r2, r3
  49 000c 0AD9     		bls	.L6
 138:ad5940lib/ad5940.c ****   {
 139:ad5940lib/ad5940.c ****     if(RegAddr == SeqGenDB.pRegInfo[i].RegAddr)
  50              		.loc 1 139 5 is_stmt 1 view .LVU9
  51              		.loc 1 139 27 is_stmt 0 view .LVU10
  52 000e 074A     		ldr	r2, .L8
  53 0010 1269     		ldr	r2, [r2, #16]
  54              		.loc 1 139 39 view .LVU11
  55 0012 12F82320 		ldrb	r2, [r2, r3, lsl #2]	@ zero_extendqisi2
  56              		.loc 1 139 7 view .LVU12
  57 0016 8242     		cmp	r2, r0
  58 0018 01D0     		beq	.L7
 137:ad5940lib/ad5940.c ****   for(i=0;i<SeqGenDB.RegCount;i++)
  59              		.loc 1 137 31 is_stmt 1 discriminator 2 view .LVU13
 137:ad5940lib/ad5940.c ****   for(i=0;i<SeqGenDB.RegCount;i++)
  60              		.loc 1 137 32 is_stmt 0 discriminator 2 view .LVU14
  61 001a 0133     		adds	r3, r3, #1
  62              	.LVL3:
 137:ad5940lib/ad5940.c ****   for(i=0;i<SeqGenDB.RegCount;i++)
  63              		.loc 1 137 32 discriminator 2 view .LVU15
  64 001c F3E7     		b	.L2
  65              	.L7:
 140:ad5940lib/ad5940.c ****     {
 141:ad5940lib/ad5940.c ****       *pIndex = i;
  66              		.loc 1 141 7 is_stmt 1 view .LVU16
  67              		.loc 1 141 15 is_stmt 0 view .LVU17
  68 001e 0B60     		str	r3, [r1]
 142:ad5940lib/ad5940.c ****       return AD5940ERR_OK;
  69              		.loc 1 142 7 is_stmt 1 view .LVU18
  70              		.loc 1 142 14 is_stmt 0 view .LVU19
  71 0020 0020     		movs	r0, #0
  72              	.LVL4:
  73              		.loc 1 142 14 view .LVU20
  74 0022 7047     		bx	lr
  75              	.LVL5:
  76              	.L6:
 143:ad5940lib/ad5940.c ****     }
 144:ad5940lib/ad5940.c ****   }
 145:ad5940lib/ad5940.c ****   return AD5940ERR_SEQREG;
  77              		.loc 1 145 10 view .LVU21
  78 0024 6FF00600 		mvn	r0, #6
  79              	.LVL6:
 146:ad5940lib/ad5940.c **** }
  80              		.loc 1 146 1 view .LVU22
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 5


  81 0028 7047     		bx	lr
  82              	.L9:
  83 002a 00BF     		.align	2
  84              	.L8:
  85 002c 00000000 		.word	SeqGenDB
  86              		.cfi_endproc
  87              	.LFE4:
  89              		.section	.text.AD5940_SEQRegInfoInsert,"ax",%progbits
  90              		.align	1
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv5-d16
  96              	AD5940_SEQRegInfoInsert:
  97              	.LVL7:
  98              	.LFB6:
 147:ad5940lib/ad5940.c **** 
 148:ad5940lib/ad5940.c **** /**
 149:ad5940lib/ad5940.c ****  * @brief Get the register default value by SPI read. This function requires AD5940 is in active st
 150:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 151:ad5940lib/ad5940.c ****  * @param pRegData: Pointer to a variable to store register default value.
 152:ad5940lib/ad5940.c ****  * @return Return AD5940ERR_OK.
 153:ad5940lib/ad5940.c **** */
 154:ad5940lib/ad5940.c **** static AD5940Err AD5940_SEQGenGetRegDefault(uint32_t RegAddr, uint32_t *pRegData)
 155:ad5940lib/ad5940.c **** {
 156:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
 157:ad5940lib/ad5940.c ****   *pRegData = AD5940_D2DReadReg(RegAddr);
 158:ad5940lib/ad5940.c **** #else
 159:ad5940lib/ad5940.c ****   *pRegData = AD5940_SPIReadReg(RegAddr);
 160:ad5940lib/ad5940.c **** #endif
 161:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 162:ad5940lib/ad5940.c **** }
 163:ad5940lib/ad5940.c **** 
 164:ad5940lib/ad5940.c **** /**
 165:ad5940lib/ad5940.c ****  * @brief Record the current register info to data-base. Update LastError if there is error.
 166:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 167:ad5940lib/ad5940.c ****  * @param RegData: The register data
 168:ad5940lib/ad5940.c ****  * @return Return None.
 169:ad5940lib/ad5940.c **** */
 170:ad5940lib/ad5940.c **** static void AD5940_SEQRegInfoInsert(uint16_t RegAddr, uint32_t RegData)
 171:ad5940lib/ad5940.c **** {
  99              		.loc 1 171 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              		.loc 1 171 1 is_stmt 0 view .LVU24
 105 0000 10B4     		push	{r4}
 106              	.LCFI0:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 4, -4
 172:ad5940lib/ad5940.c ****   uint32_t temp;
 109              		.loc 1 172 3 is_stmt 1 view .LVU25
 173:ad5940lib/ad5940.c ****   temp = SeqGenDB.RegCount + SeqGenDB.SeqLen;
 110              		.loc 1 173 3 view .LVU26
 111              		.loc 1 173 18 is_stmt 0 view .LVU27
 112 0002 0F4A     		ldr	r2, .L14
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 6


 113 0004 5369     		ldr	r3, [r2, #20]
 114              		.loc 1 173 38 view .LVU28
 115 0006 D468     		ldr	r4, [r2, #12]
 116              		.loc 1 173 8 view .LVU29
 117 0008 2344     		add	r3, r3, r4
 118              	.LVL8:
 174:ad5940lib/ad5940.c ****   
 175:ad5940lib/ad5940.c ****   if(temp < SeqGenDB.BufferSize)
 119              		.loc 1 175 3 is_stmt 1 view .LVU30
 120              		.loc 1 175 21 is_stmt 0 view .LVU31
 121 000a 5268     		ldr	r2, [r2, #4]
 122              		.loc 1 175 5 view .LVU32
 123 000c 9A42     		cmp	r2, r3
 124 000e 11D9     		bls	.L11
 176:ad5940lib/ad5940.c ****   {
 177:ad5940lib/ad5940.c ****     SeqGenDB.pRegInfo --; /* Move back */
 125              		.loc 1 177 5 is_stmt 1 view .LVU33
 126              		.loc 1 177 13 is_stmt 0 view .LVU34
 127 0010 0B4B     		ldr	r3, .L14
 128              	.LVL9:
 129              		.loc 1 177 13 view .LVU35
 130 0012 1A69     		ldr	r2, [r3, #16]
 131              		.loc 1 177 23 view .LVU36
 132 0014 141F     		subs	r4, r2, #4
 133              	.LVL10:
 134              		.loc 1 177 23 view .LVU37
 135 0016 1C61     		str	r4, [r3, #16]
 178:ad5940lib/ad5940.c ****     SeqGenDB.pRegInfo[0].RegAddr = (RegAddr>>2)&0xff;
 136              		.loc 1 178 5 is_stmt 1 view .LVU38
 137              		.loc 1 178 34 is_stmt 0 view .LVU39
 138 0018 8008     		lsrs	r0, r0, #2
 139              	.LVL11:
 140              		.loc 1 178 34 view .LVU40
 141 001a 02F8040C 		strb	r0, [r2, #-4]
 142              	.LVL12:
 179:ad5940lib/ad5940.c ****     SeqGenDB.pRegInfo[0].RegValue = RegData&0x00ffffff;
 143              		.loc 1 179 5 is_stmt 1 view .LVU41
 144              		.loc 1 179 13 is_stmt 0 view .LVU42
 145 001e 1A69     		ldr	r2, [r3, #16]
 146              		.loc 1 179 35 view .LVU43
 147 0020 1068     		ldr	r0, [r2]
 148 0022 61F31F20 		bfi	r0, r1, #8, #24
 149 0026 1060     		str	r0, [r2]
 180:ad5940lib/ad5940.c ****     SeqGenDB.RegCount ++;
 150              		.loc 1 180 5 is_stmt 1 view .LVU44
 151              		.loc 1 180 13 is_stmt 0 view .LVU45
 152 0028 5A69     		ldr	r2, [r3, #20]
 153              		.loc 1 180 23 view .LVU46
 154 002a 0132     		adds	r2, r2, #1
 155 002c 5A61     		str	r2, [r3, #20]
 156              	.L10:
 181:ad5940lib/ad5940.c ****   }
 182:ad5940lib/ad5940.c ****   else  /* There is no more buffer  */
 183:ad5940lib/ad5940.c ****   {
 184:ad5940lib/ad5940.c ****     SeqGenDB.LastError = AD5940ERR_BUFF;
 185:ad5940lib/ad5940.c ****   }
 186:ad5940lib/ad5940.c **** }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 7


 157              		.loc 1 186 1 view .LVU47
 158 002e 5DF8044B 		ldr	r4, [sp], #4
 159              	.LCFI1:
 160              		.cfi_remember_state
 161              		.cfi_restore 4
 162              		.cfi_def_cfa_offset 0
 163 0032 7047     		bx	lr
 164              	.LVL13:
 165              	.L11:
 166              	.LCFI2:
 167              		.cfi_restore_state
 184:ad5940lib/ad5940.c ****   }
 168              		.loc 1 184 5 is_stmt 1 view .LVU48
 184:ad5940lib/ad5940.c ****   }
 169              		.loc 1 184 24 is_stmt 0 view .LVU49
 170 0034 024B     		ldr	r3, .L14
 171              	.LVL14:
 184:ad5940lib/ad5940.c ****   }
 172              		.loc 1 184 24 view .LVU50
 173 0036 6FF00302 		mvn	r2, #3
 174 003a 9A61     		str	r2, [r3, #24]
 175              		.loc 1 186 1 view .LVU51
 176 003c F7E7     		b	.L10
 177              	.L15:
 178 003e 00BF     		.align	2
 179              	.L14:
 180 0040 00000000 		.word	SeqGenDB
 181              		.cfi_endproc
 182              	.LFE6:
 184              		.section	.text._is_value_in_table,"ax",%progbits
 185              		.align	1
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv5-d16
 191              	_is_value_in_table:
 192              	.LVL15:
 193              	.LFB13:
 187:ad5940lib/ad5940.c **** 
 188:ad5940lib/ad5940.c **** /**
 189:ad5940lib/ad5940.c ****  * @brief Get current register value. If we have record in data-base, read it. Otherwise, return th
 190:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 191:ad5940lib/ad5940.c ****  * @return Return register value.
 192:ad5940lib/ad5940.c **** */
 193:ad5940lib/ad5940.c **** static uint32_t AD5940_SEQReadReg(uint16_t RegAddr)
 194:ad5940lib/ad5940.c **** {
 195:ad5940lib/ad5940.c ****   uint32_t RegIndex, RegData;
 196:ad5940lib/ad5940.c ****   
 197:ad5940lib/ad5940.c ****   if(AD5940_SEQGenSearchReg(RegAddr, &RegIndex) != AD5940ERR_OK)
 198:ad5940lib/ad5940.c ****   {
 199:ad5940lib/ad5940.c ****     /* There is no record in data-base, read the default value. */
 200:ad5940lib/ad5940.c ****     AD5940_SEQGenGetRegDefault(RegAddr, &RegData);
 201:ad5940lib/ad5940.c ****     AD5940_SEQRegInfoInsert(RegAddr, RegData);
 202:ad5940lib/ad5940.c ****   }
 203:ad5940lib/ad5940.c ****   else
 204:ad5940lib/ad5940.c ****   {
 205:ad5940lib/ad5940.c ****     /* return the current register value stored in data-base */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 8


 206:ad5940lib/ad5940.c ****     RegData = SeqGenDB.pRegInfo[RegIndex].RegValue;
 207:ad5940lib/ad5940.c ****   }
 208:ad5940lib/ad5940.c **** 
 209:ad5940lib/ad5940.c ****   return RegData;
 210:ad5940lib/ad5940.c **** }
 211:ad5940lib/ad5940.c **** 
 212:ad5940lib/ad5940.c **** /**
 213:ad5940lib/ad5940.c ****  * @brief Generate a sequencer command to write register. If the register address is out of range, 
 214:ad5940lib/ad5940.c ****  *        This function will also update the register-info in data-base to record current register 
 215:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 216:ad5940lib/ad5940.c ****  * @param RegData: The register value.
 217:ad5940lib/ad5940.c ****  * @return Return None.
 218:ad5940lib/ad5940.c **** */
 219:ad5940lib/ad5940.c **** static void AD5940_SEQWriteReg(uint16_t RegAddr, uint32_t RegData)
 220:ad5940lib/ad5940.c **** {
 221:ad5940lib/ad5940.c ****   uint32_t RegIndex;
 222:ad5940lib/ad5940.c ****   
 223:ad5940lib/ad5940.c ****   if(RegAddr > 0x21ff)
 224:ad5940lib/ad5940.c ****   {
 225:ad5940lib/ad5940.c ****     SeqGenDB.LastError = AD5940ERR_ADDROR;  /* address out of range  */
 226:ad5940lib/ad5940.c ****     return;
 227:ad5940lib/ad5940.c ****   }
 228:ad5940lib/ad5940.c **** 
 229:ad5940lib/ad5940.c ****   if(AD5940_SEQGenSearchReg(RegAddr, &RegIndex) == AD5940ERR_OK)
 230:ad5940lib/ad5940.c ****   {
 231:ad5940lib/ad5940.c ****     /* Store register value */
 232:ad5940lib/ad5940.c ****     SeqGenDB.pRegInfo[RegIndex].RegValue = RegData;
 233:ad5940lib/ad5940.c ****     /* Generate Sequence command */
 234:ad5940lib/ad5940.c ****     AD5940_SEQGenInsert(SEQ_WR(RegAddr, RegData));
 235:ad5940lib/ad5940.c ****   }
 236:ad5940lib/ad5940.c ****   else
 237:ad5940lib/ad5940.c ****   {
 238:ad5940lib/ad5940.c ****     AD5940_SEQRegInfoInsert(RegAddr, RegData);
 239:ad5940lib/ad5940.c ****     /* Generate Sequence command */
 240:ad5940lib/ad5940.c ****     AD5940_SEQGenInsert(SEQ_WR(RegAddr, RegData));
 241:ad5940lib/ad5940.c ****   }
 242:ad5940lib/ad5940.c **** }
 243:ad5940lib/ad5940.c **** 
 244:ad5940lib/ad5940.c **** /**
 245:ad5940lib/ad5940.c ****  * @brief Initialize sequencer generator with specified buffer.
 246:ad5940lib/ad5940.c ****  *        The buffer is used to store sequencer generated and record register value changes.
 247:ad5940lib/ad5940.c ****  *        The command is stored from start address of buffer while register value is stored from en
 248:ad5940lib/ad5940.c ****  *    Buffer[0] : First sequencer command;
 249:ad5940lib/ad5940.c ****  *    Buffer[1] : Second Sequencer command;
 250:ad5940lib/ad5940.c ****  *    ...
 251:ad5940lib/ad5940.c ****  *    Buffer[Last-1]: The second register value record.
 252:ad5940lib/ad5940.c ****  *    Buffer[Last]: The first register value record.
 253:ad5940lib/ad5940.c ****  * @param pBuffer: Pointer to the buffer.
 254:ad5940lib/ad5940.c ****  * @param BufferSize: The buffer length.
 255:ad5940lib/ad5940.c ****  * @return Return None.
 256:ad5940lib/ad5940.c **** */
 257:ad5940lib/ad5940.c **** void AD5940_SEQGenInit(uint32_t *pBuffer, uint32_t BufferSize)
 258:ad5940lib/ad5940.c **** {
 259:ad5940lib/ad5940.c ****   if(BufferSize < 2) return;
 260:ad5940lib/ad5940.c ****   SeqGenDB.BufferSize = BufferSize;
 261:ad5940lib/ad5940.c ****   SeqGenDB.pSeqBuff = pBuffer;
 262:ad5940lib/ad5940.c ****   SeqGenDB.pRegInfo = (SEQGenRegInfo_Type*)pBuffer + BufferSize - 1; /* Point to the last element i
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 9


 263:ad5940lib/ad5940.c ****   SeqGenDB.SeqLen = 0;
 264:ad5940lib/ad5940.c **** 
 265:ad5940lib/ad5940.c ****   SeqGenDB.RegCount = 0;
 266:ad5940lib/ad5940.c ****   SeqGenDB.LastError = AD5940ERR_OK;
 267:ad5940lib/ad5940.c ****   SeqGenDB.EngineStart = bFALSE;
 268:ad5940lib/ad5940.c **** }
 269:ad5940lib/ad5940.c **** 
 270:ad5940lib/ad5940.c **** /**
 271:ad5940lib/ad5940.c ****  * @brief Get sequencer command generated.
 272:ad5940lib/ad5940.c ****  * @param ppSeqCmd: Pointer to a variable(pointer) used to store the pointer to generated sequencer
 273:ad5940lib/ad5940.c ****  * @param pSeqLen: Pointer to a variable that used to store how many commands available in buffer.
 274:ad5940lib/ad5940.c ****  * @return Return lasterror.
 275:ad5940lib/ad5940.c **** */
 276:ad5940lib/ad5940.c **** AD5940Err AD5940_SEQGenFetchSeq(const uint32_t **ppSeqCmd, uint32_t *pSeqLen)
 277:ad5940lib/ad5940.c **** {
 278:ad5940lib/ad5940.c ****   AD5940Err lasterror;
 279:ad5940lib/ad5940.c **** 
 280:ad5940lib/ad5940.c ****   if(ppSeqCmd)
 281:ad5940lib/ad5940.c ****     *ppSeqCmd = SeqGenDB.pSeqBuff;  
 282:ad5940lib/ad5940.c ****   if(pSeqLen)
 283:ad5940lib/ad5940.c ****     *pSeqLen = SeqGenDB.SeqLen;
 284:ad5940lib/ad5940.c **** 
 285:ad5940lib/ad5940.c ****   //SeqGenDB.SeqLen = 0;  /* Start a new sequence */
 286:ad5940lib/ad5940.c ****   lasterror = SeqGenDB.LastError;
 287:ad5940lib/ad5940.c ****   //SeqGenDB.LastError = AD5940ERR_OK;  /* Clear error message */
 288:ad5940lib/ad5940.c ****   return lasterror;
 289:ad5940lib/ad5940.c **** }
 290:ad5940lib/ad5940.c **** 
 291:ad5940lib/ad5940.c **** /**
 292:ad5940lib/ad5940.c ****  * @brief Start or stop the sequencer generator. Once started, the register write will be recorded 
 293:ad5940lib/ad5940.c ****  *        Once it's disabled, the register write is written to AD5940 directly by SPI bus.
 294:ad5940lib/ad5940.c ****  * @param bFlag: Enable or disable sequencer generator.
 295:ad5940lib/ad5940.c ****  * @return Return None.
 296:ad5940lib/ad5940.c **** */
 297:ad5940lib/ad5940.c **** void AD5940_SEQGenCtrl(BoolFlag bFlag)
 298:ad5940lib/ad5940.c **** {
 299:ad5940lib/ad5940.c ****   if(bFlag == bFALSE) /* Disable sequence generator */
 300:ad5940lib/ad5940.c ****   {
 301:ad5940lib/ad5940.c ****     SeqGenDB.EngineStart = bFALSE;
 302:ad5940lib/ad5940.c ****   }
 303:ad5940lib/ad5940.c ****   else
 304:ad5940lib/ad5940.c ****   {
 305:ad5940lib/ad5940.c ****     SeqGenDB.SeqLen = 0;
 306:ad5940lib/ad5940.c ****     SeqGenDB.LastError = AD5940ERR_OK;  /* Clear error message */
 307:ad5940lib/ad5940.c ****     SeqGenDB.EngineStart = bTRUE;
 308:ad5940lib/ad5940.c ****   }
 309:ad5940lib/ad5940.c **** }
 310:ad5940lib/ad5940.c **** 
 311:ad5940lib/ad5940.c **** /**
 312:ad5940lib/ad5940.c ****  * @brief Calculate the number of cycles in the sequence
 313:ad5940lib/ad5940.c ****  * @return Return Number of ACLK Cycles that a generated sequence will take.
 314:ad5940lib/ad5940.c **** */
 315:ad5940lib/ad5940.c **** uint32_t AD5940_SEQCycleTime(void)
 316:ad5940lib/ad5940.c **** {
 317:ad5940lib/ad5940.c ****   uint32_t i, Cycles, Cmd;  
 318:ad5940lib/ad5940.c ****   Cycles = 0;
 319:ad5940lib/ad5940.c ****   for(i=0;i<SeqGenDB.RegCount;i++)
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 10


 320:ad5940lib/ad5940.c ****   {
 321:ad5940lib/ad5940.c ****     Cmd = (SeqGenDB.pSeqBuff[i]  >> 30) & 0x3;
 322:ad5940lib/ad5940.c ****     if (Cmd & 0x2)
 323:ad5940lib/ad5940.c ****     {
 324:ad5940lib/ad5940.c ****       /* A write command */
 325:ad5940lib/ad5940.c ****       Cycles += 1;
 326:ad5940lib/ad5940.c ****     }
 327:ad5940lib/ad5940.c ****     else
 328:ad5940lib/ad5940.c ****     {
 329:ad5940lib/ad5940.c ****       if (Cmd & 0x1)
 330:ad5940lib/ad5940.c ****       {
 331:ad5940lib/ad5940.c ****         /* Timeout Command */    
 332:ad5940lib/ad5940.c ****         Cycles += 1;
 333:ad5940lib/ad5940.c ****       }
 334:ad5940lib/ad5940.c ****       else
 335:ad5940lib/ad5940.c ****         {
 336:ad5940lib/ad5940.c ****           /* Wait command */
 337:ad5940lib/ad5940.c ****           Cycles += SeqGenDB.pSeqBuff[i] & 0x3FFFFFFF;
 338:ad5940lib/ad5940.c ****         }
 339:ad5940lib/ad5940.c ****     }
 340:ad5940lib/ad5940.c ****   } 
 341:ad5940lib/ad5940.c ****   return Cycles;  
 342:ad5940lib/ad5940.c **** }
 343:ad5940lib/ad5940.c **** #endif
 344:ad5940lib/ad5940.c **** /**
 345:ad5940lib/ad5940.c ****  * @} Sequencer_Generator_Functions
 346:ad5940lib/ad5940.c **** */
 347:ad5940lib/ad5940.c **** 
 348:ad5940lib/ad5940.c **** /**
 349:ad5940lib/ad5940.c ****  * Check if an uint8_t value exist in table.
 350:ad5940lib/ad5940.c **** */
 351:ad5940lib/ad5940.c **** static int32_t _is_value_in_table(uint8_t value, const uint8_t *table, uint8_t len, uint8_t *index)
 352:ad5940lib/ad5940.c **** {
 194              		.loc 1 352 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199              		.loc 1 352 1 is_stmt 0 view .LVU53
 200 0000 30B4     		push	{r4, r5}
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 5, -4
 353:ad5940lib/ad5940.c ****   for(int i=0; i<len; i++)
 205              		.loc 1 353 3 is_stmt 1 view .LVU54
 206              	.LBB2:
 207              		.loc 1 353 7 view .LVU55
 208              	.LVL16:
 209              		.loc 1 353 11 is_stmt 0 view .LVU56
 210 0002 0024     		movs	r4, #0
 211              	.LVL17:
 212              	.L17:
 213              		.loc 1 353 16 is_stmt 1 discriminator 1 view .LVU57
 214              		.loc 1 353 3 is_stmt 0 discriminator 1 view .LVU58
 215 0004 A242     		cmp	r2, r4
 216 0006 07DD     		ble	.L22
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 11


 354:ad5940lib/ad5940.c ****   {
 355:ad5940lib/ad5940.c ****     if(value == table[i])
 217              		.loc 1 355 5 is_stmt 1 view .LVU59
 218              		.loc 1 355 22 is_stmt 0 view .LVU60
 219 0008 0D5D     		ldrb	r5, [r1, r4]	@ zero_extendqisi2
 220              		.loc 1 355 7 view .LVU61
 221 000a 8542     		cmp	r5, r0
 222 000c 01D0     		beq	.L23
 353:ad5940lib/ad5940.c ****   for(int i=0; i<len; i++)
 223              		.loc 1 353 23 is_stmt 1 discriminator 2 view .LVU62
 353:ad5940lib/ad5940.c ****   for(int i=0; i<len; i++)
 224              		.loc 1 353 24 is_stmt 0 discriminator 2 view .LVU63
 225 000e 0134     		adds	r4, r4, #1
 226              	.LVL18:
 353:ad5940lib/ad5940.c ****   for(int i=0; i<len; i++)
 227              		.loc 1 353 24 discriminator 2 view .LVU64
 228 0010 F8E7     		b	.L17
 229              	.L23:
 356:ad5940lib/ad5940.c ****     {
 357:ad5940lib/ad5940.c ****       *index = i;
 230              		.loc 1 357 7 is_stmt 1 view .LVU65
 231              		.loc 1 357 14 is_stmt 0 view .LVU66
 232 0012 1C70     		strb	r4, [r3]
 358:ad5940lib/ad5940.c ****       return bTRUE;
 233              		.loc 1 358 7 is_stmt 1 view .LVU67
 234              		.loc 1 358 14 is_stmt 0 view .LVU68
 235 0014 0120     		movs	r0, #1
 236              	.LVL19:
 237              		.loc 1 358 14 view .LVU69
 238 0016 00E0     		b	.L16
 239              	.LVL20:
 240              	.L22:
 241              		.loc 1 358 14 view .LVU70
 242              	.LBE2:
 359:ad5940lib/ad5940.c ****     }
 360:ad5940lib/ad5940.c ****   }
 361:ad5940lib/ad5940.c ****   return bFALSE;
 243              		.loc 1 361 10 view .LVU71
 244 0018 0020     		movs	r0, #0
 245              	.LVL21:
 246              	.L16:
 362:ad5940lib/ad5940.c **** }
 247              		.loc 1 362 1 view .LVU72
 248 001a 30BC     		pop	{r4, r5}
 249              	.LCFI4:
 250              		.cfi_restore 5
 251              		.cfi_restore 4
 252              		.cfi_def_cfa_offset 0
 253              	.LVL22:
 254              		.loc 1 362 1 view .LVU73
 255 001c 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE13:
 259              		.section	.text.AD5940_ReadWrite16B,"ax",%progbits
 260              		.align	1
 261              		.syntax unified
 262              		.thumb
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 12


 263              		.thumb_func
 264              		.fpu fpv5-d16
 266              	AD5940_ReadWrite16B:
 267              	.LVL23:
 268              	.LFB29:
 363:ad5940lib/ad5940.c **** 
 364:ad5940lib/ad5940.c **** /**
 365:ad5940lib/ad5940.c ****  * @brief return if the SINC3/SINC2 combination is available for notch 50Hz filter.
 366:ad5940lib/ad5940.c ****  *        If it's not availabe, hardware automatically bypass Notch even if it's enabled.
 367:ad5940lib/ad5940.c ****  * @param pFilterInfo the filter configuration, only need sinc2/sinc3 osr and adc data rate informa
 368:ad5940lib/ad5940.c ****  * @return return bTRUE if notch 50Hz filter is available.
 369:ad5940lib/ad5940.c **** */
 370:ad5940lib/ad5940.c **** BoolFlag AD5940_Notch50HzAvailable(ADCFilterCfg_Type *pFilterInfo, uint8_t *dl)
 371:ad5940lib/ad5940.c **** {
 372:ad5940lib/ad5940.c ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 373:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 374:ad5940lib/ad5940.c ****   {
 375:ad5940lib/ad5940.c ****     //this combination suits for filter:
 376:ad5940lib/ad5940.c ****     //SINC3 OSR2, for 800kSPS
 377:ad5940lib/ad5940.c ****     //and SINC3 OSR4 and OSR5 for 1.6MSPS,
 378:ad5940lib/ad5940.c ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_533, ADCSINC2OSR_667,ADCSINC2OSR_800, ADCSIN
 379:ad5940lib/ad5940.c ****     const uint8_t dl_50Hz[] = {15,12,10,9,6};
 380:ad5940lib/ad5940.c ****     uint8_t index;
 381:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 382:ad5940lib/ad5940.c ****     {
 383:ad5940lib/ad5940.c ****       *dl = dl_50Hz[index];
 384:ad5940lib/ad5940.c ****       return bTRUE;
 385:ad5940lib/ad5940.c ****     }
 386:ad5940lib/ad5940.c ****   }
 387:ad5940lib/ad5940.c ****   else if(pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)
 388:ad5940lib/ad5940.c ****   {
 389:ad5940lib/ad5940.c ****     //this combination suits for filter:
 390:ad5940lib/ad5940.c ****     //SINC3 OSR2 for 1.6MSPS
 391:ad5940lib/ad5940.c ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_889, ADCSINC2OSR_1067, ADCSINC2OSR_1333};
 392:ad5940lib/ad5940.c ****     const uint8_t dl_50Hz[] = {18,15,12};
 393:ad5940lib/ad5940.c ****     uint8_t index;
 394:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 395:ad5940lib/ad5940.c ****     {
 396:ad5940lib/ad5940.c ****       *dl = dl_50Hz[index];
 397:ad5940lib/ad5940.c ****       return bTRUE;
 398:ad5940lib/ad5940.c ****     }
 399:ad5940lib/ad5940.c ****   }
 400:ad5940lib/ad5940.c ****   else if(pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2)
 401:ad5940lib/ad5940.c ****   {
 402:ad5940lib/ad5940.c ****     //this combination suits for filter:
 403:ad5940lib/ad5940.c ****     //SINC3 OSR4 and OSR5 for 800kSPS,
 404:ad5940lib/ad5940.c ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_178, ADCSINC2OSR_267, ADCSINC2OSR_533, ADCSI
 405:ad5940lib/ad5940.c ****                                     ADCSINC2OSR_800, ADCSINC2OSR_1067};
 406:ad5940lib/ad5940.c ****     const uint8_t dl_50Hz[] = {18,12,6,5,4,3};
 407:ad5940lib/ad5940.c ****     uint8_t index;
 408:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 409:ad5940lib/ad5940.c ****     {
 410:ad5940lib/ad5940.c ****       *dl = dl_50Hz[index];
 411:ad5940lib/ad5940.c ****       return bTRUE;
 412:ad5940lib/ad5940.c ****     }
 413:ad5940lib/ad5940.c ****   }
 414:ad5940lib/ad5940.c ****   *dl = 0;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 13


 415:ad5940lib/ad5940.c ****   return bFALSE;
 416:ad5940lib/ad5940.c **** }
 417:ad5940lib/ad5940.c **** 
 418:ad5940lib/ad5940.c **** /**
 419:ad5940lib/ad5940.c ****  * @brief return if the SINC3/SINC2 combination is available for notch 60Hz filter.
 420:ad5940lib/ad5940.c ****  *        If it's not availabe, hardware automatically bypass Notch even if it's enabled.
 421:ad5940lib/ad5940.c ****  * @param pFilterInfo the filter configuration, need sinc2/sinc3 osr and adc data rate information.
 422:ad5940lib/ad5940.c ****  * @return return bTRUE if notch 60Hz filter is available.
 423:ad5940lib/ad5940.c **** */
 424:ad5940lib/ad5940.c **** BoolFlag AD5940_Notch60HzAvailable(ADCFilterCfg_Type *pFilterInfo, uint8_t *dl)
 425:ad5940lib/ad5940.c **** {
 426:ad5940lib/ad5940.c ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 427:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 428:ad5940lib/ad5940.c ****   {
 429:ad5940lib/ad5940.c ****     //this combination suits for filter:
 430:ad5940lib/ad5940.c ****     //SINC3 OSR2, for 800kSPS
 431:ad5940lib/ad5940.c ****     //and SINC3 OSR4 and OSR5 for 1.6MSPS,
 432:ad5940lib/ad5940.c ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_667, ADCSINC2OSR_1333};
 433:ad5940lib/ad5940.c ****     const uint8_t dl_60Hz[] = {10,5};
 434:ad5940lib/ad5940.c ****     uint8_t index;
 435:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 436:ad5940lib/ad5940.c ****     {
 437:ad5940lib/ad5940.c ****       *dl = dl_60Hz[index];
 438:ad5940lib/ad5940.c ****       return bTRUE;
 439:ad5940lib/ad5940.c ****     }
 440:ad5940lib/ad5940.c ****   }
 441:ad5940lib/ad5940.c ****   else if(pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)
 442:ad5940lib/ad5940.c ****   {
 443:ad5940lib/ad5940.c ****     //this combination suits for filter:
 444:ad5940lib/ad5940.c ****     //SINC3 OSR2 for 1.6MSPS
 445:ad5940lib/ad5940.c ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_889, ADCSINC2OSR_1333};
 446:ad5940lib/ad5940.c ****     const uint8_t dl_60Hz[] = {15,10};
 447:ad5940lib/ad5940.c ****     uint8_t index;
 448:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 449:ad5940lib/ad5940.c ****     {
 450:ad5940lib/ad5940.c ****       *dl = dl_60Hz[index];
 451:ad5940lib/ad5940.c ****       return bTRUE;
 452:ad5940lib/ad5940.c ****     }
 453:ad5940lib/ad5940.c ****   }
 454:ad5940lib/ad5940.c ****   else if(pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2)
 455:ad5940lib/ad5940.c ****   {
 456:ad5940lib/ad5940.c ****     //this combination suits for filter:
 457:ad5940lib/ad5940.c ****     //SINC3 OSR4 and OSR5 for 800kSPS,
 458:ad5940lib/ad5940.c ****     const uint8_t available_sinc2_osr[] = {ADCSINC2OSR_178, ADCSINC2OSR_267, ADCSINC2OSR_533, ADCSI
 459:ad5940lib/ad5940.c ****                                     ADCSINC2OSR_889, ADCSINC2OSR_1333};
 460:ad5940lib/ad5940.c ****     const uint8_t dl_60Hz[] = {15,10,5,4,3,2};
 461:ad5940lib/ad5940.c ****     uint8_t index;
 462:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 463:ad5940lib/ad5940.c ****     {
 464:ad5940lib/ad5940.c ****       *dl = dl_60Hz[index];
 465:ad5940lib/ad5940.c ****       return bTRUE;
 466:ad5940lib/ad5940.c ****     }
 467:ad5940lib/ad5940.c ****   }
 468:ad5940lib/ad5940.c ****   *dl = 0;
 469:ad5940lib/ad5940.c ****   return bFALSE;
 470:ad5940lib/ad5940.c **** }
 471:ad5940lib/ad5940.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 14


 472:ad5940lib/ad5940.c **** /**
 473:ad5940lib/ad5940.c ****  * @brief Calculate how many clocks are needed in sequencer wait command to generate required numbe
 474:ad5940lib/ad5940.c ****  * @note When measurement is done, it's recommend to disable blocks like ADCPWR, ADCCNV, SINC2, DFT
 475:ad5940lib/ad5940.c ****  *       they may need less clocks to generate required number of output. Use function @ref AD5940_
 476:ad5940lib/ad5940.c ****  * @param pFilterInfo: Pointer to configuration structure. 
 477:ad5940lib/ad5940.c ****  * @param pClocks: pointer used to store results.         
 478:ad5940lib/ad5940.c ****  * @return return none.
 479:ad5940lib/ad5940.c **** */
 480:ad5940lib/ad5940.c **** void AD5940_ClksCalculate(ClksCalInfo_Type *pFilterInfo, uint32_t *pClocks)
 481:ad5940lib/ad5940.c **** {
 482:ad5940lib/ad5940.c ****   uint32_t temp = 0;
 483:ad5940lib/ad5940.c ****   const uint32_t sinc2osr_table[] = {22,44,89,178,267,533,640,667,800,889,1067,1333,0};
 484:ad5940lib/ad5940.c ****   const uint32_t sinc3osr_table[] = {5,4,2,0};
 485:ad5940lib/ad5940.c **** 
 486:ad5940lib/ad5940.c ****   *pClocks = 0;
 487:ad5940lib/ad5940.c ****   if(pFilterInfo == NULL) return;
 488:ad5940lib/ad5940.c ****   if(pClocks == NULL) return;
 489:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCSinc2Osr > ADCSINC2OSR_1333) return;
 490:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCSinc3Osr > 2)  return; /* 0: OSR5, 1:OSR4, 2:OSR2 */
 491:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCAvgNum > ADCAVGNUM_16) return; /* Average number index:0,1,2,3 */
 492:ad5940lib/ad5940.c ****   switch(pFilterInfo->DataType)
 493:ad5940lib/ad5940.c ****   {
 494:ad5940lib/ad5940.c ****     case DATATYPE_ADCRAW:
 495:ad5940lib/ad5940.c ****       temp = (uint32_t)(20*pFilterInfo->DataCount*pFilterInfo->RatioSys2AdcClk);
 496:ad5940lib/ad5940.c ****       break;
 497:ad5940lib/ad5940.c ****     case DATATYPE_SINC3:
 498:ad5940lib/ad5940.c ****       temp = (uint32_t)(((pFilterInfo->DataCount+2)*sinc3osr_table[pFilterInfo->ADCSinc3Osr]+1)*20*
 499:ad5940lib/ad5940.c ****       break;
 500:ad5940lib/ad5940.c ****     case DATATYPE_SINC2: 
 501:ad5940lib/ad5940.c ****       temp = (pFilterInfo->DataCount+1)*sinc2osr_table[pFilterInfo->ADCSinc2Osr] + 1;
 502:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC3;
 503:ad5940lib/ad5940.c ****       pFilterInfo->DataCount = temp;
 504:ad5940lib/ad5940.c ****       AD5940_ClksCalculate(pFilterInfo, &temp);
 505:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC2;
 506:ad5940lib/ad5940.c ****       temp += 15;   /* Need extra 15 clocks for FIFO etc. Just to be safe. */
 507:ad5940lib/ad5940.c ****       break;
 508:ad5940lib/ad5940.c ****     case DATATYPE_NOTCH:
 509:ad5940lib/ad5940.c ****     {
 510:ad5940lib/ad5940.c ****       ADCFilterCfg_Type filter;
 511:ad5940lib/ad5940.c ****       filter.ADCRate = pFilterInfo->ADCRate;
 512:ad5940lib/ad5940.c ****       filter.ADCSinc3Osr = pFilterInfo->ADCSinc3Osr;
 513:ad5940lib/ad5940.c ****       filter.ADCSinc2Osr = pFilterInfo->ADCSinc2Osr;
 514:ad5940lib/ad5940.c ****       uint8_t dl=0, dl_50, dl_60;
 515:ad5940lib/ad5940.c ****       if(AD5940_Notch50HzAvailable(&filter, &dl_50)){
 516:ad5940lib/ad5940.c ****         dl += dl_50 - 1;
 517:ad5940lib/ad5940.c ****       }
 518:ad5940lib/ad5940.c ****       if(AD5940_Notch60HzAvailable(&filter, &dl_60)){
 519:ad5940lib/ad5940.c ****         dl += dl_60 - 1;
 520:ad5940lib/ad5940.c ****       }
 521:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC2;
 522:ad5940lib/ad5940.c ****       pFilterInfo->DataCount += dl; //DL is the extra data input needed for filter to output first 
 523:ad5940lib/ad5940.c ****       AD5940_ClksCalculate(pFilterInfo,&temp);
 524:ad5940lib/ad5940.c ****       //restore the filter info.
 525:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_NOTCH;
 526:ad5940lib/ad5940.c ****       pFilterInfo->DataCount -= dl;
 527:ad5940lib/ad5940.c ****       break;
 528:ad5940lib/ad5940.c ****     }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 15


 529:ad5940lib/ad5940.c ****     case DATATYPE_DFT:
 530:ad5940lib/ad5940.c ****       switch(pFilterInfo->DftSrc)
 531:ad5940lib/ad5940.c ****       {
 532:ad5940lib/ad5940.c ****         case DFTSRC_ADCRAW:
 533:ad5940lib/ad5940.c ****           pFilterInfo->DataType = DATATYPE_ADCRAW;
 534:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 535:ad5940lib/ad5940.c ****           break;
 536:ad5940lib/ad5940.c ****         case DFTSRC_SINC3:
 537:ad5940lib/ad5940.c ****           pFilterInfo->DataType = DATATYPE_SINC3;
 538:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 539:ad5940lib/ad5940.c ****           break;
 540:ad5940lib/ad5940.c ****         case DFTSRC_SINC2NOTCH:
 541:ad5940lib/ad5940.c ****           if(pFilterInfo->BpNotch)
 542:ad5940lib/ad5940.c ****             pFilterInfo->DataType = DATATYPE_SINC2;
 543:ad5940lib/ad5940.c ****           else
 544:ad5940lib/ad5940.c ****             pFilterInfo->DataType = DATATYPE_NOTCH;
 545:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 546:ad5940lib/ad5940.c ****           break;
 547:ad5940lib/ad5940.c ****         case DFTSRC_AVG:
 548:ad5940lib/ad5940.c ****           pFilterInfo->DataType = DATATYPE_SINC3;
 549:ad5940lib/ad5940.c ****           pFilterInfo->DataCount *= 1L<<(pFilterInfo->ADCAvgNum+1); /* 0: average2, 1: average4, 2:
 550:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 551:ad5940lib/ad5940.c ****           break;
 552:ad5940lib/ad5940.c ****         default:
 553:ad5940lib/ad5940.c ****           break;
 554:ad5940lib/ad5940.c ****       }
 555:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_DFT;
 556:ad5940lib/ad5940.c ****       temp += 25; /* add margin */
 557:ad5940lib/ad5940.c ****       break;
 558:ad5940lib/ad5940.c ****     default:
 559:ad5940lib/ad5940.c ****     break;
 560:ad5940lib/ad5940.c ****   }
 561:ad5940lib/ad5940.c ****   *pClocks = temp;
 562:ad5940lib/ad5940.c **** }
 563:ad5940lib/ad5940.c **** 
 564:ad5940lib/ad5940.c **** /**
 565:ad5940lib/ad5940.c ****    @brief void AD5940_SweepNext(SoftSweepCfg_Type *pSweepCfg, float *pNextFreq)
 566:ad5940lib/ad5940.c ****           For sweep function, calculate next frequency point according to pSweepCfg info.
 567:ad5940lib/ad5940.c ****    @return Return next frequency point in Hz.
 568:ad5940lib/ad5940.c **** */
 569:ad5940lib/ad5940.c **** void AD5940_SweepNext(SoftSweepCfg_Type *pSweepCfg, float *pNextFreq)
 570:ad5940lib/ad5940.c **** {
 571:ad5940lib/ad5940.c ****    float frequency;
 572:ad5940lib/ad5940.c **** 
 573:ad5940lib/ad5940.c ****    if(pSweepCfg->SweepLog)/* Log step */
 574:ad5940lib/ad5940.c ****    {
 575:ad5940lib/ad5940.c ****       if(pSweepCfg->SweepStart<pSweepCfg->SweepStop) /* Normal */
 576:ad5940lib/ad5940.c ****       {
 577:ad5940lib/ad5940.c ****          if(++pSweepCfg->SweepIndex == pSweepCfg->SweepPoints)
 578:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 579:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStart*pow(10,pSweepCfg->SweepIndex*log10(pSweepCfg->SweepStop/
 580:ad5940lib/ad5940.c ****       }
 581:ad5940lib/ad5940.c ****       else
 582:ad5940lib/ad5940.c ****       {
 583:ad5940lib/ad5940.c ****          pSweepCfg->SweepIndex --;
 584:ad5940lib/ad5940.c ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 585:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 16


 586:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStop*pow(10,pSweepCfg->SweepIndex*
 587:ad5940lib/ad5940.c ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
 588:ad5940lib/ad5940.c ****       }
 589:ad5940lib/ad5940.c ****    }
 590:ad5940lib/ad5940.c ****    else/* Linear step */
 591:ad5940lib/ad5940.c ****    {
 592:ad5940lib/ad5940.c ****       if(pSweepCfg->SweepStart<pSweepCfg->SweepStop) /* Normal */
 593:ad5940lib/ad5940.c ****       {
 594:ad5940lib/ad5940.c ****          if(++pSweepCfg->SweepIndex == pSweepCfg->SweepPoints)
 595:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 596:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStart + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStop-pS
 597:ad5940lib/ad5940.c ****       }
 598:ad5940lib/ad5940.c ****       else
 599:ad5940lib/ad5940.c ****       {
 600:ad5940lib/ad5940.c ****          pSweepCfg->SweepIndex --;
 601:ad5940lib/ad5940.c ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 602:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 603:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStop + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStart - 
 604:ad5940lib/ad5940.c ****       }
 605:ad5940lib/ad5940.c ****    }
 606:ad5940lib/ad5940.c ****    
 607:ad5940lib/ad5940.c ****    *pNextFreq = frequency;
 608:ad5940lib/ad5940.c **** }
 609:ad5940lib/ad5940.c **** 
 610:ad5940lib/ad5940.c **** /**
 611:ad5940lib/ad5940.c ****   @brief Initialize Structure members to zero
 612:ad5940lib/ad5940.c ****   @param pStruct: Pointer to the structure. 
 613:ad5940lib/ad5940.c ****   @param StructSize: The structure size in Byte.
 614:ad5940lib/ad5940.c ****   @return Return None.
 615:ad5940lib/ad5940.c **** **/
 616:ad5940lib/ad5940.c **** void AD5940_StructInit(void *pStruct, uint32_t StructSize)
 617:ad5940lib/ad5940.c **** {
 618:ad5940lib/ad5940.c ****   memset(pStruct, 0, StructSize);
 619:ad5940lib/ad5940.c **** }
 620:ad5940lib/ad5940.c **** 
 621:ad5940lib/ad5940.c **** /**
 622:ad5940lib/ad5940.c ****   @brief Convert ADC Code to voltage. 
 623:ad5940lib/ad5940.c ****   @param ADCPga: The ADC PGA used for this result.
 624:ad5940lib/ad5940.c ****   @param code: ADC code.
 625:ad5940lib/ad5940.c ****   @param VRef1p82: the actual 1.82V reference voltage.
 626:ad5940lib/ad5940.c ****   @return Voltage in volt.
 627:ad5940lib/ad5940.c **** **/
 628:ad5940lib/ad5940.c **** float AD5940_ADCCode2Volt(uint32_t code, uint32_t ADCPga, float VRef1p82)
 629:ad5940lib/ad5940.c **** {
 630:ad5940lib/ad5940.c ****   float kFactor = 1.835/1.82;
 631:ad5940lib/ad5940.c ****   float fVolt = 0.0;
 632:ad5940lib/ad5940.c ****   float tmp = 0;
 633:ad5940lib/ad5940.c ****   tmp = (int32_t)code - 32768;
 634:ad5940lib/ad5940.c ****   switch(ADCPga)
 635:ad5940lib/ad5940.c ****   {
 636:ad5940lib/ad5940.c ****   case ADCPGA_1:
 637:ad5940lib/ad5940.c ****     break;
 638:ad5940lib/ad5940.c ****   case ADCPGA_1P5:
 639:ad5940lib/ad5940.c ****     tmp /= 1.5f;
 640:ad5940lib/ad5940.c ****     break;
 641:ad5940lib/ad5940.c ****   case ADCPGA_2:
 642:ad5940lib/ad5940.c ****     tmp /= 2.0f;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 17


 643:ad5940lib/ad5940.c ****     break;
 644:ad5940lib/ad5940.c ****   case ADCPGA_4:
 645:ad5940lib/ad5940.c ****     tmp /= 4.0f;
 646:ad5940lib/ad5940.c ****     break;
 647:ad5940lib/ad5940.c ****   case ADCPGA_9:
 648:ad5940lib/ad5940.c ****     tmp /= 9.0f;
 649:ad5940lib/ad5940.c ****     break;
 650:ad5940lib/ad5940.c ****   default:break;
 651:ad5940lib/ad5940.c ****   }
 652:ad5940lib/ad5940.c ****   fVolt = tmp*VRef1p82/32768*kFactor;
 653:ad5940lib/ad5940.c ****   return fVolt;
 654:ad5940lib/ad5940.c **** }
 655:ad5940lib/ad5940.c **** 
 656:ad5940lib/ad5940.c **** /**
 657:ad5940lib/ad5940.c ****  * @brief Do complex number division.
 658:ad5940lib/ad5940.c ****  * @param a: The dividend.
 659:ad5940lib/ad5940.c ****  * @param b: The divisor.
 660:ad5940lib/ad5940.c ****  * @return Return result.
 661:ad5940lib/ad5940.c **** **/
 662:ad5940lib/ad5940.c **** fImpCar_Type AD5940_ComplexDivFloat(fImpCar_Type *a, fImpCar_Type *b)
 663:ad5940lib/ad5940.c **** {
 664:ad5940lib/ad5940.c ****   fImpCar_Type res;
 665:ad5940lib/ad5940.c ****   float temp;
 666:ad5940lib/ad5940.c ****   temp = b->Real*b->Real + b->Image*b->Image;
 667:ad5940lib/ad5940.c ****   res.Real = a->Real*b->Real + a->Image*b->Image;
 668:ad5940lib/ad5940.c ****   res.Real /= temp;
 669:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real - a->Real*b->Image;
 670:ad5940lib/ad5940.c ****   res.Image /= temp;
 671:ad5940lib/ad5940.c ****   return res;
 672:ad5940lib/ad5940.c **** }
 673:ad5940lib/ad5940.c **** 
 674:ad5940lib/ad5940.c **** /**
 675:ad5940lib/ad5940.c ****  * @brief Do complex number multiplication.
 676:ad5940lib/ad5940.c ****  * @param a: The multiplicand.
 677:ad5940lib/ad5940.c ****  * @param b: The multiplier .
 678:ad5940lib/ad5940.c ****  * @return Return result.
 679:ad5940lib/ad5940.c **** **/
 680:ad5940lib/ad5940.c **** fImpCar_Type AD5940_ComplexMulFloat(fImpCar_Type *a, fImpCar_Type *b)
 681:ad5940lib/ad5940.c **** {
 682:ad5940lib/ad5940.c ****   fImpCar_Type res;
 683:ad5940lib/ad5940.c ****   
 684:ad5940lib/ad5940.c ****   res.Real = a->Real*b->Real - a->Image*b->Image;
 685:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 686:ad5940lib/ad5940.c **** 
 687:ad5940lib/ad5940.c ****   return res;
 688:ad5940lib/ad5940.c **** }
 689:ad5940lib/ad5940.c **** /**
 690:ad5940lib/ad5940.c ****  * @brief Do complex number addition.
 691:ad5940lib/ad5940.c ****  * @param a: The addend.
 692:ad5940lib/ad5940.c ****  * @param b: The addend .
 693:ad5940lib/ad5940.c ****  * @return Return result.
 694:ad5940lib/ad5940.c **** **/
 695:ad5940lib/ad5940.c **** fImpCar_Type AD5940_ComplexAddFloat(fImpCar_Type *a, fImpCar_Type *b)
 696:ad5940lib/ad5940.c **** {
 697:ad5940lib/ad5940.c ****   fImpCar_Type res;
 698:ad5940lib/ad5940.c ****   
 699:ad5940lib/ad5940.c ****   res.Real = a->Real + b->Real;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 18


 700:ad5940lib/ad5940.c ****   res.Image = a->Image + b->Image;
 701:ad5940lib/ad5940.c **** 
 702:ad5940lib/ad5940.c ****   return res;
 703:ad5940lib/ad5940.c **** }
 704:ad5940lib/ad5940.c **** 
 705:ad5940lib/ad5940.c **** /**
 706:ad5940lib/ad5940.c ****  * @brief Do complex number subtraction.
 707:ad5940lib/ad5940.c ****  * @param a: The minuend.
 708:ad5940lib/ad5940.c ****  * @param b: The subtrahend .
 709:ad5940lib/ad5940.c ****  * @return Return result.
 710:ad5940lib/ad5940.c **** **/
 711:ad5940lib/ad5940.c **** fImpCar_Type AD5940_ComplexSubFloat(fImpCar_Type *a, fImpCar_Type *b)
 712:ad5940lib/ad5940.c **** {
 713:ad5940lib/ad5940.c ****   fImpCar_Type res;
 714:ad5940lib/ad5940.c ****   
 715:ad5940lib/ad5940.c ****   res.Real = a->Real - b->Real;
 716:ad5940lib/ad5940.c ****   res.Image = a->Image - b->Image;
 717:ad5940lib/ad5940.c **** 
 718:ad5940lib/ad5940.c ****   return res;
 719:ad5940lib/ad5940.c **** }
 720:ad5940lib/ad5940.c **** 
 721:ad5940lib/ad5940.c **** /**
 722:ad5940lib/ad5940.c ****  * @brief Do complex number division.
 723:ad5940lib/ad5940.c ****  * @param a: The dividend.
 724:ad5940lib/ad5940.c ****  * @param b: The divisor.
 725:ad5940lib/ad5940.c ****  * @return Return result.
 726:ad5940lib/ad5940.c **** **/
 727:ad5940lib/ad5940.c **** fImpCar_Type AD5940_ComplexDivInt(iImpCar_Type *a, iImpCar_Type *b)
 728:ad5940lib/ad5940.c **** {
 729:ad5940lib/ad5940.c ****   fImpCar_Type res;
 730:ad5940lib/ad5940.c ****   float temp;
 731:ad5940lib/ad5940.c ****   temp = (float)b->Real*b->Real + (float)b->Image*b->Image;
 732:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 733:ad5940lib/ad5940.c ****   res.Real /= temp;
 734:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real - (float)a->Real*b->Image;
 735:ad5940lib/ad5940.c ****   res.Image /= temp;
 736:ad5940lib/ad5940.c ****   return res;
 737:ad5940lib/ad5940.c **** }
 738:ad5940lib/ad5940.c **** 
 739:ad5940lib/ad5940.c **** /**
 740:ad5940lib/ad5940.c ****  * @brief Do complex number multiplication.
 741:ad5940lib/ad5940.c ****  * @param a: The multiplicand.
 742:ad5940lib/ad5940.c ****  * @param b: The multiplier .
 743:ad5940lib/ad5940.c ****  * @return Return result.
 744:ad5940lib/ad5940.c **** **/
 745:ad5940lib/ad5940.c **** fImpCar_Type AD5940_ComplexMulInt(iImpCar_Type *a, iImpCar_Type *b)
 746:ad5940lib/ad5940.c **** {
 747:ad5940lib/ad5940.c ****   fImpCar_Type res;
 748:ad5940lib/ad5940.c ****   
 749:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real - (float)a->Image*b->Image;
 750:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 751:ad5940lib/ad5940.c **** 
 752:ad5940lib/ad5940.c ****   return res;
 753:ad5940lib/ad5940.c **** }
 754:ad5940lib/ad5940.c **** 
 755:ad5940lib/ad5940.c **** /**
 756:ad5940lib/ad5940.c ****  * @brief Calculate the complex number magnitude.
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 19


 757:ad5940lib/ad5940.c ****  * @param a: The complex number.
 758:ad5940lib/ad5940.c ****  * @return Return magnitude.
 759:ad5940lib/ad5940.c **** **/
 760:ad5940lib/ad5940.c **** float AD5940_ComplexMag(fImpCar_Type *a)
 761:ad5940lib/ad5940.c **** {
 762:ad5940lib/ad5940.c ****   return sqrt(a->Real*a->Real + a->Image*a->Image);
 763:ad5940lib/ad5940.c **** }
 764:ad5940lib/ad5940.c **** 
 765:ad5940lib/ad5940.c **** /**
 766:ad5940lib/ad5940.c ****  * @brief Calculate the complex number phase.
 767:ad5940lib/ad5940.c ****  * @param a: The complex number.
 768:ad5940lib/ad5940.c ****  * @return Return phase.
 769:ad5940lib/ad5940.c **** **/
 770:ad5940lib/ad5940.c **** float AD5940_ComplexPhase(fImpCar_Type *a)
 771:ad5940lib/ad5940.c **** {
 772:ad5940lib/ad5940.c ****   return atan2(a->Image, a->Real);
 773:ad5940lib/ad5940.c **** }
 774:ad5940lib/ad5940.c **** 
 775:ad5940lib/ad5940.c **** /**
 776:ad5940lib/ad5940.c ****  * @} Function_Helpers
 777:ad5940lib/ad5940.c **** */
 778:ad5940lib/ad5940.c **** 
 779:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
 780:ad5940lib/ad5940.c **** static void AD5940_D2DWriteReg(uint16_t RegAddr, uint32_t RegData)
 781:ad5940lib/ad5940.c **** {
 782:ad5940lib/ad5940.c ****   if(((RegAddr>=0x1000)&&(RegAddr<=0x3014)))  /* 32bit register */
 783:ad5940lib/ad5940.c ****     *(volatile uint32_t *)(RegAddr+0x400c0000) = RegData;
 784:ad5940lib/ad5940.c ****   else                                        /* 16bit register */
 785:ad5940lib/ad5940.c ****     *(volatile uint16_t *)(RegAddr+0x400c0000) = RegData;
 786:ad5940lib/ad5940.c **** }
 787:ad5940lib/ad5940.c **** 
 788:ad5940lib/ad5940.c **** static uint32_t AD5940_D2DReadReg(uint16_t RegAddr)
 789:ad5940lib/ad5940.c **** {
 790:ad5940lib/ad5940.c ****   if(((RegAddr>=0x1000)&&(RegAddr<=0x3014)))  /* 32bit register */
 791:ad5940lib/ad5940.c ****     return *(volatile uint32_t *)(RegAddr+0x400c0000);
 792:ad5940lib/ad5940.c ****   else                                        /* 16bit register */
 793:ad5940lib/ad5940.c ****     return *(volatile uint16_t *)(RegAddr+0x400c0000);
 794:ad5940lib/ad5940.c **** }
 795:ad5940lib/ad5940.c **** 
 796:ad5940lib/ad5940.c **** void AD5940_FIFORd(uint32_t *pBuffer, uint32_t uiReadCount)   
 797:ad5940lib/ad5940.c **** {
 798:ad5940lib/ad5940.c ****   while(uiReadCount--)
 799:ad5940lib/ad5940.c ****     *pBuffer++ = *(volatile uint32_t *)(0x400c206C);
 800:ad5940lib/ad5940.c **** }
 801:ad5940lib/ad5940.c **** #else
 802:ad5940lib/ad5940.c **** /**
 803:ad5940lib/ad5940.c ****  * @defgroup SPI_Block
 804:ad5940lib/ad5940.c ****  * @brief Functions to communicate with AD5940 registers following AD5940 SPI protocols
 805:ad5940lib/ad5940.c ****  * @{
 806:ad5940lib/ad5940.c ****  * 
 807:ad5940lib/ad5940.c ****  * @defgroup SPI_Block_Functions
 808:ad5940lib/ad5940.c ****  * @brief The basic SPI protocols. All functions are basic on AD5940_ReadWriteNBytes which
 809:ad5940lib/ad5940.c ****  *        provided by user.
 810:ad5940lib/ad5940.c ****  *        
 811:ad5940lib/ad5940.c ****  *  ##SPI basic protocol
 812:ad5940lib/ad5940.c ****  *        All SPI protocol starts with one-byte command word. Following are data(16B or 32B)
 813:ad5940lib/ad5940.c ****  *        There are four SPI commands available @ref SPI_Block_Const.
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 20


 814:ad5940lib/ad5940.c ****  * @{
 815:ad5940lib/ad5940.c **** */
 816:ad5940lib/ad5940.c **** 
 817:ad5940lib/ad5940.c **** /**
 818:ad5940lib/ad5940.c ****   @brief Using SPI to transmit one byte and return the received byte. 
 819:ad5940lib/ad5940.c ****   @param data: The 8-bit data SPI will transmit.
 820:ad5940lib/ad5940.c ****   @return received data.
 821:ad5940lib/ad5940.c **** **/
 822:ad5940lib/ad5940.c **** static unsigned char AD5940_ReadWrite8B(unsigned char data)
 823:ad5940lib/ad5940.c **** {
 824:ad5940lib/ad5940.c ****    uint8_t tx[1], rx[1];
 825:ad5940lib/ad5940.c ****    tx[0] = data;
 826:ad5940lib/ad5940.c ****    AD5940_ReadWriteNBytes(tx,rx,1);
 827:ad5940lib/ad5940.c ****    return rx[0];
 828:ad5940lib/ad5940.c **** }
 829:ad5940lib/ad5940.c **** 
 830:ad5940lib/ad5940.c **** /**
 831:ad5940lib/ad5940.c ****   @brief Using SPI to transmit two bytes and return the received bytes. 
 832:ad5940lib/ad5940.c ****   @param data: The 16-bit data SPI will transmit.
 833:ad5940lib/ad5940.c ****   @return received data.
 834:ad5940lib/ad5940.c **** **/
 835:ad5940lib/ad5940.c **** static uint16_t AD5940_ReadWrite16B(uint16_t data)
 836:ad5940lib/ad5940.c **** {
 269              		.loc 1 836 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		.loc 1 836 1 is_stmt 0 view .LVU75
 274 0000 00B5     		push	{lr}
 275              	.LCFI5:
 276              		.cfi_def_cfa_offset 4
 277              		.cfi_offset 14, -4
 278 0002 83B0     		sub	sp, sp, #12
 279              	.LCFI6:
 280              		.cfi_def_cfa_offset 16
 837:ad5940lib/ad5940.c ****    uint8_t SendBuffer[2];
 281              		.loc 1 837 4 is_stmt 1 view .LVU76
 838:ad5940lib/ad5940.c ****    uint8_t RecvBuffer[2];
 282              		.loc 1 838 4 view .LVU77
 839:ad5940lib/ad5940.c ****    SendBuffer[0] = data>>8;
 283              		.loc 1 839 4 view .LVU78
 284              		.loc 1 839 18 is_stmt 0 view .LVU79
 285 0004 030A     		lsrs	r3, r0, #8
 286 0006 8DF80430 		strb	r3, [sp, #4]
 840:ad5940lib/ad5940.c ****    SendBuffer[1] = data&0xff;
 287              		.loc 1 840 4 is_stmt 1 view .LVU80
 288              		.loc 1 840 18 is_stmt 0 view .LVU81
 289 000a 8DF80500 		strb	r0, [sp, #5]
 841:ad5940lib/ad5940.c ****    AD5940_ReadWriteNBytes(SendBuffer,RecvBuffer,2);
 290              		.loc 1 841 4 is_stmt 1 view .LVU82
 291 000e 0222     		movs	r2, #2
 292 0010 6946     		mov	r1, sp
 293 0012 01A8     		add	r0, sp, #4
 294              	.LVL24:
 295              		.loc 1 841 4 is_stmt 0 view .LVU83
 296 0014 FFF7FEFF 		bl	AD5940_ReadWriteNBytes
 297              	.LVL25:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 21


 842:ad5940lib/ad5940.c ****    return (((uint16_t)RecvBuffer[0])<<8)|RecvBuffer[1];
 298              		.loc 1 842 4 is_stmt 1 view .LVU84
 299              		.loc 1 842 33 is_stmt 0 view .LVU85
 300 0018 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
 301              		.loc 1 842 52 view .LVU86
 302 001c 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 843:ad5940lib/ad5940.c **** }
 303              		.loc 1 843 1 view .LVU87
 304 0020 43EA0020 		orr	r0, r3, r0, lsl #8
 305 0024 03B0     		add	sp, sp, #12
 306              	.LCFI7:
 307              		.cfi_def_cfa_offset 4
 308              		@ sp needed
 309 0026 5DF804FB 		ldr	pc, [sp], #4
 310              		.cfi_endproc
 311              	.LFE29:
 313              		.section	.text.AD5940_ReadWrite8B,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv5-d16
 320              	AD5940_ReadWrite8B:
 321              	.LVL26:
 322              	.LFB28:
 823:ad5940lib/ad5940.c ****    uint8_t tx[1], rx[1];
 323              		.loc 1 823 1 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 823:ad5940lib/ad5940.c ****    uint8_t tx[1], rx[1];
 327              		.loc 1 823 1 is_stmt 0 view .LVU89
 328 0000 00B5     		push	{lr}
 329              	.LCFI8:
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 14, -4
 332 0002 83B0     		sub	sp, sp, #12
 333              	.LCFI9:
 334              		.cfi_def_cfa_offset 16
 824:ad5940lib/ad5940.c ****    tx[0] = data;
 335              		.loc 1 824 4 is_stmt 1 view .LVU90
 825:ad5940lib/ad5940.c ****    AD5940_ReadWriteNBytes(tx,rx,1);
 336              		.loc 1 825 4 view .LVU91
 825:ad5940lib/ad5940.c ****    AD5940_ReadWriteNBytes(tx,rx,1);
 337              		.loc 1 825 10 is_stmt 0 view .LVU92
 338 0004 8DF80400 		strb	r0, [sp, #4]
 826:ad5940lib/ad5940.c ****    return rx[0];
 339              		.loc 1 826 4 is_stmt 1 view .LVU93
 340 0008 0122     		movs	r2, #1
 341 000a 6946     		mov	r1, sp
 342 000c 01A8     		add	r0, sp, #4
 343              	.LVL27:
 826:ad5940lib/ad5940.c ****    return rx[0];
 344              		.loc 1 826 4 is_stmt 0 view .LVU94
 345 000e FFF7FEFF 		bl	AD5940_ReadWriteNBytes
 346              	.LVL28:
 827:ad5940lib/ad5940.c **** }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 22


 347              		.loc 1 827 4 is_stmt 1 view .LVU95
 828:ad5940lib/ad5940.c **** 
 348              		.loc 1 828 1 is_stmt 0 view .LVU96
 349 0012 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
 350 0016 03B0     		add	sp, sp, #12
 351              	.LCFI10:
 352              		.cfi_def_cfa_offset 4
 353              		@ sp needed
 354 0018 5DF804FB 		ldr	pc, [sp], #4
 355              		.cfi_endproc
 356              	.LFE28:
 358              		.section	.text.AD5940_ReadWrite32B,"ax",%progbits
 359              		.align	1
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv5-d16
 365              	AD5940_ReadWrite32B:
 366              	.LVL29:
 367              	.LFB30:
 844:ad5940lib/ad5940.c **** 
 845:ad5940lib/ad5940.c **** /**
 846:ad5940lib/ad5940.c ****  * @brief Using SPI to transmit four bytes and return the received bytes. 
 847:ad5940lib/ad5940.c ****  * @param data: The 32-bit data SPI will transmit.
 848:ad5940lib/ad5940.c ****  * @return received data.
 849:ad5940lib/ad5940.c **** **/
 850:ad5940lib/ad5940.c **** static uint32_t AD5940_ReadWrite32B(uint32_t data)
 851:ad5940lib/ad5940.c **** {
 368              		.loc 1 851 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		.loc 1 851 1 is_stmt 0 view .LVU98
 373 0000 00B5     		push	{lr}
 374              	.LCFI11:
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 14, -4
 377 0002 83B0     		sub	sp, sp, #12
 378              	.LCFI12:
 379              		.cfi_def_cfa_offset 16
 852:ad5940lib/ad5940.c ****    uint8_t SendBuffer[4];
 380              		.loc 1 852 4 is_stmt 1 view .LVU99
 853:ad5940lib/ad5940.c ****    uint8_t RecvBuffer[4];
 381              		.loc 1 853 4 view .LVU100
 854:ad5940lib/ad5940.c ****   
 855:ad5940lib/ad5940.c ****    SendBuffer[0] = (data>>24)&0xff;
 382              		.loc 1 855 4 view .LVU101
 383              		.loc 1 855 25 is_stmt 0 view .LVU102
 384 0004 030E     		lsrs	r3, r0, #24
 385              		.loc 1 855 18 view .LVU103
 386 0006 8DF80430 		strb	r3, [sp, #4]
 856:ad5940lib/ad5940.c ****    SendBuffer[1] = (data>>16)&0xff;
 387              		.loc 1 856 4 is_stmt 1 view .LVU104
 388              		.loc 1 856 25 is_stmt 0 view .LVU105
 389 000a 030C     		lsrs	r3, r0, #16
 390              		.loc 1 856 18 view .LVU106
 391 000c 8DF80530 		strb	r3, [sp, #5]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 23


 857:ad5940lib/ad5940.c ****    SendBuffer[2] = (data>> 8)&0xff;
 392              		.loc 1 857 4 is_stmt 1 view .LVU107
 393              		.loc 1 857 25 is_stmt 0 view .LVU108
 394 0010 030A     		lsrs	r3, r0, #8
 395              		.loc 1 857 18 view .LVU109
 396 0012 8DF80630 		strb	r3, [sp, #6]
 858:ad5940lib/ad5940.c ****    SendBuffer[3] = (data    )&0xff;
 397              		.loc 1 858 4 is_stmt 1 view .LVU110
 398              		.loc 1 858 18 is_stmt 0 view .LVU111
 399 0016 8DF80700 		strb	r0, [sp, #7]
 859:ad5940lib/ad5940.c ****    AD5940_ReadWriteNBytes(SendBuffer,RecvBuffer,4);
 400              		.loc 1 859 4 is_stmt 1 view .LVU112
 401 001a 0422     		movs	r2, #4
 402 001c 6946     		mov	r1, sp
 403 001e 0DEB0200 		add	r0, sp, r2
 404              	.LVL30:
 405              		.loc 1 859 4 is_stmt 0 view .LVU113
 406 0022 FFF7FEFF 		bl	AD5940_ReadWriteNBytes
 407              	.LVL31:
 860:ad5940lib/ad5940.c ****    return (((uint32_t)RecvBuffer[0])<<24)|(((uint32_t)RecvBuffer[1])<<16)|(((uint32_t)RecvBuffer[2]
 408              		.loc 1 860 4 is_stmt 1 view .LVU114
 409              		.loc 1 860 33 is_stmt 0 view .LVU115
 410 0026 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
 411              		.loc 1 860 65 view .LVU116
 412 002a 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 413              		.loc 1 860 69 view .LVU117
 414 002e 1B04     		lsls	r3, r3, #16
 415              		.loc 1 860 42 view .LVU118
 416 0030 43EA0063 		orr	r3, r3, r0, lsl #24
 417              		.loc 1 860 97 view .LVU119
 418 0034 9DF80200 		ldrb	r0, [sp, #2]	@ zero_extendqisi2
 419              		.loc 1 860 74 view .LVU120
 420 0038 43EA0023 		orr	r3, r3, r0, lsl #8
 421              		.loc 1 860 116 view .LVU121
 422 003c 9DF80300 		ldrb	r0, [sp, #3]	@ zero_extendqisi2
 861:ad5940lib/ad5940.c **** }
 423              		.loc 1 861 1 view .LVU122
 424 0040 1843     		orrs	r0, r0, r3
 425 0042 03B0     		add	sp, sp, #12
 426              	.LCFI13:
 427              		.cfi_def_cfa_offset 4
 428              		@ sp needed
 429 0044 5DF804FB 		ldr	pc, [sp], #4
 430              		.cfi_endproc
 431              	.LFE30:
 433              		.section	.text.AD5940_SPIWriteReg,"ax",%progbits
 434              		.align	1
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv5-d16
 440              	AD5940_SPIWriteReg:
 441              	.LVL32:
 442              	.LFB31:
 862:ad5940lib/ad5940.c **** 
 863:ad5940lib/ad5940.c **** /**
 864:ad5940lib/ad5940.c ****  * @brief Write register through SPI.
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 24


 865:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 866:ad5940lib/ad5940.c ****  * @param RegData: The register data.
 867:ad5940lib/ad5940.c ****  * @return Return None.
 868:ad5940lib/ad5940.c **** **/
 869:ad5940lib/ad5940.c **** static void AD5940_SPIWriteReg(uint16_t RegAddr, uint32_t RegData)
 870:ad5940lib/ad5940.c **** {  
 443              		.loc 1 870 1 is_stmt 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		.loc 1 870 1 is_stmt 0 view .LVU124
 448 0000 38B5     		push	{r3, r4, r5, lr}
 449              	.LCFI14:
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 3, -16
 452              		.cfi_offset 4, -12
 453              		.cfi_offset 5, -8
 454              		.cfi_offset 14, -4
 455 0002 0446     		mov	r4, r0
 456 0004 0D46     		mov	r5, r1
 871:ad5940lib/ad5940.c ****   /* Set register address */
 872:ad5940lib/ad5940.c ****   AD5940_CsClr();
 457              		.loc 1 872 3 is_stmt 1 view .LVU125
 458 0006 FFF7FEFF 		bl	AD5940_CsClr
 459              	.LVL33:
 873:ad5940lib/ad5940.c ****   AD5940_ReadWrite8B(SPICMD_SETADDR);
 460              		.loc 1 873 3 view .LVU126
 461 000a 2020     		movs	r0, #32
 462 000c FFF7FEFF 		bl	AD5940_ReadWrite8B
 463              	.LVL34:
 874:ad5940lib/ad5940.c ****   AD5940_ReadWrite16B(RegAddr);
 464              		.loc 1 874 3 view .LVU127
 465 0010 2046     		mov	r0, r4
 466 0012 FFF7FEFF 		bl	AD5940_ReadWrite16B
 467              	.LVL35:
 875:ad5940lib/ad5940.c ****   AD5940_CsSet();
 468              		.loc 1 875 3 view .LVU128
 469 0016 FFF7FEFF 		bl	AD5940_CsSet
 470              	.LVL36:
 876:ad5940lib/ad5940.c ****   /* Add delay here to meet the SPI timing. */
 877:ad5940lib/ad5940.c ****   AD5940_CsClr();
 471              		.loc 1 877 3 view .LVU129
 472 001a FFF7FEFF 		bl	AD5940_CsClr
 473              	.LVL37:
 878:ad5940lib/ad5940.c ****   AD5940_ReadWrite8B(SPICMD_WRITEREG);
 474              		.loc 1 878 3 view .LVU130
 475 001e 2D20     		movs	r0, #45
 476 0020 FFF7FEFF 		bl	AD5940_ReadWrite8B
 477              	.LVL38:
 879:ad5940lib/ad5940.c ****   if(((RegAddr>=0x1000)&&(RegAddr<=0x3014)))
 478              		.loc 1 879 3 view .LVU131
 479              		.loc 1 879 24 is_stmt 0 view .LVU132
 480 0024 A4F58054 		sub	r4, r4, #4096
 481 0028 A4B2     		uxth	r4, r4
 482              		.loc 1 879 5 view .LVU133
 483 002a 42F21403 		movw	r3, #8212
 484 002e 9C42     		cmp	r4, r3
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 25


 485 0030 05D8     		bhi	.L31
 880:ad5940lib/ad5940.c ****     AD5940_ReadWrite32B(RegData);
 486              		.loc 1 880 5 is_stmt 1 view .LVU134
 487 0032 2846     		mov	r0, r5
 488 0034 FFF7FEFF 		bl	AD5940_ReadWrite32B
 489              	.LVL39:
 490              	.L32:
 881:ad5940lib/ad5940.c ****   else
 882:ad5940lib/ad5940.c ****     AD5940_ReadWrite16B(RegData);
 883:ad5940lib/ad5940.c ****   AD5940_CsSet();
 491              		.loc 1 883 3 view .LVU135
 492 0038 FFF7FEFF 		bl	AD5940_CsSet
 493              	.LVL40:
 884:ad5940lib/ad5940.c **** }
 494              		.loc 1 884 1 is_stmt 0 view .LVU136
 495 003c 38BD     		pop	{r3, r4, r5, pc}
 496              	.LVL41:
 497              	.L31:
 882:ad5940lib/ad5940.c ****   AD5940_CsSet();
 498              		.loc 1 882 5 is_stmt 1 view .LVU137
 499 003e A8B2     		uxth	r0, r5
 500 0040 FFF7FEFF 		bl	AD5940_ReadWrite16B
 501              	.LVL42:
 502 0044 F8E7     		b	.L32
 503              		.cfi_endproc
 504              	.LFE31:
 506              		.section	.text.AD5940_SPIReadReg,"ax",%progbits
 507              		.align	1
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu fpv5-d16
 513              	AD5940_SPIReadReg:
 514              	.LVL43:
 515              	.LFB32:
 885:ad5940lib/ad5940.c **** 
 886:ad5940lib/ad5940.c **** /**
 887:ad5940lib/ad5940.c ****  * @brief Read register through SPI.
 888:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 889:ad5940lib/ad5940.c ****  * @return Return register data.
 890:ad5940lib/ad5940.c **** **/
 891:ad5940lib/ad5940.c **** static uint32_t AD5940_SPIReadReg(uint16_t RegAddr)
 892:ad5940lib/ad5940.c **** {  
 516              		.loc 1 892 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		.loc 1 892 1 is_stmt 0 view .LVU139
 521 0000 10B5     		push	{r4, lr}
 522              	.LCFI15:
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 4, -8
 525              		.cfi_offset 14, -4
 526 0002 0446     		mov	r4, r0
 893:ad5940lib/ad5940.c ****   uint32_t Data = 0;
 527              		.loc 1 893 3 is_stmt 1 view .LVU140
 528              	.LVL44:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 26


 894:ad5940lib/ad5940.c ****   /* Set register address that we want to read */
 895:ad5940lib/ad5940.c ****   AD5940_CsClr();
 529              		.loc 1 895 3 view .LVU141
 530 0004 FFF7FEFF 		bl	AD5940_CsClr
 531              	.LVL45:
 896:ad5940lib/ad5940.c ****   AD5940_ReadWrite8B(SPICMD_SETADDR);
 532              		.loc 1 896 3 view .LVU142
 533 0008 2020     		movs	r0, #32
 534 000a FFF7FEFF 		bl	AD5940_ReadWrite8B
 535              	.LVL46:
 897:ad5940lib/ad5940.c ****   AD5940_ReadWrite16B(RegAddr);
 536              		.loc 1 897 3 view .LVU143
 537 000e 2046     		mov	r0, r4
 538 0010 FFF7FEFF 		bl	AD5940_ReadWrite16B
 539              	.LVL47:
 898:ad5940lib/ad5940.c ****   AD5940_CsSet();
 540              		.loc 1 898 3 view .LVU144
 541 0014 FFF7FEFF 		bl	AD5940_CsSet
 542              	.LVL48:
 899:ad5940lib/ad5940.c ****   /* Read it */
 900:ad5940lib/ad5940.c ****   AD5940_CsClr();
 543              		.loc 1 900 3 view .LVU145
 544 0018 FFF7FEFF 		bl	AD5940_CsClr
 545              	.LVL49:
 901:ad5940lib/ad5940.c ****   AD5940_ReadWrite8B(SPICMD_READREG);
 546              		.loc 1 901 3 view .LVU146
 547 001c 6D20     		movs	r0, #109
 548 001e FFF7FEFF 		bl	AD5940_ReadWrite8B
 549              	.LVL50:
 902:ad5940lib/ad5940.c ****   AD5940_ReadWrite8B(0);  //Dummy read
 550              		.loc 1 902 3 view .LVU147
 551 0022 0020     		movs	r0, #0
 552 0024 FFF7FEFF 		bl	AD5940_ReadWrite8B
 553              	.LVL51:
 903:ad5940lib/ad5940.c ****   /* The real data is coming */
 904:ad5940lib/ad5940.c ****   if((RegAddr>=0x1000)&&(RegAddr<=0x3014))
 554              		.loc 1 904 3 view .LVU148
 555              		.loc 1 904 23 is_stmt 0 view .LVU149
 556 0028 A4F58054 		sub	r4, r4, #4096
 557 002c A4B2     		uxth	r4, r4
 558              		.loc 1 904 5 view .LVU150
 559 002e 42F21403 		movw	r3, #8212
 560 0032 9C42     		cmp	r4, r3
 561 0034 07D8     		bhi	.L35
 905:ad5940lib/ad5940.c ****     Data = AD5940_ReadWrite32B(0);
 562              		.loc 1 905 5 is_stmt 1 view .LVU151
 563              		.loc 1 905 12 is_stmt 0 view .LVU152
 564 0036 0020     		movs	r0, #0
 565 0038 FFF7FEFF 		bl	AD5940_ReadWrite32B
 566              	.LVL52:
 567 003c 0446     		mov	r4, r0
 568              	.LVL53:
 569              	.L36:
 906:ad5940lib/ad5940.c ****   else
 907:ad5940lib/ad5940.c ****     Data = AD5940_ReadWrite16B(0);
 908:ad5940lib/ad5940.c ****   AD5940_CsSet();
 570              		.loc 1 908 3 is_stmt 1 view .LVU153
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 27


 571 003e FFF7FEFF 		bl	AD5940_CsSet
 572              	.LVL54:
 909:ad5940lib/ad5940.c ****   return Data;
 573              		.loc 1 909 3 view .LVU154
 910:ad5940lib/ad5940.c **** }
 574              		.loc 1 910 1 is_stmt 0 view .LVU155
 575 0042 2046     		mov	r0, r4
 576 0044 10BD     		pop	{r4, pc}
 577              	.LVL55:
 578              	.L35:
 907:ad5940lib/ad5940.c ****   AD5940_CsSet();
 579              		.loc 1 907 5 is_stmt 1 view .LVU156
 907:ad5940lib/ad5940.c ****   AD5940_CsSet();
 580              		.loc 1 907 12 is_stmt 0 view .LVU157
 581 0046 0020     		movs	r0, #0
 582 0048 FFF7FEFF 		bl	AD5940_ReadWrite16B
 583              	.LVL56:
 907:ad5940lib/ad5940.c ****   AD5940_CsSet();
 584              		.loc 1 907 10 view .LVU158
 585 004c 0446     		mov	r4, r0
 586              	.LVL57:
 907:ad5940lib/ad5940.c ****   AD5940_CsSet();
 587              		.loc 1 907 10 view .LVU159
 588 004e F6E7     		b	.L36
 589              		.cfi_endproc
 590              	.LFE32:
 592              		.section	.text.AD5940_SEQGenGetRegDefault,"ax",%progbits
 593              		.align	1
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu fpv5-d16
 599              	AD5940_SEQGenGetRegDefault:
 600              	.LVL58:
 601              	.LFB5:
 155:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
 602              		.loc 1 155 1 is_stmt 1 view -0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 155:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
 606              		.loc 1 155 1 is_stmt 0 view .LVU161
 607 0000 10B5     		push	{r4, lr}
 608              	.LCFI16:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 4, -8
 611              		.cfi_offset 14, -4
 612 0002 0C46     		mov	r4, r1
 159:ad5940lib/ad5940.c **** #endif
 613              		.loc 1 159 3 is_stmt 1 view .LVU162
 159:ad5940lib/ad5940.c **** #endif
 614              		.loc 1 159 15 is_stmt 0 view .LVU163
 615 0004 80B2     		uxth	r0, r0
 616              	.LVL59:
 159:ad5940lib/ad5940.c **** #endif
 617              		.loc 1 159 15 view .LVU164
 618 0006 FFF7FEFF 		bl	AD5940_SPIReadReg
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 28


 619              	.LVL60:
 159:ad5940lib/ad5940.c **** #endif
 620              		.loc 1 159 13 view .LVU165
 621 000a 2060     		str	r0, [r4]
 161:ad5940lib/ad5940.c **** }
 622              		.loc 1 161 3 is_stmt 1 view .LVU166
 162:ad5940lib/ad5940.c **** 
 623              		.loc 1 162 1 is_stmt 0 view .LVU167
 624 000c 0020     		movs	r0, #0
 625 000e 10BD     		pop	{r4, pc}
 162:ad5940lib/ad5940.c **** 
 626              		.loc 1 162 1 view .LVU168
 627              		.cfi_endproc
 628              	.LFE5:
 630              		.section	.text.AD5940_SEQReadReg,"ax",%progbits
 631              		.align	1
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv5-d16
 637              	AD5940_SEQReadReg:
 638              	.LVL61:
 639              	.LFB7:
 194:ad5940lib/ad5940.c ****   uint32_t RegIndex, RegData;
 640              		.loc 1 194 1 is_stmt 1 view -0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 194:ad5940lib/ad5940.c ****   uint32_t RegIndex, RegData;
 644              		.loc 1 194 1 is_stmt 0 view .LVU170
 645 0000 10B5     		push	{r4, lr}
 646              	.LCFI17:
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 4, -8
 649              		.cfi_offset 14, -4
 650 0002 82B0     		sub	sp, sp, #8
 651              	.LCFI18:
 652              		.cfi_def_cfa_offset 16
 653 0004 0446     		mov	r4, r0
 195:ad5940lib/ad5940.c ****   
 654              		.loc 1 195 3 is_stmt 1 view .LVU171
 197:ad5940lib/ad5940.c ****   {
 655              		.loc 1 197 3 view .LVU172
 197:ad5940lib/ad5940.c ****   {
 656              		.loc 1 197 6 is_stmt 0 view .LVU173
 657 0006 01A9     		add	r1, sp, #4
 658 0008 FFF7FEFF 		bl	AD5940_SEQGenSearchReg
 659              	.LVL62:
 197:ad5940lib/ad5940.c ****   {
 660              		.loc 1 197 5 view .LVU174
 661 000c 50B9     		cbnz	r0, .L44
 206:ad5940lib/ad5940.c ****   }
 662              		.loc 1 206 5 is_stmt 1 view .LVU175
 206:ad5940lib/ad5940.c ****   }
 663              		.loc 1 206 23 is_stmt 0 view .LVU176
 664 000e 0A4B     		ldr	r3, .L45
 665 0010 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 29


 206:ad5940lib/ad5940.c ****   }
 666              		.loc 1 206 32 view .LVU177
 667 0012 019A     		ldr	r2, [sp, #4]
 206:ad5940lib/ad5940.c ****   }
 668              		.loc 1 206 42 view .LVU178
 669 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 670 0018 C3F31723 		ubfx	r3, r3, #8, #24
 206:ad5940lib/ad5940.c ****   }
 671              		.loc 1 206 13 view .LVU179
 672 001c 0093     		str	r3, [sp]
 673              	.L42:
 209:ad5940lib/ad5940.c **** }
 674              		.loc 1 209 3 is_stmt 1 view .LVU180
 210:ad5940lib/ad5940.c **** 
 675              		.loc 1 210 1 is_stmt 0 view .LVU181
 676 001e 0098     		ldr	r0, [sp]
 677 0020 02B0     		add	sp, sp, #8
 678              	.LCFI19:
 679              		.cfi_remember_state
 680              		.cfi_def_cfa_offset 8
 681              		@ sp needed
 682 0022 10BD     		pop	{r4, pc}
 683              	.L44:
 684              	.LCFI20:
 685              		.cfi_restore_state
 200:ad5940lib/ad5940.c ****     AD5940_SEQRegInfoInsert(RegAddr, RegData);
 686              		.loc 1 200 5 is_stmt 1 view .LVU182
 687 0024 6946     		mov	r1, sp
 688 0026 2046     		mov	r0, r4
 689 0028 FFF7FEFF 		bl	AD5940_SEQGenGetRegDefault
 690              	.LVL63:
 201:ad5940lib/ad5940.c ****   }
 691              		.loc 1 201 5 view .LVU183
 692 002c 0099     		ldr	r1, [sp]
 693 002e 2046     		mov	r0, r4
 694 0030 FFF7FEFF 		bl	AD5940_SEQRegInfoInsert
 695              	.LVL64:
 696 0034 F3E7     		b	.L42
 697              	.L46:
 698 0036 00BF     		.align	2
 699              	.L45:
 700 0038 00000000 		.word	SeqGenDB
 701              		.cfi_endproc
 702              	.LFE7:
 704              		.section	.text.AD5940_SEQGenInsert,"ax",%progbits
 705              		.align	1
 706              		.global	AD5940_SEQGenInsert
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu fpv5-d16
 712              	AD5940_SEQGenInsert:
 713              	.LVL65:
 714              	.LFB3:
 113:ad5940lib/ad5940.c ****   uint32_t temp;
 715              		.loc 1 113 1 view -0
 716              		.cfi_startproc
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 30


 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 114:ad5940lib/ad5940.c ****   temp  = SeqGenDB.RegCount + SeqGenDB.SeqLen;
 720              		.loc 1 114 3 view .LVU185
 115:ad5940lib/ad5940.c ****   /* Generate Sequence command */
 721              		.loc 1 115 3 view .LVU186
 115:ad5940lib/ad5940.c ****   /* Generate Sequence command */
 722              		.loc 1 115 19 is_stmt 0 view .LVU187
 723 0000 094A     		ldr	r2, .L50
 724 0002 5369     		ldr	r3, [r2, #20]
 115:ad5940lib/ad5940.c ****   /* Generate Sequence command */
 725              		.loc 1 115 39 view .LVU188
 726 0004 D168     		ldr	r1, [r2, #12]
 115:ad5940lib/ad5940.c ****   /* Generate Sequence command */
 727              		.loc 1 115 9 view .LVU189
 728 0006 0B44     		add	r3, r3, r1
 729              	.LVL66:
 117:ad5940lib/ad5940.c ****   {
 730              		.loc 1 117 3 is_stmt 1 view .LVU190
 117:ad5940lib/ad5940.c ****   {
 731              		.loc 1 117 21 is_stmt 0 view .LVU191
 732 0008 5268     		ldr	r2, [r2, #4]
 117:ad5940lib/ad5940.c ****   {
 733              		.loc 1 117 5 view .LVU192
 734 000a 9A42     		cmp	r2, r3
 735 000c 07D9     		bls	.L48
 119:ad5940lib/ad5940.c ****     SeqGenDB.SeqLen ++;
 736              		.loc 1 119 5 is_stmt 1 view .LVU193
 119:ad5940lib/ad5940.c ****     SeqGenDB.SeqLen ++;
 737              		.loc 1 119 13 is_stmt 0 view .LVU194
 738 000e 064B     		ldr	r3, .L50
 739              	.LVL67:
 119:ad5940lib/ad5940.c ****     SeqGenDB.SeqLen ++;
 740              		.loc 1 119 13 view .LVU195
 741 0010 9A68     		ldr	r2, [r3, #8]
 119:ad5940lib/ad5940.c ****     SeqGenDB.SeqLen ++;
 742              		.loc 1 119 40 view .LVU196
 743 0012 42F82100 		str	r0, [r2, r1, lsl #2]
 744              	.LVL68:
 120:ad5940lib/ad5940.c ****   }
 745              		.loc 1 120 5 is_stmt 1 view .LVU197
 120:ad5940lib/ad5940.c ****   }
 746              		.loc 1 120 13 is_stmt 0 view .LVU198
 747 0016 DA68     		ldr	r2, [r3, #12]
 120:ad5940lib/ad5940.c ****   }
 748              		.loc 1 120 21 view .LVU199
 749 0018 0132     		adds	r2, r2, #1
 750 001a DA60     		str	r2, [r3, #12]
 751 001c 7047     		bx	lr
 752              	.LVL69:
 753              	.L48:
 123:ad5940lib/ad5940.c **** }
 754              		.loc 1 123 5 is_stmt 1 view .LVU200
 123:ad5940lib/ad5940.c **** }
 755              		.loc 1 123 24 is_stmt 0 view .LVU201
 756 001e 024B     		ldr	r3, .L50
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 31


 757              	.LVL70:
 123:ad5940lib/ad5940.c **** }
 758              		.loc 1 123 24 view .LVU202
 759 0020 6FF00302 		mvn	r2, #3
 760 0024 9A61     		str	r2, [r3, #24]
 124:ad5940lib/ad5940.c **** 
 761              		.loc 1 124 1 view .LVU203
 762 0026 7047     		bx	lr
 763              	.L51:
 764              		.align	2
 765              	.L50:
 766 0028 00000000 		.word	SeqGenDB
 767              		.cfi_endproc
 768              	.LFE3:
 770              		.section	.text.AD5940_SEQWriteReg,"ax",%progbits
 771              		.align	1
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu fpv5-d16
 777              	AD5940_SEQWriteReg:
 778              	.LVL71:
 779              	.LFB8:
 220:ad5940lib/ad5940.c ****   uint32_t RegIndex;
 780              		.loc 1 220 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 8
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 221:ad5940lib/ad5940.c ****   
 784              		.loc 1 221 3 view .LVU205
 223:ad5940lib/ad5940.c ****   {
 785              		.loc 1 223 3 view .LVU206
 223:ad5940lib/ad5940.c ****   {
 786              		.loc 1 223 5 is_stmt 0 view .LVU207
 787 0000 B0F5085F 		cmp	r0, #8704
 788 0004 04D3     		bcc	.L53
 225:ad5940lib/ad5940.c ****     return;
 789              		.loc 1 225 5 is_stmt 1 view .LVU208
 225:ad5940lib/ad5940.c ****     return;
 790              		.loc 1 225 24 is_stmt 0 view .LVU209
 791 0006 194B     		ldr	r3, .L60
 792 0008 6FF00402 		mvn	r2, #4
 793 000c 9A61     		str	r2, [r3, #24]
 226:ad5940lib/ad5940.c ****   }
 794              		.loc 1 226 5 is_stmt 1 view .LVU210
 795 000e 7047     		bx	lr
 796              	.L53:
 220:ad5940lib/ad5940.c ****   uint32_t RegIndex;
 797              		.loc 1 220 1 is_stmt 0 view .LVU211
 798 0010 30B5     		push	{r4, r5, lr}
 799              	.LCFI21:
 800              		.cfi_def_cfa_offset 12
 801              		.cfi_offset 4, -12
 802              		.cfi_offset 5, -8
 803              		.cfi_offset 14, -4
 804 0012 83B0     		sub	sp, sp, #12
 805              	.LCFI22:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 32


 806              		.cfi_def_cfa_offset 24
 807 0014 0446     		mov	r4, r0
 808 0016 0D46     		mov	r5, r1
 229:ad5940lib/ad5940.c ****   {
 809              		.loc 1 229 3 is_stmt 1 view .LVU212
 229:ad5940lib/ad5940.c ****   {
 810              		.loc 1 229 6 is_stmt 0 view .LVU213
 811 0018 01A9     		add	r1, sp, #4
 812              	.LVL72:
 229:ad5940lib/ad5940.c ****   {
 813              		.loc 1 229 6 view .LVU214
 814 001a FFF7FEFF 		bl	AD5940_SEQGenSearchReg
 815              	.LVL73:
 229:ad5940lib/ad5940.c ****   {
 816              		.loc 1 229 5 view .LVU215
 817 001e A8B9     		cbnz	r0, .L55
 232:ad5940lib/ad5940.c ****     /* Generate Sequence command */
 818              		.loc 1 232 5 is_stmt 1 view .LVU216
 232:ad5940lib/ad5940.c ****     /* Generate Sequence command */
 819              		.loc 1 232 13 is_stmt 0 view .LVU217
 820 0020 124B     		ldr	r3, .L60
 821 0022 1B69     		ldr	r3, [r3, #16]
 232:ad5940lib/ad5940.c ****     /* Generate Sequence command */
 822              		.loc 1 232 22 view .LVU218
 823 0024 019A     		ldr	r2, [sp, #4]
 232:ad5940lib/ad5940.c ****     /* Generate Sequence command */
 824              		.loc 1 232 42 view .LVU219
 825 0026 53F82210 		ldr	r1, [r3, r2, lsl #2]
 826 002a 65F31F21 		bfi	r1, r5, #8, #24
 827 002e 43F82210 		str	r1, [r3, r2, lsl #2]
 234:ad5940lib/ad5940.c ****   }
 828              		.loc 1 234 5 is_stmt 1 view .LVU220
 234:ad5940lib/ad5940.c ****   }
 829              		.loc 1 234 25 is_stmt 0 view .LVU221
 830 0032 A008     		lsrs	r0, r4, #2
 831 0034 0006     		lsls	r0, r0, #24
 832 0036 00F0FE40 		and	r0, r0, #2130706432
 833 003a 25F07F41 		bic	r1, r5, #-16777216
 834 003e 0843     		orrs	r0, r0, r1
 234:ad5940lib/ad5940.c ****   }
 835              		.loc 1 234 5 view .LVU222
 836 0040 40F00040 		orr	r0, r0, #-2147483648
 837 0044 FFF7FEFF 		bl	AD5940_SEQGenInsert
 838              	.LVL74:
 839              	.L52:
 242:ad5940lib/ad5940.c **** 
 840              		.loc 1 242 1 view .LVU223
 841 0048 03B0     		add	sp, sp, #12
 842              	.LCFI23:
 843              		.cfi_remember_state
 844              		.cfi_def_cfa_offset 12
 845              		@ sp needed
 846 004a 30BD     		pop	{r4, r5, pc}
 847              	.LVL75:
 848              	.L55:
 849              	.LCFI24:
 850              		.cfi_restore_state
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 33


 238:ad5940lib/ad5940.c ****     /* Generate Sequence command */
 851              		.loc 1 238 5 is_stmt 1 view .LVU224
 852 004c 2946     		mov	r1, r5
 853 004e 2046     		mov	r0, r4
 854 0050 FFF7FEFF 		bl	AD5940_SEQRegInfoInsert
 855              	.LVL76:
 240:ad5940lib/ad5940.c ****   }
 856              		.loc 1 240 5 view .LVU225
 240:ad5940lib/ad5940.c ****   }
 857              		.loc 1 240 25 is_stmt 0 view .LVU226
 858 0054 A008     		lsrs	r0, r4, #2
 859 0056 0006     		lsls	r0, r0, #24
 860 0058 00F0FE40 		and	r0, r0, #2130706432
 861 005c 25F07F41 		bic	r1, r5, #-16777216
 862 0060 0843     		orrs	r0, r0, r1
 240:ad5940lib/ad5940.c ****   }
 863              		.loc 1 240 5 view .LVU227
 864 0062 40F00040 		orr	r0, r0, #-2147483648
 865 0066 FFF7FEFF 		bl	AD5940_SEQGenInsert
 866              	.LVL77:
 867 006a EDE7     		b	.L52
 868              	.L61:
 869              		.align	2
 870              	.L60:
 871 006c 00000000 		.word	SeqGenDB
 872              		.cfi_endproc
 873              	.LFE8:
 875              		.section	.text.AD5940_SEQGenInit,"ax",%progbits
 876              		.align	1
 877              		.global	AD5940_SEQGenInit
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 881              		.fpu fpv5-d16
 883              	AD5940_SEQGenInit:
 884              	.LVL78:
 885              	.LFB9:
 258:ad5940lib/ad5940.c ****   if(BufferSize < 2) return;
 886              		.loc 1 258 1 is_stmt 1 view -0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 259:ad5940lib/ad5940.c ****   SeqGenDB.BufferSize = BufferSize;
 891              		.loc 1 259 3 view .LVU229
 259:ad5940lib/ad5940.c ****   SeqGenDB.BufferSize = BufferSize;
 892              		.loc 1 259 5 is_stmt 0 view .LVU230
 893 0000 0129     		cmp	r1, #1
 894 0002 0DD9     		bls	.L62
 260:ad5940lib/ad5940.c ****   SeqGenDB.pSeqBuff = pBuffer;
 895              		.loc 1 260 3 is_stmt 1 view .LVU231
 260:ad5940lib/ad5940.c ****   SeqGenDB.pSeqBuff = pBuffer;
 896              		.loc 1 260 23 is_stmt 0 view .LVU232
 897 0004 074B     		ldr	r3, .L64
 898 0006 5960     		str	r1, [r3, #4]
 261:ad5940lib/ad5940.c ****   SeqGenDB.pRegInfo = (SEQGenRegInfo_Type*)pBuffer + BufferSize - 1; /* Point to the last element i
 899              		.loc 1 261 3 is_stmt 1 view .LVU233
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 34


 261:ad5940lib/ad5940.c ****   SeqGenDB.pRegInfo = (SEQGenRegInfo_Type*)pBuffer + BufferSize - 1; /* Point to the last element i
 900              		.loc 1 261 21 is_stmt 0 view .LVU234
 901 0008 9860     		str	r0, [r3, #8]
 262:ad5940lib/ad5940.c ****   SeqGenDB.SeqLen = 0;
 902              		.loc 1 262 3 is_stmt 1 view .LVU235
 262:ad5940lib/ad5940.c ****   SeqGenDB.SeqLen = 0;
 903              		.loc 1 262 65 is_stmt 0 view .LVU236
 904 000a 6FF04042 		mvn	r2, #-1073741824
 905 000e 0A44     		add	r2, r2, r1
 906 0010 00EB8200 		add	r0, r0, r2, lsl #2
 907              	.LVL79:
 262:ad5940lib/ad5940.c ****   SeqGenDB.SeqLen = 0;
 908              		.loc 1 262 21 view .LVU237
 909 0014 1861     		str	r0, [r3, #16]
 263:ad5940lib/ad5940.c **** 
 910              		.loc 1 263 3 is_stmt 1 view .LVU238
 263:ad5940lib/ad5940.c **** 
 911              		.loc 1 263 19 is_stmt 0 view .LVU239
 912 0016 0022     		movs	r2, #0
 913 0018 DA60     		str	r2, [r3, #12]
 265:ad5940lib/ad5940.c ****   SeqGenDB.LastError = AD5940ERR_OK;
 914              		.loc 1 265 3 is_stmt 1 view .LVU240
 265:ad5940lib/ad5940.c ****   SeqGenDB.LastError = AD5940ERR_OK;
 915              		.loc 1 265 21 is_stmt 0 view .LVU241
 916 001a 5A61     		str	r2, [r3, #20]
 266:ad5940lib/ad5940.c ****   SeqGenDB.EngineStart = bFALSE;
 917              		.loc 1 266 3 is_stmt 1 view .LVU242
 266:ad5940lib/ad5940.c ****   SeqGenDB.EngineStart = bFALSE;
 918              		.loc 1 266 22 is_stmt 0 view .LVU243
 919 001c 9A61     		str	r2, [r3, #24]
 267:ad5940lib/ad5940.c **** }
 920              		.loc 1 267 3 is_stmt 1 view .LVU244
 267:ad5940lib/ad5940.c **** }
 921              		.loc 1 267 24 is_stmt 0 view .LVU245
 922 001e 1A70     		strb	r2, [r3]
 923              	.LVL80:
 924              	.L62:
 268:ad5940lib/ad5940.c **** 
 925              		.loc 1 268 1 view .LVU246
 926 0020 7047     		bx	lr
 927              	.L65:
 928 0022 00BF     		.align	2
 929              	.L64:
 930 0024 00000000 		.word	SeqGenDB
 931              		.cfi_endproc
 932              	.LFE9:
 934              		.section	.text.AD5940_SEQGenFetchSeq,"ax",%progbits
 935              		.align	1
 936              		.global	AD5940_SEQGenFetchSeq
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 940              		.fpu fpv5-d16
 942              	AD5940_SEQGenFetchSeq:
 943              	.LVL81:
 944              	.LFB10:
 277:ad5940lib/ad5940.c ****   AD5940Err lasterror;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 35


 945              		.loc 1 277 1 is_stmt 1 view -0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 278:ad5940lib/ad5940.c **** 
 950              		.loc 1 278 3 view .LVU248
 280:ad5940lib/ad5940.c ****     *ppSeqCmd = SeqGenDB.pSeqBuff;  
 951              		.loc 1 280 3 view .LVU249
 280:ad5940lib/ad5940.c ****     *ppSeqCmd = SeqGenDB.pSeqBuff;  
 952              		.loc 1 280 5 is_stmt 0 view .LVU250
 953 0000 10B1     		cbz	r0, .L67
 281:ad5940lib/ad5940.c ****   if(pSeqLen)
 954              		.loc 1 281 5 is_stmt 1 view .LVU251
 281:ad5940lib/ad5940.c ****   if(pSeqLen)
 955              		.loc 1 281 25 is_stmt 0 view .LVU252
 956 0002 054A     		ldr	r2, .L69
 957 0004 9268     		ldr	r2, [r2, #8]
 281:ad5940lib/ad5940.c ****   if(pSeqLen)
 958              		.loc 1 281 15 view .LVU253
 959 0006 0260     		str	r2, [r0]
 960              	.L67:
 282:ad5940lib/ad5940.c ****     *pSeqLen = SeqGenDB.SeqLen;
 961              		.loc 1 282 3 is_stmt 1 view .LVU254
 282:ad5940lib/ad5940.c ****     *pSeqLen = SeqGenDB.SeqLen;
 962              		.loc 1 282 5 is_stmt 0 view .LVU255
 963 0008 11B1     		cbz	r1, .L68
 283:ad5940lib/ad5940.c **** 
 964              		.loc 1 283 5 is_stmt 1 view .LVU256
 283:ad5940lib/ad5940.c **** 
 965              		.loc 1 283 24 is_stmt 0 view .LVU257
 966 000a 034B     		ldr	r3, .L69
 967 000c DB68     		ldr	r3, [r3, #12]
 283:ad5940lib/ad5940.c **** 
 968              		.loc 1 283 14 view .LVU258
 969 000e 0B60     		str	r3, [r1]
 970              	.L68:
 286:ad5940lib/ad5940.c ****   //SeqGenDB.LastError = AD5940ERR_OK;  /* Clear error message */
 971              		.loc 1 286 3 is_stmt 1 view .LVU259
 972              	.LVL82:
 288:ad5940lib/ad5940.c **** }
 973              		.loc 1 288 3 view .LVU260
 289:ad5940lib/ad5940.c **** 
 974              		.loc 1 289 1 is_stmt 0 view .LVU261
 975 0010 014B     		ldr	r3, .L69
 976 0012 9869     		ldr	r0, [r3, #24]
 977              	.LVL83:
 289:ad5940lib/ad5940.c **** 
 978              		.loc 1 289 1 view .LVU262
 979 0014 7047     		bx	lr
 980              	.L70:
 981 0016 00BF     		.align	2
 982              	.L69:
 983 0018 00000000 		.word	SeqGenDB
 984              		.cfi_endproc
 985              	.LFE10:
 987              		.section	.text.AD5940_SEQGenCtrl,"ax",%progbits
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 36


 988              		.align	1
 989              		.global	AD5940_SEQGenCtrl
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 993              		.fpu fpv5-d16
 995              	AD5940_SEQGenCtrl:
 996              	.LVL84:
 997              	.LFB11:
 298:ad5940lib/ad5940.c ****   if(bFlag == bFALSE) /* Disable sequence generator */
 998              		.loc 1 298 1 is_stmt 1 view -0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 299:ad5940lib/ad5940.c ****   {
 1003              		.loc 1 299 3 view .LVU264
 299:ad5940lib/ad5940.c ****   {
 1004              		.loc 1 299 5 is_stmt 0 view .LVU265
 1005 0000 18B9     		cbnz	r0, .L72
 301:ad5940lib/ad5940.c ****   }
 1006              		.loc 1 301 5 is_stmt 1 view .LVU266
 301:ad5940lib/ad5940.c ****   }
 1007              		.loc 1 301 26 is_stmt 0 view .LVU267
 1008 0002 054B     		ldr	r3, .L74
 1009 0004 0022     		movs	r2, #0
 1010 0006 1A70     		strb	r2, [r3]
 1011 0008 7047     		bx	lr
 1012              	.L72:
 305:ad5940lib/ad5940.c ****     SeqGenDB.LastError = AD5940ERR_OK;  /* Clear error message */
 1013              		.loc 1 305 5 is_stmt 1 view .LVU268
 305:ad5940lib/ad5940.c ****     SeqGenDB.LastError = AD5940ERR_OK;  /* Clear error message */
 1014              		.loc 1 305 21 is_stmt 0 view .LVU269
 1015 000a 034B     		ldr	r3, .L74
 1016 000c 0022     		movs	r2, #0
 1017 000e DA60     		str	r2, [r3, #12]
 306:ad5940lib/ad5940.c ****     SeqGenDB.EngineStart = bTRUE;
 1018              		.loc 1 306 5 is_stmt 1 view .LVU270
 306:ad5940lib/ad5940.c ****     SeqGenDB.EngineStart = bTRUE;
 1019              		.loc 1 306 24 is_stmt 0 view .LVU271
 1020 0010 9A61     		str	r2, [r3, #24]
 307:ad5940lib/ad5940.c ****   }
 1021              		.loc 1 307 5 is_stmt 1 view .LVU272
 307:ad5940lib/ad5940.c ****   }
 1022              		.loc 1 307 26 is_stmt 0 view .LVU273
 1023 0012 0122     		movs	r2, #1
 1024 0014 1A70     		strb	r2, [r3]
 309:ad5940lib/ad5940.c **** 
 1025              		.loc 1 309 1 view .LVU274
 1026 0016 7047     		bx	lr
 1027              	.L75:
 1028              		.align	2
 1029              	.L74:
 1030 0018 00000000 		.word	SeqGenDB
 1031              		.cfi_endproc
 1032              	.LFE11:
 1034              		.section	.text.AD5940_SEQCycleTime,"ax",%progbits
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 37


 1035              		.align	1
 1036              		.global	AD5940_SEQCycleTime
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1040              		.fpu fpv5-d16
 1042              	AD5940_SEQCycleTime:
 1043              	.LFB12:
 316:ad5940lib/ad5940.c ****   uint32_t i, Cycles, Cmd;  
 1044              		.loc 1 316 1 is_stmt 1 view -0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048              		@ link register save eliminated.
 317:ad5940lib/ad5940.c ****   Cycles = 0;
 1049              		.loc 1 317 3 view .LVU276
 318:ad5940lib/ad5940.c ****   for(i=0;i<SeqGenDB.RegCount;i++)
 1050              		.loc 1 318 3 view .LVU277
 1051              	.LVL85:
 319:ad5940lib/ad5940.c ****   {
 1052              		.loc 1 319 3 view .LVU278
 318:ad5940lib/ad5940.c ****   for(i=0;i<SeqGenDB.RegCount;i++)
 1053              		.loc 1 318 10 is_stmt 0 view .LVU279
 1054 0000 0020     		movs	r0, #0
 319:ad5940lib/ad5940.c ****   {
 1055              		.loc 1 319 8 view .LVU280
 1056 0002 0346     		mov	r3, r0
 319:ad5940lib/ad5940.c ****   {
 1057              		.loc 1 319 3 view .LVU281
 1058 0004 04E0     		b	.L77
 1059              	.LVL86:
 1060              	.L78:
 329:ad5940lib/ad5940.c ****       {
 1061              		.loc 1 329 7 is_stmt 1 view .LVU282
 329:ad5940lib/ad5940.c ****       {
 1062              		.loc 1 329 10 is_stmt 0 view .LVU283
 1063 0006 11F0010F 		tst	r1, #1
 1064 000a 0ED0     		beq	.L80
 332:ad5940lib/ad5940.c ****       }
 1065              		.loc 1 332 9 is_stmt 1 view .LVU284
 332:ad5940lib/ad5940.c ****       }
 1066              		.loc 1 332 16 is_stmt 0 view .LVU285
 1067 000c 0130     		adds	r0, r0, #1
 1068              	.LVL87:
 1069              	.L79:
 319:ad5940lib/ad5940.c ****   {
 1070              		.loc 1 319 31 is_stmt 1 discriminator 2 view .LVU286
 319:ad5940lib/ad5940.c ****   {
 1071              		.loc 1 319 32 is_stmt 0 discriminator 2 view .LVU287
 1072 000e 0133     		adds	r3, r3, #1
 1073              	.LVL88:
 1074              	.L77:
 319:ad5940lib/ad5940.c ****   {
 1075              		.loc 1 319 11 is_stmt 1 discriminator 1 view .LVU288
 319:ad5940lib/ad5940.c ****   {
 1076              		.loc 1 319 21 is_stmt 0 discriminator 1 view .LVU289
 1077 0010 084A     		ldr	r2, .L83
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 38


 1078 0012 5269     		ldr	r2, [r2, #20]
 319:ad5940lib/ad5940.c ****   {
 1079              		.loc 1 319 3 discriminator 1 view .LVU290
 1080 0014 9A42     		cmp	r2, r3
 1081 0016 0CD9     		bls	.L82
 321:ad5940lib/ad5940.c ****     if (Cmd & 0x2)
 1082              		.loc 1 321 5 is_stmt 1 view .LVU291
 321:ad5940lib/ad5940.c ****     if (Cmd & 0x2)
 1083              		.loc 1 321 20 is_stmt 0 view .LVU292
 1084 0018 064A     		ldr	r2, .L83
 1085 001a 9268     		ldr	r2, [r2, #8]
 321:ad5940lib/ad5940.c ****     if (Cmd & 0x2)
 1086              		.loc 1 321 29 view .LVU293
 1087 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 321:ad5940lib/ad5940.c ****     if (Cmd & 0x2)
 1088              		.loc 1 321 9 view .LVU294
 1089 0020 910F     		lsrs	r1, r2, #30
 1090              	.LVL89:
 322:ad5940lib/ad5940.c ****     {
 1091              		.loc 1 322 5 is_stmt 1 view .LVU295
 322:ad5940lib/ad5940.c ****     {
 1092              		.loc 1 322 8 is_stmt 0 view .LVU296
 1093 0022 002A     		cmp	r2, #0
 1094 0024 EFDA     		bge	.L78
 325:ad5940lib/ad5940.c ****     }
 1095              		.loc 1 325 7 is_stmt 1 view .LVU297
 325:ad5940lib/ad5940.c ****     }
 1096              		.loc 1 325 14 is_stmt 0 view .LVU298
 1097 0026 0130     		adds	r0, r0, #1
 1098              	.LVL90:
 325:ad5940lib/ad5940.c ****     }
 1099              		.loc 1 325 14 view .LVU299
 1100 0028 F1E7     		b	.L79
 1101              	.L80:
 337:ad5940lib/ad5940.c ****         }
 1102              		.loc 1 337 11 is_stmt 1 view .LVU300
 337:ad5940lib/ad5940.c ****         }
 1103              		.loc 1 337 42 is_stmt 0 view .LVU301
 1104 002a 22F04042 		bic	r2, r2, #-1073741824
 337:ad5940lib/ad5940.c ****         }
 1105              		.loc 1 337 18 view .LVU302
 1106 002e 1044     		add	r0, r0, r2
 1107              	.LVL91:
 337:ad5940lib/ad5940.c ****         }
 1108              		.loc 1 337 18 view .LVU303
 1109 0030 EDE7     		b	.L79
 1110              	.LVL92:
 1111              	.L82:
 342:ad5940lib/ad5940.c **** #endif
 1112              		.loc 1 342 1 view .LVU304
 1113 0032 7047     		bx	lr
 1114              	.L84:
 1115              		.align	2
 1116              	.L83:
 1117 0034 00000000 		.word	SeqGenDB
 1118              		.cfi_endproc
 1119              	.LFE12:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 39


 1121              		.section	.rodata.AD5940_Notch50HzAvailable.str1.4,"aMS",%progbits,1
 1122              		.align	2
 1123              	.LC7:
 1124 0000 05070809 		.ascii	"\005\007\010\011\013\000"
 1124      0B00
 1125 0006 0000     		.align	2
 1126              	.LC8:
 1127 0008 0F0C0A09 		.ascii	"\017\014\012\011\006\000"
 1127      0600
 1128 000e 0000     		.align	2
 1129              	.LC9:
 1130 0010 090A0B00 		.ascii	"\011\012\013\000"
 1131              		.align	2
 1132              	.LC10:
 1133 0014 120F0C00 		.ascii	"\022\017\014\000"
 1134              		.align	2
 1135              	.LC11:
 1136 0018 03040506 		.ascii	"\003\004\005\006\010\012\000"
 1136      080A00
 1137 001f 00       		.align	2
 1138              	.LC12:
 1139 0020 120C0605 		.ascii	"\022\014\006\005\004\003\000"
 1139      040300
 1140              		.section	.text.AD5940_Notch50HzAvailable,"ax",%progbits
 1141              		.align	1
 1142              		.global	AD5940_Notch50HzAvailable
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu fpv5-d16
 1148              	AD5940_Notch50HzAvailable:
 1149              	.LVL93:
 1150              	.LFB14:
 371:ad5940lib/ad5940.c ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 1151              		.loc 1 371 1 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 24
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 371:ad5940lib/ad5940.c ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 1155              		.loc 1 371 1 is_stmt 0 view .LVU306
 1156 0000 30B5     		push	{r4, r5, lr}
 1157              	.LCFI25:
 1158              		.cfi_def_cfa_offset 12
 1159              		.cfi_offset 4, -12
 1160              		.cfi_offset 5, -8
 1161              		.cfi_offset 14, -4
 1162 0002 87B0     		sub	sp, sp, #28
 1163              	.LCFI26:
 1164              		.cfi_def_cfa_offset 40
 1165 0004 0446     		mov	r4, r0
 1166 0006 0D46     		mov	r5, r1
 372:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1167              		.loc 1 372 3 is_stmt 1 view .LVU307
 372:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1168              		.loc 1 372 18 is_stmt 0 view .LVU308
 1169 0008 C368     		ldr	r3, [r0, #12]
 372:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 40


 1170              		.loc 1 372 5 view .LVU309
 1171 000a 012B     		cmp	r3, #1
 1172 000c 20D0     		beq	.L96
 1173              	.L86:
 372:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1174              		.loc 1 372 91 discriminator 3 view .LVU310
 1175 000e 1BBB     		cbnz	r3, .L88
 373:ad5940lib/ad5940.c ****   {
 1176              		.loc 1 373 61 view .LVU311
 1177 0010 2268     		ldr	r2, [r4]
 373:ad5940lib/ad5940.c ****   {
 1178              		.loc 1 373 47 view .LVU312
 1179 0012 022A     		cmp	r2, #2
 1180 0014 20D0     		beq	.L88
 1181              	.L87:
 1182              	.LBB3:
 378:ad5940lib/ad5940.c ****     const uint8_t dl_50Hz[] = {15,12,10,9,6};
 1183              		.loc 1 378 5 is_stmt 1 view .LVU313
 378:ad5940lib/ad5940.c ****     const uint8_t dl_50Hz[] = {15,12,10,9,6};
 1184              		.loc 1 378 19 is_stmt 0 view .LVU314
 1185 0016 364B     		ldr	r3, .L99
 1186 0018 93E80300 		ldm	r3, {r0, r1}
 1187              	.LVL94:
 378:ad5940lib/ad5940.c ****     const uint8_t dl_50Hz[] = {15,12,10,9,6};
 1188              		.loc 1 378 19 view .LVU315
 1189 001c 0290     		str	r0, [sp, #8]
 1190 001e 8DF80C10 		strb	r1, [sp, #12]
 379:ad5940lib/ad5940.c ****     uint8_t index;
 1191              		.loc 1 379 5 is_stmt 1 view .LVU316
 379:ad5940lib/ad5940.c ****     uint8_t index;
 1192              		.loc 1 379 19 is_stmt 0 view .LVU317
 1193 0022 344B     		ldr	r3, .L99+4
 1194 0024 93E80300 		ldm	r3, {r0, r1}
 1195 0028 0490     		str	r0, [sp, #16]
 1196 002a 8DF81410 		strb	r1, [sp, #20]
 380:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1197              		.loc 1 380 5 is_stmt 1 view .LVU318
 381:ad5940lib/ad5940.c ****     {
 1198              		.loc 1 381 5 view .LVU319
 381:ad5940lib/ad5940.c ****     {
 1199              		.loc 1 381 8 is_stmt 0 view .LVU320
 1200 002e 0DF10703 		add	r3, sp, #7
 1201 0032 0522     		movs	r2, #5
 1202 0034 02A9     		add	r1, sp, #8
 1203 0036 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1204 0038 FFF7FEFF 		bl	_is_value_in_table
 1205              	.LVL95:
 381:ad5940lib/ad5940.c ****     {
 1206              		.loc 1 381 7 view .LVU321
 1207 003c 90B1     		cbz	r0, .L91
 383:ad5940lib/ad5940.c ****       return bTRUE;
 1208              		.loc 1 383 7 is_stmt 1 view .LVU322
 383:ad5940lib/ad5940.c ****       return bTRUE;
 1209              		.loc 1 383 20 is_stmt 0 view .LVU323
 1210 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1211 0042 06AA     		add	r2, sp, #24
 1212 0044 1344     		add	r3, r3, r2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 41


 1213 0046 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 383:ad5940lib/ad5940.c ****       return bTRUE;
 1214              		.loc 1 383 11 view .LVU324
 1215 004a 2B70     		strb	r3, [r5]
 384:ad5940lib/ad5940.c ****     }
 1216              		.loc 1 384 7 is_stmt 1 view .LVU325
 384:ad5940lib/ad5940.c ****     }
 1217              		.loc 1 384 14 is_stmt 0 view .LVU326
 1218 004c 0120     		movs	r0, #1
 1219 004e 0BE0     		b	.L90
 1220              	.LVL96:
 1221              	.L96:
 384:ad5940lib/ad5940.c ****     }
 1222              		.loc 1 384 14 view .LVU327
 1223              	.LBE3:
 372:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1224              		.loc 1 372 60 discriminator 1 view .LVU328
 1225 0050 0268     		ldr	r2, [r0]
 372:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1226              		.loc 1 372 46 discriminator 1 view .LVU329
 1227 0052 022A     		cmp	r2, #2
 1228 0054 DBD1     		bne	.L86
 1229 0056 DEE7     		b	.L87
 1230              	.L88:
 387:ad5940lib/ad5940.c ****   {
 1231              		.loc 1 387 8 is_stmt 1 view .LVU330
 387:ad5940lib/ad5940.c ****   {
 1232              		.loc 1 387 10 is_stmt 0 view .LVU331
 1233 0058 13B9     		cbnz	r3, .L92
 387:ad5940lib/ad5940.c ****   {
 1234              		.loc 1 387 64 discriminator 1 view .LVU332
 1235 005a 2268     		ldr	r2, [r4]
 387:ad5940lib/ad5940.c ****   {
 1236              		.loc 1 387 50 discriminator 1 view .LVU333
 1237 005c 022A     		cmp	r2, #2
 1238 005e 05D0     		beq	.L97
 1239              	.L92:
 400:ad5940lib/ad5940.c ****   {
 1240              		.loc 1 400 8 is_stmt 1 view .LVU334
 400:ad5940lib/ad5940.c ****   {
 1241              		.loc 1 400 10 is_stmt 0 view .LVU335
 1242 0060 012B     		cmp	r3, #1
 1243 0062 23D0     		beq	.L98
 1244              	.LVL97:
 1245              	.L91:
 414:ad5940lib/ad5940.c ****   return bFALSE;
 1246              		.loc 1 414 3 is_stmt 1 view .LVU336
 414:ad5940lib/ad5940.c ****   return bFALSE;
 1247              		.loc 1 414 7 is_stmt 0 view .LVU337
 1248 0064 0020     		movs	r0, #0
 1249 0066 2870     		strb	r0, [r5]
 415:ad5940lib/ad5940.c **** }
 1250              		.loc 1 415 3 is_stmt 1 view .LVU338
 1251              	.L90:
 416:ad5940lib/ad5940.c **** 
 1252              		.loc 1 416 1 is_stmt 0 view .LVU339
 1253 0068 07B0     		add	sp, sp, #28
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 42


 1254              	.LCFI27:
 1255              		.cfi_remember_state
 1256              		.cfi_def_cfa_offset 12
 1257              		@ sp needed
 1258 006a 30BD     		pop	{r4, r5, pc}
 1259              	.LVL98:
 1260              	.L97:
 1261              	.LCFI28:
 1262              		.cfi_restore_state
 1263              	.LBB4:
 391:ad5940lib/ad5940.c ****     const uint8_t dl_50Hz[] = {18,15,12};
 1264              		.loc 1 391 5 is_stmt 1 view .LVU340
 391:ad5940lib/ad5940.c ****     const uint8_t dl_50Hz[] = {18,15,12};
 1265              		.loc 1 391 19 is_stmt 0 view .LVU341
 1266 006c 224B     		ldr	r3, .L99+8
 1267 006e 1B68     		ldr	r3, [r3]
 1268 0070 ADF80830 		strh	r3, [sp, #8]	@ movhi
 1269 0074 1B0C     		lsrs	r3, r3, #16
 1270 0076 8DF80A30 		strb	r3, [sp, #10]
 392:ad5940lib/ad5940.c ****     uint8_t index;
 1271              		.loc 1 392 5 is_stmt 1 view .LVU342
 392:ad5940lib/ad5940.c ****     uint8_t index;
 1272              		.loc 1 392 19 is_stmt 0 view .LVU343
 1273 007a 204B     		ldr	r3, .L99+12
 1274 007c 1B68     		ldr	r3, [r3]
 1275 007e ADF81030 		strh	r3, [sp, #16]	@ movhi
 1276 0082 1B0C     		lsrs	r3, r3, #16
 1277 0084 8DF81230 		strb	r3, [sp, #18]
 393:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1278              		.loc 1 393 5 is_stmt 1 view .LVU344
 394:ad5940lib/ad5940.c ****     {
 1279              		.loc 1 394 5 view .LVU345
 394:ad5940lib/ad5940.c ****     {
 1280              		.loc 1 394 8 is_stmt 0 view .LVU346
 1281 0088 0DF10703 		add	r3, sp, #7
 1282 008c 0322     		movs	r2, #3
 1283 008e 02A9     		add	r1, sp, #8
 1284              	.LVL99:
 394:ad5940lib/ad5940.c ****     {
 1285              		.loc 1 394 8 view .LVU347
 1286 0090 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1287              	.LVL100:
 394:ad5940lib/ad5940.c ****     {
 1288              		.loc 1 394 8 view .LVU348
 1289 0092 FFF7FEFF 		bl	_is_value_in_table
 1290              	.LVL101:
 394:ad5940lib/ad5940.c ****     {
 1291              		.loc 1 394 7 view .LVU349
 1292 0096 0028     		cmp	r0, #0
 1293 0098 E4D0     		beq	.L91
 396:ad5940lib/ad5940.c ****       return bTRUE;
 1294              		.loc 1 396 7 is_stmt 1 view .LVU350
 396:ad5940lib/ad5940.c ****       return bTRUE;
 1295              		.loc 1 396 20 is_stmt 0 view .LVU351
 1296 009a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1297 009e 06AA     		add	r2, sp, #24
 1298 00a0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 43


 1299 00a2 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 396:ad5940lib/ad5940.c ****       return bTRUE;
 1300              		.loc 1 396 11 view .LVU352
 1301 00a6 2B70     		strb	r3, [r5]
 397:ad5940lib/ad5940.c ****     }
 1302              		.loc 1 397 7 is_stmt 1 view .LVU353
 397:ad5940lib/ad5940.c ****     }
 1303              		.loc 1 397 14 is_stmt 0 view .LVU354
 1304 00a8 0120     		movs	r0, #1
 1305 00aa DDE7     		b	.L90
 1306              	.LVL102:
 1307              	.L98:
 397:ad5940lib/ad5940.c ****     }
 1308              		.loc 1 397 14 view .LVU355
 1309              	.LBE4:
 400:ad5940lib/ad5940.c ****   {
 1310              		.loc 1 400 64 discriminator 1 view .LVU356
 1311 00ac 2368     		ldr	r3, [r4]
 400:ad5940lib/ad5940.c ****   {
 1312              		.loc 1 400 50 discriminator 1 view .LVU357
 1313 00ae 022B     		cmp	r3, #2
 1314 00b0 D8D0     		beq	.L91
 1315              	.LBB5:
 404:ad5940lib/ad5940.c ****                                     ADCSINC2OSR_800, ADCSINC2OSR_1067};
 1316              		.loc 1 404 5 is_stmt 1 view .LVU358
 404:ad5940lib/ad5940.c ****                                     ADCSINC2OSR_800, ADCSINC2OSR_1067};
 1317              		.loc 1 404 19 is_stmt 0 view .LVU359
 1318 00b2 134B     		ldr	r3, .L99+16
 1319 00b4 93E80300 		ldm	r3, {r0, r1}
 1320              	.LVL103:
 404:ad5940lib/ad5940.c ****                                     ADCSINC2OSR_800, ADCSINC2OSR_1067};
 1321              		.loc 1 404 19 view .LVU360
 1322 00b8 0290     		str	r0, [sp, #8]
 1323 00ba ADF80C10 		strh	r1, [sp, #12]	@ movhi
 406:ad5940lib/ad5940.c ****     uint8_t index;
 1324              		.loc 1 406 5 is_stmt 1 view .LVU361
 406:ad5940lib/ad5940.c ****     uint8_t index;
 1325              		.loc 1 406 19 is_stmt 0 view .LVU362
 1326 00be 114B     		ldr	r3, .L99+20
 1327 00c0 93E80300 		ldm	r3, {r0, r1}
 1328 00c4 0490     		str	r0, [sp, #16]
 1329 00c6 ADF81410 		strh	r1, [sp, #20]	@ movhi
 407:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1330              		.loc 1 407 5 is_stmt 1 view .LVU363
 408:ad5940lib/ad5940.c ****     {
 1331              		.loc 1 408 5 view .LVU364
 408:ad5940lib/ad5940.c ****     {
 1332              		.loc 1 408 8 is_stmt 0 view .LVU365
 1333 00ca 0DF10703 		add	r3, sp, #7
 1334 00ce 0622     		movs	r2, #6
 1335 00d0 02A9     		add	r1, sp, #8
 1336 00d2 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1337 00d4 FFF7FEFF 		bl	_is_value_in_table
 1338              	.LVL104:
 408:ad5940lib/ad5940.c ****     {
 1339              		.loc 1 408 7 view .LVU366
 1340 00d8 0028     		cmp	r0, #0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 44


 1341 00da C3D0     		beq	.L91
 410:ad5940lib/ad5940.c ****       return bTRUE;
 1342              		.loc 1 410 7 is_stmt 1 view .LVU367
 410:ad5940lib/ad5940.c ****       return bTRUE;
 1343              		.loc 1 410 20 is_stmt 0 view .LVU368
 1344 00dc 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1345 00e0 06AA     		add	r2, sp, #24
 1346 00e2 1344     		add	r3, r3, r2
 1347 00e4 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 410:ad5940lib/ad5940.c ****       return bTRUE;
 1348              		.loc 1 410 11 view .LVU369
 1349 00e8 2B70     		strb	r3, [r5]
 411:ad5940lib/ad5940.c ****     }
 1350              		.loc 1 411 7 is_stmt 1 view .LVU370
 411:ad5940lib/ad5940.c ****     }
 1351              		.loc 1 411 14 is_stmt 0 view .LVU371
 1352 00ea 0120     		movs	r0, #1
 1353 00ec BCE7     		b	.L90
 1354              	.L100:
 1355 00ee 00BF     		.align	2
 1356              	.L99:
 1357 00f0 00000000 		.word	.LC7
 1358 00f4 08000000 		.word	.LC8
 1359 00f8 10000000 		.word	.LC9
 1360 00fc 14000000 		.word	.LC10
 1361 0100 18000000 		.word	.LC11
 1362 0104 20000000 		.word	.LC12
 1363              	.LBE5:
 1364              		.cfi_endproc
 1365              	.LFE14:
 1367              		.section	.rodata.AD5940_Notch60HzAvailable.str1.4,"aMS",%progbits,1
 1368              		.align	2
 1369              	.LC13:
 1370 0000 03040507 		.ascii	"\003\004\005\007\011\013\000"
 1370      090B00
 1371 0007 00       		.align	2
 1372              	.LC14:
 1373 0008 0F0A0504 		.ascii	"\017\012\005\004\003\002\000"
 1373      030200
 1374              		.section	.text.AD5940_Notch60HzAvailable,"ax",%progbits
 1375              		.align	1
 1376              		.global	AD5940_Notch60HzAvailable
 1377              		.syntax unified
 1378              		.thumb
 1379              		.thumb_func
 1380              		.fpu fpv5-d16
 1382              	AD5940_Notch60HzAvailable:
 1383              	.LVL105:
 1384              	.LFB15:
 425:ad5940lib/ad5940.c ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 1385              		.loc 1 425 1 is_stmt 1 view -0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 24
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 425:ad5940lib/ad5940.c ****   if((pFilterInfo->ADCRate == ADCRATE_800KHZ && pFilterInfo->ADCSinc3Osr == ADCSINC3OSR_2)||\
 1389              		.loc 1 425 1 is_stmt 0 view .LVU373
 1390 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 45


 1391              	.LCFI29:
 1392              		.cfi_def_cfa_offset 12
 1393              		.cfi_offset 4, -12
 1394              		.cfi_offset 5, -8
 1395              		.cfi_offset 14, -4
 1396 0002 87B0     		sub	sp, sp, #28
 1397              	.LCFI30:
 1398              		.cfi_def_cfa_offset 40
 1399 0004 0446     		mov	r4, r0
 1400 0006 0D46     		mov	r5, r1
 426:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1401              		.loc 1 426 3 is_stmt 1 view .LVU374
 426:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1402              		.loc 1 426 18 is_stmt 0 view .LVU375
 1403 0008 C368     		ldr	r3, [r0, #12]
 426:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1404              		.loc 1 426 5 view .LVU376
 1405 000a 012B     		cmp	r3, #1
 1406 000c 1CD0     		beq	.L112
 1407              	.L102:
 426:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1408              		.loc 1 426 91 discriminator 3 view .LVU377
 1409 000e FBB9     		cbnz	r3, .L104
 427:ad5940lib/ad5940.c ****   {
 1410              		.loc 1 427 61 view .LVU378
 1411 0010 2268     		ldr	r2, [r4]
 427:ad5940lib/ad5940.c ****   {
 1412              		.loc 1 427 47 view .LVU379
 1413 0012 022A     		cmp	r2, #2
 1414 0014 1CD0     		beq	.L104
 1415              	.L103:
 1416              	.LBB6:
 432:ad5940lib/ad5940.c ****     const uint8_t dl_60Hz[] = {10,5};
 1417              		.loc 1 432 5 is_stmt 1 view .LVU380
 432:ad5940lib/ad5940.c ****     const uint8_t dl_60Hz[] = {10,5};
 1418              		.loc 1 432 19 is_stmt 0 view .LVU381
 1419 0016 40F60733 		movw	r3, #2823
 1420 001a ADF80830 		strh	r3, [sp, #8]	@ movhi
 433:ad5940lib/ad5940.c ****     uint8_t index;
 1421              		.loc 1 433 5 is_stmt 1 view .LVU382
 433:ad5940lib/ad5940.c ****     uint8_t index;
 1422              		.loc 1 433 19 is_stmt 0 view .LVU383
 1423 001e 40F20A53 		movw	r3, #1290
 1424 0022 ADF81030 		strh	r3, [sp, #16]	@ movhi
 434:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1425              		.loc 1 434 5 is_stmt 1 view .LVU384
 435:ad5940lib/ad5940.c ****     {
 1426              		.loc 1 435 5 view .LVU385
 435:ad5940lib/ad5940.c ****     {
 1427              		.loc 1 435 8 is_stmt 0 view .LVU386
 1428 0026 0DF10703 		add	r3, sp, #7
 1429 002a 0222     		movs	r2, #2
 1430 002c 02A9     		add	r1, sp, #8
 1431              	.LVL106:
 435:ad5940lib/ad5940.c ****     {
 1432              		.loc 1 435 8 view .LVU387
 1433 002e 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 46


 1434              	.LVL107:
 435:ad5940lib/ad5940.c ****     {
 1435              		.loc 1 435 8 view .LVU388
 1436 0030 FFF7FEFF 		bl	_is_value_in_table
 1437              	.LVL108:
 435:ad5940lib/ad5940.c ****     {
 1438              		.loc 1 435 7 view .LVU389
 1439 0034 90B1     		cbz	r0, .L107
 437:ad5940lib/ad5940.c ****       return bTRUE;
 1440              		.loc 1 437 7 is_stmt 1 view .LVU390
 437:ad5940lib/ad5940.c ****       return bTRUE;
 1441              		.loc 1 437 20 is_stmt 0 view .LVU391
 1442 0036 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1443 003a 06AA     		add	r2, sp, #24
 1444 003c 1344     		add	r3, r3, r2
 1445 003e 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 437:ad5940lib/ad5940.c ****       return bTRUE;
 1446              		.loc 1 437 11 view .LVU392
 1447 0042 2B70     		strb	r3, [r5]
 438:ad5940lib/ad5940.c ****     }
 1448              		.loc 1 438 7 is_stmt 1 view .LVU393
 438:ad5940lib/ad5940.c ****     }
 1449              		.loc 1 438 14 is_stmt 0 view .LVU394
 1450 0044 0120     		movs	r0, #1
 1451 0046 0BE0     		b	.L106
 1452              	.LVL109:
 1453              	.L112:
 438:ad5940lib/ad5940.c ****     }
 1454              		.loc 1 438 14 view .LVU395
 1455              	.LBE6:
 426:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1456              		.loc 1 426 60 discriminator 1 view .LVU396
 1457 0048 0268     		ldr	r2, [r0]
 426:ad5940lib/ad5940.c ****       (pFilterInfo->ADCRate == ADCRATE_1P6MHZ && pFilterInfo->ADCSinc3Osr != ADCSINC3OSR_2))
 1458              		.loc 1 426 46 discriminator 1 view .LVU397
 1459 004a 022A     		cmp	r2, #2
 1460 004c DFD1     		bne	.L102
 1461 004e E2E7     		b	.L103
 1462              	.L104:
 441:ad5940lib/ad5940.c ****   {
 1463              		.loc 1 441 8 is_stmt 1 view .LVU398
 441:ad5940lib/ad5940.c ****   {
 1464              		.loc 1 441 10 is_stmt 0 view .LVU399
 1465 0050 13B9     		cbnz	r3, .L108
 441:ad5940lib/ad5940.c ****   {
 1466              		.loc 1 441 64 discriminator 1 view .LVU400
 1467 0052 2268     		ldr	r2, [r4]
 441:ad5940lib/ad5940.c ****   {
 1468              		.loc 1 441 50 discriminator 1 view .LVU401
 1469 0054 022A     		cmp	r2, #2
 1470 0056 05D0     		beq	.L113
 1471              	.L108:
 454:ad5940lib/ad5940.c ****   {
 1472              		.loc 1 454 8 is_stmt 1 view .LVU402
 454:ad5940lib/ad5940.c ****   {
 1473              		.loc 1 454 10 is_stmt 0 view .LVU403
 1474 0058 012B     		cmp	r3, #1
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 47


 1475 005a 1CD0     		beq	.L114
 1476              	.LVL110:
 1477              	.L107:
 468:ad5940lib/ad5940.c ****   return bFALSE;
 1478              		.loc 1 468 3 is_stmt 1 view .LVU404
 468:ad5940lib/ad5940.c ****   return bFALSE;
 1479              		.loc 1 468 7 is_stmt 0 view .LVU405
 1480 005c 0020     		movs	r0, #0
 1481 005e 2870     		strb	r0, [r5]
 469:ad5940lib/ad5940.c **** }
 1482              		.loc 1 469 3 is_stmt 1 view .LVU406
 1483              	.L106:
 470:ad5940lib/ad5940.c **** 
 1484              		.loc 1 470 1 is_stmt 0 view .LVU407
 1485 0060 07B0     		add	sp, sp, #28
 1486              	.LCFI31:
 1487              		.cfi_remember_state
 1488              		.cfi_def_cfa_offset 12
 1489              		@ sp needed
 1490 0062 30BD     		pop	{r4, r5, pc}
 1491              	.LVL111:
 1492              	.L113:
 1493              	.LCFI32:
 1494              		.cfi_restore_state
 1495              	.LBB7:
 445:ad5940lib/ad5940.c ****     const uint8_t dl_60Hz[] = {15,10};
 1496              		.loc 1 445 5 is_stmt 1 view .LVU408
 445:ad5940lib/ad5940.c ****     const uint8_t dl_60Hz[] = {15,10};
 1497              		.loc 1 445 19 is_stmt 0 view .LVU409
 1498 0064 40F60933 		movw	r3, #2825
 1499 0068 ADF80830 		strh	r3, [sp, #8]	@ movhi
 446:ad5940lib/ad5940.c ****     uint8_t index;
 1500              		.loc 1 446 5 is_stmt 1 view .LVU410
 446:ad5940lib/ad5940.c ****     uint8_t index;
 1501              		.loc 1 446 19 is_stmt 0 view .LVU411
 1502 006c 40F60F23 		movw	r3, #2575
 1503 0070 ADF81030 		strh	r3, [sp, #16]	@ movhi
 447:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1504              		.loc 1 447 5 is_stmt 1 view .LVU412
 448:ad5940lib/ad5940.c ****     {
 1505              		.loc 1 448 5 view .LVU413
 448:ad5940lib/ad5940.c ****     {
 1506              		.loc 1 448 8 is_stmt 0 view .LVU414
 1507 0074 0DF10703 		add	r3, sp, #7
 1508 0078 02A9     		add	r1, sp, #8
 1509              	.LVL112:
 448:ad5940lib/ad5940.c ****     {
 1510              		.loc 1 448 8 view .LVU415
 1511 007a 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1512              	.LVL113:
 448:ad5940lib/ad5940.c ****     {
 1513              		.loc 1 448 8 view .LVU416
 1514 007c FFF7FEFF 		bl	_is_value_in_table
 1515              	.LVL114:
 448:ad5940lib/ad5940.c ****     {
 1516              		.loc 1 448 7 view .LVU417
 1517 0080 0028     		cmp	r0, #0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 48


 1518 0082 EBD0     		beq	.L107
 450:ad5940lib/ad5940.c ****       return bTRUE;
 1519              		.loc 1 450 7 is_stmt 1 view .LVU418
 450:ad5940lib/ad5940.c ****       return bTRUE;
 1520              		.loc 1 450 20 is_stmt 0 view .LVU419
 1521 0084 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1522 0088 06AA     		add	r2, sp, #24
 1523 008a 1344     		add	r3, r3, r2
 1524 008c 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 450:ad5940lib/ad5940.c ****       return bTRUE;
 1525              		.loc 1 450 11 view .LVU420
 1526 0090 2B70     		strb	r3, [r5]
 451:ad5940lib/ad5940.c ****     }
 1527              		.loc 1 451 7 is_stmt 1 view .LVU421
 451:ad5940lib/ad5940.c ****     }
 1528              		.loc 1 451 14 is_stmt 0 view .LVU422
 1529 0092 0120     		movs	r0, #1
 1530 0094 E4E7     		b	.L106
 1531              	.LVL115:
 1532              	.L114:
 451:ad5940lib/ad5940.c ****     }
 1533              		.loc 1 451 14 view .LVU423
 1534              	.LBE7:
 454:ad5940lib/ad5940.c ****   {
 1535              		.loc 1 454 64 discriminator 1 view .LVU424
 1536 0096 2368     		ldr	r3, [r4]
 454:ad5940lib/ad5940.c ****   {
 1537              		.loc 1 454 50 discriminator 1 view .LVU425
 1538 0098 022B     		cmp	r3, #2
 1539 009a DFD0     		beq	.L107
 1540              	.LBB8:
 458:ad5940lib/ad5940.c ****                                     ADCSINC2OSR_889, ADCSINC2OSR_1333};
 1541              		.loc 1 458 5 is_stmt 1 view .LVU426
 458:ad5940lib/ad5940.c ****                                     ADCSINC2OSR_889, ADCSINC2OSR_1333};
 1542              		.loc 1 458 19 is_stmt 0 view .LVU427
 1543 009c 0E4B     		ldr	r3, .L115
 1544 009e 93E80300 		ldm	r3, {r0, r1}
 1545              	.LVL116:
 458:ad5940lib/ad5940.c ****                                     ADCSINC2OSR_889, ADCSINC2OSR_1333};
 1546              		.loc 1 458 19 view .LVU428
 1547 00a2 0290     		str	r0, [sp, #8]
 1548 00a4 ADF80C10 		strh	r1, [sp, #12]	@ movhi
 460:ad5940lib/ad5940.c ****     uint8_t index;
 1549              		.loc 1 460 5 is_stmt 1 view .LVU429
 460:ad5940lib/ad5940.c ****     uint8_t index;
 1550              		.loc 1 460 19 is_stmt 0 view .LVU430
 1551 00a8 0C4B     		ldr	r3, .L115+4
 1552 00aa 93E80300 		ldm	r3, {r0, r1}
 1553 00ae 0490     		str	r0, [sp, #16]
 1554 00b0 ADF81410 		strh	r1, [sp, #20]	@ movhi
 461:ad5940lib/ad5940.c ****     if(_is_value_in_table(pFilterInfo->ADCSinc2Osr, available_sinc2_osr, sizeof(available_sinc2_osr
 1555              		.loc 1 461 5 is_stmt 1 view .LVU431
 462:ad5940lib/ad5940.c ****     {
 1556              		.loc 1 462 5 view .LVU432
 462:ad5940lib/ad5940.c ****     {
 1557              		.loc 1 462 8 is_stmt 0 view .LVU433
 1558 00b4 0DF10703 		add	r3, sp, #7
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 49


 1559 00b8 0622     		movs	r2, #6
 1560 00ba 02A9     		add	r1, sp, #8
 1561 00bc 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1562 00be FFF7FEFF 		bl	_is_value_in_table
 1563              	.LVL117:
 462:ad5940lib/ad5940.c ****     {
 1564              		.loc 1 462 7 view .LVU434
 1565 00c2 0028     		cmp	r0, #0
 1566 00c4 CAD0     		beq	.L107
 464:ad5940lib/ad5940.c ****       return bTRUE;
 1567              		.loc 1 464 7 is_stmt 1 view .LVU435
 464:ad5940lib/ad5940.c ****       return bTRUE;
 1568              		.loc 1 464 20 is_stmt 0 view .LVU436
 1569 00c6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1570 00ca 06AA     		add	r2, sp, #24
 1571 00cc 1344     		add	r3, r3, r2
 1572 00ce 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 464:ad5940lib/ad5940.c ****       return bTRUE;
 1573              		.loc 1 464 11 view .LVU437
 1574 00d2 2B70     		strb	r3, [r5]
 465:ad5940lib/ad5940.c ****     }
 1575              		.loc 1 465 7 is_stmt 1 view .LVU438
 465:ad5940lib/ad5940.c ****     }
 1576              		.loc 1 465 14 is_stmt 0 view .LVU439
 1577 00d4 0120     		movs	r0, #1
 1578 00d6 C3E7     		b	.L106
 1579              	.L116:
 1580              		.align	2
 1581              	.L115:
 1582 00d8 00000000 		.word	.LC13
 1583 00dc 08000000 		.word	.LC14
 1584              	.LBE8:
 1585              		.cfi_endproc
 1586              	.LFE15:
 1588              		.section	.text.AD5940_ClksCalculate,"ax",%progbits
 1589              		.align	1
 1590              		.global	AD5940_ClksCalculate
 1591              		.syntax unified
 1592              		.thumb
 1593              		.thumb_func
 1594              		.fpu fpv5-d16
 1596              	AD5940_ClksCalculate:
 1597              	.LVL118:
 1598              	.LFB16:
 481:ad5940lib/ad5940.c ****   uint32_t temp = 0;
 1599              		.loc 1 481 1 is_stmt 1 view -0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 96
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 481:ad5940lib/ad5940.c ****   uint32_t temp = 0;
 1603              		.loc 1 481 1 is_stmt 0 view .LVU441
 1604 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1605              	.LCFI33:
 1606              		.cfi_def_cfa_offset 20
 1607              		.cfi_offset 4, -20
 1608              		.cfi_offset 5, -16
 1609              		.cfi_offset 6, -12
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 50


 1610              		.cfi_offset 7, -8
 1611              		.cfi_offset 14, -4
 1612 0002 99B0     		sub	sp, sp, #100
 1613              	.LCFI34:
 1614              		.cfi_def_cfa_offset 120
 1615 0004 8446     		mov	ip, r0
 1616 0006 0F46     		mov	r7, r1
 482:ad5940lib/ad5940.c ****   const uint32_t sinc2osr_table[] = {22,44,89,178,267,533,640,667,800,889,1067,1333,0};
 1617              		.loc 1 482 3 is_stmt 1 view .LVU442
 482:ad5940lib/ad5940.c ****   const uint32_t sinc2osr_table[] = {22,44,89,178,267,533,640,667,800,889,1067,1333,0};
 1618              		.loc 1 482 12 is_stmt 0 view .LVU443
 1619 0008 4FF0000E 		mov	lr, #0
 1620 000c CDF85CE0 		str	lr, [sp, #92]
 483:ad5940lib/ad5940.c ****   const uint32_t sinc3osr_table[] = {5,4,2,0};
 1621              		.loc 1 483 3 is_stmt 1 view .LVU444
 483:ad5940lib/ad5940.c ****   const uint32_t sinc3osr_table[] = {5,4,2,0};
 1622              		.loc 1 483 18 is_stmt 0 view .LVU445
 1623 0010 724E     		ldr	r6, .L138
 1624 0012 0AAC     		add	r4, sp, #40
 1625 0014 3546     		mov	r5, r6
 1626 0016 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1627              	.LVL119:
 483:ad5940lib/ad5940.c ****   const uint32_t sinc3osr_table[] = {5,4,2,0};
 1628              		.loc 1 483 18 view .LVU446
 1629 0018 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1630 001a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1631 001c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1632 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1633 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1634 0022 2B68     		ldr	r3, [r5]
 1635 0024 2360     		str	r3, [r4]
 484:ad5940lib/ad5940.c **** 
 1636              		.loc 1 484 3 is_stmt 1 view .LVU447
 484:ad5940lib/ad5940.c **** 
 1637              		.loc 1 484 18 is_stmt 0 view .LVU448
 1638 0026 06AC     		add	r4, sp, #24
 1639 0028 06F13403 		add	r3, r6, #52
 1640 002c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1641 002e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 486:ad5940lib/ad5940.c ****   if(pFilterInfo == NULL) return;
 1642              		.loc 1 486 3 is_stmt 1 view .LVU449
 486:ad5940lib/ad5940.c ****   if(pFilterInfo == NULL) return;
 1643              		.loc 1 486 12 is_stmt 0 view .LVU450
 1644 0032 C7F800E0 		str	lr, [r7]
 487:ad5940lib/ad5940.c ****   if(pClocks == NULL) return;
 1645              		.loc 1 487 3 is_stmt 1 view .LVU451
 487:ad5940lib/ad5940.c ****   if(pClocks == NULL) return;
 1646              		.loc 1 487 5 is_stmt 0 view .LVU452
 1647 0036 BCF1000F 		cmp	ip, #0
 1648 003a 29D0     		beq	.L117
 1649 003c 6446     		mov	r4, ip
 488:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCSinc2Osr > ADCSINC2OSR_1333) return;
 1650              		.loc 1 488 3 is_stmt 1 view .LVU453
 488:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCSinc2Osr > ADCSINC2OSR_1333) return;
 1651              		.loc 1 488 5 is_stmt 0 view .LVU454
 1652 003e 3FB3     		cbz	r7, .L117
 489:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCSinc3Osr > 2)  return; /* 0: OSR5, 1:OSR4, 2:OSR2 */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 51


 1653              		.loc 1 489 3 is_stmt 1 view .LVU455
 489:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCSinc3Osr > 2)  return; /* 0: OSR5, 1:OSR4, 2:OSR2 */
 1654              		.loc 1 489 17 is_stmt 0 view .LVU456
 1655 0040 DCF80C30 		ldr	r3, [ip, #12]
 489:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCSinc3Osr > 2)  return; /* 0: OSR5, 1:OSR4, 2:OSR2 */
 1656              		.loc 1 489 5 view .LVU457
 1657 0044 0B2B     		cmp	r3, #11
 1658 0046 23D8     		bhi	.L117
 490:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCAvgNum > ADCAVGNUM_16) return; /* Average number index:0,1,2,3 */
 1659              		.loc 1 490 3 is_stmt 1 view .LVU458
 490:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCAvgNum > ADCAVGNUM_16) return; /* Average number index:0,1,2,3 */
 1660              		.loc 1 490 17 is_stmt 0 view .LVU459
 1661 0048 DCF80820 		ldr	r2, [ip, #8]
 490:ad5940lib/ad5940.c ****   if(pFilterInfo->ADCAvgNum > ADCAVGNUM_16) return; /* Average number index:0,1,2,3 */
 1662              		.loc 1 490 5 view .LVU460
 1663 004c 022A     		cmp	r2, #2
 1664 004e 1FD8     		bhi	.L117
 491:ad5940lib/ad5940.c ****   switch(pFilterInfo->DataType)
 1665              		.loc 1 491 3 is_stmt 1 view .LVU461
 491:ad5940lib/ad5940.c ****   switch(pFilterInfo->DataType)
 1666              		.loc 1 491 17 is_stmt 0 view .LVU462
 1667 0050 DCF81010 		ldr	r1, [ip, #16]
 491:ad5940lib/ad5940.c ****   switch(pFilterInfo->DataType)
 1668              		.loc 1 491 5 view .LVU463
 1669 0054 0329     		cmp	r1, #3
 1670 0056 1BD8     		bhi	.L117
 492:ad5940lib/ad5940.c ****   {
 1671              		.loc 1 492 3 is_stmt 1 view .LVU464
 492:ad5940lib/ad5940.c ****   {
 1672              		.loc 1 492 21 is_stmt 0 view .LVU465
 1673 0058 DCF80000 		ldr	r0, [ip]
 1674 005c 0428     		cmp	r0, #4
 1675 005e 15D8     		bhi	.L119
 1676 0060 DFE800F0 		tbb	[pc, r0]
 1677              	.L121:
 1678 0064 03       		.byte	(.L125-.L121)/2
 1679 0065 18       		.byte	(.L124-.L121)/2
 1680 0066 37       		.byte	(.L123-.L121)/2
 1681 0067 80       		.byte	(.L122-.L121)/2
 1682 0068 51       		.byte	(.L120-.L121)/2
 1683 0069 00       		.p2align 1
 1684              	.L125:
 495:ad5940lib/ad5940.c ****       break;
 1685              		.loc 1 495 7 is_stmt 1 view .LVU466
 495:ad5940lib/ad5940.c ****       break;
 1686              		.loc 1 495 39 is_stmt 0 view .LVU467
 1687 006a DCF80430 		ldr	r3, [ip, #4]
 495:ad5940lib/ad5940.c ****       break;
 1688              		.loc 1 495 27 view .LVU468
 1689 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1690 0072 9B00     		lsls	r3, r3, #2
 495:ad5940lib/ad5940.c ****       break;
 1691              		.loc 1 495 62 view .LVU469
 1692 0074 9CED077A 		vldr.32	s14, [ip, #28]
 495:ad5940lib/ad5940.c ****       break;
 1693              		.loc 1 495 50 view .LVU470
 1694 0078 07EE903A 		vmov	s15, r3	@ int
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 52


 1695 007c F8EE677A 		vcvt.f32.u32	s15, s15
 1696 0080 67EE877A 		vmul.f32	s15, s15, s14
 495:ad5940lib/ad5940.c ****       break;
 1697              		.loc 1 495 14 view .LVU471
 1698 0084 FCEEE77A 		vcvt.u32.f32	s15, s15
 495:ad5940lib/ad5940.c ****       break;
 1699              		.loc 1 495 12 view .LVU472
 1700 0088 CDED177A 		vstr.32	s15, [sp, #92]	@ int
 496:ad5940lib/ad5940.c ****     case DATATYPE_SINC3:
 1701              		.loc 1 496 7 is_stmt 1 view .LVU473
 1702              	.LVL120:
 1703              	.L119:
 561:ad5940lib/ad5940.c **** }
 1704              		.loc 1 561 3 discriminator 1 view .LVU474
 561:ad5940lib/ad5940.c **** }
 1705              		.loc 1 561 12 is_stmt 0 discriminator 1 view .LVU475
 1706 008c 179B     		ldr	r3, [sp, #92]
 1707 008e 3B60     		str	r3, [r7]
 1708              	.LVL121:
 1709              	.L117:
 562:ad5940lib/ad5940.c **** 
 1710              		.loc 1 562 1 view .LVU476
 1711 0090 19B0     		add	sp, sp, #100
 1712              	.LCFI35:
 1713              		.cfi_remember_state
 1714              		.cfi_def_cfa_offset 20
 1715              		@ sp needed
 1716 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 1717              	.LVL122:
 1718              	.L124:
 1719              	.LCFI36:
 1720              		.cfi_restore_state
 498:ad5940lib/ad5940.c ****       break;
 1721              		.loc 1 498 7 is_stmt 1 view .LVU477
 498:ad5940lib/ad5940.c ****       break;
 1722              		.loc 1 498 38 is_stmt 0 view .LVU478
 1723 0094 DCF80410 		ldr	r1, [ip, #4]
 498:ad5940lib/ad5940.c ****       break;
 1724              		.loc 1 498 67 view .LVU479
 1725 0098 18AB     		add	r3, sp, #96
 1726 009a 03EB8202 		add	r2, r3, r2, lsl #2
 1727 009e 52F8483C 		ldr	r3, [r2, #-72]
 498:ad5940lib/ad5940.c ****       break;
 1728              		.loc 1 498 96 view .LVU480
 1729 00a2 01EB8102 		add	r2, r1, r1, lsl #2
 1730 00a6 9200     		lsls	r2, r2, #2
 1731 00a8 2832     		adds	r2, r2, #40
 1732 00aa 03FB02F3 		mul	r3, r3, r2
 1733 00ae 1433     		adds	r3, r3, #20
 1734 00b0 07EE903A 		vmov	s15, r3	@ int
 498:ad5940lib/ad5940.c ****       break;
 1735              		.loc 1 498 111 view .LVU481
 1736 00b4 9CED077A 		vldr.32	s14, [ip, #28]
 498:ad5940lib/ad5940.c ****       break;
 1737              		.loc 1 498 99 view .LVU482
 1738 00b8 F8EE677A 		vcvt.f32.u32	s15, s15
 1739 00bc 67EE877A 		vmul.f32	s15, s15, s14
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 53


 498:ad5940lib/ad5940.c ****       break;
 1740              		.loc 1 498 129 view .LVU483
 1741 00c0 B6EE007A 		vmov.f32	s14, #5.0e-1
 1742 00c4 77EE877A 		vadd.f32	s15, s15, s14
 498:ad5940lib/ad5940.c ****       break;
 1743              		.loc 1 498 14 view .LVU484
 1744 00c8 FCEEE77A 		vcvt.u32.f32	s15, s15
 498:ad5940lib/ad5940.c ****       break;
 1745              		.loc 1 498 12 view .LVU485
 1746 00cc CDED177A 		vstr.32	s15, [sp, #92]	@ int
 499:ad5940lib/ad5940.c ****     case DATATYPE_SINC2: 
 1747              		.loc 1 499 7 is_stmt 1 view .LVU486
 1748 00d0 DCE7     		b	.L119
 1749              	.L123:
 501:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC3;
 1750              		.loc 1 501 7 view .LVU487
 501:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC3;
 1751              		.loc 1 501 26 is_stmt 0 view .LVU488
 1752 00d2 DCF80420 		ldr	r2, [ip, #4]
 501:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC3;
 1753              		.loc 1 501 55 view .LVU489
 1754 00d6 18A9     		add	r1, sp, #96
 1755 00d8 01EB8303 		add	r3, r1, r3, lsl #2
 1756 00dc 53F8383C 		ldr	r3, [r3, #-56]
 501:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC3;
 1757              		.loc 1 501 40 view .LVU490
 1758 00e0 02FB0333 		mla	r3, r2, r3, r3
 501:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC3;
 1759              		.loc 1 501 82 view .LVU491
 1760 00e4 0133     		adds	r3, r3, #1
 501:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC3;
 1761              		.loc 1 501 12 view .LVU492
 1762 00e6 1793     		str	r3, [sp, #92]
 502:ad5940lib/ad5940.c ****       pFilterInfo->DataCount = temp;
 1763              		.loc 1 502 7 is_stmt 1 view .LVU493
 502:ad5940lib/ad5940.c ****       pFilterInfo->DataCount = temp;
 1764              		.loc 1 502 29 is_stmt 0 view .LVU494
 1765 00e8 0122     		movs	r2, #1
 1766 00ea CCF80020 		str	r2, [ip]
 503:ad5940lib/ad5940.c ****       AD5940_ClksCalculate(pFilterInfo, &temp);
 1767              		.loc 1 503 7 is_stmt 1 view .LVU495
 503:ad5940lib/ad5940.c ****       AD5940_ClksCalculate(pFilterInfo, &temp);
 1768              		.loc 1 503 30 is_stmt 0 view .LVU496
 1769 00ee CCF80430 		str	r3, [ip, #4]
 504:ad5940lib/ad5940.c ****       pFilterInfo->DataType = DATATYPE_SINC2;
 1770              		.loc 1 504 7 is_stmt 1 view .LVU497
 1771 00f2 17A9     		add	r1, sp, #92
 1772 00f4 6046     		mov	r0, ip
 1773 00f6 FFF7FEFF 		bl	AD5940_ClksCalculate
 1774              	.LVL123:
 505:ad5940lib/ad5940.c ****       temp += 15;   /* Need extra 15 clocks for FIFO etc. Just to be safe. */
 1775              		.loc 1 505 7 view .LVU498
 505:ad5940lib/ad5940.c ****       temp += 15;   /* Need extra 15 clocks for FIFO etc. Just to be safe. */
 1776              		.loc 1 505 29 is_stmt 0 view .LVU499
 1777 00fa 0223     		movs	r3, #2
 1778 00fc 2360     		str	r3, [r4]
 506:ad5940lib/ad5940.c ****       break;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 54


 1779              		.loc 1 506 7 is_stmt 1 view .LVU500
 506:ad5940lib/ad5940.c ****       break;
 1780              		.loc 1 506 12 is_stmt 0 view .LVU501
 1781 00fe 179B     		ldr	r3, [sp, #92]
 1782 0100 0F33     		adds	r3, r3, #15
 1783 0102 1793     		str	r3, [sp, #92]
 507:ad5940lib/ad5940.c ****     case DATATYPE_NOTCH:
 1784              		.loc 1 507 7 is_stmt 1 view .LVU502
 1785 0104 C2E7     		b	.L119
 1786              	.L120:
 1787              	.LBB9:
 510:ad5940lib/ad5940.c ****       filter.ADCRate = pFilterInfo->ADCRate;
 1788              		.loc 1 510 7 view .LVU503
 511:ad5940lib/ad5940.c ****       filter.ADCSinc3Osr = pFilterInfo->ADCSinc3Osr;
 1789              		.loc 1 511 7 view .LVU504
 511:ad5940lib/ad5940.c ****       filter.ADCSinc3Osr = pFilterInfo->ADCSinc3Osr;
 1790              		.loc 1 511 35 is_stmt 0 view .LVU505
 1791 0106 9CF81830 		ldrb	r3, [ip, #24]	@ zero_extendqisi2
 511:ad5940lib/ad5940.c ****       filter.ADCSinc3Osr = pFilterInfo->ADCSinc3Osr;
 1792              		.loc 1 511 22 view .LVU506
 1793 010a 0493     		str	r3, [sp, #16]
 512:ad5940lib/ad5940.c ****       filter.ADCSinc2Osr = pFilterInfo->ADCSinc2Osr;
 1794              		.loc 1 512 7 is_stmt 1 view .LVU507
 512:ad5940lib/ad5940.c ****       filter.ADCSinc2Osr = pFilterInfo->ADCSinc2Osr;
 1795              		.loc 1 512 39 is_stmt 0 view .LVU508
 1796 010c DCF80830 		ldr	r3, [ip, #8]
 512:ad5940lib/ad5940.c ****       filter.ADCSinc2Osr = pFilterInfo->ADCSinc2Osr;
 1797              		.loc 1 512 26 view .LVU509
 1798 0110 0193     		str	r3, [sp, #4]
 513:ad5940lib/ad5940.c ****       uint8_t dl=0, dl_50, dl_60;
 1799              		.loc 1 513 7 is_stmt 1 view .LVU510
 513:ad5940lib/ad5940.c ****       uint8_t dl=0, dl_50, dl_60;
 1800              		.loc 1 513 39 is_stmt 0 view .LVU511
 1801 0112 DCF80C30 		ldr	r3, [ip, #12]
 513:ad5940lib/ad5940.c ****       uint8_t dl=0, dl_50, dl_60;
 1802              		.loc 1 513 26 view .LVU512
 1803 0116 0293     		str	r3, [sp, #8]
 514:ad5940lib/ad5940.c ****       if(AD5940_Notch50HzAvailable(&filter, &dl_50)){
 1804              		.loc 1 514 7 is_stmt 1 view .LVU513
 1805              	.LVL124:
 515:ad5940lib/ad5940.c ****         dl += dl_50 - 1;
 1806              		.loc 1 515 7 view .LVU514
 515:ad5940lib/ad5940.c ****         dl += dl_50 - 1;
 1807              		.loc 1 515 10 is_stmt 0 view .LVU515
 1808 0118 0DF10201 		add	r1, sp, #2
 1809 011c 01A8     		add	r0, sp, #4
 1810 011e FFF7FEFF 		bl	AD5940_Notch50HzAvailable
 1811              	.LVL125:
 515:ad5940lib/ad5940.c ****         dl += dl_50 - 1;
 1812              		.loc 1 515 9 view .LVU516
 1813 0122 0546     		mov	r5, r0
 1814 0124 18B1     		cbz	r0, .L126
 516:ad5940lib/ad5940.c ****       }
 1815              		.loc 1 516 9 is_stmt 1 view .LVU517
 516:ad5940lib/ad5940.c ****       }
 1816              		.loc 1 516 12 is_stmt 0 view .LVU518
 1817 0126 9DF80250 		ldrb	r5, [sp, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 55


 1818 012a 013D     		subs	r5, r5, #1
 1819 012c EDB2     		uxtb	r5, r5
 1820              	.LVL126:
 1821              	.L126:
 518:ad5940lib/ad5940.c ****         dl += dl_60 - 1;
 1822              		.loc 1 518 7 is_stmt 1 view .LVU519
 518:ad5940lib/ad5940.c ****         dl += dl_60 - 1;
 1823              		.loc 1 518 10 is_stmt 0 view .LVU520
 1824 012e 0DF10301 		add	r1, sp, #3
 1825 0132 01A8     		add	r0, sp, #4
 1826 0134 FFF7FEFF 		bl	AD5940_Notch60HzAvailable
 1827              	.LVL127:
 518:ad5940lib/ad5940.c ****         dl += dl_60 - 1;
 1828              		.loc 1 518 9 view .LVU521
 1829 0138 28B1     		cbz	r0, .L127
 519:ad5940lib/ad5940.c ****       }
 1830              		.loc 1 519 9 is_stmt 1 view .LVU522
 519:ad5940lib/ad5940.c ****       }
 1831              		.loc 1 519 12 is_stmt 0 view .LVU523
 1832 013a 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1833 013e 1D44     		add	r5, r5, r3
 1834              	.LVL128:
 519:ad5940lib/ad5940.c ****       }
 1835              		.loc 1 519 12 view .LVU524
 1836 0140 EDB2     		uxtb	r5, r5
 1837 0142 013D     		subs	r5, r5, #1
 1838 0144 EDB2     		uxtb	r5, r5
 1839              	.LVL129:
 1840              	.L127:
 521:ad5940lib/ad5940.c ****       pFilterInfo->DataCount += dl; //DL is the extra data input needed for filter to output first 
 1841              		.loc 1 521 7 is_stmt 1 view .LVU525
 521:ad5940lib/ad5940.c ****       pFilterInfo->DataCount += dl; //DL is the extra data input needed for filter to output first 
 1842              		.loc 1 521 29 is_stmt 0 view .LVU526
 1843 0146 0223     		movs	r3, #2
 1844 0148 2360     		str	r3, [r4]
 522:ad5940lib/ad5940.c ****       AD5940_ClksCalculate(pFilterInfo,&temp);
 1845              		.loc 1 522 7 is_stmt 1 view .LVU527
 522:ad5940lib/ad5940.c ****       AD5940_ClksCalculate(pFilterInfo,&temp);
 1846              		.loc 1 522 30 is_stmt 0 view .LVU528
 1847 014a 6368     		ldr	r3, [r4, #4]
 1848 014c 2B44     		add	r3, r3, r5
 1849 014e 6360     		str	r3, [r4, #4]
 523:ad5940lib/ad5940.c ****       //restore the filter info.
 1850              		.loc 1 523 7 is_stmt 1 view .LVU529
 1851 0150 17A9     		add	r1, sp, #92
 1852 0152 2046     		mov	r0, r4
 1853 0154 FFF7FEFF 		bl	AD5940_ClksCalculate
 1854              	.LVL130:
 525:ad5940lib/ad5940.c ****       pFilterInfo->DataCount -= dl;
 1855              		.loc 1 525 7 view .LVU530
 525:ad5940lib/ad5940.c ****       pFilterInfo->DataCount -= dl;
 1856              		.loc 1 525 29 is_stmt 0 view .LVU531
 1857 0158 0423     		movs	r3, #4
 1858 015a 2360     		str	r3, [r4]
 526:ad5940lib/ad5940.c ****       break;
 1859              		.loc 1 526 7 is_stmt 1 view .LVU532
 526:ad5940lib/ad5940.c ****       break;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 56


 1860              		.loc 1 526 30 is_stmt 0 view .LVU533
 1861 015c 6368     		ldr	r3, [r4, #4]
 1862 015e 5D1B     		subs	r5, r3, r5
 1863              	.LVL131:
 526:ad5940lib/ad5940.c ****       break;
 1864              		.loc 1 526 30 view .LVU534
 1865 0160 6560     		str	r5, [r4, #4]
 527:ad5940lib/ad5940.c ****     }
 1866              		.loc 1 527 7 is_stmt 1 view .LVU535
 1867 0162 93E7     		b	.L119
 1868              	.L122:
 527:ad5940lib/ad5940.c ****     }
 1869              		.loc 1 527 7 is_stmt 0 view .LVU536
 1870              	.LBE9:
 530:ad5940lib/ad5940.c ****       {
 1871              		.loc 1 530 7 is_stmt 1 view .LVU537
 530:ad5940lib/ad5940.c ****       {
 1872              		.loc 1 530 25 is_stmt 0 view .LVU538
 1873 0164 DCF81430 		ldr	r3, [ip, #20]
 1874 0168 032B     		cmp	r3, #3
 1875 016a 0AD8     		bhi	.L128
 1876 016c DFE803F0 		tbb	[pc, r3]
 1877              	.L130:
 1878 0170 17       		.byte	(.L133-.L130)/2
 1879 0171 0F       		.byte	(.L132-.L130)/2
 1880 0172 02       		.byte	(.L131-.L130)/2
 1881 0173 26       		.byte	(.L129-.L130)/2
 1882              		.p2align 1
 1883              	.L131:
 533:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1884              		.loc 1 533 11 is_stmt 1 view .LVU539
 533:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1885              		.loc 1 533 33 is_stmt 0 view .LVU540
 1886 0174 0023     		movs	r3, #0
 1887 0176 CCF80030 		str	r3, [ip]
 534:ad5940lib/ad5940.c ****           break;
 1888              		.loc 1 534 11 is_stmt 1 view .LVU541
 1889 017a 17A9     		add	r1, sp, #92
 1890 017c 6046     		mov	r0, ip
 1891 017e FFF7FEFF 		bl	AD5940_ClksCalculate
 1892              	.LVL132:
 535:ad5940lib/ad5940.c ****         case DFTSRC_SINC3:
 1893              		.loc 1 535 11 view .LVU542
 1894              	.L128:
 555:ad5940lib/ad5940.c ****       temp += 25; /* add margin */
 1895              		.loc 1 555 7 view .LVU543
 555:ad5940lib/ad5940.c ****       temp += 25; /* add margin */
 1896              		.loc 1 555 29 is_stmt 0 view .LVU544
 1897 0182 0323     		movs	r3, #3
 1898 0184 2360     		str	r3, [r4]
 556:ad5940lib/ad5940.c ****       break;
 1899              		.loc 1 556 7 is_stmt 1 view .LVU545
 556:ad5940lib/ad5940.c ****       break;
 1900              		.loc 1 556 12 is_stmt 0 view .LVU546
 1901 0186 179B     		ldr	r3, [sp, #92]
 1902 0188 1933     		adds	r3, r3, #25
 1903 018a 1793     		str	r3, [sp, #92]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 57


 557:ad5940lib/ad5940.c ****     default:
 1904              		.loc 1 557 7 is_stmt 1 view .LVU547
 1905 018c 7EE7     		b	.L119
 1906              	.L132:
 537:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1907              		.loc 1 537 11 view .LVU548
 537:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1908              		.loc 1 537 33 is_stmt 0 view .LVU549
 1909 018e 0123     		movs	r3, #1
 1910 0190 CCF80030 		str	r3, [ip]
 538:ad5940lib/ad5940.c ****           break;
 1911              		.loc 1 538 11 is_stmt 1 view .LVU550
 1912 0194 17A9     		add	r1, sp, #92
 1913 0196 6046     		mov	r0, ip
 1914 0198 FFF7FEFF 		bl	AD5940_ClksCalculate
 1915              	.LVL133:
 539:ad5940lib/ad5940.c ****         case DFTSRC_SINC2NOTCH:
 1916              		.loc 1 539 11 view .LVU551
 1917 019c F1E7     		b	.L128
 1918              	.L133:
 541:ad5940lib/ad5940.c ****             pFilterInfo->DataType = DATATYPE_SINC2;
 1919              		.loc 1 541 11 view .LVU552
 541:ad5940lib/ad5940.c ****             pFilterInfo->DataType = DATATYPE_SINC2;
 1920              		.loc 1 541 25 is_stmt 0 view .LVU553
 1921 019e 9CF81930 		ldrb	r3, [ip, #25]	@ zero_extendqisi2
 541:ad5940lib/ad5940.c ****             pFilterInfo->DataType = DATATYPE_SINC2;
 1922              		.loc 1 541 13 view .LVU554
 1923 01a2 3BB1     		cbz	r3, .L134
 542:ad5940lib/ad5940.c ****           else
 1924              		.loc 1 542 13 is_stmt 1 view .LVU555
 542:ad5940lib/ad5940.c ****           else
 1925              		.loc 1 542 35 is_stmt 0 view .LVU556
 1926 01a4 0223     		movs	r3, #2
 1927 01a6 CCF80030 		str	r3, [ip]
 1928              	.L135:
 545:ad5940lib/ad5940.c ****           break;
 1929              		.loc 1 545 11 is_stmt 1 view .LVU557
 1930 01aa 17A9     		add	r1, sp, #92
 1931 01ac 2046     		mov	r0, r4
 1932 01ae FFF7FEFF 		bl	AD5940_ClksCalculate
 1933              	.LVL134:
 546:ad5940lib/ad5940.c ****         case DFTSRC_AVG:
 1934              		.loc 1 546 11 view .LVU558
 1935 01b2 E6E7     		b	.L128
 1936              	.L134:
 544:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1937              		.loc 1 544 13 view .LVU559
 544:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1938              		.loc 1 544 35 is_stmt 0 view .LVU560
 1939 01b4 0423     		movs	r3, #4
 1940 01b6 CCF80030 		str	r3, [ip]
 1941 01ba F6E7     		b	.L135
 1942              	.L129:
 548:ad5940lib/ad5940.c ****           pFilterInfo->DataCount *= 1L<<(pFilterInfo->ADCAvgNum+1); /* 0: average2, 1: average4, 2:
 1943              		.loc 1 548 11 is_stmt 1 view .LVU561
 548:ad5940lib/ad5940.c ****           pFilterInfo->DataCount *= 1L<<(pFilterInfo->ADCAvgNum+1); /* 0: average2, 1: average4, 2:
 1944              		.loc 1 548 33 is_stmt 0 view .LVU562
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 58


 1945 01bc 0123     		movs	r3, #1
 1946 01be CCF80030 		str	r3, [ip]
 549:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1947              		.loc 1 549 11 is_stmt 1 view .LVU563
 549:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1948              		.loc 1 549 64 is_stmt 0 view .LVU564
 1949 01c2 1944     		add	r1, r1, r3
 549:ad5940lib/ad5940.c ****           AD5940_ClksCalculate(pFilterInfo, &temp);
 1950              		.loc 1 549 34 view .LVU565
 1951 01c4 DCF80430 		ldr	r3, [ip, #4]
 1952 01c8 03FA01F1 		lsl	r1, r3, r1
 1953 01cc CCF80410 		str	r1, [ip, #4]
 550:ad5940lib/ad5940.c ****           break;
 1954              		.loc 1 550 11 is_stmt 1 view .LVU566
 1955 01d0 17A9     		add	r1, sp, #92
 1956 01d2 6046     		mov	r0, ip
 1957 01d4 FFF7FEFF 		bl	AD5940_ClksCalculate
 1958              	.LVL135:
 551:ad5940lib/ad5940.c ****         default:
 1959              		.loc 1 551 11 view .LVU567
 1960 01d8 D3E7     		b	.L128
 1961              	.L139:
 1962 01da 00BF     		.align	2
 1963              	.L138:
 1964 01dc 00000000 		.word	.LANCHOR0
 1965              		.cfi_endproc
 1966              	.LFE16:
 1968              		.section	.text.AD5940_SweepNext,"ax",%progbits
 1969              		.align	1
 1970              		.global	AD5940_SweepNext
 1971              		.syntax unified
 1972              		.thumb
 1973              		.thumb_func
 1974              		.fpu fpv5-d16
 1976              	AD5940_SweepNext:
 1977              	.LVL136:
 1978              	.LFB17:
 570:ad5940lib/ad5940.c ****    float frequency;
 1979              		.loc 1 570 1 view -0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 0, uses_anonymous_args = 0
 570:ad5940lib/ad5940.c ****    float frequency;
 1983              		.loc 1 570 1 is_stmt 0 view .LVU569
 1984 0000 70B5     		push	{r4, r5, r6, lr}
 1985              	.LCFI37:
 1986              		.cfi_def_cfa_offset 16
 1987              		.cfi_offset 4, -16
 1988              		.cfi_offset 5, -12
 1989              		.cfi_offset 6, -8
 1990              		.cfi_offset 14, -4
 1991 0002 2DED028B 		vpush.64	{d8}
 1992              	.LCFI38:
 1993              		.cfi_def_cfa_offset 24
 1994              		.cfi_offset 80, -24
 1995              		.cfi_offset 81, -20
 1996 0006 0446     		mov	r4, r0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 59


 1997 0008 0D46     		mov	r5, r1
 571:ad5940lib/ad5940.c **** 
 1998              		.loc 1 571 4 is_stmt 1 view .LVU570
 573:ad5940lib/ad5940.c ****    {
 1999              		.loc 1 573 4 view .LVU571
 573:ad5940lib/ad5940.c ****    {
 2000              		.loc 1 573 16 is_stmt 0 view .LVU572
 2001 000a 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 573:ad5940lib/ad5940.c ****    {
 2002              		.loc 1 573 6 view .LVU573
 2003 000c 002B     		cmp	r3, #0
 2004 000e 5DD0     		beq	.L141
 575:ad5940lib/ad5940.c ****       {
 2005              		.loc 1 575 7 is_stmt 1 view .LVU574
 575:ad5940lib/ad5940.c ****       {
 2006              		.loc 1 575 19 is_stmt 0 view .LVU575
 2007 0010 90ED017A 		vldr.32	s14, [r0, #4]
 575:ad5940lib/ad5940.c ****       {
 2008              		.loc 1 575 41 view .LVU576
 2009 0014 D0ED027A 		vldr.32	s15, [r0, #8]
 575:ad5940lib/ad5940.c ****       {
 2010              		.loc 1 575 9 view .LVU577
 2011 0018 B4EEE77A 		vcmpe.f32	s14, s15
 2012 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2013 0020 2CD5     		bpl	.L153
 577:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2014              		.loc 1 577 10 is_stmt 1 view .LVU578
 577:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2015              		.loc 1 577 24 is_stmt 0 view .LVU579
 2016 0022 4369     		ldr	r3, [r0, #20]
 577:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2017              		.loc 1 577 13 view .LVU580
 2018 0024 0133     		adds	r3, r3, #1
 577:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2019              		.loc 1 577 12 view .LVU581
 2020 0026 4361     		str	r3, [r0, #20]
 577:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2021              		.loc 1 577 49 view .LVU582
 2022 0028 C268     		ldr	r2, [r0, #12]
 577:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2023              		.loc 1 577 12 view .LVU583
 2024 002a 9342     		cmp	r3, r2
 2025 002c 23D0     		beq	.L156
 2026              	.L144:
 579:ad5940lib/ad5940.c ****       }
 2027              		.loc 1 579 10 is_stmt 1 view .LVU584
 579:ad5940lib/ad5940.c ****       }
 2028              		.loc 1 579 31 is_stmt 0 view .LVU585
 2029 002e B7EEC78A 		vcvt.f64.f32	d8, s14
 579:ad5940lib/ad5940.c ****       }
 2030              		.loc 1 579 60 view .LVU586
 2031 0032 6669     		ldr	r6, [r4, #20]
 579:ad5940lib/ad5940.c ****       }
 2032              		.loc 1 579 99 view .LVU587
 2033 0034 87EE870A 		vdiv.f32	s0, s15, s14
 579:ad5940lib/ad5940.c ****       }
 2034              		.loc 1 579 73 view .LVU588
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 60


 2035 0038 B7EEC00A 		vcvt.f64.f32	d0, s0
 2036 003c FFF7FEFF 		bl	log10
 2037              	.LVL137:
 579:ad5940lib/ad5940.c ****       }
 2038              		.loc 1 579 72 view .LVU589
 2039 0040 07EE906A 		vmov	s15, r6	@ int
 2040 0044 B8EE671B 		vcvt.f64.u32	d1, s15
 2041 0048 21EE001B 		vmul.f64	d1, d1, d0
 579:ad5940lib/ad5940.c ****       }
 2042              		.loc 1 579 133 view .LVU590
 2043 004c E368     		ldr	r3, [r4, #12]
 579:ad5940lib/ad5940.c ****       }
 2044              		.loc 1 579 146 view .LVU591
 2045 004e 013B     		subs	r3, r3, #1
 579:ad5940lib/ad5940.c ****       }
 2046              		.loc 1 579 44 view .LVU592
 2047 0050 07EE903A 		vmov	s15, r3	@ int
 2048 0054 B8EE677B 		vcvt.f64.u32	d7, s15
 2049 0058 81EE071B 		vdiv.f64	d1, d1, d7
 2050 005c B2EE040B 		vmov.f64	d0, #1.0e+1
 2051 0060 FFF7FEFF 		bl	pow
 2052              	.LVL138:
 579:ad5940lib/ad5940.c ****       }
 2053              		.loc 1 579 43 view .LVU593
 2054 0064 28EE008B 		vmul.f64	d8, d8, d0
 579:ad5940lib/ad5940.c ****       }
 2055              		.loc 1 579 20 view .LVU594
 2056 0068 B7EEC88B 		vcvt.f32.f64	s16, d8
 2057              	.LVL139:
 2058              	.L145:
 607:ad5940lib/ad5940.c **** }
 2059              		.loc 1 607 4 is_stmt 1 view .LVU595
 607:ad5940lib/ad5940.c **** }
 2060              		.loc 1 607 15 is_stmt 0 view .LVU596
 2061 006c 85ED008A 		vstr.32	s16, [r5]
 608:ad5940lib/ad5940.c **** 
 2062              		.loc 1 608 1 view .LVU597
 2063 0070 BDEC028B 		vldm	sp!, {d8}
 2064              	.LCFI39:
 2065              		.cfi_remember_state
 2066              		.cfi_restore 80
 2067              		.cfi_restore 81
 2068              		.cfi_def_cfa_offset 16
 2069              	.LVL140:
 608:ad5940lib/ad5940.c **** 
 2070              		.loc 1 608 1 view .LVU598
 2071 0074 70BD     		pop	{r4, r5, r6, pc}
 2072              	.LVL141:
 2073              	.L156:
 2074              	.LCFI40:
 2075              		.cfi_restore_state
 578:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStart*pow(10,pSweepCfg->SweepIndex*log10(pSweepCfg->SweepStop/
 2076              		.loc 1 578 13 is_stmt 1 view .LVU599
 578:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStart*pow(10,pSweepCfg->SweepIndex*log10(pSweepCfg->SweepStop/
 2077              		.loc 1 578 35 is_stmt 0 view .LVU600
 2078 0076 0023     		movs	r3, #0
 2079 0078 4361     		str	r3, [r0, #20]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 61


 2080 007a D8E7     		b	.L144
 2081              	.L153:
 583:ad5940lib/ad5940.c ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 2082              		.loc 1 583 10 is_stmt 1 view .LVU601
 583:ad5940lib/ad5940.c ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 2083              		.loc 1 583 19 is_stmt 0 view .LVU602
 2084 007c 4369     		ldr	r3, [r0, #20]
 583:ad5940lib/ad5940.c ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 2085              		.loc 1 583 32 view .LVU603
 2086 007e 013B     		subs	r3, r3, #1
 2087 0080 4361     		str	r3, [r0, #20]
 584:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 2088              		.loc 1 584 10 is_stmt 1 view .LVU604
 584:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 2089              		.loc 1 584 47 is_stmt 0 view .LVU605
 2090 0082 C268     		ldr	r2, [r0, #12]
 584:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 2091              		.loc 1 584 12 view .LVU606
 2092 0084 9342     		cmp	r3, r2
 2093 0086 01D3     		bcc	.L146
 585:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStop*pow(10,pSweepCfg->SweepIndex*
 2094              		.loc 1 585 13 is_stmt 1 view .LVU607
 585:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStop*pow(10,pSweepCfg->SweepIndex*
 2095              		.loc 1 585 59 is_stmt 0 view .LVU608
 2096 0088 013A     		subs	r2, r2, #1
 585:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStop*pow(10,pSweepCfg->SweepIndex*
 2097              		.loc 1 585 35 view .LVU609
 2098 008a 4261     		str	r2, [r0, #20]
 2099              	.L146:
 586:ad5940lib/ad5940.c ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
 2100              		.loc 1 586 10 is_stmt 1 view .LVU610
 586:ad5940lib/ad5940.c ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
 2101              		.loc 1 586 31 is_stmt 0 view .LVU611
 2102 008c B7EEE78A 		vcvt.f64.f32	d8, s15
 586:ad5940lib/ad5940.c ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
 2103              		.loc 1 586 59 view .LVU612
 2104 0090 6669     		ldr	r6, [r4, #20]
 587:ad5940lib/ad5940.c ****       }
 2105              		.loc 1 587 66 view .LVU613
 2106 0092 87EE270A 		vdiv.f32	s0, s14, s15
 587:ad5940lib/ad5940.c ****       }
 2107              		.loc 1 587 39 view .LVU614
 2108 0096 B7EEC00A 		vcvt.f64.f32	d0, s0
 2109 009a FFF7FEFF 		bl	log10
 2110              	.LVL142:
 587:ad5940lib/ad5940.c ****       }
 2111              		.loc 1 587 99 view .LVU615
 2112 009e E368     		ldr	r3, [r4, #12]
 587:ad5940lib/ad5940.c ****       }
 2113              		.loc 1 587 112 view .LVU616
 2114 00a0 013B     		subs	r3, r3, #1
 587:ad5940lib/ad5940.c ****       }
 2115              		.loc 1 587 88 view .LVU617
 2116 00a2 07EE903A 		vmov	s15, r3	@ int
 2117 00a6 B8EE677B 		vcvt.f64.u32	d7, s15
 2118 00aa 80EE071B 		vdiv.f64	d1, d0, d7
 586:ad5940lib/ad5940.c ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 62


 2119              		.loc 1 586 43 view .LVU618
 2120 00ae 07EE906A 		vmov	s15, r6	@ int
 2121 00b2 B8EE677B 		vcvt.f64.u32	d7, s15
 2122 00b6 27EE011B 		vmul.f64	d1, d7, d1
 2123 00ba B2EE040B 		vmov.f64	d0, #1.0e+1
 2124 00be FFF7FEFF 		bl	pow
 2125              	.LVL143:
 586:ad5940lib/ad5940.c ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
 2126              		.loc 1 586 42 view .LVU619
 2127 00c2 28EE008B 		vmul.f64	d8, d8, d0
 586:ad5940lib/ad5940.c ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
 2128              		.loc 1 586 20 view .LVU620
 2129 00c6 B7EEC88B 		vcvt.f32.f64	s16, d8
 2130              	.LVL144:
 586:ad5940lib/ad5940.c ****                                      (log10(pSweepCfg->SweepStart/pSweepCfg->SweepStop)/(pSweepCfg-
 2131              		.loc 1 586 20 view .LVU621
 2132 00ca CFE7     		b	.L145
 2133              	.LVL145:
 2134              	.L141:
 592:ad5940lib/ad5940.c ****       {
 2135              		.loc 1 592 7 is_stmt 1 view .LVU622
 592:ad5940lib/ad5940.c ****       {
 2136              		.loc 1 592 19 is_stmt 0 view .LVU623
 2137 00cc D0ED017A 		vldr.32	s15, [r0, #4]
 592:ad5940lib/ad5940.c ****       {
 2138              		.loc 1 592 41 view .LVU624
 2139 00d0 90ED027A 		vldr.32	s14, [r0, #8]
 592:ad5940lib/ad5940.c ****       {
 2140              		.loc 1 592 9 view .LVU625
 2141 00d4 F4EEC77A 		vcmpe.f32	s15, s14
 2142 00d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2143 00dc 20D5     		bpl	.L154
 594:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2144              		.loc 1 594 10 is_stmt 1 view .LVU626
 594:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2145              		.loc 1 594 24 is_stmt 0 view .LVU627
 2146 00de 4269     		ldr	r2, [r0, #20]
 594:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2147              		.loc 1 594 13 view .LVU628
 2148 00e0 0132     		adds	r2, r2, #1
 594:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2149              		.loc 1 594 12 view .LVU629
 2150 00e2 4261     		str	r2, [r0, #20]
 594:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2151              		.loc 1 594 49 view .LVU630
 2152 00e4 C368     		ldr	r3, [r0, #12]
 594:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = 0;
 2153              		.loc 1 594 12 view .LVU631
 2154 00e6 9A42     		cmp	r2, r3
 2155 00e8 17D0     		beq	.L157
 2156              	.L149:
 596:ad5940lib/ad5940.c ****       }
 2157              		.loc 1 596 10 is_stmt 1 view .LVU632
 596:ad5940lib/ad5940.c ****       }
 2158              		.loc 1 596 31 is_stmt 0 view .LVU633
 2159 00ea B7EEE78A 		vcvt.f64.f32	d8, s15
 596:ad5940lib/ad5940.c ****       }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 63


 2160              		.loc 1 596 55 view .LVU634
 2161 00ee 94ED056A 		vldr.32	s12, [r4, #20]	@ int
 596:ad5940lib/ad5940.c ****       }
 2162              		.loc 1 596 97 view .LVU635
 2163 00f2 77EE677A 		vsub.f32	s15, s14, s15
 596:ad5940lib/ad5940.c ****       }
 2164              		.loc 1 596 68 view .LVU636
 2165 00f6 B7EEE77A 		vcvt.f64.f32	d7, s15
 596:ad5940lib/ad5940.c ****       }
 2166              		.loc 1 596 67 view .LVU637
 2167 00fa B8EE466B 		vcvt.f64.u32	d6, s12
 2168 00fe 26EE077B 		vmul.f64	d7, d6, d7
 596:ad5940lib/ad5940.c ****       }
 2169              		.loc 1 596 144 view .LVU638
 2170 0102 013B     		subs	r3, r3, #1
 596:ad5940lib/ad5940.c ****       }
 2171              		.loc 1 596 120 view .LVU639
 2172 0104 06EE903A 		vmov	s13, r3	@ int
 2173 0108 B8EE666B 		vcvt.f64.u32	d6, s13
 2174 010c 87EE065B 		vdiv.f64	d5, d7, d6
 596:ad5940lib/ad5940.c ****       }
 2175              		.loc 1 596 44 view .LVU640
 2176 0110 38EE058B 		vadd.f64	d8, d8, d5
 596:ad5940lib/ad5940.c ****       }
 2177              		.loc 1 596 20 view .LVU641
 2178 0114 B7EEC88B 		vcvt.f32.f64	s16, d8
 2179              	.LVL146:
 596:ad5940lib/ad5940.c ****       }
 2180              		.loc 1 596 20 view .LVU642
 2181 0118 A8E7     		b	.L145
 2182              	.LVL147:
 2183              	.L157:
 595:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStart + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStop-pS
 2184              		.loc 1 595 13 is_stmt 1 view .LVU643
 595:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStart + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStop-pS
 2185              		.loc 1 595 35 is_stmt 0 view .LVU644
 2186 011a 0022     		movs	r2, #0
 2187 011c 4261     		str	r2, [r0, #20]
 2188 011e E4E7     		b	.L149
 2189              	.L154:
 600:ad5940lib/ad5940.c ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 2190              		.loc 1 600 10 is_stmt 1 view .LVU645
 600:ad5940lib/ad5940.c ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 2191              		.loc 1 600 19 is_stmt 0 view .LVU646
 2192 0120 4269     		ldr	r2, [r0, #20]
 600:ad5940lib/ad5940.c ****          if(pSweepCfg->SweepIndex >= pSweepCfg->SweepPoints)
 2193              		.loc 1 600 32 view .LVU647
 2194 0122 013A     		subs	r2, r2, #1
 2195 0124 4261     		str	r2, [r0, #20]
 601:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 2196              		.loc 1 601 10 is_stmt 1 view .LVU648
 601:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 2197              		.loc 1 601 47 is_stmt 0 view .LVU649
 2198 0126 C368     		ldr	r3, [r0, #12]
 601:ad5940lib/ad5940.c ****             pSweepCfg->SweepIndex = pSweepCfg->SweepPoints-1;
 2199              		.loc 1 601 12 view .LVU650
 2200 0128 9A42     		cmp	r2, r3
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 64


 2201 012a 01D3     		bcc	.L150
 602:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStop + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStart - 
 2202              		.loc 1 602 13 is_stmt 1 view .LVU651
 602:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStop + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStart - 
 2203              		.loc 1 602 59 is_stmt 0 view .LVU652
 2204 012c 5A1E     		subs	r2, r3, #1
 602:ad5940lib/ad5940.c ****          frequency = pSweepCfg->SweepStop + pSweepCfg->SweepIndex*(double)(pSweepCfg->SweepStart - 
 2205              		.loc 1 602 35 view .LVU653
 2206 012e 4261     		str	r2, [r0, #20]
 2207              	.L150:
 603:ad5940lib/ad5940.c ****       }
 2208              		.loc 1 603 10 is_stmt 1 view .LVU654
 603:ad5940lib/ad5940.c ****       }
 2209              		.loc 1 603 31 is_stmt 0 view .LVU655
 2210 0130 B7EEC78A 		vcvt.f64.f32	d8, s14
 603:ad5940lib/ad5940.c ****       }
 2211              		.loc 1 603 54 view .LVU656
 2212 0134 94ED056A 		vldr.32	s12, [r4, #20]	@ int
 603:ad5940lib/ad5940.c ****       }
 2213              		.loc 1 603 98 view .LVU657
 2214 0138 77EEC77A 		vsub.f32	s15, s15, s14
 603:ad5940lib/ad5940.c ****       }
 2215              		.loc 1 603 67 view .LVU658
 2216 013c B7EEE77A 		vcvt.f64.f32	d7, s15
 603:ad5940lib/ad5940.c ****       }
 2217              		.loc 1 603 66 view .LVU659
 2218 0140 B8EE466B 		vcvt.f64.u32	d6, s12
 2219 0144 26EE077B 		vmul.f64	d7, d6, d7
 603:ad5940lib/ad5940.c ****       }
 2220              		.loc 1 603 145 view .LVU660
 2221 0148 013B     		subs	r3, r3, #1
 603:ad5940lib/ad5940.c ****       }
 2222              		.loc 1 603 121 view .LVU661
 2223 014a 06EE903A 		vmov	s13, r3	@ int
 2224 014e B8EE666B 		vcvt.f64.u32	d6, s13
 2225 0152 87EE065B 		vdiv.f64	d5, d7, d6
 603:ad5940lib/ad5940.c ****       }
 2226              		.loc 1 603 43 view .LVU662
 2227 0156 38EE058B 		vadd.f64	d8, d8, d5
 603:ad5940lib/ad5940.c ****       }
 2228              		.loc 1 603 20 view .LVU663
 2229 015a B7EEC88B 		vcvt.f32.f64	s16, d8
 2230              	.LVL148:
 603:ad5940lib/ad5940.c ****       }
 2231              		.loc 1 603 20 view .LVU664
 2232 015e 85E7     		b	.L145
 2233              		.cfi_endproc
 2234              	.LFE17:
 2236              		.section	.text.AD5940_StructInit,"ax",%progbits
 2237              		.align	1
 2238              		.global	AD5940_StructInit
 2239              		.syntax unified
 2240              		.thumb
 2241              		.thumb_func
 2242              		.fpu fpv5-d16
 2244              	AD5940_StructInit:
 2245              	.LVL149:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 65


 2246              	.LFB18:
 617:ad5940lib/ad5940.c ****   memset(pStruct, 0, StructSize);
 2247              		.loc 1 617 1 is_stmt 1 view -0
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
 617:ad5940lib/ad5940.c ****   memset(pStruct, 0, StructSize);
 2251              		.loc 1 617 1 is_stmt 0 view .LVU666
 2252 0000 08B5     		push	{r3, lr}
 2253              	.LCFI41:
 2254              		.cfi_def_cfa_offset 8
 2255              		.cfi_offset 3, -8
 2256              		.cfi_offset 14, -4
 2257 0002 0A46     		mov	r2, r1
 618:ad5940lib/ad5940.c **** }
 2258              		.loc 1 618 3 is_stmt 1 view .LVU667
 2259 0004 0021     		movs	r1, #0
 2260              	.LVL150:
 618:ad5940lib/ad5940.c **** }
 2261              		.loc 1 618 3 is_stmt 0 view .LVU668
 2262 0006 FFF7FEFF 		bl	memset
 2263              	.LVL151:
 619:ad5940lib/ad5940.c **** 
 2264              		.loc 1 619 1 view .LVU669
 2265 000a 08BD     		pop	{r3, pc}
 2266              		.cfi_endproc
 2267              	.LFE18:
 2269              		.section	.text.AD5940_ADCCode2Volt,"ax",%progbits
 2270              		.align	1
 2271              		.global	AD5940_ADCCode2Volt
 2272              		.syntax unified
 2273              		.thumb
 2274              		.thumb_func
 2275              		.fpu fpv5-d16
 2277              	AD5940_ADCCode2Volt:
 2278              	.LVL152:
 2279              	.LFB19:
 629:ad5940lib/ad5940.c ****   float kFactor = 1.835/1.82;
 2280              		.loc 1 629 1 is_stmt 1 view -0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 0
 2283              		@ frame_needed = 0, uses_anonymous_args = 0
 2284              		@ link register save eliminated.
 630:ad5940lib/ad5940.c ****   float fVolt = 0.0;
 2285              		.loc 1 630 3 view .LVU671
 631:ad5940lib/ad5940.c ****   float tmp = 0;
 2286              		.loc 1 631 3 view .LVU672
 632:ad5940lib/ad5940.c ****   tmp = (int32_t)code - 32768;
 2287              		.loc 1 632 3 view .LVU673
 633:ad5940lib/ad5940.c ****   switch(ADCPga)
 2288              		.loc 1 633 3 view .LVU674
 633:ad5940lib/ad5940.c ****   switch(ADCPga)
 2289              		.loc 1 633 23 is_stmt 0 view .LVU675
 2290 0000 A0F50040 		sub	r0, r0, #32768
 2291              	.LVL153:
 633:ad5940lib/ad5940.c ****   switch(ADCPga)
 2292              		.loc 1 633 7 view .LVU676
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 66


 2293 0004 07EE900A 		vmov	s15, r0	@ int
 2294 0008 F8EEE77A 		vcvt.f32.s32	s15, s15
 2295              	.LVL154:
 634:ad5940lib/ad5940.c ****   {
 2296              		.loc 1 634 3 is_stmt 1 view .LVU677
 2297 000c 0139     		subs	r1, r1, #1
 2298              	.LVL155:
 634:ad5940lib/ad5940.c ****   {
 2299              		.loc 1 634 3 is_stmt 0 view .LVU678
 2300 000e 0329     		cmp	r1, #3
 2301 0010 07D8     		bhi	.L161
 2302 0012 DFE801F0 		tbb	[pc, r1]
 2303              	.L163:
 2304 0016 02       		.byte	(.L166-.L163)/2
 2305 0017 11       		.byte	(.L165-.L163)/2
 2306 0018 16       		.byte	(.L164-.L163)/2
 2307 0019 1B       		.byte	(.L162-.L163)/2
 2308              		.p2align 1
 2309              	.L166:
 639:ad5940lib/ad5940.c ****     break;
 2310              		.loc 1 639 5 is_stmt 1 view .LVU679
 639:ad5940lib/ad5940.c ****     break;
 2311              		.loc 1 639 9 is_stmt 0 view .LVU680
 2312 001a B7EE087A 		vmov.f32	s14, #1.5e+0
 2313 001e C7EE877A 		vdiv.f32	s15, s15, s14
 2314              	.LVL156:
 640:ad5940lib/ad5940.c ****   case ADCPGA_2:
 2315              		.loc 1 640 5 is_stmt 1 view .LVU681
 2316              	.L161:
 652:ad5940lib/ad5940.c ****   return fVolt;
 2317              		.loc 1 652 3 view .LVU682
 652:ad5940lib/ad5940.c ****   return fVolt;
 2318              		.loc 1 652 14 is_stmt 0 view .LVU683
 2319 0022 67EE807A 		vmul.f32	s15, s15, s0
 2320              	.LVL157:
 652:ad5940lib/ad5940.c ****   return fVolt;
 2321              		.loc 1 652 23 view .LVU684
 2322 0026 9FED0C0A 		vldr.32	s0, .L167
 2323              	.LVL158:
 652:ad5940lib/ad5940.c ****   return fVolt;
 2324              		.loc 1 652 23 view .LVU685
 2325 002a 67EE807A 		vmul.f32	s15, s15, s0
 2326              	.LVL159:
 653:ad5940lib/ad5940.c **** }
 2327              		.loc 1 653 3 is_stmt 1 view .LVU686
 654:ad5940lib/ad5940.c **** 
 2328              		.loc 1 654 1 is_stmt 0 view .LVU687
 2329 002e 9FED0B0A 		vldr.32	s0, .L167+4
 2330 0032 27EE800A 		vmul.f32	s0, s15, s0
 2331              	.LVL160:
 654:ad5940lib/ad5940.c **** 
 2332              		.loc 1 654 1 view .LVU688
 2333 0036 7047     		bx	lr
 2334              	.LVL161:
 2335              	.L165:
 642:ad5940lib/ad5940.c ****     break;
 2336              		.loc 1 642 5 is_stmt 1 view .LVU689
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 67


 642:ad5940lib/ad5940.c ****     break;
 2337              		.loc 1 642 9 is_stmt 0 view .LVU690
 2338 0038 B6EE007A 		vmov.f32	s14, #5.0e-1
 2339 003c 67EE877A 		vmul.f32	s15, s15, s14
 2340              	.LVL162:
 643:ad5940lib/ad5940.c ****   case ADCPGA_4:
 2341              		.loc 1 643 5 is_stmt 1 view .LVU691
 2342 0040 EFE7     		b	.L161
 2343              	.L164:
 645:ad5940lib/ad5940.c ****     break;
 2344              		.loc 1 645 5 view .LVU692
 645:ad5940lib/ad5940.c ****     break;
 2345              		.loc 1 645 9 is_stmt 0 view .LVU693
 2346 0042 B5EE007A 		vmov.f32	s14, #2.5e-1
 2347 0046 67EE877A 		vmul.f32	s15, s15, s14
 2348              	.LVL163:
 646:ad5940lib/ad5940.c ****   case ADCPGA_9:
 2349              		.loc 1 646 5 is_stmt 1 view .LVU694
 2350 004a EAE7     		b	.L161
 2351              	.L162:
 648:ad5940lib/ad5940.c ****     break;
 2352              		.loc 1 648 5 view .LVU695
 648:ad5940lib/ad5940.c ****     break;
 2353              		.loc 1 648 9 is_stmt 0 view .LVU696
 2354 004c B2EE027A 		vmov.f32	s14, #9.0e+0
 2355 0050 C7EE877A 		vdiv.f32	s15, s15, s14
 2356              	.LVL164:
 649:ad5940lib/ad5940.c ****   default:break;
 2357              		.loc 1 649 5 is_stmt 1 view .LVU697
 2358 0054 E5E7     		b	.L161
 2359              	.L168:
 2360 0056 00BF     		.align	2
 2361              	.L167:
 2362 0058 00000038 		.word	939524096
 2363 005c 110E813F 		.word	1065422353
 2364              		.cfi_endproc
 2365              	.LFE19:
 2367              		.section	.text.AD5940_ComplexDivFloat,"ax",%progbits
 2368              		.align	1
 2369              		.global	AD5940_ComplexDivFloat
 2370              		.syntax unified
 2371              		.thumb
 2372              		.thumb_func
 2373              		.fpu fpv5-d16
 2375              	AD5940_ComplexDivFloat:
 2376              	.LVL165:
 2377              	.LFB20:
 663:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2378              		.loc 1 663 1 view -0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 24
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              		@ link register save eliminated.
 663:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2383              		.loc 1 663 1 is_stmt 0 view .LVU699
 2384 0000 86B0     		sub	sp, sp, #24
 2385              	.LCFI42:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 68


 2386              		.cfi_def_cfa_offset 24
 664:ad5940lib/ad5940.c ****   float temp;
 2387              		.loc 1 664 3 is_stmt 1 view .LVU700
 665:ad5940lib/ad5940.c ****   temp = b->Real*b->Real + b->Image*b->Image;
 2388              		.loc 1 665 3 view .LVU701
 666:ad5940lib/ad5940.c ****   res.Real = a->Real*b->Real + a->Image*b->Image;
 2389              		.loc 1 666 3 view .LVU702
 666:ad5940lib/ad5940.c ****   res.Real = a->Real*b->Real + a->Image*b->Image;
 2390              		.loc 1 666 11 is_stmt 0 view .LVU703
 2391 0002 D1ED007A 		vldr.32	s15, [r1]
 666:ad5940lib/ad5940.c ****   res.Real = a->Real*b->Real + a->Image*b->Image;
 2392              		.loc 1 666 17 view .LVU704
 2393 0006 67EEA76A 		vmul.f32	s13, s15, s15
 666:ad5940lib/ad5940.c ****   res.Real = a->Real*b->Real + a->Image*b->Image;
 2394              		.loc 1 666 29 view .LVU705
 2395 000a 91ED017A 		vldr.32	s14, [r1, #4]
 666:ad5940lib/ad5940.c ****   res.Real = a->Real*b->Real + a->Image*b->Image;
 2396              		.loc 1 666 36 view .LVU706
 2397 000e 27EE076A 		vmul.f32	s12, s14, s14
 666:ad5940lib/ad5940.c ****   res.Real = a->Real*b->Real + a->Image*b->Image;
 2398              		.loc 1 666 8 view .LVU707
 2399 0012 76EE866A 		vadd.f32	s13, s13, s12
 2400              	.LVL166:
 667:ad5940lib/ad5940.c ****   res.Real /= temp;
 2401              		.loc 1 667 3 is_stmt 1 view .LVU708
 667:ad5940lib/ad5940.c ****   res.Real /= temp;
 2402              		.loc 1 667 15 is_stmt 0 view .LVU709
 2403 0016 D0ED005A 		vldr.32	s11, [r0]
 667:ad5940lib/ad5940.c ****   res.Real /= temp;
 2404              		.loc 1 667 21 view .LVU710
 2405 001a 27EEA56A 		vmul.f32	s12, s15, s11
 667:ad5940lib/ad5940.c ****   res.Real /= temp;
 2406              		.loc 1 667 33 view .LVU711
 2407 001e 90ED015A 		vldr.32	s10, [r0, #4]
 667:ad5940lib/ad5940.c ****   res.Real /= temp;
 2408              		.loc 1 667 40 view .LVU712
 2409 0022 67EE054A 		vmul.f32	s9, s14, s10
 667:ad5940lib/ad5940.c ****   res.Real /= temp;
 2410              		.loc 1 667 30 view .LVU713
 2411 0026 36EE246A 		vadd.f32	s12, s12, s9
 668:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real - a->Real*b->Image;
 2412              		.loc 1 668 3 is_stmt 1 view .LVU714
 668:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real - a->Real*b->Image;
 2413              		.loc 1 668 12 is_stmt 0 view .LVU715
 2414 002a C6EE264A 		vdiv.f32	s9, s12, s13
 2415 002e CDED024A 		vstr.32	s9, [sp, #8]
 669:ad5940lib/ad5940.c ****   res.Image /= temp;
 2416              		.loc 1 669 3 is_stmt 1 view .LVU716
 669:ad5940lib/ad5940.c ****   res.Image /= temp;
 2417              		.loc 1 669 23 is_stmt 0 view .LVU717
 2418 0032 67EE857A 		vmul.f32	s15, s15, s10
 669:ad5940lib/ad5940.c ****   res.Image /= temp;
 2419              		.loc 1 669 41 view .LVU718
 2420 0036 27EE257A 		vmul.f32	s14, s14, s11
 669:ad5940lib/ad5940.c ****   res.Image /= temp;
 2421              		.loc 1 669 32 view .LVU719
 2422 003a 77EEC77A 		vsub.f32	s15, s15, s14
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 69


 670:ad5940lib/ad5940.c ****   return res;
 2423              		.loc 1 670 3 is_stmt 1 view .LVU720
 670:ad5940lib/ad5940.c ****   return res;
 2424              		.loc 1 670 13 is_stmt 0 view .LVU721
 2425 003e 87EEA67A 		vdiv.f32	s14, s15, s13
 2426 0042 8DED037A 		vstr.32	s14, [sp, #12]
 671:ad5940lib/ad5940.c **** }
 2427              		.loc 1 671 3 is_stmt 1 view .LVU722
 671:ad5940lib/ad5940.c **** }
 2428              		.loc 1 671 10 is_stmt 0 view .LVU723
 2429 0046 0399     		ldr	r1, [sp, #12]
 2430              	.LVL167:
 671:ad5940lib/ad5940.c **** }
 2431              		.loc 1 671 10 view .LVU724
 2432 0048 0298     		ldr	r0, [sp, #8]
 2433              	.LVL168:
 671:ad5940lib/ad5940.c **** }
 2434              		.loc 1 671 10 view .LVU725
 2435 004a 06AB     		add	r3, sp, #24
 2436 004c 03E90300 		stmdb	r3, {r0, r1}
 672:ad5940lib/ad5940.c **** 
 2437              		.loc 1 672 1 view .LVU726
 2438 0050 9DED040A 		vldr.32	s0, [sp, #16]
 2439 0054 DDED050A 		vldr.32	s1, [sp, #20]
 2440 0058 06B0     		add	sp, sp, #24
 2441              	.LCFI43:
 2442              		.cfi_def_cfa_offset 0
 2443              		@ sp needed
 2444 005a 7047     		bx	lr
 2445              		.cfi_endproc
 2446              	.LFE20:
 2448              		.section	.text.AD5940_ComplexMulFloat,"ax",%progbits
 2449              		.align	1
 2450              		.global	AD5940_ComplexMulFloat
 2451              		.syntax unified
 2452              		.thumb
 2453              		.thumb_func
 2454              		.fpu fpv5-d16
 2456              	AD5940_ComplexMulFloat:
 2457              	.LVL169:
 2458              	.LFB21:
 681:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2459              		.loc 1 681 1 is_stmt 1 view -0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 24
 2462              		@ frame_needed = 0, uses_anonymous_args = 0
 2463              		@ link register save eliminated.
 681:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2464              		.loc 1 681 1 is_stmt 0 view .LVU728
 2465 0000 86B0     		sub	sp, sp, #24
 2466              	.LCFI44:
 2467              		.cfi_def_cfa_offset 24
 682:ad5940lib/ad5940.c ****   
 2468              		.loc 1 682 3 is_stmt 1 view .LVU729
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2469              		.loc 1 684 3 view .LVU730
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 70


 2470              		.loc 1 684 15 is_stmt 0 view .LVU731
 2471 0002 90ED007A 		vldr.32	s14, [r0]
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2472              		.loc 1 684 23 view .LVU732
 2473 0006 D1ED007A 		vldr.32	s15, [r1]
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2474              		.loc 1 684 21 view .LVU733
 2475 000a 67EE276A 		vmul.f32	s13, s14, s15
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2476              		.loc 1 684 33 view .LVU734
 2477 000e D0ED015A 		vldr.32	s11, [r0, #4]
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2478              		.loc 1 684 42 view .LVU735
 2479 0012 91ED016A 		vldr.32	s12, [r1, #4]
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2480              		.loc 1 684 40 view .LVU736
 2481 0016 25EE865A 		vmul.f32	s10, s11, s12
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2482              		.loc 1 684 30 view .LVU737
 2483 001a 76EEC56A 		vsub.f32	s13, s13, s10
 684:ad5940lib/ad5940.c ****   res.Image = a->Image*b->Real + a->Real*b->Image;
 2484              		.loc 1 684 12 view .LVU738
 2485 001e CDED026A 		vstr.32	s13, [sp, #8]
 685:ad5940lib/ad5940.c **** 
 2486              		.loc 1 685 3 is_stmt 1 view .LVU739
 685:ad5940lib/ad5940.c **** 
 2487              		.loc 1 685 23 is_stmt 0 view .LVU740
 2488 0022 67EEA57A 		vmul.f32	s15, s15, s11
 685:ad5940lib/ad5940.c **** 
 2489              		.loc 1 685 41 view .LVU741
 2490 0026 27EE067A 		vmul.f32	s14, s14, s12
 685:ad5940lib/ad5940.c **** 
 2491              		.loc 1 685 32 view .LVU742
 2492 002a 77EE877A 		vadd.f32	s15, s15, s14
 685:ad5940lib/ad5940.c **** 
 2493              		.loc 1 685 13 view .LVU743
 2494 002e CDED037A 		vstr.32	s15, [sp, #12]
 687:ad5940lib/ad5940.c **** }
 2495              		.loc 1 687 3 is_stmt 1 view .LVU744
 687:ad5940lib/ad5940.c **** }
 2496              		.loc 1 687 10 is_stmt 0 view .LVU745
 2497 0032 0399     		ldr	r1, [sp, #12]
 2498              	.LVL170:
 687:ad5940lib/ad5940.c **** }
 2499              		.loc 1 687 10 view .LVU746
 2500 0034 0298     		ldr	r0, [sp, #8]
 2501              	.LVL171:
 687:ad5940lib/ad5940.c **** }
 2502              		.loc 1 687 10 view .LVU747
 2503 0036 06AB     		add	r3, sp, #24
 2504 0038 03E90300 		stmdb	r3, {r0, r1}
 688:ad5940lib/ad5940.c **** /**
 2505              		.loc 1 688 1 view .LVU748
 2506 003c 9DED040A 		vldr.32	s0, [sp, #16]
 2507 0040 DDED050A 		vldr.32	s1, [sp, #20]
 2508 0044 06B0     		add	sp, sp, #24
 2509              	.LCFI45:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 71


 2510              		.cfi_def_cfa_offset 0
 2511              		@ sp needed
 2512 0046 7047     		bx	lr
 2513              		.cfi_endproc
 2514              	.LFE21:
 2516              		.section	.text.AD5940_ComplexAddFloat,"ax",%progbits
 2517              		.align	1
 2518              		.global	AD5940_ComplexAddFloat
 2519              		.syntax unified
 2520              		.thumb
 2521              		.thumb_func
 2522              		.fpu fpv5-d16
 2524              	AD5940_ComplexAddFloat:
 2525              	.LVL172:
 2526              	.LFB22:
 696:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2527              		.loc 1 696 1 is_stmt 1 view -0
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 24
 2530              		@ frame_needed = 0, uses_anonymous_args = 0
 2531              		@ link register save eliminated.
 696:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2532              		.loc 1 696 1 is_stmt 0 view .LVU750
 2533 0000 86B0     		sub	sp, sp, #24
 2534              	.LCFI46:
 2535              		.cfi_def_cfa_offset 24
 697:ad5940lib/ad5940.c ****   
 2536              		.loc 1 697 3 is_stmt 1 view .LVU751
 699:ad5940lib/ad5940.c ****   res.Image = a->Image + b->Image;
 2537              		.loc 1 699 3 view .LVU752
 699:ad5940lib/ad5940.c ****   res.Image = a->Image + b->Image;
 2538              		.loc 1 699 15 is_stmt 0 view .LVU753
 2539 0002 D0ED007A 		vldr.32	s15, [r0]
 699:ad5940lib/ad5940.c ****   res.Image = a->Image + b->Image;
 2540              		.loc 1 699 25 view .LVU754
 2541 0006 91ED007A 		vldr.32	s14, [r1]
 699:ad5940lib/ad5940.c ****   res.Image = a->Image + b->Image;
 2542              		.loc 1 699 22 view .LVU755
 2543 000a 77EE877A 		vadd.f32	s15, s15, s14
 699:ad5940lib/ad5940.c ****   res.Image = a->Image + b->Image;
 2544              		.loc 1 699 12 view .LVU756
 2545 000e CDED027A 		vstr.32	s15, [sp, #8]
 700:ad5940lib/ad5940.c **** 
 2546              		.loc 1 700 3 is_stmt 1 view .LVU757
 700:ad5940lib/ad5940.c **** 
 2547              		.loc 1 700 16 is_stmt 0 view .LVU758
 2548 0012 D0ED017A 		vldr.32	s15, [r0, #4]
 700:ad5940lib/ad5940.c **** 
 2549              		.loc 1 700 27 view .LVU759
 2550 0016 91ED017A 		vldr.32	s14, [r1, #4]
 700:ad5940lib/ad5940.c **** 
 2551              		.loc 1 700 24 view .LVU760
 2552 001a 77EE877A 		vadd.f32	s15, s15, s14
 700:ad5940lib/ad5940.c **** 
 2553              		.loc 1 700 13 view .LVU761
 2554 001e CDED037A 		vstr.32	s15, [sp, #12]
 702:ad5940lib/ad5940.c **** }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 72


 2555              		.loc 1 702 3 is_stmt 1 view .LVU762
 702:ad5940lib/ad5940.c **** }
 2556              		.loc 1 702 10 is_stmt 0 view .LVU763
 2557 0022 0399     		ldr	r1, [sp, #12]
 2558              	.LVL173:
 702:ad5940lib/ad5940.c **** }
 2559              		.loc 1 702 10 view .LVU764
 2560 0024 0298     		ldr	r0, [sp, #8]
 2561              	.LVL174:
 702:ad5940lib/ad5940.c **** }
 2562              		.loc 1 702 10 view .LVU765
 2563 0026 06AB     		add	r3, sp, #24
 2564 0028 03E90300 		stmdb	r3, {r0, r1}
 703:ad5940lib/ad5940.c **** 
 2565              		.loc 1 703 1 view .LVU766
 2566 002c 9DED040A 		vldr.32	s0, [sp, #16]
 2567 0030 DDED050A 		vldr.32	s1, [sp, #20]
 2568 0034 06B0     		add	sp, sp, #24
 2569              	.LCFI47:
 2570              		.cfi_def_cfa_offset 0
 2571              		@ sp needed
 2572 0036 7047     		bx	lr
 2573              		.cfi_endproc
 2574              	.LFE22:
 2576              		.section	.text.AD5940_ComplexSubFloat,"ax",%progbits
 2577              		.align	1
 2578              		.global	AD5940_ComplexSubFloat
 2579              		.syntax unified
 2580              		.thumb
 2581              		.thumb_func
 2582              		.fpu fpv5-d16
 2584              	AD5940_ComplexSubFloat:
 2585              	.LVL175:
 2586              	.LFB23:
 712:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2587              		.loc 1 712 1 is_stmt 1 view -0
 2588              		.cfi_startproc
 2589              		@ args = 0, pretend = 0, frame = 24
 2590              		@ frame_needed = 0, uses_anonymous_args = 0
 2591              		@ link register save eliminated.
 712:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2592              		.loc 1 712 1 is_stmt 0 view .LVU768
 2593 0000 86B0     		sub	sp, sp, #24
 2594              	.LCFI48:
 2595              		.cfi_def_cfa_offset 24
 713:ad5940lib/ad5940.c ****   
 2596              		.loc 1 713 3 is_stmt 1 view .LVU769
 715:ad5940lib/ad5940.c ****   res.Image = a->Image - b->Image;
 2597              		.loc 1 715 3 view .LVU770
 715:ad5940lib/ad5940.c ****   res.Image = a->Image - b->Image;
 2598              		.loc 1 715 15 is_stmt 0 view .LVU771
 2599 0002 D0ED007A 		vldr.32	s15, [r0]
 715:ad5940lib/ad5940.c ****   res.Image = a->Image - b->Image;
 2600              		.loc 1 715 25 view .LVU772
 2601 0006 91ED007A 		vldr.32	s14, [r1]
 715:ad5940lib/ad5940.c ****   res.Image = a->Image - b->Image;
 2602              		.loc 1 715 22 view .LVU773
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 73


 2603 000a 77EEC77A 		vsub.f32	s15, s15, s14
 715:ad5940lib/ad5940.c ****   res.Image = a->Image - b->Image;
 2604              		.loc 1 715 12 view .LVU774
 2605 000e CDED027A 		vstr.32	s15, [sp, #8]
 716:ad5940lib/ad5940.c **** 
 2606              		.loc 1 716 3 is_stmt 1 view .LVU775
 716:ad5940lib/ad5940.c **** 
 2607              		.loc 1 716 16 is_stmt 0 view .LVU776
 2608 0012 D0ED017A 		vldr.32	s15, [r0, #4]
 716:ad5940lib/ad5940.c **** 
 2609              		.loc 1 716 27 view .LVU777
 2610 0016 91ED017A 		vldr.32	s14, [r1, #4]
 716:ad5940lib/ad5940.c **** 
 2611              		.loc 1 716 24 view .LVU778
 2612 001a 77EEC77A 		vsub.f32	s15, s15, s14
 716:ad5940lib/ad5940.c **** 
 2613              		.loc 1 716 13 view .LVU779
 2614 001e CDED037A 		vstr.32	s15, [sp, #12]
 718:ad5940lib/ad5940.c **** }
 2615              		.loc 1 718 3 is_stmt 1 view .LVU780
 718:ad5940lib/ad5940.c **** }
 2616              		.loc 1 718 10 is_stmt 0 view .LVU781
 2617 0022 0399     		ldr	r1, [sp, #12]
 2618              	.LVL176:
 718:ad5940lib/ad5940.c **** }
 2619              		.loc 1 718 10 view .LVU782
 2620 0024 0298     		ldr	r0, [sp, #8]
 2621              	.LVL177:
 718:ad5940lib/ad5940.c **** }
 2622              		.loc 1 718 10 view .LVU783
 2623 0026 06AB     		add	r3, sp, #24
 2624 0028 03E90300 		stmdb	r3, {r0, r1}
 719:ad5940lib/ad5940.c **** 
 2625              		.loc 1 719 1 view .LVU784
 2626 002c 9DED040A 		vldr.32	s0, [sp, #16]
 2627 0030 DDED050A 		vldr.32	s1, [sp, #20]
 2628 0034 06B0     		add	sp, sp, #24
 2629              	.LCFI49:
 2630              		.cfi_def_cfa_offset 0
 2631              		@ sp needed
 2632 0036 7047     		bx	lr
 2633              		.cfi_endproc
 2634              	.LFE23:
 2636              		.section	.text.AD5940_ComplexDivInt,"ax",%progbits
 2637              		.align	1
 2638              		.global	AD5940_ComplexDivInt
 2639              		.syntax unified
 2640              		.thumb
 2641              		.thumb_func
 2642              		.fpu fpv5-d16
 2644              	AD5940_ComplexDivInt:
 2645              	.LVL178:
 2646              	.LFB24:
 728:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2647              		.loc 1 728 1 is_stmt 1 view -0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 74


 2650              		@ frame_needed = 0, uses_anonymous_args = 0
 2651              		@ link register save eliminated.
 728:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2652              		.loc 1 728 1 is_stmt 0 view .LVU786
 2653 0000 86B0     		sub	sp, sp, #24
 2654              	.LCFI50:
 2655              		.cfi_def_cfa_offset 24
 729:ad5940lib/ad5940.c ****   float temp;
 2656              		.loc 1 729 3 is_stmt 1 view .LVU787
 730:ad5940lib/ad5940.c ****   temp = (float)b->Real*b->Real + (float)b->Image*b->Image;
 2657              		.loc 1 730 3 view .LVU788
 731:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 2658              		.loc 1 731 3 view .LVU789
 731:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 2659              		.loc 1 731 10 is_stmt 0 view .LVU790
 2660 0002 D1ED007A 		vldr.32	s15, [r1]	@ int
 2661 0006 F8EEE77A 		vcvt.f32.s32	s15, s15
 731:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 2662              		.loc 1 731 24 view .LVU791
 2663 000a 67EEA76A 		vmul.f32	s13, s15, s15
 731:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 2664              		.loc 1 731 43 view .LVU792
 2665 000e 91ED017A 		vldr.32	s14, [r1, #4]	@ int
 731:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 2666              		.loc 1 731 35 view .LVU793
 2667 0012 B8EEC77A 		vcvt.f32.s32	s14, s14
 731:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 2668              		.loc 1 731 50 view .LVU794
 2669 0016 27EE076A 		vmul.f32	s12, s14, s14
 731:ad5940lib/ad5940.c ****   res.Real = (float)a->Real*b->Real + (float)a->Image*b->Image;
 2670              		.loc 1 731 8 view .LVU795
 2671 001a 76EE866A 		vadd.f32	s13, s13, s12
 2672              	.LVL179:
 732:ad5940lib/ad5940.c ****   res.Real /= temp;
 2673              		.loc 1 732 3 is_stmt 1 view .LVU796
 732:ad5940lib/ad5940.c ****   res.Real /= temp;
 2674              		.loc 1 732 14 is_stmt 0 view .LVU797
 2675 001e 90ED006A 		vldr.32	s12, [r0]	@ int
 2676 0022 B8EEC66A 		vcvt.f32.s32	s12, s12
 732:ad5940lib/ad5940.c ****   res.Real /= temp;
 2677              		.loc 1 732 28 view .LVU798
 2678 0026 27EE865A 		vmul.f32	s10, s15, s12
 732:ad5940lib/ad5940.c ****   res.Real /= temp;
 2679              		.loc 1 732 47 view .LVU799
 2680 002a D0ED015A 		vldr.32	s11, [r0, #4]	@ int
 732:ad5940lib/ad5940.c ****   res.Real /= temp;
 2681              		.loc 1 732 39 view .LVU800
 2682 002e F8EEE55A 		vcvt.f32.s32	s11, s11
 732:ad5940lib/ad5940.c ****   res.Real /= temp;
 2683              		.loc 1 732 54 view .LVU801
 2684 0032 67EE254A 		vmul.f32	s9, s14, s11
 732:ad5940lib/ad5940.c ****   res.Real /= temp;
 2685              		.loc 1 732 37 view .LVU802
 2686 0036 35EE245A 		vadd.f32	s10, s10, s9
 733:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real - (float)a->Real*b->Image;
 2687              		.loc 1 733 3 is_stmt 1 view .LVU803
 733:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real - (float)a->Real*b->Image;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 75


 2688              		.loc 1 733 12 is_stmt 0 view .LVU804
 2689 003a C5EE264A 		vdiv.f32	s9, s10, s13
 2690 003e CDED024A 		vstr.32	s9, [sp, #8]
 734:ad5940lib/ad5940.c ****   res.Image /= temp;
 2691              		.loc 1 734 3 is_stmt 1 view .LVU805
 734:ad5940lib/ad5940.c ****   res.Image /= temp;
 2692              		.loc 1 734 30 is_stmt 0 view .LVU806
 2693 0042 67EEA57A 		vmul.f32	s15, s15, s11
 734:ad5940lib/ad5940.c ****   res.Image /= temp;
 2694              		.loc 1 734 55 view .LVU807
 2695 0046 27EE067A 		vmul.f32	s14, s14, s12
 734:ad5940lib/ad5940.c ****   res.Image /= temp;
 2696              		.loc 1 734 39 view .LVU808
 2697 004a 77EEC77A 		vsub.f32	s15, s15, s14
 735:ad5940lib/ad5940.c ****   return res;
 2698              		.loc 1 735 3 is_stmt 1 view .LVU809
 735:ad5940lib/ad5940.c ****   return res;
 2699              		.loc 1 735 13 is_stmt 0 view .LVU810
 2700 004e 87EEA67A 		vdiv.f32	s14, s15, s13
 2701 0052 8DED037A 		vstr.32	s14, [sp, #12]
 736:ad5940lib/ad5940.c **** }
 2702              		.loc 1 736 3 is_stmt 1 view .LVU811
 736:ad5940lib/ad5940.c **** }
 2703              		.loc 1 736 10 is_stmt 0 view .LVU812
 2704 0056 0399     		ldr	r1, [sp, #12]
 2705              	.LVL180:
 736:ad5940lib/ad5940.c **** }
 2706              		.loc 1 736 10 view .LVU813
 2707 0058 0298     		ldr	r0, [sp, #8]
 2708              	.LVL181:
 736:ad5940lib/ad5940.c **** }
 2709              		.loc 1 736 10 view .LVU814
 2710 005a 06AB     		add	r3, sp, #24
 2711 005c 03E90300 		stmdb	r3, {r0, r1}
 737:ad5940lib/ad5940.c **** 
 2712              		.loc 1 737 1 view .LVU815
 2713 0060 9DED040A 		vldr.32	s0, [sp, #16]
 2714 0064 DDED050A 		vldr.32	s1, [sp, #20]
 2715 0068 06B0     		add	sp, sp, #24
 2716              	.LCFI51:
 2717              		.cfi_def_cfa_offset 0
 2718              		@ sp needed
 2719 006a 7047     		bx	lr
 2720              		.cfi_endproc
 2721              	.LFE24:
 2723              		.section	.text.AD5940_ComplexMulInt,"ax",%progbits
 2724              		.align	1
 2725              		.global	AD5940_ComplexMulInt
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv5-d16
 2731              	AD5940_ComplexMulInt:
 2732              	.LVL182:
 2733              	.LFB25:
 746:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2734              		.loc 1 746 1 is_stmt 1 view -0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 76


 2735              		.cfi_startproc
 2736              		@ args = 0, pretend = 0, frame = 24
 2737              		@ frame_needed = 0, uses_anonymous_args = 0
 2738              		@ link register save eliminated.
 746:ad5940lib/ad5940.c ****   fImpCar_Type res;
 2739              		.loc 1 746 1 is_stmt 0 view .LVU817
 2740 0000 86B0     		sub	sp, sp, #24
 2741              	.LCFI52:
 2742              		.cfi_def_cfa_offset 24
 747:ad5940lib/ad5940.c ****   
 2743              		.loc 1 747 3 is_stmt 1 view .LVU818
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2744              		.loc 1 749 3 view .LVU819
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2745              		.loc 1 749 14 is_stmt 0 view .LVU820
 2746 0002 D0ED007A 		vldr.32	s15, [r0]	@ int
 2747 0006 B8EEE77A 		vcvt.f32.s32	s14, s15
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2748              		.loc 1 749 28 view .LVU821
 2749 000a D1ED007A 		vldr.32	s15, [r1]	@ int
 2750 000e F8EEE77A 		vcvt.f32.s32	s15, s15
 2751 0012 67EE275A 		vmul.f32	s11, s14, s15
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2752              		.loc 1 749 47 view .LVU822
 2753 0016 90ED016A 		vldr.32	s12, [r0, #4]	@ int
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2754              		.loc 1 749 39 view .LVU823
 2755 001a B8EEC66A 		vcvt.f32.s32	s12, s12
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2756              		.loc 1 749 56 view .LVU824
 2757 001e D1ED016A 		vldr.32	s13, [r1, #4]	@ int
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2758              		.loc 1 749 54 view .LVU825
 2759 0022 F8EEE66A 		vcvt.f32.s32	s13, s13
 2760 0026 26EE265A 		vmul.f32	s10, s12, s13
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2761              		.loc 1 749 37 view .LVU826
 2762 002a 75EEC55A 		vsub.f32	s11, s11, s10
 749:ad5940lib/ad5940.c ****   res.Image = (float)a->Image*b->Real + (float)a->Real*b->Image;
 2763              		.loc 1 749 12 view .LVU827
 2764 002e CDED025A 		vstr.32	s11, [sp, #8]
 750:ad5940lib/ad5940.c **** 
 2765              		.loc 1 750 3 is_stmt 1 view .LVU828
 750:ad5940lib/ad5940.c **** 
 2766              		.loc 1 750 30 is_stmt 0 view .LVU829
 2767 0032 67EE867A 		vmul.f32	s15, s15, s12
 750:ad5940lib/ad5940.c **** 
 2768              		.loc 1 750 55 view .LVU830
 2769 0036 27EE267A 		vmul.f32	s14, s14, s13
 750:ad5940lib/ad5940.c **** 
 2770              		.loc 1 750 39 view .LVU831
 2771 003a 77EE877A 		vadd.f32	s15, s15, s14
 750:ad5940lib/ad5940.c **** 
 2772              		.loc 1 750 13 view .LVU832
 2773 003e CDED037A 		vstr.32	s15, [sp, #12]
 752:ad5940lib/ad5940.c **** }
 2774              		.loc 1 752 3 is_stmt 1 view .LVU833
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 77


 752:ad5940lib/ad5940.c **** }
 2775              		.loc 1 752 10 is_stmt 0 view .LVU834
 2776 0042 0399     		ldr	r1, [sp, #12]
 2777              	.LVL183:
 752:ad5940lib/ad5940.c **** }
 2778              		.loc 1 752 10 view .LVU835
 2779 0044 0298     		ldr	r0, [sp, #8]
 2780              	.LVL184:
 752:ad5940lib/ad5940.c **** }
 2781              		.loc 1 752 10 view .LVU836
 2782 0046 06AB     		add	r3, sp, #24
 2783 0048 03E90300 		stmdb	r3, {r0, r1}
 753:ad5940lib/ad5940.c **** 
 2784              		.loc 1 753 1 view .LVU837
 2785 004c 9DED040A 		vldr.32	s0, [sp, #16]
 2786 0050 DDED050A 		vldr.32	s1, [sp, #20]
 2787 0054 06B0     		add	sp, sp, #24
 2788              	.LCFI53:
 2789              		.cfi_def_cfa_offset 0
 2790              		@ sp needed
 2791 0056 7047     		bx	lr
 2792              		.cfi_endproc
 2793              	.LFE25:
 2795              		.section	.text.AD5940_ComplexMag,"ax",%progbits
 2796              		.align	1
 2797              		.global	AD5940_ComplexMag
 2798              		.syntax unified
 2799              		.thumb
 2800              		.thumb_func
 2801              		.fpu fpv5-d16
 2803              	AD5940_ComplexMag:
 2804              	.LVL185:
 2805              	.LFB26:
 761:ad5940lib/ad5940.c ****   return sqrt(a->Real*a->Real + a->Image*a->Image);
 2806              		.loc 1 761 1 is_stmt 1 view -0
 2807              		.cfi_startproc
 2808              		@ args = 0, pretend = 0, frame = 0
 2809              		@ frame_needed = 0, uses_anonymous_args = 0
 761:ad5940lib/ad5940.c ****   return sqrt(a->Real*a->Real + a->Image*a->Image);
 2810              		.loc 1 761 1 is_stmt 0 view .LVU839
 2811 0000 08B5     		push	{r3, lr}
 2812              	.LCFI54:
 2813              		.cfi_def_cfa_offset 8
 2814              		.cfi_offset 3, -8
 2815              		.cfi_offset 14, -4
 762:ad5940lib/ad5940.c **** }
 2816              		.loc 1 762 3 is_stmt 1 view .LVU840
 762:ad5940lib/ad5940.c **** }
 2817              		.loc 1 762 16 is_stmt 0 view .LVU841
 2818 0002 90ED000A 		vldr.32	s0, [r0]
 762:ad5940lib/ad5940.c **** }
 2819              		.loc 1 762 22 view .LVU842
 2820 0006 20EE000A 		vmul.f32	s0, s0, s0
 762:ad5940lib/ad5940.c **** }
 2821              		.loc 1 762 34 view .LVU843
 2822 000a D0ED017A 		vldr.32	s15, [r0, #4]
 762:ad5940lib/ad5940.c **** }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 78


 2823              		.loc 1 762 41 view .LVU844
 2824 000e 67EEA77A 		vmul.f32	s15, s15, s15
 762:ad5940lib/ad5940.c **** }
 2825              		.loc 1 762 31 view .LVU845
 2826 0012 30EE270A 		vadd.f32	s0, s0, s15
 762:ad5940lib/ad5940.c **** }
 2827              		.loc 1 762 10 view .LVU846
 2828 0016 B7EEC00A 		vcvt.f64.f32	d0, s0
 2829 001a FFF7FEFF 		bl	sqrt
 2830              	.LVL186:
 763:ad5940lib/ad5940.c **** 
 2831              		.loc 1 763 1 view .LVU847
 2832 001e B7EEC00B 		vcvt.f32.f64	s0, d0
 2833 0022 08BD     		pop	{r3, pc}
 2834              		.cfi_endproc
 2835              	.LFE26:
 2837              		.section	.text.AD5940_ComplexPhase,"ax",%progbits
 2838              		.align	1
 2839              		.global	AD5940_ComplexPhase
 2840              		.syntax unified
 2841              		.thumb
 2842              		.thumb_func
 2843              		.fpu fpv5-d16
 2845              	AD5940_ComplexPhase:
 2846              	.LVL187:
 2847              	.LFB27:
 771:ad5940lib/ad5940.c ****   return atan2(a->Image, a->Real);
 2848              		.loc 1 771 1 is_stmt 1 view -0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 0
 2851              		@ frame_needed = 0, uses_anonymous_args = 0
 771:ad5940lib/ad5940.c ****   return atan2(a->Image, a->Real);
 2852              		.loc 1 771 1 is_stmt 0 view .LVU849
 2853 0000 08B5     		push	{r3, lr}
 2854              	.LCFI55:
 2855              		.cfi_def_cfa_offset 8
 2856              		.cfi_offset 3, -8
 2857              		.cfi_offset 14, -4
 772:ad5940lib/ad5940.c **** }
 2858              		.loc 1 772 3 is_stmt 1 view .LVU850
 772:ad5940lib/ad5940.c **** }
 2859              		.loc 1 772 17 is_stmt 0 view .LVU851
 2860 0002 90ED010A 		vldr.32	s0, [r0, #4]
 772:ad5940lib/ad5940.c **** }
 2861              		.loc 1 772 27 view .LVU852
 2862 0006 90ED001A 		vldr.32	s2, [r0]
 772:ad5940lib/ad5940.c **** }
 2863              		.loc 1 772 10 view .LVU853
 2864 000a B7EEC11A 		vcvt.f64.f32	d1, s2
 2865 000e B7EEC00A 		vcvt.f64.f32	d0, s0
 2866 0012 FFF7FEFF 		bl	atan2
 2867              	.LVL188:
 773:ad5940lib/ad5940.c **** 
 2868              		.loc 1 773 1 view .LVU854
 2869 0016 B7EEC00B 		vcvt.f32.f64	s0, d0
 2870 001a 08BD     		pop	{r3, pc}
 2871              		.cfi_endproc
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 79


 2872              	.LFE27:
 2874              		.section	.text.AD5940_FIFORd,"ax",%progbits
 2875              		.align	1
 2876              		.global	AD5940_FIFORd
 2877              		.syntax unified
 2878              		.thumb
 2879              		.thumb_func
 2880              		.fpu fpv5-d16
 2882              	AD5940_FIFORd:
 2883              	.LVL189:
 2884              	.LFB33:
 911:ad5940lib/ad5940.c **** 
 912:ad5940lib/ad5940.c **** /**
 913:ad5940lib/ad5940.c ****   @brief Read specific number of data from FIFO with optimized SPI access.
 914:ad5940lib/ad5940.c ****   @param pBuffer: Pointer to a buffer that used to store data read back.
 915:ad5940lib/ad5940.c ****   @param uiReadCount: How much data to be read.
 916:ad5940lib/ad5940.c ****   @return none.
 917:ad5940lib/ad5940.c **** **/
 918:ad5940lib/ad5940.c **** void AD5940_FIFORd(uint32_t *pBuffer, uint32_t uiReadCount)   
 919:ad5940lib/ad5940.c **** {
 2885              		.loc 1 919 1 is_stmt 1 view -0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 0
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889              		.loc 1 919 1 is_stmt 0 view .LVU856
 2890 0000 70B5     		push	{r4, r5, r6, lr}
 2891              	.LCFI56:
 2892              		.cfi_def_cfa_offset 16
 2893              		.cfi_offset 4, -16
 2894              		.cfi_offset 5, -12
 2895              		.cfi_offset 6, -8
 2896              		.cfi_offset 14, -4
 2897 0002 0646     		mov	r6, r0
 2898 0004 0D46     		mov	r5, r1
 920:ad5940lib/ad5940.c ****   /* Use function AD5940_SPIReadReg to read REG_AFE_DATAFIFORD is also one method. */
 921:ad5940lib/ad5940.c ****    uint32_t i;
 2899              		.loc 1 921 4 is_stmt 1 view .LVU857
 922:ad5940lib/ad5940.c ****    
 923:ad5940lib/ad5940.c ****    if(uiReadCount < 3)
 2900              		.loc 1 923 4 view .LVU858
 2901              		.loc 1 923 6 is_stmt 0 view .LVU859
 2902 0006 0229     		cmp	r1, #2
 2903 0008 1FD8     		bhi	.L186
 2904              	.LBB10:
 924:ad5940lib/ad5940.c ****    {
 925:ad5940lib/ad5940.c ****       /* This method is more efficient when readcount < 3 */
 926:ad5940lib/ad5940.c ****       uint32_t i;
 2905              		.loc 1 926 7 is_stmt 1 view .LVU860
 927:ad5940lib/ad5940.c ****       AD5940_CsClr();
 2906              		.loc 1 927 7 view .LVU861
 2907 000a FFF7FEFF 		bl	AD5940_CsClr
 2908              	.LVL190:
 928:ad5940lib/ad5940.c ****       AD5940_ReadWrite8B(SPICMD_SETADDR);
 2909              		.loc 1 928 7 view .LVU862
 2910 000e 2020     		movs	r0, #32
 2911 0010 FFF7FEFF 		bl	AD5940_ReadWrite8B
 2912              	.LVL191:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 80


 929:ad5940lib/ad5940.c ****       AD5940_ReadWrite16B(REG_AFE_DATAFIFORD);
 2913              		.loc 1 929 7 view .LVU863
 2914 0014 42F26C00 		movw	r0, #8300
 2915 0018 FFF7FEFF 		bl	AD5940_ReadWrite16B
 2916              	.LVL192:
 930:ad5940lib/ad5940.c ****       AD5940_CsSet();
 2917              		.loc 1 930 7 view .LVU864
 2918 001c FFF7FEFF 		bl	AD5940_CsSet
 2919              	.LVL193:
 931:ad5940lib/ad5940.c ****       for(i=0;i<uiReadCount;i++)
 2920              		.loc 1 931 7 view .LVU865
 2921              		.loc 1 931 12 is_stmt 0 view .LVU866
 2922 0020 0024     		movs	r4, #0
 2923              		.loc 1 931 7 view .LVU867
 2924 0022 0FE0     		b	.L187
 2925              	.LVL194:
 2926              	.L188:
 932:ad5940lib/ad5940.c ****       {
 933:ad5940lib/ad5940.c ****          AD5940_CsClr();
 2927              		.loc 1 933 10 is_stmt 1 discriminator 3 view .LVU868
 2928 0024 FFF7FEFF 		bl	AD5940_CsClr
 2929              	.LVL195:
 934:ad5940lib/ad5940.c ****          AD5940_ReadWrite8B(SPICMD_READREG);
 2930              		.loc 1 934 10 discriminator 3 view .LVU869
 2931 0028 6D20     		movs	r0, #109
 2932 002a FFF7FEFF 		bl	AD5940_ReadWrite8B
 2933              	.LVL196:
 935:ad5940lib/ad5940.c ****          AD5940_ReadWrite8B(0);//Write Host status/Don't care
 2934              		.loc 1 935 10 discriminator 3 view .LVU870
 2935 002e 0020     		movs	r0, #0
 2936 0030 FFF7FEFF 		bl	AD5940_ReadWrite8B
 2937              	.LVL197:
 936:ad5940lib/ad5940.c ****          pBuffer[i] = AD5940_ReadWrite32B(0);
 2938              		.loc 1 936 10 discriminator 3 view .LVU871
 2939              		.loc 1 936 23 is_stmt 0 discriminator 3 view .LVU872
 2940 0034 0020     		movs	r0, #0
 2941 0036 FFF7FEFF 		bl	AD5940_ReadWrite32B
 2942              	.LVL198:
 2943              		.loc 1 936 21 discriminator 3 view .LVU873
 2944 003a 46F82400 		str	r0, [r6, r4, lsl #2]
 937:ad5940lib/ad5940.c ****          AD5940_CsSet();
 2945              		.loc 1 937 10 is_stmt 1 discriminator 3 view .LVU874
 2946 003e FFF7FEFF 		bl	AD5940_CsSet
 2947              	.LVL199:
 931:ad5940lib/ad5940.c ****       {
 2948              		.loc 1 931 29 discriminator 3 view .LVU875
 931:ad5940lib/ad5940.c ****       {
 2949              		.loc 1 931 30 is_stmt 0 discriminator 3 view .LVU876
 2950 0042 0134     		adds	r4, r4, #1
 2951              	.LVL200:
 2952              	.L187:
 931:ad5940lib/ad5940.c ****       {
 2953              		.loc 1 931 15 is_stmt 1 discriminator 1 view .LVU877
 931:ad5940lib/ad5940.c ****       {
 2954              		.loc 1 931 7 is_stmt 0 discriminator 1 view .LVU878
 2955 0044 AC42     		cmp	r4, r5
 2956 0046 EDD3     		bcc	.L188
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 81


 2957 0048 26E0     		b	.L185
 2958              	.LVL201:
 2959              	.L186:
 931:ad5940lib/ad5940.c ****       {
 2960              		.loc 1 931 7 discriminator 1 view .LVU879
 2961              	.LBE10:
 938:ad5940lib/ad5940.c ****       }
 939:ad5940lib/ad5940.c ****    }
 940:ad5940lib/ad5940.c ****    else
 941:ad5940lib/ad5940.c ****    {
 942:ad5940lib/ad5940.c ****       AD5940_CsClr();
 2962              		.loc 1 942 7 is_stmt 1 view .LVU880
 2963 004a FFF7FEFF 		bl	AD5940_CsClr
 2964              	.LVL202:
 943:ad5940lib/ad5940.c ****       AD5940_ReadWrite8B(SPICMD_READFIFO);
 2965              		.loc 1 943 7 view .LVU881
 2966 004e 5F20     		movs	r0, #95
 2967 0050 FFF7FEFF 		bl	AD5940_ReadWrite8B
 2968              	.LVL203:
 944:ad5940lib/ad5940.c ****       /* 6 dummy write before valid data read back */
 945:ad5940lib/ad5940.c ****       for(i=0;i<6;i++)
 2969              		.loc 1 945 7 view .LVU882
 2970              		.loc 1 945 12 is_stmt 0 view .LVU883
 2971 0054 0024     		movs	r4, #0
 2972              	.LVL204:
 2973              	.L190:
 2974              		.loc 1 945 15 is_stmt 1 discriminator 1 view .LVU884
 2975              		.loc 1 945 7 is_stmt 0 discriminator 1 view .LVU885
 2976 0056 052C     		cmp	r4, #5
 2977 0058 04D8     		bhi	.L195
 946:ad5940lib/ad5940.c ****          AD5940_ReadWrite8B(0);
 2978              		.loc 1 946 10 is_stmt 1 discriminator 3 view .LVU886
 2979 005a 0020     		movs	r0, #0
 2980 005c FFF7FEFF 		bl	AD5940_ReadWrite8B
 2981              	.LVL205:
 945:ad5940lib/ad5940.c ****          AD5940_ReadWrite8B(0);
 2982              		.loc 1 945 19 discriminator 3 view .LVU887
 945:ad5940lib/ad5940.c ****          AD5940_ReadWrite8B(0);
 2983              		.loc 1 945 20 is_stmt 0 discriminator 3 view .LVU888
 2984 0060 0134     		adds	r4, r4, #1
 2985              	.LVL206:
 945:ad5940lib/ad5940.c ****          AD5940_ReadWrite8B(0);
 2986              		.loc 1 945 20 discriminator 3 view .LVU889
 2987 0062 F8E7     		b	.L190
 2988              	.L195:
 947:ad5940lib/ad5940.c ****       /* Continuously read DATAFIFORD register with offset 0 */
 948:ad5940lib/ad5940.c ****       for(i=0;i<uiReadCount-2;i++)
 2989              		.loc 1 948 12 view .LVU890
 2990 0064 0024     		movs	r4, #0
 2991              	.LVL207:
 2992              		.loc 1 948 12 view .LVU891
 2993 0066 05E0     		b	.L192
 2994              	.LVL208:
 2995              	.L193:
 949:ad5940lib/ad5940.c ****       {
 950:ad5940lib/ad5940.c ****          pBuffer[i] = AD5940_ReadWrite32B(0); /*Offset is 0, so we always read DATAFIFORD register 
 2996              		.loc 1 950 10 is_stmt 1 discriminator 3 view .LVU892
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 82


 2997              		.loc 1 950 23 is_stmt 0 discriminator 3 view .LVU893
 2998 0068 0020     		movs	r0, #0
 2999 006a FFF7FEFF 		bl	AD5940_ReadWrite32B
 3000              	.LVL209:
 3001              		.loc 1 950 21 discriminator 3 view .LVU894
 3002 006e 46F82400 		str	r0, [r6, r4, lsl #2]
 948:ad5940lib/ad5940.c ****       {
 3003              		.loc 1 948 31 is_stmt 1 discriminator 3 view .LVU895
 948:ad5940lib/ad5940.c ****       {
 3004              		.loc 1 948 32 is_stmt 0 discriminator 3 view .LVU896
 3005 0072 0134     		adds	r4, r4, #1
 3006              	.LVL210:
 3007              	.L192:
 948:ad5940lib/ad5940.c ****       {
 3008              		.loc 1 948 15 is_stmt 1 discriminator 1 view .LVU897
 948:ad5940lib/ad5940.c ****       {
 3009              		.loc 1 948 28 is_stmt 0 discriminator 1 view .LVU898
 3010 0074 AB1E     		subs	r3, r5, #2
 948:ad5940lib/ad5940.c ****       {
 3011              		.loc 1 948 7 discriminator 1 view .LVU899
 3012 0076 A342     		cmp	r3, r4
 3013 0078 F6D8     		bhi	.L193
 951:ad5940lib/ad5940.c ****       }
 952:ad5940lib/ad5940.c ****       /* Read back last two FIFO data with none-zero offset*/
 953:ad5940lib/ad5940.c ****       pBuffer[i++] = AD5940_ReadWrite32B(0x44444444);
 3014              		.loc 1 953 7 is_stmt 1 view .LVU900
 3015              		.loc 1 953 16 is_stmt 0 view .LVU901
 3016 007a 651C     		adds	r5, r4, #1
 3017              	.LVL211:
 3018              		.loc 1 953 22 view .LVU902
 3019 007c 4FF04430 		mov	r0, #1145324612
 3020 0080 FFF7FEFF 		bl	AD5940_ReadWrite32B
 3021              	.LVL212:
 3022              		.loc 1 953 20 view .LVU903
 3023 0084 46F82400 		str	r0, [r6, r4, lsl #2]
 954:ad5940lib/ad5940.c ****       pBuffer[i] = AD5940_ReadWrite32B(0x44444444);
 3024              		.loc 1 954 7 is_stmt 1 view .LVU904
 3025              		.loc 1 954 20 is_stmt 0 view .LVU905
 3026 0088 4FF04430 		mov	r0, #1145324612
 3027 008c FFF7FEFF 		bl	AD5940_ReadWrite32B
 3028              	.LVL213:
 3029              		.loc 1 954 18 view .LVU906
 3030 0090 46F82500 		str	r0, [r6, r5, lsl #2]
 955:ad5940lib/ad5940.c ****       AD5940_CsSet();
 3031              		.loc 1 955 7 is_stmt 1 view .LVU907
 3032 0094 FFF7FEFF 		bl	AD5940_CsSet
 3033              	.LVL214:
 3034              	.L185:
 956:ad5940lib/ad5940.c ****    }
 957:ad5940lib/ad5940.c **** }
 3035              		.loc 1 957 1 is_stmt 0 view .LVU908
 3036 0098 70BD     		pop	{r4, r5, r6, pc}
 3037              		.loc 1 957 1 view .LVU909
 3038              		.cfi_endproc
 3039              	.LFE33:
 3041              		.section	.text.AD5940_WriteReg,"ax",%progbits
 3042              		.align	1
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 83


 3043              		.global	AD5940_WriteReg
 3044              		.syntax unified
 3045              		.thumb
 3046              		.thumb_func
 3047              		.fpu fpv5-d16
 3049              	AD5940_WriteReg:
 3050              	.LVL215:
 3051              	.LFB34:
 958:ad5940lib/ad5940.c **** 
 959:ad5940lib/ad5940.c **** /**
 960:ad5940lib/ad5940.c ****  * @} SPI_Block_Functions
 961:ad5940lib/ad5940.c ****  * @} SPI_Block
 962:ad5940lib/ad5940.c **** */
 963:ad5940lib/ad5940.c **** #endif
 964:ad5940lib/ad5940.c **** 
 965:ad5940lib/ad5940.c **** /**
 966:ad5940lib/ad5940.c ****  * @brief Write register. If sequencer generator is enabled, the register write is recorded. 
 967:ad5940lib/ad5940.c ****  *        Otherwise, the data is written to AD5940 by SPI.
 968:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 969:ad5940lib/ad5940.c ****  * @param RegData: The register data.
 970:ad5940lib/ad5940.c ****  * @return Return None.
 971:ad5940lib/ad5940.c **** **/
 972:ad5940lib/ad5940.c **** void AD5940_WriteReg(uint16_t RegAddr, uint32_t RegData)
 973:ad5940lib/ad5940.c **** {
 3052              		.loc 1 973 1 is_stmt 1 view -0
 3053              		.cfi_startproc
 3054              		@ args = 0, pretend = 0, frame = 0
 3055              		@ frame_needed = 0, uses_anonymous_args = 0
 3056              		.loc 1 973 1 is_stmt 0 view .LVU911
 3057 0000 08B5     		push	{r3, lr}
 3058              	.LCFI57:
 3059              		.cfi_def_cfa_offset 8
 3060              		.cfi_offset 3, -8
 3061              		.cfi_offset 14, -4
 974:ad5940lib/ad5940.c **** #ifdef SEQUENCE_GENERATOR
 975:ad5940lib/ad5940.c ****   if(SeqGenDB.EngineStart == bTRUE)
 3062              		.loc 1 975 3 is_stmt 1 view .LVU912
 3063              		.loc 1 975 14 is_stmt 0 view .LVU913
 3064 0002 054B     		ldr	r3, .L201
 3065 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3066              		.loc 1 975 5 view .LVU914
 3067 0006 012B     		cmp	r3, #1
 3068 0008 02D0     		beq	.L200
 976:ad5940lib/ad5940.c ****     AD5940_SEQWriteReg(RegAddr, RegData);
 977:ad5940lib/ad5940.c ****   else
 978:ad5940lib/ad5940.c **** #endif
 979:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
 980:ad5940lib/ad5940.c ****     AD5940_D2DWriteReg(RegAddr, RegData);
 981:ad5940lib/ad5940.c **** #else
 982:ad5940lib/ad5940.c ****     AD5940_SPIWriteReg(RegAddr, RegData);
 3069              		.loc 1 982 5 is_stmt 1 view .LVU915
 3070 000a FFF7FEFF 		bl	AD5940_SPIWriteReg
 3071              	.LVL216:
 3072              	.L196:
 983:ad5940lib/ad5940.c **** #endif
 984:ad5940lib/ad5940.c **** }
 3073              		.loc 1 984 1 is_stmt 0 view .LVU916
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 84


 3074 000e 08BD     		pop	{r3, pc}
 3075              	.LVL217:
 3076              	.L200:
 976:ad5940lib/ad5940.c ****     AD5940_SEQWriteReg(RegAddr, RegData);
 3077              		.loc 1 976 5 is_stmt 1 view .LVU917
 3078 0010 FFF7FEFF 		bl	AD5940_SEQWriteReg
 3079              	.LVL218:
 976:ad5940lib/ad5940.c ****     AD5940_SEQWriteReg(RegAddr, RegData);
 3080              		.loc 1 976 5 is_stmt 0 view .LVU918
 3081 0014 FBE7     		b	.L196
 3082              	.L202:
 3083 0016 00BF     		.align	2
 3084              	.L201:
 3085 0018 00000000 		.word	SeqGenDB
 3086              		.cfi_endproc
 3087              	.LFE34:
 3089              		.section	.text.__AD5940_SetDExRTIA,"ax",%progbits
 3090              		.align	1
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu fpv5-d16
 3096              	__AD5940_SetDExRTIA:
 3097              	.LVL219:
 3098              	.LFB44:
 985:ad5940lib/ad5940.c **** 
 986:ad5940lib/ad5940.c **** /**
 987:ad5940lib/ad5940.c ****  * @brief Read register. If sequencer generator is enabled, read current register value from data-b
 988:ad5940lib/ad5940.c ****  *        Otherwise, read register value by SPI.
 989:ad5940lib/ad5940.c ****  * @param RegAddr: The register address.
 990:ad5940lib/ad5940.c ****  * @return Return register value.
 991:ad5940lib/ad5940.c **** **/
 992:ad5940lib/ad5940.c **** uint32_t AD5940_ReadReg(uint16_t RegAddr)
 993:ad5940lib/ad5940.c **** {
 994:ad5940lib/ad5940.c **** #ifdef SEQUENCE_GENERATOR
 995:ad5940lib/ad5940.c ****   if(SeqGenDB.EngineStart == bTRUE)
 996:ad5940lib/ad5940.c ****     return AD5940_SEQReadReg(RegAddr);
 997:ad5940lib/ad5940.c ****   else
 998:ad5940lib/ad5940.c **** #endif
 999:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
1000:ad5940lib/ad5940.c ****     return AD5940_D2DReadReg(RegAddr);
1001:ad5940lib/ad5940.c **** #else
1002:ad5940lib/ad5940.c ****     return AD5940_SPIReadReg(RegAddr);
1003:ad5940lib/ad5940.c **** #endif
1004:ad5940lib/ad5940.c **** }
1005:ad5940lib/ad5940.c **** 
1006:ad5940lib/ad5940.c **** 
1007:ad5940lib/ad5940.c **** /**
1008:ad5940lib/ad5940.c ****  * @defgroup AFE_Control 
1009:ad5940lib/ad5940.c ****  * @brief Some functions to control the whole AFE. They are top level switches.
1010:ad5940lib/ad5940.c ****  * @{
1011:ad5940lib/ad5940.c ****  *    @defgroup AFE_Control_Functions
1012:ad5940lib/ad5940.c ****  *    The top-level control functions for whole AFE perspective. 
1013:ad5940lib/ad5940.c ****  *    @details  This function set is used to control the whole AFE block by block. It's a top-level
1014:ad5940lib/ad5940.c ****  *              It's convenient when do initialization work with the functions called BLOCK**Cfg**.
1015:ad5940lib/ad5940.c ****  *              functions from each block. rather than top-level functions where you need to config
1016:ad5940lib/ad5940.c ****  *    @{
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 85


1017:ad5940lib/ad5940.c **** */
1018:ad5940lib/ad5940.c **** 
1019:ad5940lib/ad5940.c **** /**
1020:ad5940lib/ad5940.c ****  * @brief Initialize AD5940. This function must be called whenever there is reset(Software Reset or
1021:ad5940lib/ad5940.c ****  *        This function is used to put AD5940 to correct state.
1022:ad5940lib/ad5940.c ****  * @return return None
1023:ad5940lib/ad5940.c **** **/
1024:ad5940lib/ad5940.c **** void AD5940_Initialize(void)
1025:ad5940lib/ad5940.c **** {
1026:ad5940lib/ad5940.c ****   int i;
1027:ad5940lib/ad5940.c ****   /* Write following registers with its data sequentially whenever there is a reset happened. */
1028:ad5940lib/ad5940.c ****   const struct
1029:ad5940lib/ad5940.c ****   {
1030:ad5940lib/ad5940.c ****     uint16_t reg_addr;
1031:ad5940lib/ad5940.c ****     uint32_t reg_data;
1032:ad5940lib/ad5940.c ****   }RegTable[]=
1033:ad5940lib/ad5940.c ****   {
1034:ad5940lib/ad5940.c ****     {0x0908, 0x02c9},
1035:ad5940lib/ad5940.c ****     {0x0c08, 0x206C},
1036:ad5940lib/ad5940.c ****     {0x21F0, 0x0010},
1037:ad5940lib/ad5940.c **** #ifndef CHIPSEL_M355
1038:ad5940lib/ad5940.c ****     /* This is AD5940 */
1039:ad5940lib/ad5940.c ****     {0x0410, 0x02c9},
1040:ad5940lib/ad5940.c ****     {0x0A28, 0x0009},
1041:ad5940lib/ad5940.c **** #else
1042:ad5940lib/ad5940.c ****     /* This is ADuCM355 */
1043:ad5940lib/ad5940.c ****     {0x0410, 0x001a},
1044:ad5940lib/ad5940.c ****     {0x0A28, 0x0008},
1045:ad5940lib/ad5940.c **** #endif
1046:ad5940lib/ad5940.c ****     {0x238c, 0x0104},
1047:ad5940lib/ad5940.c ****     {0x0a04, 0x4859},
1048:ad5940lib/ad5940.c ****     {0x0a04, 0xF27B},
1049:ad5940lib/ad5940.c ****     {0x0a00, 0x8009},
1050:ad5940lib/ad5940.c ****     {0x22F0, 0x0000},
1051:ad5940lib/ad5940.c ****     //
1052:ad5940lib/ad5940.c ****     {0x2230, 0xDE87A5AF},
1053:ad5940lib/ad5940.c ****     {0x2250, 0x103F},
1054:ad5940lib/ad5940.c ****     {0x22B0, 0x203C},
1055:ad5940lib/ad5940.c ****     {0x2230, 0xDE87A5A0},
1056:ad5940lib/ad5940.c ****   };
1057:ad5940lib/ad5940.c ****   //initialize global variables
1058:ad5940lib/ad5940.c ****   SeqGenDB.SeqLen = 0;
1059:ad5940lib/ad5940.c ****   SeqGenDB.RegCount = 0;
1060:ad5940lib/ad5940.c ****   SeqGenDB.LastError = AD5940ERR_OK;
1061:ad5940lib/ad5940.c ****   SeqGenDB.EngineStart = bFALSE;
1062:ad5940lib/ad5940.c **** #ifndef CHIPSEL_M355
1063:ad5940lib/ad5940.c ****   AD5940_CsSet(); /* Pull high CS in case it's low */
1064:ad5940lib/ad5940.c **** #endif
1065:ad5940lib/ad5940.c ****   for(i=0; i<sizeof(RegTable)/sizeof(RegTable[0]); i++)
1066:ad5940lib/ad5940.c ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
1067:ad5940lib/ad5940.c ****   i = AD5940_ReadReg(REG_AFECON_CHIPID);  
1068:ad5940lib/ad5940.c ****   if(i == 0x5501)
1069:ad5940lib/ad5940.c **** 	{
1070:ad5940lib/ad5940.c ****     bIsS2silicon = bTRUE;
1071:ad5940lib/ad5940.c **** 		printf("CHIPID read :0x%04x.\n", i);
1072:ad5940lib/ad5940.c **** 	}
1073:ad5940lib/ad5940.c ****   else if(i == 0x5502)  /* S3 chip-id is 0x5502. The is no difference with S2. */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 86


1074:ad5940lib/ad5940.c **** 	{
1075:ad5940lib/ad5940.c ****     bIsS2silicon = bTRUE;
1076:ad5940lib/ad5940.c **** 		printf("CHIPID read :0x%04x.\n", i);
1077:ad5940lib/ad5940.c **** 	}
1078:ad5940lib/ad5940.c ****   else if(i == 0x5500)
1079:ad5940lib/ad5940.c ****     bIsS2silicon = bFALSE;
1080:ad5940lib/ad5940.c **** #ifdef ADI_DEBUG
1081:ad5940lib/ad5940.c ****   else
1082:ad5940lib/ad5940.c ****   {
1083:ad5940lib/ad5940.c ****     printf("CHIPID read error:0x%04x. AD5940 is not present?\n", i);
1084:ad5940lib/ad5940.c ****     while(1);
1085:ad5940lib/ad5940.c ****   }
1086:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
1087:ad5940lib/ad5940.c ****   ADI_Print("This ADuCM355!\n");
1088:ad5940lib/ad5940.c **** #else
1089:ad5940lib/ad5940.c ****   //ADI_Print("This AD594x!\n");
1090:ad5940lib/ad5940.c **** #endif
1091:ad5940lib/ad5940.c ****   //ADI_Print("Note: Current Silicon is %s\n", bIsS2silicon?"S2":"S1");
1092:ad5940lib/ad5940.c ****   //ADI_Print("AD5940LIB Version:v%d.%d.%d\n", AD5940LIB_VER_MAJOR, AD5940LIB_VER_MINOR, AD5940LIB_
1093:ad5940lib/ad5940.c **** #endif
1094:ad5940lib/ad5940.c **** }
1095:ad5940lib/ad5940.c **** 
1096:ad5940lib/ad5940.c **** /**
1097:ad5940lib/ad5940.c ****  * @brief Control most AFE digital and analog block within one register access.
1098:ad5940lib/ad5940.c ****  * @param AfeCtrlSet: A set of blocks that will be controlled select it from @ref AFECTRL_Const Bel
1099:ad5940lib/ad5940.c ****  *        - AFECTRL_HPREFPWR: Control high power reference(bandgap).
1100:ad5940lib/ad5940.c ****  *        - AFECTRL_WG|AFECTRL_ADCPWR: The OR'ed control set. Control Waveform generator and ADC po
1101:ad5940lib/ad5940.c ****  * @param State: Enable or disable selected control set signal. Select from @BoolFlag
1102:ad5940lib/ad5940.c ****  *        - bFALSE: Disable or power down selected block(s).
1103:ad5940lib/ad5940.c ****  *        - bTRUE:  Enable all selected block(s).
1104:ad5940lib/ad5940.c ****    @return return none.
1105:ad5940lib/ad5940.c **** */
1106:ad5940lib/ad5940.c **** void AD5940_AFECtrlS(uint32_t AfeCtrlSet, BoolFlag State)
1107:ad5940lib/ad5940.c **** {
1108:ad5940lib/ad5940.c ****   /* Check parameters */
1109:ad5940lib/ad5940.c ****   uint32_t tempreg;
1110:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
1111:ad5940lib/ad5940.c ****   if (State == bTRUE) {
1112:ad5940lib/ad5940.c ****     /* Clear bits to enable HPREF and ALDOLimit*/
1113:ad5940lib/ad5940.c ****     if (AfeCtrlSet & AFECTRL_HPREFPWR) {
1114:ad5940lib/ad5940.c ****         tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
1115:ad5940lib/ad5940.c ****         AfeCtrlSet &= ~AFECTRL_HPREFPWR;
1116:ad5940lib/ad5940.c ****     }
1117:ad5940lib/ad5940.c ****     if(AfeCtrlSet & AFECTRL_ALDOLIMIT)
1118:ad5940lib/ad5940.c ****     {
1119:ad5940lib/ad5940.c ****       tempreg &= ~BITM_AFE_AFECON_ALDOILIMITEN;
1120:ad5940lib/ad5940.c ****       AfeCtrlSet &= ~AFECTRL_ALDOLIMIT;
1121:ad5940lib/ad5940.c ****     }
1122:ad5940lib/ad5940.c ****     tempreg |= AfeCtrlSet;
1123:ad5940lib/ad5940.c ****   }
1124:ad5940lib/ad5940.c ****   else
1125:ad5940lib/ad5940.c ****   {
1126:ad5940lib/ad5940.c ****     /* Set bits to Disable HPREF and ALDOLimit*/
1127:ad5940lib/ad5940.c ****     if(AfeCtrlSet & AFECTRL_HPREFPWR)
1128:ad5940lib/ad5940.c ****     {
1129:ad5940lib/ad5940.c ****         tempreg |= BITM_AFE_AFECON_HPREFDIS;
1130:ad5940lib/ad5940.c ****         AfeCtrlSet &= ~AFECTRL_HPREFPWR;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 87


1131:ad5940lib/ad5940.c ****     }
1132:ad5940lib/ad5940.c ****     if(AfeCtrlSet & AFECTRL_ALDOLIMIT)
1133:ad5940lib/ad5940.c ****     {
1134:ad5940lib/ad5940.c ****       tempreg |= BITM_AFE_AFECON_ALDOILIMITEN;
1135:ad5940lib/ad5940.c ****       AfeCtrlSet &= ~AFECTRL_ALDOLIMIT;
1136:ad5940lib/ad5940.c ****     }
1137:ad5940lib/ad5940.c ****     tempreg &= ~AfeCtrlSet;
1138:ad5940lib/ad5940.c ****   }
1139:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_AFECON, tempreg);
1140:ad5940lib/ad5940.c **** }
1141:ad5940lib/ad5940.c **** /** When LP mode is enabled, some functions are under control of LPMODECON, rather than original re
1142:ad5940lib/ad5940.c **** /** @warning LPMODE is key protected, this function only takes effect after AD5940_LPModeEnS(bTRUE)
1143:ad5940lib/ad5940.c **** /**
1144:ad5940lib/ad5940.c ****  * @brief For LP mode, use one register to control most AFE digital and analog block.
1145:ad5940lib/ad5940.c ****  * @details The parameter means the blocks. The selected block will be enabled. All others will be 
1146:ad5940lib/ad5940.c ****  *          The method to enable/disable blocks are defined by register LPMODECON, either by cleari
1147:ad5940lib/ad5940.c ****  * @param EnSet: A set of blocks that will be enabled. Select it from @ref LPMODECTRL_Const. All ot
1148:ad5940lib/ad5940.c ****  *        - LPMODECTRL_ALDOPWR|LPMODECTRL_HFOSCEN: Turn on ALDO and HFOSC, disable all others.
1149:ad5940lib/ad5940.c ****  *        - LPMODECTRL_ALL: Enable all blocks.
1150:ad5940lib/ad5940.c ****    @return return none.
1151:ad5940lib/ad5940.c **** */
1152:ad5940lib/ad5940.c **** AD5940Err AD5940_LPModeCtrlS(uint32_t EnSet)
1153:ad5940lib/ad5940.c **** {
1154:ad5940lib/ad5940.c ****   /* Check parameters */
1155:ad5940lib/ad5940.c ****   uint32_t tempreg;
1156:ad5940lib/ad5940.c ****   uint32_t DisSet;    /* The blocks to be disabled */
1157:ad5940lib/ad5940.c ****   DisSet = LPMODECTRL_ALL & (~EnSet);
1158:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_LPMODECON);
1159:ad5940lib/ad5940.c ****   /* Enable selected set */
1160:ad5940lib/ad5940.c ****   {
1161:ad5940lib/ad5940.c ****     /* Clear bits to enable HFOSC, HPREF, ALDO */
1162:ad5940lib/ad5940.c ****     if (EnSet & LPMODECTRL_HFOSCEN) {
1163:ad5940lib/ad5940.c ****         tempreg &= ~BITM_AFE_LPMODECON_HFOSCPD;
1164:ad5940lib/ad5940.c ****         EnSet &= ~LPMODECTRL_HFOSCEN;
1165:ad5940lib/ad5940.c ****     }
1166:ad5940lib/ad5940.c ****     if(EnSet & LPMODECTRL_HPREFPWR)
1167:ad5940lib/ad5940.c ****     {
1168:ad5940lib/ad5940.c ****       tempreg &= ~BITM_AFE_LPMODECON_HPREFDIS;
1169:ad5940lib/ad5940.c ****       EnSet &= ~LPMODECTRL_HPREFPWR;
1170:ad5940lib/ad5940.c ****     }
1171:ad5940lib/ad5940.c ****     if(EnSet & LPMODECTRL_ALDOPWR)
1172:ad5940lib/ad5940.c ****     {
1173:ad5940lib/ad5940.c ****       tempreg &= ~BITM_AFE_LPMODECON_ALDOEN;
1174:ad5940lib/ad5940.c ****       EnSet &= ~LPMODECTRL_ALDOPWR;
1175:ad5940lib/ad5940.c ****     }
1176:ad5940lib/ad5940.c ****     tempreg |= EnSet; /* Set other bits to enable function */
1177:ad5940lib/ad5940.c ****   }
1178:ad5940lib/ad5940.c ****   /* Disable other blocks */
1179:ad5940lib/ad5940.c ****   {
1180:ad5940lib/ad5940.c ****     /* Set bits to disable HFOSC, HPREF, ALDO */
1181:ad5940lib/ad5940.c ****     if (DisSet & LPMODECTRL_HFOSCEN) {
1182:ad5940lib/ad5940.c ****         tempreg |= BITM_AFE_LPMODECON_HFOSCPD;
1183:ad5940lib/ad5940.c ****         DisSet &= ~LPMODECTRL_HFOSCEN;
1184:ad5940lib/ad5940.c ****     }
1185:ad5940lib/ad5940.c ****     if(DisSet & LPMODECTRL_HPREFPWR)
1186:ad5940lib/ad5940.c ****     {
1187:ad5940lib/ad5940.c ****       tempreg |= BITM_AFE_LPMODECON_HPREFDIS;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 88


1188:ad5940lib/ad5940.c ****       DisSet &= ~LPMODECTRL_HPREFPWR;
1189:ad5940lib/ad5940.c ****     }
1190:ad5940lib/ad5940.c ****     if(DisSet & LPMODECTRL_ALDOPWR)
1191:ad5940lib/ad5940.c ****     {
1192:ad5940lib/ad5940.c ****       tempreg |= BITM_AFE_LPMODECON_ALDOEN;
1193:ad5940lib/ad5940.c ****       DisSet &= ~LPMODECTRL_ALDOPWR;
1194:ad5940lib/ad5940.c ****     }
1195:ad5940lib/ad5940.c ****     tempreg &= ~DisSet; /* Clear other bits to disable function */
1196:ad5940lib/ad5940.c ****   }
1197:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPMODECON, tempreg);
1198:ad5940lib/ad5940.c **** 
1199:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
1200:ad5940lib/ad5940.c **** }
1201:ad5940lib/ad5940.c **** 
1202:ad5940lib/ad5940.c **** /**
1203:ad5940lib/ad5940.c ****    @brief Set AFE power mode and system bandwidth include HSDAC, Excitation-buffer, HSTIA and ADC e
1204:ad5940lib/ad5940.c ****    @param AfePwr : {AFEPWR_LP, AFEPWR_HP}
1205:ad5940lib/ad5940.c ****           Select parameters from @ref AFEPWR_Const
1206:ad5940lib/ad5940.c ****           - AFEPWR_LP: Set AFE to low power mode
1207:ad5940lib/ad5940.c ****           - AFEPWR_HP: Set AFE to High speed mode to support 200kHz.
1208:ad5940lib/ad5940.c ****    @param AfeBw : {AFEBW_AUTOSET, AFEBW_50KHZ, AFEBW_100KHZ, AFEBW_250KHZ}
1209:ad5940lib/ad5940.c ****           - AFEBW_AUTOSET: Set the bandwidth automatically based on WGFCW frequency word.
1210:ad5940lib/ad5940.c ****           - AFEBW_50KHZ: Set system bandwidth to 50kHz.
1211:ad5940lib/ad5940.c ****           - AFEBW_100KHZ: Set system bandwidth to 100kHz.
1212:ad5940lib/ad5940.c ****           - AFEBW_250KHZ: Set system bandwidth to 250kHz.
1213:ad5940lib/ad5940.c ****    @return return none.
1214:ad5940lib/ad5940.c **** */
1215:ad5940lib/ad5940.c **** void AD5940_AFEPwrBW(uint32_t AfePwr, uint32_t AfeBw)
1216:ad5940lib/ad5940.c **** {
1217:ad5940lib/ad5940.c ****   //check parameters
1218:ad5940lib/ad5940.c ****   uint32_t tempreg;
1219:ad5940lib/ad5940.c ****   tempreg = AfePwr;
1220:ad5940lib/ad5940.c ****   tempreg |= AfeBw << BITP_AFE_PMBW_SYSBW;
1221:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_PMBW, tempreg);
1222:ad5940lib/ad5940.c **** }
1223:ad5940lib/ad5940.c **** 
1224:ad5940lib/ad5940.c **** /**
1225:ad5940lib/ad5940.c ****    @brief Configure reference buffer include 1.8V/1.1V high/low power buffers.
1226:ad5940lib/ad5940.c ****    @param pBufCfg :Pointer to buffer configure structure;
1227:ad5940lib/ad5940.c ****    @return return none.
1228:ad5940lib/ad5940.c **** */
1229:ad5940lib/ad5940.c **** void AD5940_REFCfgS(AFERefCfg_Type *pBufCfg)
1230:ad5940lib/ad5940.c **** {
1231:ad5940lib/ad5940.c ****   uint32_t tempreg;
1232:ad5940lib/ad5940.c ****   
1233:ad5940lib/ad5940.c ****   /* HP Reference(bandgap) */
1234:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
1235:ad5940lib/ad5940.c ****   tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
1236:ad5940lib/ad5940.c ****   if(pBufCfg->HpBandgapEn == bFALSE)
1237:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_AFECON_HPREFDIS;
1238:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_AFECON, tempreg);
1239:ad5940lib/ad5940.c ****   /* Reference buffer configure */
1240:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_BUFSENCON);
1241:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8BuffEn == bTRUE)
1242:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCEN;
1243:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V1BuffEn == bTRUE)
1244:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1HPADCEN;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 89


1245:ad5940lib/ad5940.c ****   if(pBufCfg->Lp1V8BuffEn == bTRUE)
1246:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8LPADCEN;
1247:ad5940lib/ad5940.c ****   if(pBufCfg->Lp1V1BuffEn == bTRUE)
1248:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCEN;
1249:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8ThemBuff == bTRUE)
1250:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8THERMSTEN;
1251:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8Ilimit == bTRUE)
1252:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCILIMITEN;
1253:ad5940lib/ad5940.c ****   if(pBufCfg->Disc1V8Cap == bTRUE)
1254:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCCHGDIS;
1255:ad5940lib/ad5940.c ****   if(pBufCfg->Disc1V1Cap == bTRUE)
1256:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCCHGDIS;
1257:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_BUFSENCON, tempreg);
1258:ad5940lib/ad5940.c **** 
1259:ad5940lib/ad5940.c ****   /* LPREFBUFCON */
1260:ad5940lib/ad5940.c ****   tempreg = 0;
1261:ad5940lib/ad5940.c ****   if(pBufCfg->LpRefBufEn == bFALSE)
1262:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_LPBUF2P5DIS;
1263:ad5940lib/ad5940.c ****   if(pBufCfg->LpBandgapEn == bFALSE)
1264:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_LPREFDIS;
1265:ad5940lib/ad5940.c ****   if(pBufCfg->LpRefBoostEn == bTRUE)
1266:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_BOOSTCURRENT;
1267:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPREFBUFCON, tempreg);
1268:ad5940lib/ad5940.c **** }
1269:ad5940lib/ad5940.c **** /**
1270:ad5940lib/ad5940.c ****  * @} End of AFE_Control_Functions
1271:ad5940lib/ad5940.c ****  * @} End of AFE_Control
1272:ad5940lib/ad5940.c ****  * */
1273:ad5940lib/ad5940.c **** 
1274:ad5940lib/ad5940.c **** /**
1275:ad5940lib/ad5940.c ****  * @defgroup High_Speed_Loop
1276:ad5940lib/ad5940.c ****  * @brief The high speed loop
1277:ad5940lib/ad5940.c ****  * @{
1278:ad5940lib/ad5940.c ****  *    @defgroup High_Speed_Loop_Functions
1279:ad5940lib/ad5940.c ****  *    @{
1280:ad5940lib/ad5940.c **** */
1281:ad5940lib/ad5940.c **** 
1282:ad5940lib/ad5940.c **** /**
1283:ad5940lib/ad5940.c ****    @brief Configure High speed loop(high bandwidth loop or 
1284:ad5940lib/ad5940.c ****           called excitation loop). This configuration includes HSDAC, HSTIA and Switch matrix. 
1285:ad5940lib/ad5940.c ****    @param pHsLoopCfg : Pointer to configure structure;
1286:ad5940lib/ad5940.c ****    @return return none.
1287:ad5940lib/ad5940.c **** */
1288:ad5940lib/ad5940.c **** void AD5940_HSLoopCfgS(HSLoopCfg_Type *pHsLoopCfg)
1289:ad5940lib/ad5940.c **** {
1290:ad5940lib/ad5940.c ****   AD5940_HSDacCfgS(&pHsLoopCfg->HsDacCfg);
1291:ad5940lib/ad5940.c ****   AD5940_HSTIACfgS(&pHsLoopCfg->HsTiaCfg);
1292:ad5940lib/ad5940.c ****   AD5940_SWMatrixCfgS(&pHsLoopCfg->SWMatCfg);
1293:ad5940lib/ad5940.c ****   AD5940_WGCfgS(&pHsLoopCfg->WgCfg);
1294:ad5940lib/ad5940.c **** }
1295:ad5940lib/ad5940.c **** 
1296:ad5940lib/ad5940.c **** /**
1297:ad5940lib/ad5940.c ****    @brief Initialize switch matrix
1298:ad5940lib/ad5940.c ****    @param pSwMatrix: Pointer to configuration structure
1299:ad5940lib/ad5940.c ****    @return return none.
1300:ad5940lib/ad5940.c **** */
1301:ad5940lib/ad5940.c **** void AD5940_SWMatrixCfgS(SWMatrixCfg_Type *pSwMatrix)
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 90


1302:ad5940lib/ad5940.c **** {
1303:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DSWFULLCON, pSwMatrix->Dswitch);
1304:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_PSWFULLCON, pSwMatrix->Pswitch);
1305:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_NSWFULLCON, pSwMatrix->Nswitch);
1306:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_TSWFULLCON, pSwMatrix->Tswitch);
1307:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SWCON, BITM_AFE_SWCON_SWSOURCESEL); /* Update switch configuration */
1308:ad5940lib/ad5940.c **** }
1309:ad5940lib/ad5940.c **** 
1310:ad5940lib/ad5940.c **** /**
1311:ad5940lib/ad5940.c ****    @brief Initialize HSDAC
1312:ad5940lib/ad5940.c ****    @param pHsDacCfg: Pointer to configuration structure
1313:ad5940lib/ad5940.c ****    @return return none.
1314:ad5940lib/ad5940.c **** */
1315:ad5940lib/ad5940.c **** void AD5940_HSDacCfgS(HSDACCfg_Type *pHsDacCfg)
1316:ad5940lib/ad5940.c **** {
1317:ad5940lib/ad5940.c ****   uint32_t tempreg;
1318:ad5940lib/ad5940.c ****   //Check parameters
1319:ad5940lib/ad5940.c ****   tempreg = 0;
1320:ad5940lib/ad5940.c ****   if(pHsDacCfg->ExcitBufGain == EXCITBUFGAIN_0P25)
1321:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSDACCON_INAMPGNMDE; /* Enable attenuator */
1322:ad5940lib/ad5940.c ****   if(pHsDacCfg->HsDacGain == HSDACGAIN_0P2)
1323:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSDACCON_ATTENEN; /* Enable attenuator */
1324:ad5940lib/ad5940.c ****   tempreg |= (pHsDacCfg->HsDacUpdateRate&0xff)<<BITP_AFE_HSDACCON_RATE;
1325:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSDACCON, tempreg);
1326:ad5940lib/ad5940.c **** }
1327:ad5940lib/ad5940.c **** 
1328:ad5940lib/ad5940.c **** 
1329:ad5940lib/ad5940.c **** static void __AD5940_SetDExRTIA(uint32_t DExPin, uint32_t DeRtia, uint32_t DeRload)
1330:ad5940lib/ad5940.c **** {
 3099              		.loc 1 1330 1 is_stmt 1 view -0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 16
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103              		.loc 1 1330 1 is_stmt 0 view .LVU920
 3104 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3105              	.LCFI58:
 3106              		.cfi_def_cfa_offset 20
 3107              		.cfi_offset 4, -20
 3108              		.cfi_offset 5, -16
 3109              		.cfi_offset 6, -12
 3110              		.cfi_offset 7, -8
 3111              		.cfi_offset 14, -4
 3112 0002 85B0     		sub	sp, sp, #20
 3113              	.LCFI59:
 3114              		.cfi_def_cfa_offset 40
 3115 0004 0546     		mov	r5, r0
 3116 0006 1646     		mov	r6, r2
1331:ad5940lib/ad5940.c ****   uint32_t tempreg;
 3117              		.loc 1 1331 3 is_stmt 1 view .LVU921
1332:ad5940lib/ad5940.c ****   /* deal with HSTIA DE RTIA */
1333:ad5940lib/ad5940.c ****   if(DeRtia >= HSTIADERTIA_OPEN)
 3118              		.loc 1 1333 3 view .LVU922
 3119              		.loc 1 1333 5 is_stmt 0 view .LVU923
 3120 0008 0A29     		cmp	r1, #10
 3121 000a 1AD8     		bhi	.L209
 3122 000c 0C46     		mov	r4, r1
1334:ad5940lib/ad5940.c ****     tempreg = 0x1f << 3;  /* bit field HPTIRES03CON[7:3] */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 91


1335:ad5940lib/ad5940.c ****   else if(DeRtia >= HSTIADERTIA_1K)
 3123              		.loc 1 1335 8 is_stmt 1 view .LVU924
 3124              		.loc 1 1335 10 is_stmt 0 view .LVU925
 3125 000e 0229     		cmp	r1, #2
 3126 0010 02D9     		bls	.L205
1336:ad5940lib/ad5940.c ****   {
1337:ad5940lib/ad5940.c ****     tempreg = (DeRtia - 3 + 11) << 3;
 3127              		.loc 1 1337 5 is_stmt 1 view .LVU926
 3128              		.loc 1 1337 27 is_stmt 0 view .LVU927
 3129 0012 0831     		adds	r1, r1, #8
 3130              	.LVL220:
 3131              		.loc 1 1337 13 view .LVU928
 3132 0014 C900     		lsls	r1, r1, #3
 3133              	.LVL221:
 3134              		.loc 1 1337 13 view .LVU929
 3135 0016 15E0     		b	.L204
 3136              	.LVL222:
 3137              	.L205:
 3138              	.LBB11:
1338:ad5940lib/ad5940.c ****   }
1339:ad5940lib/ad5940.c ****   else  /* DERTIA 50/100/200Ohm */
1340:ad5940lib/ad5940.c ****   {
1341:ad5940lib/ad5940.c ****     const uint8_t DeRtiaTable[3][5] = 
 3139              		.loc 1 1341 5 is_stmt 1 view .LVU930
 3140              		.loc 1 1341 19 is_stmt 0 view .LVU931
 3141 0018 6F46     		mov	r7, sp
 3142 001a 114B     		ldr	r3, .L212
 3143 001c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3144              	.LVL223:
 3145              		.loc 1 1341 19 view .LVU932
 3146 001e 07C7     		stmia	r7!, {r0, r1, r2}
 3147 0020 27F8023B 		strh	r3, [r7], #2	@ movhi
 3148 0024 1B0C     		lsrs	r3, r3, #16
 3149 0026 3B70     		strb	r3, [r7]
1342:ad5940lib/ad5940.c ****     {
1343:ad5940lib/ad5940.c **** //Rload  0      10    30    50    100 
1344:ad5940lib/ad5940.c **** 			{0x00, 0x01, 0x02, 0x03, 0x06}, /* RTIA 50Ohm */
1345:ad5940lib/ad5940.c **** 			{0x03, 0x04, 0x05, 0x06, 0x07}, /* RTIA 100Ohm */
1346:ad5940lib/ad5940.c **** 			{0x07, 0x07, 0x09, 0x09, 0x0a}, /* RTIA 200Ohm */
1347:ad5940lib/ad5940.c ****     };
1348:ad5940lib/ad5940.c ****     if(DeRload < HSTIADERLOAD_OPEN)
 3150              		.loc 1 1348 5 is_stmt 1 view .LVU933
 3151              		.loc 1 1348 7 is_stmt 0 view .LVU934
 3152 0028 042E     		cmp	r6, #4
 3153 002a 08D8     		bhi	.L210
1349:ad5940lib/ad5940.c ****       tempreg = (uint32_t)(DeRtiaTable[DeRtia][DeRload])<<3;
 3154              		.loc 1 1349 7 is_stmt 1 view .LVU935
 3155              		.loc 1 1349 47 is_stmt 0 view .LVU936
 3156 002c 04EB8403 		add	r3, r4, r4, lsl #2
 3157 0030 04AA     		add	r2, sp, #16
 3158 0032 1344     		add	r3, r3, r2
 3159 0034 3344     		add	r3, r3, r6
 3160 0036 13F8101C 		ldrb	r1, [r3, #-16]	@ zero_extendqisi2
 3161              		.loc 1 1349 15 view .LVU937
 3162 003a C900     		lsls	r1, r1, #3
 3163              	.LVL224:
 3164              		.loc 1 1349 15 view .LVU938
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 92


 3165 003c 02E0     		b	.L204
 3166              	.LVL225:
 3167              	.L210:
1350:ad5940lib/ad5940.c ****     else
1351:ad5940lib/ad5940.c ****       tempreg = (0x1f)<<3;  /* Set it to HSTIADERTIA_OPEN. This setting is illegal */
 3168              		.loc 1 1351 15 view .LVU939
 3169 003e F821     		movs	r1, #248
 3170              	.LVL226:
 3171              		.loc 1 1351 15 view .LVU940
 3172 0040 00E0     		b	.L204
 3173              	.LVL227:
 3174              	.L209:
 3175              		.loc 1 1351 15 view .LVU941
 3176              	.LBE11:
1334:ad5940lib/ad5940.c ****   else if(DeRtia >= HSTIADERTIA_1K)
 3177              		.loc 1 1334 13 view .LVU942
 3178 0042 F821     		movs	r1, #248
 3179              	.LVL228:
 3180              	.L204:
1352:ad5940lib/ad5940.c ****   }
1353:ad5940lib/ad5940.c ****   /* deal with HSTIA Rload */
1354:ad5940lib/ad5940.c ****   tempreg |= DeRload;
 3181              		.loc 1 1354 3 is_stmt 1 view .LVU943
 3182              		.loc 1 1354 11 is_stmt 0 view .LVU944
 3183 0044 3143     		orrs	r1, r1, r6
 3184              	.LVL229:
1355:ad5940lib/ad5940.c ****   if(DExPin) //DE1
 3185              		.loc 1 1355 3 is_stmt 1 view .LVU945
 3186              		.loc 1 1355 5 is_stmt 0 view .LVU946
 3187 0046 2DB1     		cbz	r5, .L207
1356:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_DE1RESCON, tempreg);
 3188              		.loc 1 1356 5 is_stmt 1 view .LVU947
 3189 0048 42F2F400 		movw	r0, #8436
 3190 004c FFF7FEFF 		bl	AD5940_WriteReg
 3191              	.LVL230:
 3192              	.L203:
1357:ad5940lib/ad5940.c ****   else  //DE0
1358:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_DE0RESCON, tempreg);
1359:ad5940lib/ad5940.c **** }
 3193              		.loc 1 1359 1 is_stmt 0 view .LVU948
 3194 0050 05B0     		add	sp, sp, #20
 3195              	.LCFI60:
 3196              		.cfi_remember_state
 3197              		.cfi_def_cfa_offset 20
 3198              		@ sp needed
 3199 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 3200              	.LVL231:
 3201              	.L207:
 3202              	.LCFI61:
 3203              		.cfi_restore_state
1358:ad5940lib/ad5940.c **** }
 3204              		.loc 1 1358 5 is_stmt 1 view .LVU949
 3205 0054 42F2F800 		movw	r0, #8440
 3206 0058 FFF7FEFF 		bl	AD5940_WriteReg
 3207              	.LVL232:
 3208              		.loc 1 1359 1 is_stmt 0 view .LVU950
 3209 005c F8E7     		b	.L203
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 93


 3210              	.L213:
 3211 005e 00BF     		.align	2
 3212              	.L212:
 3213 0060 44000000 		.word	.LANCHOR0+68
 3214              		.cfi_endproc
 3215              	.LFE44:
 3217              		.section	.text.AD5940_ReadReg,"ax",%progbits
 3218              		.align	1
 3219              		.global	AD5940_ReadReg
 3220              		.syntax unified
 3221              		.thumb
 3222              		.thumb_func
 3223              		.fpu fpv5-d16
 3225              	AD5940_ReadReg:
 3226              	.LVL233:
 3227              	.LFB35:
 993:ad5940lib/ad5940.c **** #ifdef SEQUENCE_GENERATOR
 3228              		.loc 1 993 1 is_stmt 1 view -0
 3229              		.cfi_startproc
 3230              		@ args = 0, pretend = 0, frame = 0
 3231              		@ frame_needed = 0, uses_anonymous_args = 0
 993:ad5940lib/ad5940.c **** #ifdef SEQUENCE_GENERATOR
 3232              		.loc 1 993 1 is_stmt 0 view .LVU952
 3233 0000 08B5     		push	{r3, lr}
 3234              	.LCFI62:
 3235              		.cfi_def_cfa_offset 8
 3236              		.cfi_offset 3, -8
 3237              		.cfi_offset 14, -4
 995:ad5940lib/ad5940.c ****     return AD5940_SEQReadReg(RegAddr);
 3238              		.loc 1 995 3 is_stmt 1 view .LVU953
 995:ad5940lib/ad5940.c ****     return AD5940_SEQReadReg(RegAddr);
 3239              		.loc 1 995 14 is_stmt 0 view .LVU954
 3240 0002 054B     		ldr	r3, .L219
 3241 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 995:ad5940lib/ad5940.c ****     return AD5940_SEQReadReg(RegAddr);
 3242              		.loc 1 995 5 view .LVU955
 3243 0006 012B     		cmp	r3, #1
 3244 0008 02D0     		beq	.L218
1002:ad5940lib/ad5940.c **** #endif
 3245              		.loc 1 1002 5 is_stmt 1 view .LVU956
1002:ad5940lib/ad5940.c **** #endif
 3246              		.loc 1 1002 12 is_stmt 0 view .LVU957
 3247 000a FFF7FEFF 		bl	AD5940_SPIReadReg
 3248              	.LVL234:
 3249              	.L214:
1004:ad5940lib/ad5940.c **** 
 3250              		.loc 1 1004 1 view .LVU958
 3251 000e 08BD     		pop	{r3, pc}
 3252              	.LVL235:
 3253              	.L218:
 996:ad5940lib/ad5940.c ****   else
 3254              		.loc 1 996 5 is_stmt 1 view .LVU959
 996:ad5940lib/ad5940.c ****   else
 3255              		.loc 1 996 12 is_stmt 0 view .LVU960
 3256 0010 FFF7FEFF 		bl	AD5940_SEQReadReg
 3257              	.LVL236:
 996:ad5940lib/ad5940.c ****   else
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 94


 3258              		.loc 1 996 12 view .LVU961
 3259 0014 FBE7     		b	.L214
 3260              	.L220:
 3261 0016 00BF     		.align	2
 3262              	.L219:
 3263 0018 00000000 		.word	SeqGenDB
 3264              		.cfi_endproc
 3265              	.LFE35:
 3267              		.section	.rodata.AD5940_Initialize.str1.4,"aMS",%progbits,1
 3268              		.align	2
 3269              	.LC15:
 3270 0000 43484950 		.ascii	"CHIPID read :0x%04x.\012\000"
 3270      49442072 
 3270      65616420 
 3270      3A307825 
 3270      3034782E 
 3271 0016 0000     		.align	2
 3272              	.LC16:
 3273 0018 43484950 		.ascii	"CHIPID read error:0x%04x. AD5940 is not present?\012"
 3273      49442072 
 3273      65616420 
 3273      6572726F 
 3273      723A3078 
 3274 0049 00       		.ascii	"\000"
 3275              		.section	.text.AD5940_Initialize,"ax",%progbits
 3276              		.align	1
 3277              		.global	AD5940_Initialize
 3278              		.syntax unified
 3279              		.thumb
 3280              		.thumb_func
 3281              		.fpu fpv5-d16
 3283              	AD5940_Initialize:
 3284              	.LFB36:
1025:ad5940lib/ad5940.c ****   int i;
 3285              		.loc 1 1025 1 is_stmt 1 view -0
 3286              		.cfi_startproc
 3287              		@ args = 0, pretend = 0, frame = 112
 3288              		@ frame_needed = 0, uses_anonymous_args = 0
 3289 0000 10B5     		push	{r4, lr}
 3290              	.LCFI63:
 3291              		.cfi_def_cfa_offset 8
 3292              		.cfi_offset 4, -8
 3293              		.cfi_offset 14, -4
 3294 0002 9CB0     		sub	sp, sp, #112
 3295              	.LCFI64:
 3296              		.cfi_def_cfa_offset 120
1026:ad5940lib/ad5940.c ****   /* Write following registers with its data sequentially whenever there is a reset happened. */
 3297              		.loc 1 1026 3 view .LVU963
1028:ad5940lib/ad5940.c ****   {
 3298              		.loc 1 1028 3 view .LVU964
1032:ad5940lib/ad5940.c ****   {
 3299              		.loc 1 1032 4 is_stmt 0 view .LVU965
 3300 0004 7022     		movs	r2, #112
 3301 0006 2049     		ldr	r1, .L232
 3302 0008 6846     		mov	r0, sp
 3303 000a FFF7FEFF 		bl	memcpy
 3304              	.LVL237:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 95


1058:ad5940lib/ad5940.c ****   SeqGenDB.RegCount = 0;
 3305              		.loc 1 1058 3 is_stmt 1 view .LVU966
1058:ad5940lib/ad5940.c ****   SeqGenDB.RegCount = 0;
 3306              		.loc 1 1058 19 is_stmt 0 view .LVU967
 3307 000e 1F4B     		ldr	r3, .L232+4
 3308 0010 0024     		movs	r4, #0
 3309 0012 DC60     		str	r4, [r3, #12]
1059:ad5940lib/ad5940.c ****   SeqGenDB.LastError = AD5940ERR_OK;
 3310              		.loc 1 1059 3 is_stmt 1 view .LVU968
1059:ad5940lib/ad5940.c ****   SeqGenDB.LastError = AD5940ERR_OK;
 3311              		.loc 1 1059 21 is_stmt 0 view .LVU969
 3312 0014 5C61     		str	r4, [r3, #20]
1060:ad5940lib/ad5940.c ****   SeqGenDB.EngineStart = bFALSE;
 3313              		.loc 1 1060 3 is_stmt 1 view .LVU970
1060:ad5940lib/ad5940.c ****   SeqGenDB.EngineStart = bFALSE;
 3314              		.loc 1 1060 22 is_stmt 0 view .LVU971
 3315 0016 9C61     		str	r4, [r3, #24]
1061:ad5940lib/ad5940.c **** #ifndef CHIPSEL_M355
 3316              		.loc 1 1061 3 is_stmt 1 view .LVU972
1061:ad5940lib/ad5940.c **** #ifndef CHIPSEL_M355
 3317              		.loc 1 1061 24 is_stmt 0 view .LVU973
 3318 0018 1C70     		strb	r4, [r3]
1063:ad5940lib/ad5940.c **** #endif
 3319              		.loc 1 1063 3 is_stmt 1 view .LVU974
 3320 001a FFF7FEFF 		bl	AD5940_CsSet
 3321              	.LVL238:
1065:ad5940lib/ad5940.c ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3322              		.loc 1 1065 3 view .LVU975
1065:ad5940lib/ad5940.c ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3323              		.loc 1 1065 3 is_stmt 0 view .LVU976
 3324 001e 09E0     		b	.L222
 3325              	.LVL239:
 3326              	.L223:
1066:ad5940lib/ad5940.c ****   i = AD5940_ReadReg(REG_AFECON_CHIPID);  
 3327              		.loc 1 1066 5 is_stmt 1 discriminator 3 view .LVU977
 3328 0020 1CAB     		add	r3, sp, #112
 3329 0022 03EBC403 		add	r3, r3, r4, lsl #3
 3330 0026 53F86C1C 		ldr	r1, [r3, #-108]
 3331 002a 33F8700C 		ldrh	r0, [r3, #-112]
 3332 002e FFF7FEFF 		bl	AD5940_WriteReg
 3333              	.LVL240:
1065:ad5940lib/ad5940.c ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3334              		.loc 1 1065 52 discriminator 3 view .LVU978
1065:ad5940lib/ad5940.c ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3335              		.loc 1 1065 53 is_stmt 0 discriminator 3 view .LVU979
 3336 0032 0134     		adds	r4, r4, #1
 3337              	.LVL241:
 3338              	.L222:
1065:ad5940lib/ad5940.c ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3339              		.loc 1 1065 12 is_stmt 1 discriminator 1 view .LVU980
1065:ad5940lib/ad5940.c ****     AD5940_WriteReg(RegTable[i].reg_addr, RegTable[i].reg_data);
 3340              		.loc 1 1065 3 is_stmt 0 discriminator 1 view .LVU981
 3341 0034 0D2C     		cmp	r4, #13
 3342 0036 F3D9     		bls	.L223
1067:ad5940lib/ad5940.c ****   if(i == 0x5501)
 3343              		.loc 1 1067 3 is_stmt 1 view .LVU982
1067:ad5940lib/ad5940.c ****   if(i == 0x5501)
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 96


 3344              		.loc 1 1067 7 is_stmt 0 view .LVU983
 3345 0038 40F20440 		movw	r0, #1028
 3346 003c FFF7FEFF 		bl	AD5940_ReadReg
 3347              	.LVL242:
 3348 0040 0146     		mov	r1, r0
 3349              	.LVL243:
1068:ad5940lib/ad5940.c **** 	{
 3350              		.loc 1 1068 3 is_stmt 1 view .LVU984
1068:ad5940lib/ad5940.c **** 	{
 3351              		.loc 1 1068 5 is_stmt 0 view .LVU985
 3352 0042 45F20153 		movw	r3, #21761
 3353 0046 9842     		cmp	r0, r3
 3354 0048 0BD0     		beq	.L230
1073:ad5940lib/ad5940.c **** 	{
 3355              		.loc 1 1073 8 is_stmt 1 view .LVU986
1073:ad5940lib/ad5940.c **** 	{
 3356              		.loc 1 1073 10 is_stmt 0 view .LVU987
 3357 004a 45F20253 		movw	r3, #21762
 3358 004e 9842     		cmp	r0, r3
 3359 0050 0ED0     		beq	.L231
1078:ad5940lib/ad5940.c ****     bIsS2silicon = bFALSE;
 3360              		.loc 1 1078 8 is_stmt 1 view .LVU988
1078:ad5940lib/ad5940.c ****     bIsS2silicon = bFALSE;
 3361              		.loc 1 1078 10 is_stmt 0 view .LVU989
 3362 0052 B0F5AA4F 		cmp	r0, #21760
 3363 0056 12D1     		bne	.L227
1079:ad5940lib/ad5940.c **** #ifdef ADI_DEBUG
 3364              		.loc 1 1079 5 is_stmt 1 view .LVU990
1079:ad5940lib/ad5940.c **** #ifdef ADI_DEBUG
 3365              		.loc 1 1079 18 is_stmt 0 view .LVU991
 3366 0058 0D4B     		ldr	r3, .L232+8
 3367 005a 0022     		movs	r2, #0
 3368 005c 1A70     		strb	r2, [r3]
 3369              	.LVL244:
 3370              	.L221:
1094:ad5940lib/ad5940.c **** 
 3371              		.loc 1 1094 1 view .LVU992
 3372 005e 1CB0     		add	sp, sp, #112
 3373              	.LCFI65:
 3374              		.cfi_remember_state
 3375              		.cfi_def_cfa_offset 8
 3376              		@ sp needed
 3377 0060 10BD     		pop	{r4, pc}
 3378              	.LVL245:
 3379              	.L230:
 3380              	.LCFI66:
 3381              		.cfi_restore_state
1070:ad5940lib/ad5940.c **** 		printf("CHIPID read :0x%04x.\n", i);
 3382              		.loc 1 1070 5 is_stmt 1 view .LVU993
1070:ad5940lib/ad5940.c **** 		printf("CHIPID read :0x%04x.\n", i);
 3383              		.loc 1 1070 18 is_stmt 0 view .LVU994
 3384 0062 0B4B     		ldr	r3, .L232+8
 3385 0064 0122     		movs	r2, #1
 3386 0066 1A70     		strb	r2, [r3]
1071:ad5940lib/ad5940.c **** 	}
 3387              		.loc 1 1071 3 is_stmt 1 view .LVU995
 3388 0068 0A48     		ldr	r0, .L232+12
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 97


 3389              	.LVL246:
1071:ad5940lib/ad5940.c **** 	}
 3390              		.loc 1 1071 3 is_stmt 0 view .LVU996
 3391 006a FFF7FEFF 		bl	printf
 3392              	.LVL247:
1071:ad5940lib/ad5940.c **** 	}
 3393              		.loc 1 1071 3 view .LVU997
 3394 006e F6E7     		b	.L221
 3395              	.LVL248:
 3396              	.L231:
1075:ad5940lib/ad5940.c **** 		printf("CHIPID read :0x%04x.\n", i);
 3397              		.loc 1 1075 5 is_stmt 1 view .LVU998
1075:ad5940lib/ad5940.c **** 		printf("CHIPID read :0x%04x.\n", i);
 3398              		.loc 1 1075 18 is_stmt 0 view .LVU999
 3399 0070 074B     		ldr	r3, .L232+8
 3400 0072 0122     		movs	r2, #1
 3401 0074 1A70     		strb	r2, [r3]
1076:ad5940lib/ad5940.c **** 	}
 3402              		.loc 1 1076 3 is_stmt 1 view .LVU1000
 3403 0076 0748     		ldr	r0, .L232+12
 3404              	.LVL249:
1076:ad5940lib/ad5940.c **** 	}
 3405              		.loc 1 1076 3 is_stmt 0 view .LVU1001
 3406 0078 FFF7FEFF 		bl	printf
 3407              	.LVL250:
1076:ad5940lib/ad5940.c **** 	}
 3408              		.loc 1 1076 3 view .LVU1002
 3409 007c EFE7     		b	.L221
 3410              	.LVL251:
 3411              	.L227:
1083:ad5940lib/ad5940.c ****     while(1);
 3412              		.loc 1 1083 5 is_stmt 1 view .LVU1003
 3413 007e 0648     		ldr	r0, .L232+16
 3414              	.LVL252:
1083:ad5940lib/ad5940.c ****     while(1);
 3415              		.loc 1 1083 5 is_stmt 0 view .LVU1004
 3416 0080 FFF7FEFF 		bl	printf
 3417              	.LVL253:
 3418              	.L228:
1084:ad5940lib/ad5940.c ****   }
 3419              		.loc 1 1084 5 is_stmt 1 discriminator 1 view .LVU1005
1084:ad5940lib/ad5940.c ****   }
 3420              		.loc 1 1084 13 discriminator 1 view .LVU1006
1084:ad5940lib/ad5940.c ****   }
 3421              		.loc 1 1084 10 discriminator 1 view .LVU1007
 3422 0084 FEE7     		b	.L228
 3423              	.L233:
 3424 0086 00BF     		.align	2
 3425              	.L232:
 3426 0088 54000000 		.word	.LANCHOR0+84
 3427 008c 00000000 		.word	SeqGenDB
 3428 0090 00000000 		.word	.LANCHOR1
 3429 0094 00000000 		.word	.LC15
 3430 0098 18000000 		.word	.LC16
 3431              		.cfi_endproc
 3432              	.LFE36:
 3434              		.section	.text.AD5940_AFECtrlS,"ax",%progbits
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 98


 3435              		.align	1
 3436              		.global	AD5940_AFECtrlS
 3437              		.syntax unified
 3438              		.thumb
 3439              		.thumb_func
 3440              		.fpu fpv5-d16
 3442              	AD5940_AFECtrlS:
 3443              	.LVL254:
 3444              	.LFB37:
1107:ad5940lib/ad5940.c ****   /* Check parameters */
 3445              		.loc 1 1107 1 view -0
 3446              		.cfi_startproc
 3447              		@ args = 0, pretend = 0, frame = 0
 3448              		@ frame_needed = 0, uses_anonymous_args = 0
1107:ad5940lib/ad5940.c ****   /* Check parameters */
 3449              		.loc 1 1107 1 is_stmt 0 view .LVU1009
 3450 0000 38B5     		push	{r3, r4, r5, lr}
 3451              	.LCFI67:
 3452              		.cfi_def_cfa_offset 16
 3453              		.cfi_offset 3, -16
 3454              		.cfi_offset 4, -12
 3455              		.cfi_offset 5, -8
 3456              		.cfi_offset 14, -4
 3457 0002 0446     		mov	r4, r0
 3458 0004 0D46     		mov	r5, r1
1109:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
 3459              		.loc 1 1109 3 is_stmt 1 view .LVU1010
1110:ad5940lib/ad5940.c ****   if (State == bTRUE) {
 3460              		.loc 1 1110 3 view .LVU1011
1110:ad5940lib/ad5940.c ****   if (State == bTRUE) {
 3461              		.loc 1 1110 13 is_stmt 0 view .LVU1012
 3462 0006 4FF40050 		mov	r0, #8192
 3463              	.LVL255:
1110:ad5940lib/ad5940.c ****   if (State == bTRUE) {
 3464              		.loc 1 1110 13 view .LVU1013
 3465 000a FFF7FEFF 		bl	AD5940_ReadReg
 3466              	.LVL256:
1111:ad5940lib/ad5940.c ****     /* Clear bits to enable HPREF and ALDOLimit*/
 3467              		.loc 1 1111 3 is_stmt 1 view .LVU1014
1111:ad5940lib/ad5940.c ****     /* Clear bits to enable HPREF and ALDOLimit*/
 3468              		.loc 1 1111 6 is_stmt 0 view .LVU1015
 3469 000e 012D     		cmp	r5, #1
 3470 0010 14D0     		beq	.L242
1127:ad5940lib/ad5940.c ****     {
 3471              		.loc 1 1127 5 is_stmt 1 view .LVU1016
1127:ad5940lib/ad5940.c ****     {
 3472              		.loc 1 1127 7 is_stmt 0 view .LVU1017
 3473 0012 14F0200F 		tst	r4, #32
 3474 0016 03D0     		beq	.L239
1129:ad5940lib/ad5940.c ****         AfeCtrlSet &= ~AFECTRL_HPREFPWR;
 3475              		.loc 1 1129 9 is_stmt 1 view .LVU1018
1129:ad5940lib/ad5940.c ****         AfeCtrlSet &= ~AFECTRL_HPREFPWR;
 3476              		.loc 1 1129 17 is_stmt 0 view .LVU1019
 3477 0018 40F02000 		orr	r0, r0, #32
 3478              	.LVL257:
1130:ad5940lib/ad5940.c ****     }
 3479              		.loc 1 1130 9 is_stmt 1 view .LVU1020
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 99


1130:ad5940lib/ad5940.c ****     }
 3480              		.loc 1 1130 20 is_stmt 0 view .LVU1021
 3481 001c 24F02004 		bic	r4, r4, #32
 3482              	.LVL258:
 3483              	.L239:
1132:ad5940lib/ad5940.c ****     {
 3484              		.loc 1 1132 5 is_stmt 1 view .LVU1022
1132:ad5940lib/ad5940.c ****     {
 3485              		.loc 1 1132 7 is_stmt 0 view .LVU1023
 3486 0020 14F4002F 		tst	r4, #524288
 3487 0024 03D0     		beq	.L240
1134:ad5940lib/ad5940.c ****       AfeCtrlSet &= ~AFECTRL_ALDOLIMIT;
 3488              		.loc 1 1134 7 is_stmt 1 view .LVU1024
1134:ad5940lib/ad5940.c ****       AfeCtrlSet &= ~AFECTRL_ALDOLIMIT;
 3489              		.loc 1 1134 15 is_stmt 0 view .LVU1025
 3490 0026 40F40020 		orr	r0, r0, #524288
 3491              	.LVL259:
1135:ad5940lib/ad5940.c ****     }
 3492              		.loc 1 1135 7 is_stmt 1 view .LVU1026
1135:ad5940lib/ad5940.c ****     }
 3493              		.loc 1 1135 18 is_stmt 0 view .LVU1027
 3494 002a 24F40024 		bic	r4, r4, #524288
 3495              	.LVL260:
 3496              	.L240:
1137:ad5940lib/ad5940.c ****   }
 3497              		.loc 1 1137 5 is_stmt 1 view .LVU1028
1137:ad5940lib/ad5940.c ****   }
 3498              		.loc 1 1137 13 is_stmt 0 view .LVU1029
 3499 002e 20EA0401 		bic	r1, r0, r4
 3500              	.LVL261:
 3501              	.L238:
1139:ad5940lib/ad5940.c **** }
 3502              		.loc 1 1139 3 is_stmt 1 view .LVU1030
 3503 0032 4FF40050 		mov	r0, #8192
 3504 0036 FFF7FEFF 		bl	AD5940_WriteReg
 3505              	.LVL262:
1140:ad5940lib/ad5940.c **** /** When LP mode is enabled, some functions are under control of LPMODECON, rather than original re
 3506              		.loc 1 1140 1 is_stmt 0 view .LVU1031
 3507 003a 38BD     		pop	{r3, r4, r5, pc}
 3508              	.LVL263:
 3509              	.L242:
1113:ad5940lib/ad5940.c ****         tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
 3510              		.loc 1 1113 5 is_stmt 1 view .LVU1032
1113:ad5940lib/ad5940.c ****         tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
 3511              		.loc 1 1113 8 is_stmt 0 view .LVU1033
 3512 003c 14F0200F 		tst	r4, #32
 3513 0040 03D0     		beq	.L236
1114:ad5940lib/ad5940.c ****         AfeCtrlSet &= ~AFECTRL_HPREFPWR;
 3514              		.loc 1 1114 9 is_stmt 1 view .LVU1034
1114:ad5940lib/ad5940.c ****         AfeCtrlSet &= ~AFECTRL_HPREFPWR;
 3515              		.loc 1 1114 17 is_stmt 0 view .LVU1035
 3516 0042 20F02000 		bic	r0, r0, #32
 3517              	.LVL264:
1115:ad5940lib/ad5940.c ****     }
 3518              		.loc 1 1115 9 is_stmt 1 view .LVU1036
1115:ad5940lib/ad5940.c ****     }
 3519              		.loc 1 1115 20 is_stmt 0 view .LVU1037
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 100


 3520 0046 24F02004 		bic	r4, r4, #32
 3521              	.LVL265:
 3522              	.L236:
1117:ad5940lib/ad5940.c ****     {
 3523              		.loc 1 1117 5 is_stmt 1 view .LVU1038
1117:ad5940lib/ad5940.c ****     {
 3524              		.loc 1 1117 7 is_stmt 0 view .LVU1039
 3525 004a 14F4002F 		tst	r4, #524288
 3526 004e 03D0     		beq	.L237
1119:ad5940lib/ad5940.c ****       AfeCtrlSet &= ~AFECTRL_ALDOLIMIT;
 3527              		.loc 1 1119 7 is_stmt 1 view .LVU1040
1119:ad5940lib/ad5940.c ****       AfeCtrlSet &= ~AFECTRL_ALDOLIMIT;
 3528              		.loc 1 1119 15 is_stmt 0 view .LVU1041
 3529 0050 20F40020 		bic	r0, r0, #524288
 3530              	.LVL266:
1120:ad5940lib/ad5940.c ****     }
 3531              		.loc 1 1120 7 is_stmt 1 view .LVU1042
1120:ad5940lib/ad5940.c ****     }
 3532              		.loc 1 1120 18 is_stmt 0 view .LVU1043
 3533 0054 24F40024 		bic	r4, r4, #524288
 3534              	.LVL267:
 3535              	.L237:
1122:ad5940lib/ad5940.c ****   }
 3536              		.loc 1 1122 5 is_stmt 1 view .LVU1044
1122:ad5940lib/ad5940.c ****   }
 3537              		.loc 1 1122 13 is_stmt 0 view .LVU1045
 3538 0058 44EA0001 		orr	r1, r4, r0
 3539              	.LVL268:
1122:ad5940lib/ad5940.c ****   }
 3540              		.loc 1 1122 13 view .LVU1046
 3541 005c E9E7     		b	.L238
 3542              		.cfi_endproc
 3543              	.LFE37:
 3545              		.section	.text.AD5940_LPModeCtrlS,"ax",%progbits
 3546              		.align	1
 3547              		.global	AD5940_LPModeCtrlS
 3548              		.syntax unified
 3549              		.thumb
 3550              		.thumb_func
 3551              		.fpu fpv5-d16
 3553              	AD5940_LPModeCtrlS:
 3554              	.LVL269:
 3555              	.LFB38:
1153:ad5940lib/ad5940.c ****   /* Check parameters */
 3556              		.loc 1 1153 1 is_stmt 1 view -0
 3557              		.cfi_startproc
 3558              		@ args = 0, pretend = 0, frame = 0
 3559              		@ frame_needed = 0, uses_anonymous_args = 0
1153:ad5940lib/ad5940.c ****   /* Check parameters */
 3560              		.loc 1 1153 1 is_stmt 0 view .LVU1048
 3561 0000 70B5     		push	{r4, r5, r6, lr}
 3562              	.LCFI68:
 3563              		.cfi_def_cfa_offset 16
 3564              		.cfi_offset 4, -16
 3565              		.cfi_offset 5, -12
 3566              		.cfi_offset 6, -8
 3567              		.cfi_offset 14, -4
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 101


 3568 0002 0446     		mov	r4, r0
1155:ad5940lib/ad5940.c ****   uint32_t DisSet;    /* The blocks to be disabled */
 3569              		.loc 1 1155 3 is_stmt 1 view .LVU1049
1156:ad5940lib/ad5940.c ****   DisSet = LPMODECTRL_ALL & (~EnSet);
 3570              		.loc 1 1156 3 view .LVU1050
1157:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_LPMODECON);
 3571              		.loc 1 1157 3 view .LVU1051
1157:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_LPMODECON);
 3572              		.loc 1 1157 30 is_stmt 0 view .LVU1052
 3573 0004 C643     		mvns	r6, r0
1157:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_LPMODECON);
 3574              		.loc 1 1157 10 view .LVU1053
 3575 0006 C6F30805 		ubfx	r5, r6, #0, #9
 3576              	.LVL270:
1158:ad5940lib/ad5940.c ****   /* Enable selected set */
 3577              		.loc 1 1158 3 is_stmt 1 view .LVU1054
1158:ad5940lib/ad5940.c ****   /* Enable selected set */
 3578              		.loc 1 1158 13 is_stmt 0 view .LVU1055
 3579 000a 42F21410 		movw	r0, #8468
 3580              	.LVL271:
1158:ad5940lib/ad5940.c ****   /* Enable selected set */
 3581              		.loc 1 1158 13 view .LVU1056
 3582 000e FFF7FEFF 		bl	AD5940_ReadReg
 3583              	.LVL272:
1162:ad5940lib/ad5940.c ****         tempreg &= ~BITM_AFE_LPMODECON_HFOSCPD;
 3584              		.loc 1 1162 5 is_stmt 1 view .LVU1057
1162:ad5940lib/ad5940.c ****         tempreg &= ~BITM_AFE_LPMODECON_HFOSCPD;
 3585              		.loc 1 1162 8 is_stmt 0 view .LVU1058
 3586 0012 14F0010F 		tst	r4, #1
 3587 0016 03D0     		beq	.L244
1163:ad5940lib/ad5940.c ****         EnSet &= ~LPMODECTRL_HFOSCEN;
 3588              		.loc 1 1163 9 is_stmt 1 view .LVU1059
1163:ad5940lib/ad5940.c ****         EnSet &= ~LPMODECTRL_HFOSCEN;
 3589              		.loc 1 1163 17 is_stmt 0 view .LVU1060
 3590 0018 20F00100 		bic	r0, r0, #1
 3591              	.LVL273:
1164:ad5940lib/ad5940.c ****     }
 3592              		.loc 1 1164 9 is_stmt 1 view .LVU1061
1164:ad5940lib/ad5940.c ****     }
 3593              		.loc 1 1164 15 is_stmt 0 view .LVU1062
 3594 001c 24F00104 		bic	r4, r4, #1
 3595              	.LVL274:
 3596              	.L244:
1166:ad5940lib/ad5940.c ****     {
 3597              		.loc 1 1166 5 is_stmt 1 view .LVU1063
1166:ad5940lib/ad5940.c ****     {
 3598              		.loc 1 1166 7 is_stmt 0 view .LVU1064
 3599 0020 14F0020F 		tst	r4, #2
 3600 0024 03D0     		beq	.L245
1168:ad5940lib/ad5940.c ****       EnSet &= ~LPMODECTRL_HPREFPWR;
 3601              		.loc 1 1168 7 is_stmt 1 view .LVU1065
1168:ad5940lib/ad5940.c ****       EnSet &= ~LPMODECTRL_HPREFPWR;
 3602              		.loc 1 1168 15 is_stmt 0 view .LVU1066
 3603 0026 20F00200 		bic	r0, r0, #2
 3604              	.LVL275:
1169:ad5940lib/ad5940.c ****     }
 3605              		.loc 1 1169 7 is_stmt 1 view .LVU1067
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 102


1169:ad5940lib/ad5940.c ****     }
 3606              		.loc 1 1169 13 is_stmt 0 view .LVU1068
 3607 002a 24F00204 		bic	r4, r4, #2
 3608              	.LVL276:
 3609              	.L245:
1171:ad5940lib/ad5940.c ****     {
 3610              		.loc 1 1171 5 is_stmt 1 view .LVU1069
1171:ad5940lib/ad5940.c ****     {
 3611              		.loc 1 1171 7 is_stmt 0 view .LVU1070
 3612 002e 14F4807F 		tst	r4, #256
 3613 0032 03D0     		beq	.L246
1173:ad5940lib/ad5940.c ****       EnSet &= ~LPMODECTRL_ALDOPWR;
 3614              		.loc 1 1173 7 is_stmt 1 view .LVU1071
1173:ad5940lib/ad5940.c ****       EnSet &= ~LPMODECTRL_ALDOPWR;
 3615              		.loc 1 1173 15 is_stmt 0 view .LVU1072
 3616 0034 20F48070 		bic	r0, r0, #256
 3617              	.LVL277:
1174:ad5940lib/ad5940.c ****     }
 3618              		.loc 1 1174 7 is_stmt 1 view .LVU1073
1174:ad5940lib/ad5940.c ****     }
 3619              		.loc 1 1174 13 is_stmt 0 view .LVU1074
 3620 0038 24F48074 		bic	r4, r4, #256
 3621              	.LVL278:
 3622              	.L246:
1176:ad5940lib/ad5940.c ****   }
 3623              		.loc 1 1176 5 is_stmt 1 view .LVU1075
1176:ad5940lib/ad5940.c ****   }
 3624              		.loc 1 1176 13 is_stmt 0 view .LVU1076
 3625 003c 44EA0001 		orr	r1, r4, r0
 3626              	.LVL279:
1181:ad5940lib/ad5940.c ****         tempreg |= BITM_AFE_LPMODECON_HFOSCPD;
 3627              		.loc 1 1181 5 is_stmt 1 view .LVU1077
1181:ad5940lib/ad5940.c ****         tempreg |= BITM_AFE_LPMODECON_HFOSCPD;
 3628              		.loc 1 1181 8 is_stmt 0 view .LVU1078
 3629 0040 16F0010F 		tst	r6, #1
 3630 0044 03D0     		beq	.L247
1182:ad5940lib/ad5940.c ****         DisSet &= ~LPMODECTRL_HFOSCEN;
 3631              		.loc 1 1182 9 is_stmt 1 view .LVU1079
1182:ad5940lib/ad5940.c ****         DisSet &= ~LPMODECTRL_HFOSCEN;
 3632              		.loc 1 1182 17 is_stmt 0 view .LVU1080
 3633 0046 41F00101 		orr	r1, r1, #1
 3634              	.LVL280:
1183:ad5940lib/ad5940.c ****     }
 3635              		.loc 1 1183 9 is_stmt 1 view .LVU1081
1183:ad5940lib/ad5940.c ****     }
 3636              		.loc 1 1183 16 is_stmt 0 view .LVU1082
 3637 004a 06F4FF75 		and	r5, r6, #510
 3638              	.LVL281:
 3639              	.L247:
1185:ad5940lib/ad5940.c ****     {
 3640              		.loc 1 1185 5 is_stmt 1 view .LVU1083
1185:ad5940lib/ad5940.c ****     {
 3641              		.loc 1 1185 7 is_stmt 0 view .LVU1084
 3642 004e 15F0020F 		tst	r5, #2
 3643 0052 03D0     		beq	.L248
1187:ad5940lib/ad5940.c ****       DisSet &= ~LPMODECTRL_HPREFPWR;
 3644              		.loc 1 1187 7 is_stmt 1 view .LVU1085
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 103


1187:ad5940lib/ad5940.c ****       DisSet &= ~LPMODECTRL_HPREFPWR;
 3645              		.loc 1 1187 15 is_stmt 0 view .LVU1086
 3646 0054 41F00201 		orr	r1, r1, #2
 3647              	.LVL282:
1188:ad5940lib/ad5940.c ****     }
 3648              		.loc 1 1188 7 is_stmt 1 view .LVU1087
1188:ad5940lib/ad5940.c ****     }
 3649              		.loc 1 1188 14 is_stmt 0 view .LVU1088
 3650 0058 25F00205 		bic	r5, r5, #2
 3651              	.LVL283:
 3652              	.L248:
1190:ad5940lib/ad5940.c ****     {
 3653              		.loc 1 1190 5 is_stmt 1 view .LVU1089
1190:ad5940lib/ad5940.c ****     {
 3654              		.loc 1 1190 7 is_stmt 0 view .LVU1090
 3655 005c 15F4807F 		tst	r5, #256
 3656 0060 03D0     		beq	.L249
1192:ad5940lib/ad5940.c ****       DisSet &= ~LPMODECTRL_ALDOPWR;
 3657              		.loc 1 1192 7 is_stmt 1 view .LVU1091
1192:ad5940lib/ad5940.c ****       DisSet &= ~LPMODECTRL_ALDOPWR;
 3658              		.loc 1 1192 15 is_stmt 0 view .LVU1092
 3659 0062 41F48071 		orr	r1, r1, #256
 3660              	.LVL284:
1193:ad5940lib/ad5940.c ****     }
 3661              		.loc 1 1193 7 is_stmt 1 view .LVU1093
1193:ad5940lib/ad5940.c ****     }
 3662              		.loc 1 1193 14 is_stmt 0 view .LVU1094
 3663 0066 25F48075 		bic	r5, r5, #256
 3664              	.LVL285:
 3665              	.L249:
1195:ad5940lib/ad5940.c ****   }
 3666              		.loc 1 1195 5 is_stmt 1 view .LVU1095
1197:ad5940lib/ad5940.c **** 
 3667              		.loc 1 1197 3 view .LVU1096
 3668 006a 21EA0501 		bic	r1, r1, r5
 3669              	.LVL286:
1197:ad5940lib/ad5940.c **** 
 3670              		.loc 1 1197 3 is_stmt 0 view .LVU1097
 3671 006e 42F21410 		movw	r0, #8468
 3672 0072 FFF7FEFF 		bl	AD5940_WriteReg
 3673              	.LVL287:
1199:ad5940lib/ad5940.c **** }
 3674              		.loc 1 1199 3 is_stmt 1 view .LVU1098
1200:ad5940lib/ad5940.c **** 
 3675              		.loc 1 1200 1 is_stmt 0 view .LVU1099
 3676 0076 0020     		movs	r0, #0
 3677 0078 70BD     		pop	{r4, r5, r6, pc}
1200:ad5940lib/ad5940.c **** 
 3678              		.loc 1 1200 1 view .LVU1100
 3679              		.cfi_endproc
 3680              	.LFE38:
 3682              		.section	.text.AD5940_AFEPwrBW,"ax",%progbits
 3683              		.align	1
 3684              		.global	AD5940_AFEPwrBW
 3685              		.syntax unified
 3686              		.thumb
 3687              		.thumb_func
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 104


 3688              		.fpu fpv5-d16
 3690              	AD5940_AFEPwrBW:
 3691              	.LVL288:
 3692              	.LFB39:
1216:ad5940lib/ad5940.c ****   //check parameters
 3693              		.loc 1 1216 1 is_stmt 1 view -0
 3694              		.cfi_startproc
 3695              		@ args = 0, pretend = 0, frame = 0
 3696              		@ frame_needed = 0, uses_anonymous_args = 0
1216:ad5940lib/ad5940.c ****   //check parameters
 3697              		.loc 1 1216 1 is_stmt 0 view .LVU1102
 3698 0000 08B5     		push	{r3, lr}
 3699              	.LCFI69:
 3700              		.cfi_def_cfa_offset 8
 3701              		.cfi_offset 3, -8
 3702              		.cfi_offset 14, -4
1218:ad5940lib/ad5940.c ****   tempreg = AfePwr;
 3703              		.loc 1 1218 3 is_stmt 1 view .LVU1103
1219:ad5940lib/ad5940.c ****   tempreg |= AfeBw << BITP_AFE_PMBW_SYSBW;
 3704              		.loc 1 1219 3 view .LVU1104
 3705              	.LVL289:
1220:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_PMBW, tempreg);
 3706              		.loc 1 1220 3 view .LVU1105
1221:ad5940lib/ad5940.c **** }
 3707              		.loc 1 1221 3 view .LVU1106
 3708 0002 40EA8101 		orr	r1, r0, r1, lsl #2
 3709              	.LVL290:
1221:ad5940lib/ad5940.c **** }
 3710              		.loc 1 1221 3 is_stmt 0 view .LVU1107
 3711 0006 42F2F020 		movw	r0, #8944
 3712              	.LVL291:
1221:ad5940lib/ad5940.c **** }
 3713              		.loc 1 1221 3 view .LVU1108
 3714 000a FFF7FEFF 		bl	AD5940_WriteReg
 3715              	.LVL292:
1222:ad5940lib/ad5940.c **** 
 3716              		.loc 1 1222 1 view .LVU1109
 3717 000e 08BD     		pop	{r3, pc}
 3718              		.cfi_endproc
 3719              	.LFE39:
 3721              		.section	.text.AD5940_REFCfgS,"ax",%progbits
 3722              		.align	1
 3723              		.global	AD5940_REFCfgS
 3724              		.syntax unified
 3725              		.thumb
 3726              		.thumb_func
 3727              		.fpu fpv5-d16
 3729              	AD5940_REFCfgS:
 3730              	.LVL293:
 3731              	.LFB40:
1230:ad5940lib/ad5940.c ****   uint32_t tempreg;
 3732              		.loc 1 1230 1 is_stmt 1 view -0
 3733              		.cfi_startproc
 3734              		@ args = 0, pretend = 0, frame = 0
 3735              		@ frame_needed = 0, uses_anonymous_args = 0
1230:ad5940lib/ad5940.c ****   uint32_t tempreg;
 3736              		.loc 1 1230 1 is_stmt 0 view .LVU1111
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 105


 3737 0000 10B5     		push	{r4, lr}
 3738              	.LCFI70:
 3739              		.cfi_def_cfa_offset 8
 3740              		.cfi_offset 4, -8
 3741              		.cfi_offset 14, -4
 3742 0002 0446     		mov	r4, r0
1231:ad5940lib/ad5940.c ****   
 3743              		.loc 1 1231 3 is_stmt 1 view .LVU1112
1234:ad5940lib/ad5940.c ****   tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
 3744              		.loc 1 1234 3 view .LVU1113
1234:ad5940lib/ad5940.c ****   tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
 3745              		.loc 1 1234 13 is_stmt 0 view .LVU1114
 3746 0004 4FF40050 		mov	r0, #8192
 3747              	.LVL294:
1234:ad5940lib/ad5940.c ****   tempreg &= ~BITM_AFE_AFECON_HPREFDIS;
 3748              		.loc 1 1234 13 view .LVU1115
 3749 0008 FFF7FEFF 		bl	AD5940_ReadReg
 3750              	.LVL295:
1235:ad5940lib/ad5940.c ****   if(pBufCfg->HpBandgapEn == bFALSE)
 3751              		.loc 1 1235 3 is_stmt 1 view .LVU1116
1235:ad5940lib/ad5940.c ****   if(pBufCfg->HpBandgapEn == bFALSE)
 3752              		.loc 1 1235 11 is_stmt 0 view .LVU1117
 3753 000c 20F02001 		bic	r1, r0, #32
 3754              	.LVL296:
1236:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_AFECON_HPREFDIS;
 3755              		.loc 1 1236 3 is_stmt 1 view .LVU1118
1236:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_AFECON_HPREFDIS;
 3756              		.loc 1 1236 13 is_stmt 0 view .LVU1119
 3757 0010 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
1236:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_AFECON_HPREFDIS;
 3758              		.loc 1 1236 5 view .LVU1120
 3759 0012 0BB9     		cbnz	r3, .L254
1237:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_AFECON, tempreg);
 3760              		.loc 1 1237 5 is_stmt 1 view .LVU1121
1237:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_AFECON, tempreg);
 3761              		.loc 1 1237 13 is_stmt 0 view .LVU1122
 3762 0014 41F02001 		orr	r1, r1, #32
 3763              	.LVL297:
 3764              	.L254:
1238:ad5940lib/ad5940.c ****   /* Reference buffer configure */
 3765              		.loc 1 1238 3 is_stmt 1 view .LVU1123
 3766 0018 4FF40050 		mov	r0, #8192
 3767 001c FFF7FEFF 		bl	AD5940_WriteReg
 3768              	.LVL298:
1240:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8BuffEn == bTRUE)
 3769              		.loc 1 1240 3 view .LVU1124
1240:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8BuffEn == bTRUE)
 3770              		.loc 1 1240 13 is_stmt 0 view .LVU1125
 3771 0020 4FF40650 		mov	r0, #8576
 3772 0024 FFF7FEFF 		bl	AD5940_ReadReg
 3773              	.LVL299:
 3774 0028 0146     		mov	r1, r0
 3775              	.LVL300:
1241:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCEN;
 3776              		.loc 1 1241 3 is_stmt 1 view .LVU1126
1241:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCEN;
 3777              		.loc 1 1241 13 is_stmt 0 view .LVU1127
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 106


 3778 002a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
1241:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCEN;
 3779              		.loc 1 1241 5 view .LVU1128
 3780 002c 012B     		cmp	r3, #1
 3781 002e 27D0     		beq	.L268
 3782              	.LVL301:
 3783              	.L255:
1243:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1HPADCEN;
 3784              		.loc 1 1243 3 is_stmt 1 view .LVU1129
1243:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1HPADCEN;
 3785              		.loc 1 1243 13 is_stmt 0 view .LVU1130
 3786 0030 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
1243:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1HPADCEN;
 3787              		.loc 1 1243 5 view .LVU1131
 3788 0032 012B     		cmp	r3, #1
 3789 0034 27D0     		beq	.L269
 3790              	.L256:
1245:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8LPADCEN;
 3791              		.loc 1 1245 3 is_stmt 1 view .LVU1132
1245:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8LPADCEN;
 3792              		.loc 1 1245 13 is_stmt 0 view .LVU1133
 3793 0036 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
1245:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8LPADCEN;
 3794              		.loc 1 1245 5 view .LVU1134
 3795 0038 012B     		cmp	r3, #1
 3796 003a 27D0     		beq	.L270
 3797              	.L257:
1247:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCEN;
 3798              		.loc 1 1247 3 is_stmt 1 view .LVU1135
1247:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCEN;
 3799              		.loc 1 1247 13 is_stmt 0 view .LVU1136
 3800 003c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
1247:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCEN;
 3801              		.loc 1 1247 5 view .LVU1137
 3802 003e 012B     		cmp	r3, #1
 3803 0040 27D0     		beq	.L271
 3804              	.L258:
1249:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8THERMSTEN;
 3805              		.loc 1 1249 3 is_stmt 1 view .LVU1138
1249:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8THERMSTEN;
 3806              		.loc 1 1249 13 is_stmt 0 view .LVU1139
 3807 0042 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
1249:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8THERMSTEN;
 3808              		.loc 1 1249 5 view .LVU1140
 3809 0044 012B     		cmp	r3, #1
 3810 0046 27D0     		beq	.L272
 3811              	.L259:
1251:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCILIMITEN;
 3812              		.loc 1 1251 3 is_stmt 1 view .LVU1141
1251:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCILIMITEN;
 3813              		.loc 1 1251 13 is_stmt 0 view .LVU1142
 3814 0048 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
1251:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCILIMITEN;
 3815              		.loc 1 1251 5 view .LVU1143
 3816 004a 012B     		cmp	r3, #1
 3817 004c 27D0     		beq	.L273
 3818              	.L260:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 107


1253:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCCHGDIS;
 3819              		.loc 1 1253 3 is_stmt 1 view .LVU1144
1253:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCCHGDIS;
 3820              		.loc 1 1253 13 is_stmt 0 view .LVU1145
 3821 004e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1253:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P8HPADCCHGDIS;
 3822              		.loc 1 1253 5 view .LVU1146
 3823 0050 012B     		cmp	r3, #1
 3824 0052 27D0     		beq	.L274
 3825              	.L261:
1255:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCCHGDIS;
 3826              		.loc 1 1255 3 is_stmt 1 view .LVU1147
1255:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCCHGDIS;
 3827              		.loc 1 1255 13 is_stmt 0 view .LVU1148
 3828 0054 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
1255:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_BUFSENCON_V1P1LPADCCHGDIS;
 3829              		.loc 1 1255 5 view .LVU1149
 3830 0056 012B     		cmp	r3, #1
 3831 0058 27D0     		beq	.L275
 3832              	.L262:
1257:ad5940lib/ad5940.c **** 
 3833              		.loc 1 1257 3 is_stmt 1 view .LVU1150
 3834 005a 4FF40650 		mov	r0, #8576
 3835 005e FFF7FEFF 		bl	AD5940_WriteReg
 3836              	.LVL302:
1260:ad5940lib/ad5940.c ****   if(pBufCfg->LpRefBufEn == bFALSE)
 3837              		.loc 1 1260 3 view .LVU1151
1261:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_LPBUF2P5DIS;
 3838              		.loc 1 1261 3 view .LVU1152
1261:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_LPBUF2P5DIS;
 3839              		.loc 1 1261 13 is_stmt 0 view .LVU1153
 3840 0062 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
1261:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_LPBUF2P5DIS;
 3841              		.loc 1 1261 5 view .LVU1154
 3842 0064 23B3     		cbz	r3, .L266
1260:ad5940lib/ad5940.c ****   if(pBufCfg->LpRefBufEn == bFALSE)
 3843              		.loc 1 1260 11 view .LVU1155
 3844 0066 0021     		movs	r1, #0
 3845              	.L263:
 3846              	.LVL303:
1263:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_LPREFDIS;
 3847              		.loc 1 1263 3 is_stmt 1 view .LVU1156
1263:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_LPREFDIS;
 3848              		.loc 1 1263 13 is_stmt 0 view .LVU1157
 3849 0068 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
1263:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_LPREFDIS;
 3850              		.loc 1 1263 5 view .LVU1158
 3851 006a 0BB9     		cbnz	r3, .L264
1264:ad5940lib/ad5940.c ****   if(pBufCfg->LpRefBoostEn == bTRUE)
 3852              		.loc 1 1264 5 is_stmt 1 view .LVU1159
1264:ad5940lib/ad5940.c ****   if(pBufCfg->LpRefBoostEn == bTRUE)
 3853              		.loc 1 1264 13 is_stmt 0 view .LVU1160
 3854 006c 41F00101 		orr	r1, r1, #1
 3855              	.LVL304:
 3856              	.L264:
1265:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_BOOSTCURRENT;
 3857              		.loc 1 1265 3 is_stmt 1 view .LVU1161
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 108


1265:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_BOOSTCURRENT;
 3858              		.loc 1 1265 13 is_stmt 0 view .LVU1162
 3859 0070 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
1265:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPREFBUFCON_BOOSTCURRENT;
 3860              		.loc 1 1265 5 view .LVU1163
 3861 0072 012B     		cmp	r3, #1
 3862 0074 1ED0     		beq	.L276
 3863              	.L265:
1267:ad5940lib/ad5940.c **** }
 3864              		.loc 1 1267 3 is_stmt 1 view .LVU1164
 3865 0076 42F25000 		movw	r0, #8272
 3866 007a FFF7FEFF 		bl	AD5940_WriteReg
 3867              	.LVL305:
1268:ad5940lib/ad5940.c **** /**
 3868              		.loc 1 1268 1 is_stmt 0 view .LVU1165
 3869 007e 10BD     		pop	{r4, pc}
 3870              	.LVL306:
 3871              	.L268:
1242:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V1BuffEn == bTRUE)
 3872              		.loc 1 1242 5 is_stmt 1 view .LVU1166
1242:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V1BuffEn == bTRUE)
 3873              		.loc 1 1242 13 is_stmt 0 view .LVU1167
 3874 0080 40F00101 		orr	r1, r0, #1
 3875              	.LVL307:
1242:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V1BuffEn == bTRUE)
 3876              		.loc 1 1242 13 view .LVU1168
 3877 0084 D4E7     		b	.L255
 3878              	.L269:
1244:ad5940lib/ad5940.c ****   if(pBufCfg->Lp1V8BuffEn == bTRUE)
 3879              		.loc 1 1244 5 is_stmt 1 view .LVU1169
1244:ad5940lib/ad5940.c ****   if(pBufCfg->Lp1V8BuffEn == bTRUE)
 3880              		.loc 1 1244 13 is_stmt 0 view .LVU1170
 3881 0086 41F01001 		orr	r1, r1, #16
 3882              	.LVL308:
1244:ad5940lib/ad5940.c ****   if(pBufCfg->Lp1V8BuffEn == bTRUE)
 3883              		.loc 1 1244 13 view .LVU1171
 3884 008a D4E7     		b	.L256
 3885              	.L270:
1246:ad5940lib/ad5940.c ****   if(pBufCfg->Lp1V1BuffEn == bTRUE)
 3886              		.loc 1 1246 5 is_stmt 1 view .LVU1172
1246:ad5940lib/ad5940.c ****   if(pBufCfg->Lp1V1BuffEn == bTRUE)
 3887              		.loc 1 1246 13 is_stmt 0 view .LVU1173
 3888 008c 41F00401 		orr	r1, r1, #4
 3889              	.LVL309:
1246:ad5940lib/ad5940.c ****   if(pBufCfg->Lp1V1BuffEn == bTRUE)
 3890              		.loc 1 1246 13 view .LVU1174
 3891 0090 D4E7     		b	.L257
 3892              	.L271:
1248:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8ThemBuff == bTRUE)
 3893              		.loc 1 1248 5 is_stmt 1 view .LVU1175
1248:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8ThemBuff == bTRUE)
 3894              		.loc 1 1248 13 is_stmt 0 view .LVU1176
 3895 0092 41F02001 		orr	r1, r1, #32
 3896              	.LVL310:
1248:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8ThemBuff == bTRUE)
 3897              		.loc 1 1248 13 view .LVU1177
 3898 0096 D4E7     		b	.L258
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 109


 3899              	.L272:
1250:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8Ilimit == bTRUE)
 3900              		.loc 1 1250 5 is_stmt 1 view .LVU1178
1250:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8Ilimit == bTRUE)
 3901              		.loc 1 1250 13 is_stmt 0 view .LVU1179
 3902 0098 41F48071 		orr	r1, r1, #256
 3903              	.LVL311:
1250:ad5940lib/ad5940.c ****   if(pBufCfg->Hp1V8Ilimit == bTRUE)
 3904              		.loc 1 1250 13 view .LVU1180
 3905 009c D4E7     		b	.L259
 3906              	.L273:
1252:ad5940lib/ad5940.c ****   if(pBufCfg->Disc1V8Cap == bTRUE)
 3907              		.loc 1 1252 5 is_stmt 1 view .LVU1181
1252:ad5940lib/ad5940.c ****   if(pBufCfg->Disc1V8Cap == bTRUE)
 3908              		.loc 1 1252 13 is_stmt 0 view .LVU1182
 3909 009e 41F00201 		orr	r1, r1, #2
 3910              	.LVL312:
1252:ad5940lib/ad5940.c ****   if(pBufCfg->Disc1V8Cap == bTRUE)
 3911              		.loc 1 1252 13 view .LVU1183
 3912 00a2 D4E7     		b	.L260
 3913              	.L274:
1254:ad5940lib/ad5940.c ****   if(pBufCfg->Disc1V1Cap == bTRUE)
 3914              		.loc 1 1254 5 is_stmt 1 view .LVU1184
1254:ad5940lib/ad5940.c ****   if(pBufCfg->Disc1V1Cap == bTRUE)
 3915              		.loc 1 1254 13 is_stmt 0 view .LVU1185
 3916 00a4 41F00801 		orr	r1, r1, #8
 3917              	.LVL313:
1254:ad5940lib/ad5940.c ****   if(pBufCfg->Disc1V1Cap == bTRUE)
 3918              		.loc 1 1254 13 view .LVU1186
 3919 00a8 D4E7     		b	.L261
 3920              	.L275:
1256:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_BUFSENCON, tempreg);
 3921              		.loc 1 1256 5 is_stmt 1 view .LVU1187
1256:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_BUFSENCON, tempreg);
 3922              		.loc 1 1256 13 is_stmt 0 view .LVU1188
 3923 00aa 41F04001 		orr	r1, r1, #64
 3924              	.LVL314:
1256:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_BUFSENCON, tempreg);
 3925              		.loc 1 1256 13 view .LVU1189
 3926 00ae D4E7     		b	.L262
 3927              	.LVL315:
 3928              	.L266:
1262:ad5940lib/ad5940.c ****   if(pBufCfg->LpBandgapEn == bFALSE)
 3929              		.loc 1 1262 13 view .LVU1190
 3930 00b0 0221     		movs	r1, #2
 3931 00b2 D9E7     		b	.L263
 3932              	.LVL316:
 3933              	.L276:
1266:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPREFBUFCON, tempreg);
 3934              		.loc 1 1266 5 is_stmt 1 view .LVU1191
1266:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPREFBUFCON, tempreg);
 3935              		.loc 1 1266 13 is_stmt 0 view .LVU1192
 3936 00b4 41F00401 		orr	r1, r1, #4
 3937              	.LVL317:
1266:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPREFBUFCON, tempreg);
 3938              		.loc 1 1266 13 view .LVU1193
 3939 00b8 DDE7     		b	.L265
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 110


 3940              		.cfi_endproc
 3941              	.LFE40:
 3943              		.section	.text.__AD5940_ReferenceON,"ax",%progbits
 3944              		.align	1
 3945              		.syntax unified
 3946              		.thumb
 3947              		.thumb_func
 3948              		.fpu fpv5-d16
 3950              	__AD5940_ReferenceON:
 3951              	.LFB113:
1360:ad5940lib/ad5940.c **** 
1361:ad5940lib/ad5940.c **** /**
1362:ad5940lib/ad5940.c ****    @brief Initialize High speed TIA amplifier
1363:ad5940lib/ad5940.c ****    @param pHsTiaCfg: Pointer to configuration structure
1364:ad5940lib/ad5940.c ****    @return return none.
1365:ad5940lib/ad5940.c **** */
1366:ad5940lib/ad5940.c **** AD5940Err AD5940_HSTIACfgS(HSTIACfg_Type *pHsTiaCfg)
1367:ad5940lib/ad5940.c **** {
1368:ad5940lib/ad5940.c ****   uint32_t tempreg;
1369:ad5940lib/ad5940.c ****   //Check parameters
1370:ad5940lib/ad5940.c ****   if(pHsTiaCfg == NULL) return AD5940ERR_NULLP;
1371:ad5940lib/ad5940.c ****     /* Available parameter is 1k, 5k,...,160k, short, OPEN */
1372:ad5940lib/ad5940.c ****   if(pHsTiaCfg->HstiaDeRtia < HSTIADERTIA_1K)
1373:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
1374:ad5940lib/ad5940.c ****   if(pHsTiaCfg->HstiaDeRtia > HSTIADERTIA_OPEN)
1375:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;  /* Parameter is invalid */
1376:ad5940lib/ad5940.c **** 
1377:ad5940lib/ad5940.c ****   if(pHsTiaCfg->HstiaDeRload > HSTIADERLOAD_OPEN)
1378:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;  /* Available parameter is OPEN, 0R,..., 100R */
1379:ad5940lib/ad5940.c **** 
1380:ad5940lib/ad5940.c ****   tempreg = 0;
1381:ad5940lib/ad5940.c ****   tempreg |= pHsTiaCfg->HstiaBias;
1382:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSTIACON, tempreg);
1383:ad5940lib/ad5940.c ****   /* HSRTIACON */
1384:ad5940lib/ad5940.c ****   /* Calculate CTIA value */
1385:ad5940lib/ad5940.c ****   tempreg = pHsTiaCfg->HstiaCtia << BITP_AFE_HSRTIACON_CTIACON;
1386:ad5940lib/ad5940.c ****   tempreg |= pHsTiaCfg->HstiaRtiaSel;
1387:ad5940lib/ad5940.c ****   if(pHsTiaCfg->DiodeClose == bTRUE)
1388:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSRTIACON_TIASW6CON; /* Close switch 6 */
1389:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSRTIACON, tempreg);
1390:ad5940lib/ad5940.c ****   /* DExRESCON */
1391:ad5940lib/ad5940.c ****   __AD5940_SetDExRTIA(0, pHsTiaCfg->HstiaDeRtia, pHsTiaCfg->HstiaDeRload);
1392:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
1393:ad5940lib/ad5940.c ****   __AD5940_SetDExRTIA(1, pHsTiaCfg->HstiaDe1Rtia, pHsTiaCfg->HstiaDe1Rload);
1394:ad5940lib/ad5940.c **** #endif
1395:ad5940lib/ad5940.c **** 
1396:ad5940lib/ad5940.c ****   /* Done */
1397:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
1398:ad5940lib/ad5940.c **** }
1399:ad5940lib/ad5940.c **** /**
1400:ad5940lib/ad5940.c ****  * @brief Configure HSTIA RTIA resistor and keep other parameters unchanged.
1401:ad5940lib/ad5940.c ****  * @param HSTIARtia: The RTIA setting, select it from @ref HSTIARTIA_Const
1402:ad5940lib/ad5940.c ****  * @return return none.
1403:ad5940lib/ad5940.c **** */
1404:ad5940lib/ad5940.c **** void AD5940_HSRTIACfgS(uint32_t HSTIARtia)
1405:ad5940lib/ad5940.c **** {
1406:ad5940lib/ad5940.c ****   uint32_t tempreg;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 111


1407:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_HSRTIACON);
1408:ad5940lib/ad5940.c ****   tempreg &= ~BITM_AFE_HSRTIACON_RTIACON;
1409:ad5940lib/ad5940.c ****   HSTIARtia &= BITM_AFE_HSRTIACON_RTIACON;
1410:ad5940lib/ad5940.c ****   tempreg |= HSTIARtia<<BITP_AFE_HSRTIACON_RTIACON;
1411:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSRTIACON, tempreg);
1412:ad5940lib/ad5940.c **** }
1413:ad5940lib/ad5940.c **** 
1414:ad5940lib/ad5940.c **** /**
1415:ad5940lib/ad5940.c ****  * @defgroup Waveform_Generator_Functions
1416:ad5940lib/ad5940.c ****  * @{
1417:ad5940lib/ad5940.c **** */
1418:ad5940lib/ad5940.c **** /**
1419:ad5940lib/ad5940.c ****  * @brief Initialize waveform generator
1420:ad5940lib/ad5940.c ****  * @param pWGInit: Pointer to configuration structure
1421:ad5940lib/ad5940.c ****  * @return return none.
1422:ad5940lib/ad5940.c **** */
1423:ad5940lib/ad5940.c **** void AD5940_WGCfgS(WGCfg_Type *pWGInit)
1424:ad5940lib/ad5940.c **** {
1425:ad5940lib/ad5940.c ****   //Check parameters
1426:ad5940lib/ad5940.c ****   uint32_t tempreg;
1427:ad5940lib/ad5940.c ****   if(pWGInit->WgType == WGTYPE_SIN)
1428:ad5940lib/ad5940.c ****   {
1429:ad5940lib/ad5940.c ****     /* Configure Sine wave Generator */
1430:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGFCW, pWGInit->SinCfg.SinFreqWord);
1431:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGAMPLITUDE, pWGInit->SinCfg.SinAmplitudeWord);
1432:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGOFFSET, pWGInit->SinCfg.SinOffsetWord);
1433:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGPHASE, pWGInit->SinCfg.SinPhaseWord);
1434:ad5940lib/ad5940.c ****   }
1435:ad5940lib/ad5940.c ****   else if(pWGInit->WgType == WGTYPE_TRAPZ)
1436:ad5940lib/ad5940.c ****   {
1437:ad5940lib/ad5940.c ****     /* Configure Trapezoid Generator */
1438:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGDCLEVEL1, pWGInit->TrapzCfg.WGTrapzDCLevel1);
1439:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGDCLEVEL2, pWGInit->TrapzCfg.WGTrapzDCLevel2);
1440:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGDELAY1, pWGInit->TrapzCfg.WGTrapzDelay1);
1441:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGDELAY2, pWGInit->TrapzCfg.WGTrapzDelay2);
1442:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGSLOPE1, pWGInit->TrapzCfg.WGTrapzSlope1);
1443:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGSLOPE2, pWGInit->TrapzCfg.WGTrapzSlope2);
1444:ad5940lib/ad5940.c ****   }
1445:ad5940lib/ad5940.c ****   else
1446:ad5940lib/ad5940.c ****   {
1447:ad5940lib/ad5940.c ****     /* Write DAC data. It's only have effect when WgType set to WGTYPE_MMR */ 
1448:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_HSDACDAT, pWGInit->WgCode);
1449:ad5940lib/ad5940.c ****   }
1450:ad5940lib/ad5940.c ****   tempreg = 0;
1451:ad5940lib/ad5940.c ****   
1452:ad5940lib/ad5940.c ****   if(pWGInit->GainCalEn == bTRUE)
1453:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_WGCON_DACGAINCAL;
1454:ad5940lib/ad5940.c ****   if(pWGInit->OffsetCalEn == bTRUE)
1455:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_WGCON_DACOFFSETCAL;
1456:ad5940lib/ad5940.c ****   tempreg |= (pWGInit->WgType) << BITP_AFE_WGCON_TYPESEL;
1457:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_WGCON, tempreg);
1458:ad5940lib/ad5940.c **** }
1459:ad5940lib/ad5940.c **** 
1460:ad5940lib/ad5940.c **** /**
1461:ad5940lib/ad5940.c ****  * @brief Write HSDAC code directly when WG configured to MMR type
1462:ad5940lib/ad5940.c ****  * @param code: The 12-bit HSDAC code.
1463:ad5940lib/ad5940.c ****  * @return return none.
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 112


1464:ad5940lib/ad5940.c **** */
1465:ad5940lib/ad5940.c **** AD5940Err AD5940_WGDACCodeS(uint32_t code)
1466:ad5940lib/ad5940.c **** {
1467:ad5940lib/ad5940.c ****   code &= 0xfff;
1468:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSDACDAT, code);
1469:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
1470:ad5940lib/ad5940.c **** }
1471:ad5940lib/ad5940.c **** 
1472:ad5940lib/ad5940.c **** /**
1473:ad5940lib/ad5940.c ****  * @brief Update WG SIN wave frequency in Hz.
1474:ad5940lib/ad5940.c ****  * @param SinFreqHz: The desired frequency in Hz.
1475:ad5940lib/ad5940.c ****  * @param WGClock: The clock for WG. It's same as system clock and the default value is internal 16
1476:ad5940lib/ad5940.c ****  * @return return none.
1477:ad5940lib/ad5940.c **** */
1478:ad5940lib/ad5940.c **** void AD5940_WGFreqCtrlS(float SinFreqHz, float WGClock)
1479:ad5940lib/ad5940.c **** {
1480:ad5940lib/ad5940.c ****   uint32_t freq_word;
1481:ad5940lib/ad5940.c ****   freq_word = AD5940_WGFreqWordCal(SinFreqHz, WGClock);
1482:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_WGFCW, freq_word);
1483:ad5940lib/ad5940.c **** }
1484:ad5940lib/ad5940.c **** 
1485:ad5940lib/ad5940.c **** /**
1486:ad5940lib/ad5940.c ****    @brief Calculate sine wave generator frequency word. The maxim frequency is 250kHz-1LSB
1487:ad5940lib/ad5940.c ****    @param SinFreqHz : Target frequency in Hz unit.
1488:ad5940lib/ad5940.c ****    @param WGClock: Waveform generator clock frequency in Hz unit. The clock is sourced from system 
1489:ad5940lib/ad5940.c ****    @return return none.
1490:ad5940lib/ad5940.c **** */
1491:ad5940lib/ad5940.c **** uint32_t AD5940_WGFreqWordCal(float SinFreqHz, float WGClock)
1492:ad5940lib/ad5940.c **** {
1493:ad5940lib/ad5940.c ****   uint32_t temp;
1494:ad5940lib/ad5940.c ****   uint32_t __BITWIDTH_WGFCW = 26;
1495:ad5940lib/ad5940.c ****   if(bIsS2silicon == bTRUE)
1496:ad5940lib/ad5940.c ****     __BITWIDTH_WGFCW = 30;
1497:ad5940lib/ad5940.c ****   if(WGClock == 0) return 0;
1498:ad5940lib/ad5940.c ****   temp = (uint32_t)(SinFreqHz*(1LL<<__BITWIDTH_WGFCW)/WGClock + 0.5f);
1499:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
1500:ad5940lib/ad5940.c ****     temp = (__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff;
1501:ad5940lib/ad5940.c ****   
1502:ad5940lib/ad5940.c ****   return temp;
1503:ad5940lib/ad5940.c **** }
1504:ad5940lib/ad5940.c **** 
1505:ad5940lib/ad5940.c **** /**
1506:ad5940lib/ad5940.c ****  * @} Waveform_Generator_Functions
1507:ad5940lib/ad5940.c ****  * @} High_Speed_Loop_Functions
1508:ad5940lib/ad5940.c ****  * @} High_Speed_Loop
1509:ad5940lib/ad5940.c **** */
1510:ad5940lib/ad5940.c **** 
1511:ad5940lib/ad5940.c **** 
1512:ad5940lib/ad5940.c **** /**
1513:ad5940lib/ad5940.c ****  * @defgroup Low_Power_Loop
1514:ad5940lib/ad5940.c ****  * @brief The low power loop.
1515:ad5940lib/ad5940.c ****  * @{
1516:ad5940lib/ad5940.c ****  *    @defgroup Low_Power_Loop_Functions
1517:ad5940lib/ad5940.c ****  *    @{
1518:ad5940lib/ad5940.c **** */
1519:ad5940lib/ad5940.c **** 
1520:ad5940lib/ad5940.c **** /**
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 113


1521:ad5940lib/ad5940.c ****    @brief Configure low power loop include LPDAC LPAmp(PA and TIA)
1522:ad5940lib/ad5940.c ****    @param pLpLoopCfg: Pointer to configure structure;
1523:ad5940lib/ad5940.c ****    @return return none.
1524:ad5940lib/ad5940.c **** */
1525:ad5940lib/ad5940.c **** void AD5940_LPLoopCfgS(LPLoopCfg_Type *pLpLoopCfg)
1526:ad5940lib/ad5940.c **** {
1527:ad5940lib/ad5940.c ****   AD5940_LPDACCfgS(&pLpLoopCfg->LpDacCfg);
1528:ad5940lib/ad5940.c ****   AD5940_LPAMPCfgS(&pLpLoopCfg->LpAmpCfg);
1529:ad5940lib/ad5940.c **** }
1530:ad5940lib/ad5940.c **** 
1531:ad5940lib/ad5940.c **** /**
1532:ad5940lib/ad5940.c ****    @brief Initialize LPDAC
1533:ad5940lib/ad5940.c ****    @param pLpDacCfg: Pointer to configuration structure
1534:ad5940lib/ad5940.c ****    @return return none.
1535:ad5940lib/ad5940.c **** */
1536:ad5940lib/ad5940.c **** void AD5940_LPDACCfgS(LPDACCfg_Type *pLpDacCfg)
1537:ad5940lib/ad5940.c **** {
1538:ad5940lib/ad5940.c ****   uint32_t tempreg;
1539:ad5940lib/ad5940.c ****   tempreg = 0;
1540:ad5940lib/ad5940.c ****   tempreg = (pLpDacCfg->LpDacSrc)<<BITP_AFE_LPDACCON0_WAVETYPE;
1541:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacVzeroMux)<<BITP_AFE_LPDACCON0_VZEROMUX;
1542:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacVbiasMux)<<BITP_AFE_LPDACCON0_VBIASMUX;
1543:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacRef)<<BITP_AFE_LPDACCON0_REFSEL;
1544:ad5940lib/ad5940.c ****   if(pLpDacCfg->DataRst == bFALSE)
1545:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPDACCON0_RSTEN;
1546:ad5940lib/ad5940.c ****   if(pLpDacCfg->PowerEn == bFALSE)
1547:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPDACCON0_PWDEN;
1548:ad5940lib/ad5940.c ****   if(pLpDacCfg->LpdacSel == LPDAC0)
1549:ad5940lib/ad5940.c ****   {
1550:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPDACCON0, tempreg);
1551:ad5940lib/ad5940.c ****     AD5940_LPDAC0WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
1552:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPDACSW0, pLpDacCfg->LpDacSW|BITM_AFE_LPDACSW0_LPMODEDIS);  /* Overwrit
1553:ad5940lib/ad5940.c ****   }
1554:ad5940lib/ad5940.c ****   else
1555:ad5940lib/ad5940.c ****   {
1556:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPDACCON1, tempreg);
1557:ad5940lib/ad5940.c ****     AD5940_LPDAC1WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
1558:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPDACSW1, pLpDacCfg->LpDacSW|BITM_AFE_LPDACSW0_LPMODEDIS);  /* Overwrit
1559:ad5940lib/ad5940.c ****   }
1560:ad5940lib/ad5940.c **** }
1561:ad5940lib/ad5940.c **** 
1562:ad5940lib/ad5940.c **** /**
1563:ad5940lib/ad5940.c ****    @brief Write LPDAC data
1564:ad5940lib/ad5940.c ****    @param Data12Bit: 12Bit DAC data
1565:ad5940lib/ad5940.c ****    @param Data6Bit: 6Bit DAC data
1566:ad5940lib/ad5940.c ****    @return return none.
1567:ad5940lib/ad5940.c **** */
1568:ad5940lib/ad5940.c **** void AD5940_LPDACWriteS(uint16_t Data12Bit, uint8_t Data6Bit)
1569:ad5940lib/ad5940.c **** {
1570:ad5940lib/ad5940.c ****   /* Check parameter */
1571:ad5940lib/ad5940.c ****   Data6Bit &= 0x3f;
1572:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
1573:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT0, ((uint32_t)Data6Bit<<12)|Data12Bit);
1574:ad5940lib/ad5940.c **** }
1575:ad5940lib/ad5940.c **** 
1576:ad5940lib/ad5940.c **** /**
1577:ad5940lib/ad5940.c ****    @brief Write LPDAC0 data
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 114


1578:ad5940lib/ad5940.c ****    @param Data12Bit: 12Bit DAC data
1579:ad5940lib/ad5940.c ****    @param Data6Bit: 6Bit DAC data
1580:ad5940lib/ad5940.c ****    @return return none.
1581:ad5940lib/ad5940.c **** */
1582:ad5940lib/ad5940.c **** void AD5940_LPDAC0WriteS(uint16_t Data12Bit, uint8_t Data6Bit)
1583:ad5940lib/ad5940.c **** {
1584:ad5940lib/ad5940.c ****   /* Check parameter */
1585:ad5940lib/ad5940.c ****   Data6Bit &= 0x3f;
1586:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
1587:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT0, ((uint32_t)Data6Bit<<12)|Data12Bit);
1588:ad5940lib/ad5940.c **** }
1589:ad5940lib/ad5940.c **** 
1590:ad5940lib/ad5940.c **** /**
1591:ad5940lib/ad5940.c ****    @brief Write LPDAC1 data
1592:ad5940lib/ad5940.c ****    @param Data12Bit: 12Bit DAC data
1593:ad5940lib/ad5940.c ****    @param Data6Bit: 6Bit DAC data
1594:ad5940lib/ad5940.c ****    @return return none.
1595:ad5940lib/ad5940.c **** */
1596:ad5940lib/ad5940.c **** void AD5940_LPDAC1WriteS(uint16_t Data12Bit, uint8_t Data6Bit)
1597:ad5940lib/ad5940.c **** {
1598:ad5940lib/ad5940.c ****   /* Check parameter */
1599:ad5940lib/ad5940.c ****   Data6Bit &= 0x3f;
1600:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
1601:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT1, ((uint32_t)Data6Bit<<12)|Data12Bit);
1602:ad5940lib/ad5940.c **** }
1603:ad5940lib/ad5940.c **** 
1604:ad5940lib/ad5940.c **** /**
1605:ad5940lib/ad5940.c ****    @brief Initialize LP TIA and PA
1606:ad5940lib/ad5940.c ****    @param pLpAmpCfg: Pointer to configuration structure
1607:ad5940lib/ad5940.c ****    @return return none.
1608:ad5940lib/ad5940.c **** */
1609:ad5940lib/ad5940.c **** void AD5940_LPAMPCfgS(LPAmpCfg_Type *pLpAmpCfg)
1610:ad5940lib/ad5940.c **** {
1611:ad5940lib/ad5940.c ****   //check parameters
1612:ad5940lib/ad5940.c ****   uint32_t tempreg;
1613:ad5940lib/ad5940.c **** 
1614:ad5940lib/ad5940.c ****   tempreg = 0;
1615:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpPaPwrEn == bFALSE)
1616:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_PAPDEN; 
1617:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpTiaPwrEn == bFALSE)
1618:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_TIAPDEN;
1619:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpAmpPwrMod == LPAMPPWR_HALF) 
1620:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_HALFPWR;
1621:ad5940lib/ad5940.c ****   else
1622:ad5940lib/ad5940.c ****   {
1623:ad5940lib/ad5940.c ****     tempreg |= pLpAmpCfg->LpAmpPwrMod<<BITP_AFE_LPTIACON0_IBOOST;
1624:ad5940lib/ad5940.c ****   }
1625:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRtia<<BITP_AFE_LPTIACON0_TIAGAIN;
1626:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRload<<BITP_AFE_LPTIACON0_TIARL;
1627:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRf<<BITP_AFE_LPTIACON0_TIARF;
1628:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpAmpSel == LPAMP0)
1629:ad5940lib/ad5940.c ****   {
1630:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPTIACON0, tempreg);
1631:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPTIASW0, pLpAmpCfg->LpTiaSW);
1632:ad5940lib/ad5940.c ****   }
1633:ad5940lib/ad5940.c ****   else
1634:ad5940lib/ad5940.c ****   {
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 115


1635:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPTIACON1, tempreg);
1636:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPTIASW1, pLpAmpCfg->LpTiaSW);
1637:ad5940lib/ad5940.c ****   }
1638:ad5940lib/ad5940.c **** }
1639:ad5940lib/ad5940.c **** /**
1640:ad5940lib/ad5940.c ****  * @} Low_Power_Loop_Functions
1641:ad5940lib/ad5940.c ****  * @} Low_Power_Loop
1642:ad5940lib/ad5940.c **** */
1643:ad5940lib/ad5940.c **** 
1644:ad5940lib/ad5940.c **** 
1645:ad5940lib/ad5940.c **** /**
1646:ad5940lib/ad5940.c ****  * @defgroup DSP_Block
1647:ad5940lib/ad5940.c ****  * @brief DSP block includes ADC, filters, DFT and statistic functions. 
1648:ad5940lib/ad5940.c ****  * @{
1649:ad5940lib/ad5940.c ****  *    @defgroup DSP_Block_Functions
1650:ad5940lib/ad5940.c ****  *    @{
1651:ad5940lib/ad5940.c ****  * */
1652:ad5940lib/ad5940.c **** 
1653:ad5940lib/ad5940.c **** /**
1654:ad5940lib/ad5940.c ****    @brief Configure low power loop include LPDAC LPAmp(PA and TIA)
1655:ad5940lib/ad5940.c ****    @param pDSPCfg: Pointer to configure structure;
1656:ad5940lib/ad5940.c ****    @return return none.
1657:ad5940lib/ad5940.c **** */
1658:ad5940lib/ad5940.c **** void AD5940_DSPCfgS(DSPCfg_Type *pDSPCfg)
1659:ad5940lib/ad5940.c **** {
1660:ad5940lib/ad5940.c ****   AD5940_ADCBaseCfgS(&pDSPCfg->ADCBaseCfg);
1661:ad5940lib/ad5940.c ****   AD5940_ADCFilterCfgS(&pDSPCfg->ADCFilterCfg);
1662:ad5940lib/ad5940.c ****   AD5940_ADCDigCompCfgS(&pDSPCfg->ADCDigCompCfg);
1663:ad5940lib/ad5940.c ****   AD5940_DFTCfgS(&pDSPCfg->DftCfg);
1664:ad5940lib/ad5940.c ****   AD5940_StatisticCfgS(&pDSPCfg->StatCfg);
1665:ad5940lib/ad5940.c **** }
1666:ad5940lib/ad5940.c **** 
1667:ad5940lib/ad5940.c **** /**
1668:ad5940lib/ad5940.c ****    @brief Read AD5940 generated data like ADC and DFT etc.
1669:ad5940lib/ad5940.c ****    @param AfeResultSel: available parameters are @ref AFERESULT_Const
1670:ad5940lib/ad5940.c ****           - AFERESULT_SINC3: Read SINC3 filter data result
1671:ad5940lib/ad5940.c ****           - AFERESULT_SINC2: Read SINC2+NOTCH filter result, when Notch filter is bypassed, the res
1672:ad5940lib/ad5940.c ****           - AFERESULT_STATSVAR: Statistic variance result
1673:ad5940lib/ad5940.c ****    @return return data read back.
1674:ad5940lib/ad5940.c **** */
1675:ad5940lib/ad5940.c **** uint32_t AD5940_ReadAfeResult(uint32_t AfeResultSel)
1676:ad5940lib/ad5940.c **** {
1677:ad5940lib/ad5940.c ****   uint32_t rd = 0;
1678:ad5940lib/ad5940.c ****   //PARA_CHECK((AfeResultSel));
1679:ad5940lib/ad5940.c ****   switch (AfeResultSel)
1680:ad5940lib/ad5940.c ****   {
1681:ad5940lib/ad5940.c ****     case AFERESULT_SINC3:
1682:ad5940lib/ad5940.c ****       rd = AD5940_ReadReg(REG_AFE_ADCDAT);
1683:ad5940lib/ad5940.c ****       break;
1684:ad5940lib/ad5940.c ****     case AFERESULT_SINC2:
1685:ad5940lib/ad5940.c ****       rd = AD5940_ReadReg(REG_AFE_SINC2DAT);
1686:ad5940lib/ad5940.c ****       break;
1687:ad5940lib/ad5940.c ****     case AFERESULT_TEMPSENSOR:
1688:ad5940lib/ad5940.c ****       rd = AD5940_ReadReg(REG_AFE_TEMPSENSDAT);
1689:ad5940lib/ad5940.c ****       break;
1690:ad5940lib/ad5940.c ****     case AFERESULT_DFTREAL:
1691:ad5940lib/ad5940.c ****       rd = AD5940_ReadReg(REG_AFE_DFTREAL);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 116


1692:ad5940lib/ad5940.c ****       break;
1693:ad5940lib/ad5940.c ****     case AFERESULT_DFTIMAGE:
1694:ad5940lib/ad5940.c ****       rd = AD5940_ReadReg(REG_AFE_DFTIMAG);
1695:ad5940lib/ad5940.c ****       break;
1696:ad5940lib/ad5940.c ****     case AFERESULT_STATSMEAN:
1697:ad5940lib/ad5940.c ****       rd = AD5940_ReadReg(REG_AFE_STATSMEAN);
1698:ad5940lib/ad5940.c ****       break;
1699:ad5940lib/ad5940.c ****     case AFERESULT_STATSVAR:
1700:ad5940lib/ad5940.c ****       rd = AD5940_ReadReg(REG_AFE_STATSVAR);
1701:ad5940lib/ad5940.c ****       break;
1702:ad5940lib/ad5940.c ****   }
1703:ad5940lib/ad5940.c ****   
1704:ad5940lib/ad5940.c ****   return rd;
1705:ad5940lib/ad5940.c **** }
1706:ad5940lib/ad5940.c **** 
1707:ad5940lib/ad5940.c **** /**
1708:ad5940lib/ad5940.c ****  *  @defgroup ADC_Block_Functions
1709:ad5940lib/ad5940.c ****  *  @{
1710:ad5940lib/ad5940.c **** */
1711:ad5940lib/ad5940.c **** 
1712:ad5940lib/ad5940.c **** /**
1713:ad5940lib/ad5940.c ****    @brief Initializes ADC peripheral according to the specified parameters in the pADCInit.
1714:ad5940lib/ad5940.c ****    @param pADCInit: Pointer to ADC initialize structure.
1715:ad5940lib/ad5940.c ****    @return return none.
1716:ad5940lib/ad5940.c **** */
1717:ad5940lib/ad5940.c **** void AD5940_ADCBaseCfgS(ADCBaseCfg_Type *pADCInit)
1718:ad5940lib/ad5940.c **** {
1719:ad5940lib/ad5940.c ****   uint32_t tempreg = 0;
1720:ad5940lib/ad5940.c ****   //PARA_CHECK(IS_ADCMUXP(pADCInit->ADCMuxP));
1721:ad5940lib/ad5940.c ****   //PARA_CHECK(IS_ADCMUXN(pADCInit->ADCMuxN));
1722:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCPGA(pADCInit->ADCPga));
1723:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCAAF(pADCInit->ADCAAF));
1724:ad5940lib/ad5940.c **** 
1725:ad5940lib/ad5940.c ****   tempreg = pADCInit->ADCMuxP;
1726:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pADCInit->ADCMuxN)<<BITP_AFE_ADCCON_MUXSELN;
1727:ad5940lib/ad5940.c ****   //if(pADCInit->OffCancEnable == bTRUE)
1728:ad5940lib/ad5940.c ****   //  tempreg |= BITM_AFE_ADCCON_GNOFSELPGA;
1729:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pADCInit->ADCPga)<<BITP_AFE_ADCCON_GNPGA;
1730:ad5940lib/ad5940.c **** 
1731:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCCON, tempreg);
1732:ad5940lib/ad5940.c **** }
1733:ad5940lib/ad5940.c **** 
1734:ad5940lib/ad5940.c **** /**
1735:ad5940lib/ad5940.c ****    @brief Initializes ADC filter according to the specified parameters in the pFiltCfg.
1736:ad5940lib/ad5940.c ****    @param pFiltCfg: Pointer to filter initialize structure.
1737:ad5940lib/ad5940.c ****    @return return none.
1738:ad5940lib/ad5940.c **** */
1739:ad5940lib/ad5940.c **** void AD5940_ADCFilterCfgS(ADCFilterCfg_Type *pFiltCfg)
1740:ad5940lib/ad5940.c **** {
1741:ad5940lib/ad5940.c ****   uint32_t tempreg;
1742:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCSINC3OSR(pFiltCfg->ADCSinc3Osr));
1743:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCSINC2OSR(pFiltCfg->ADCSinc2Osr));
1744:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCAVGNUM(pFiltCfg->ADCAvgNum));
1745:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCRATE(pFiltCfg->ADCRate));
1746:ad5940lib/ad5940.c **** 
1747:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_ADCFILTERCON);
1748:ad5940lib/ad5940.c ****   tempreg &= BITM_AFE_ADCFILTERCON_AVRGEN; /* Keep this bit setting. */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 117


1749:ad5940lib/ad5940.c **** 
1750:ad5940lib/ad5940.c ****   tempreg |= pFiltCfg->ADCRate;
1751:ad5940lib/ad5940.c ****   if(pFiltCfg->BpNotch == bTRUE)
1752:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_ADCFILTERCON_LPFBYPEN;
1753:ad5940lib/ad5940.c ****   if(pFiltCfg->BpSinc3 == bTRUE)
1754:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_ADCFILTERCON_SINC3BYP;
1755:ad5940lib/ad5940.c ****   /**
1756:ad5940lib/ad5940.c ****    * Average filter is enabled when DFT source is @ref DFTSRC_AVG in function @ref AD5940_DFTCfgS.
1757:ad5940lib/ad5940.c ****    * Once average function is enabled, it's automatically set as DFT source, register DFTCON.DFTINS
1758:ad5940lib/ad5940.c ****    */
1759:ad5940lib/ad5940.c ****   //if(pFiltCfg->AverageEnable == bTRUE)
1760:ad5940lib/ad5940.c ****   //  tempreg |= BITM_AFE_ADCFILTERCON_AVRGEN;
1761:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCSinc2Osr)<<BITP_AFE_ADCFILTERCON_SINC2OSR;
1762:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCSinc3Osr)<<BITP_AFE_ADCFILTERCON_SINC3OSR;
1763:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCAvgNum)<<BITP_AFE_ADCFILTERCON_AVRGNUM;
1764:ad5940lib/ad5940.c **** 
1765:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCFILTERCON, tempreg);
1766:ad5940lib/ad5940.c **** 
1767:ad5940lib/ad5940.c ****   /* SINC2+Notch has a block enable/disable bit in AFECON register */
1768:ad5940lib/ad5940.c ****   if(pFiltCfg->Sinc2NotchEnable)
1769:ad5940lib/ad5940.c ****   {
1770:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_SINC2NOTCH,bTRUE);
1771:ad5940lib/ad5940.c ****   }
1772:ad5940lib/ad5940.c **** }
1773:ad5940lib/ad5940.c **** 
1774:ad5940lib/ad5940.c **** /**
1775:ad5940lib/ad5940.c ****    @brief Power up or power down ADC block(including ADC PGA and FRONTBUF).
1776:ad5940lib/ad5940.c ****    @param State : {bTRUE, bFALSE}
1777:ad5940lib/ad5940.c ****           - bTRUE: Power up ADC
1778:ad5940lib/ad5940.c ****           - bFALSE: Power down ADC
1779:ad5940lib/ad5940.c ****    @return return none.
1780:ad5940lib/ad5940.c **** */
1781:ad5940lib/ad5940.c **** void AD5940_ADCPowerCtrlS(BoolFlag State)
1782:ad5940lib/ad5940.c **** {
1783:ad5940lib/ad5940.c ****   uint32_t tempreg;
1784:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
1785:ad5940lib/ad5940.c ****   if(State == bTRUE)
1786:ad5940lib/ad5940.c ****   {
1787:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_AFECON_ADCEN;
1788:ad5940lib/ad5940.c ****   }
1789:ad5940lib/ad5940.c ****   else
1790:ad5940lib/ad5940.c ****   {
1791:ad5940lib/ad5940.c ****     tempreg &= ~BITM_AFE_AFECON_ADCEN;
1792:ad5940lib/ad5940.c ****   }
1793:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_AFECON,tempreg);
1794:ad5940lib/ad5940.c **** }
1795:ad5940lib/ad5940.c **** 
1796:ad5940lib/ad5940.c **** /**
1797:ad5940lib/ad5940.c ****    @brief Start or stop ADC convert.
1798:ad5940lib/ad5940.c ****    @param State : {bTRUE, bFALSE}
1799:ad5940lib/ad5940.c ****           - bTRUE: Start ADC convert
1800:ad5940lib/ad5940.c ****           - bFALSE: Stop ADC convert
1801:ad5940lib/ad5940.c ****    @return return none.
1802:ad5940lib/ad5940.c **** */
1803:ad5940lib/ad5940.c **** void AD5940_ADCConvtCtrlS(BoolFlag State)
1804:ad5940lib/ad5940.c **** {
1805:ad5940lib/ad5940.c ****   uint32_t tempreg;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 118


1806:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
1807:ad5940lib/ad5940.c ****   if(State == bTRUE)
1808:ad5940lib/ad5940.c ****   {
1809:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_AFECON_ADCCONVEN;
1810:ad5940lib/ad5940.c ****   }
1811:ad5940lib/ad5940.c ****   else
1812:ad5940lib/ad5940.c ****   {
1813:ad5940lib/ad5940.c ****     tempreg &= ~BITM_AFE_AFECON_ADCCONVEN;
1814:ad5940lib/ad5940.c ****   }
1815:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_AFECON,tempreg);
1816:ad5940lib/ad5940.c **** }
1817:ad5940lib/ad5940.c **** 
1818:ad5940lib/ad5940.c **** /**
1819:ad5940lib/ad5940.c ****    @brief Configure ADC input MUX
1820:ad5940lib/ad5940.c ****    @param ADCMuxP : {ADCMUXP_FLOAT, ADCMUXP_HSTIA_P, ,,, ,ADCMUXP_P_NODE}
1821:ad5940lib/ad5940.c ****           - ADCMUXP_FLOAT: float ADC MUX positive input
1822:ad5940lib/ad5940.c ****           - ADCMUXP_HSTIA_P: High speed TIA output sense terminal
1823:ad5940lib/ad5940.c ****           - ADCMUXP_P_NODE: Excitation loop P node
1824:ad5940lib/ad5940.c ****    @param ADCMuxN : {ADCMUXP_FLOAT, ADCMUXP_HSTIA_P, ,,, ,ADCMUXP_P_NODE}
1825:ad5940lib/ad5940.c ****           - ADCMUXP_FLOAT: float ADC MUX positive input
1826:ad5940lib/ad5940.c ****           - ADCMUXP_HSTIA_P: High speed TIA output sense terminal
1827:ad5940lib/ad5940.c ****           - ADCMUXP_P_NODE: Excitation loop P node
1828:ad5940lib/ad5940.c **** 
1829:ad5940lib/ad5940.c ****    @return return none.
1830:ad5940lib/ad5940.c **** */
1831:ad5940lib/ad5940.c **** void AD5940_ADCMuxCfgS(uint32_t ADCMuxP, uint32_t ADCMuxN)
1832:ad5940lib/ad5940.c **** {
1833:ad5940lib/ad5940.c ****   uint32_t tempreg;
1834:ad5940lib/ad5940.c ****   //PARA_CHECK(IS_ADCMUXP(ADCMuxP));
1835:ad5940lib/ad5940.c ****   //PARA_CHECK(IS_ADCMUXN(ADCMuxN));
1836:ad5940lib/ad5940.c ****   
1837:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_ADCCON);
1838:ad5940lib/ad5940.c ****   tempreg &= ~(BITM_AFE_ADCCON_MUXSELN|BITM_AFE_ADCCON_MUXSELP);
1839:ad5940lib/ad5940.c ****   tempreg |= ADCMuxP<<BITP_AFE_ADCCON_MUXSELP;
1840:ad5940lib/ad5940.c ****   tempreg |= ADCMuxN<<BITP_AFE_ADCCON_MUXSELN;
1841:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCCON, tempreg);
1842:ad5940lib/ad5940.c **** }
1843:ad5940lib/ad5940.c **** 
1844:ad5940lib/ad5940.c **** /**
1845:ad5940lib/ad5940.c ****    @brief Set ADC digital comparator function
1846:ad5940lib/ad5940.c ****    @param pCompCfg: Pointer to configuration structure
1847:ad5940lib/ad5940.c ****    @return return none.
1848:ad5940lib/ad5940.c **** */
1849:ad5940lib/ad5940.c **** void AD5940_ADCDigCompCfgS(ADCDigComp_Type *pCompCfg)
1850:ad5940lib/ad5940.c **** {
1851:ad5940lib/ad5940.c ****   //PARA_CHECK((AfeResultSel));
1852:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCMIN, pCompCfg->ADCMin);
1853:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCMINSM, pCompCfg->ADCMinHys);
1854:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCMAX, pCompCfg->ADCMax);
1855:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCMAXSMEN, pCompCfg->ADCMaxHys);
1856:ad5940lib/ad5940.c **** }
1857:ad5940lib/ad5940.c **** /** @} ADC_Block_Functions */
1858:ad5940lib/ad5940.c **** 
1859:ad5940lib/ad5940.c **** /**
1860:ad5940lib/ad5940.c ****    @brief Configure statistic functions
1861:ad5940lib/ad5940.c ****    @param pStatCfg: Pointer to configuration structure
1862:ad5940lib/ad5940.c ****    @return return none.
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 119


1863:ad5940lib/ad5940.c **** */
1864:ad5940lib/ad5940.c **** void AD5940_StatisticCfgS(StatCfg_Type *pStatCfg)
1865:ad5940lib/ad5940.c **** {
1866:ad5940lib/ad5940.c ****   uint32_t tempreg;
1867:ad5940lib/ad5940.c ****   //check parameters
1868:ad5940lib/ad5940.c ****   tempreg = 0;
1869:ad5940lib/ad5940.c ****   if(pStatCfg->StatEnable == bTRUE)
1870:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_STATSCON_STATSEN;
1871:ad5940lib/ad5940.c ****   tempreg |= (pStatCfg->StatSample) << BITP_AFE_STATSCON_SAMPLENUM;
1872:ad5940lib/ad5940.c ****   tempreg |= (pStatCfg->StatDev) << BITP_AFE_STATSCON_STDDEV;
1873:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_STATSCON, tempreg);
1874:ad5940lib/ad5940.c **** }
1875:ad5940lib/ad5940.c **** 
1876:ad5940lib/ad5940.c **** /**
1877:ad5940lib/ad5940.c ****  * @brief Set ADC Repeat convert function number. Turn off ADC automatically after Number samples o
1878:ad5940lib/ad5940.c ****  * @param Number: Specify after how much ADC raw data need to sample before shutdown ADC
1879:ad5940lib/ad5940.c ****  * @return return none.
1880:ad5940lib/ad5940.c **** */
1881:ad5940lib/ad5940.c **** void AD5940_ADCRepeatCfgS(uint32_t Number)
1882:ad5940lib/ad5940.c **** {
1883:ad5940lib/ad5940.c ****   //check parameter if(number<255)
1884:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_REPEATADCCNV, Number<<BITP_AFE_REPEATADCCNV_NUM);
1885:ad5940lib/ad5940.c **** }
1886:ad5940lib/ad5940.c **** 
1887:ad5940lib/ad5940.c **** /**
1888:ad5940lib/ad5940.c ****    @brief Configure DFT number and source and hanning window
1889:ad5940lib/ad5940.c ****    @param pDftCfg: Pointer to configuration structure
1890:ad5940lib/ad5940.c ****    @return return none.
1891:ad5940lib/ad5940.c **** */
1892:ad5940lib/ad5940.c **** void AD5940_DFTCfgS(DFTCfg_Type *pDftCfg)
1893:ad5940lib/ad5940.c **** {
1894:ad5940lib/ad5940.c ****   uint32_t reg_dftcon, reg_adcfilter;
1895:ad5940lib/ad5940.c **** 
1896:ad5940lib/ad5940.c ****   reg_dftcon = 0;
1897:ad5940lib/ad5940.c ****   /* Deal with DFTSRC_AVG. Once average function is enabled, it's automatically set as DFT source *
1898:ad5940lib/ad5940.c ****   reg_adcfilter = AD5940_ReadReg(REG_AFE_ADCFILTERCON);
1899:ad5940lib/ad5940.c ****   if(pDftCfg->DftSrc == DFTSRC_AVG)
1900:ad5940lib/ad5940.c ****   {
1901:ad5940lib/ad5940.c ****     reg_adcfilter |= BITM_AFE_ADCFILTERCON_AVRGEN;
1902:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_ADCFILTERCON, reg_adcfilter);
1903:ad5940lib/ad5940.c ****   }
1904:ad5940lib/ad5940.c ****   else
1905:ad5940lib/ad5940.c ****   {
1906:ad5940lib/ad5940.c ****     /* Disable Average function and set correct DFT source */
1907:ad5940lib/ad5940.c ****     reg_adcfilter &= ~BITM_AFE_ADCFILTERCON_AVRGEN;
1908:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_ADCFILTERCON, reg_adcfilter);
1909:ad5940lib/ad5940.c **** 
1910:ad5940lib/ad5940.c ****     /* Set new DFT source */
1911:ad5940lib/ad5940.c ****     reg_dftcon |= (pDftCfg->DftSrc) << BITP_AFE_DFTCON_DFTINSEL;
1912:ad5940lib/ad5940.c ****   }
1913:ad5940lib/ad5940.c ****   /* Set DFT number */
1914:ad5940lib/ad5940.c ****   reg_dftcon |= (pDftCfg->DftNum) << BITP_AFE_DFTCON_DFTNUM;
1915:ad5940lib/ad5940.c ****   
1916:ad5940lib/ad5940.c ****   if(pDftCfg->HanWinEn == bTRUE)
1917:ad5940lib/ad5940.c ****     reg_dftcon |= BITM_AFE_DFTCON_HANNINGEN;
1918:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DFTCON, reg_dftcon);
1919:ad5940lib/ad5940.c **** }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 120


1920:ad5940lib/ad5940.c **** 
1921:ad5940lib/ad5940.c **** /**
1922:ad5940lib/ad5940.c ****  * @} DSP_Block_Functions
1923:ad5940lib/ad5940.c ****  * @} DSP_Block
1924:ad5940lib/ad5940.c **** */
1925:ad5940lib/ad5940.c **** 
1926:ad5940lib/ad5940.c **** /**
1927:ad5940lib/ad5940.c ****  * @defgroup Sequencer_FIFO
1928:ad5940lib/ad5940.c ****  * @brief Sequencer and FIFO.
1929:ad5940lib/ad5940.c ****  * @{
1930:ad5940lib/ad5940.c ****  *    @defgroup Sequencer_FIFO_Functions
1931:ad5940lib/ad5940.c ****  *    @{
1932:ad5940lib/ad5940.c **** */
1933:ad5940lib/ad5940.c **** 
1934:ad5940lib/ad5940.c **** /**
1935:ad5940lib/ad5940.c ****    @brief Configure AD5940 FIFO
1936:ad5940lib/ad5940.c ****    @param pFifoCfg: Pointer to configuration structure.
1937:ad5940lib/ad5940.c ****    @return return none.
1938:ad5940lib/ad5940.c **** */
1939:ad5940lib/ad5940.c **** void AD5940_FIFOCfg(FIFOCfg_Type *pFifoCfg)
1940:ad5940lib/ad5940.c **** {
1941:ad5940lib/ad5940.c ****   uint32_t tempreg;
1942:ad5940lib/ad5940.c ****   //check parameters
1943:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, 0);  /* Disable FIFO firstly! */
1944:ad5940lib/ad5940.c ****   /* CMDDATACON register. Configure this firstly */
1945:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_CMDDATACON);
1946:ad5940lib/ad5940.c ****   tempreg &= BITM_AFE_CMDDATACON_CMD_MEM_SEL|BITM_AFE_CMDDATACON_CMDMEMMDE; /* Keep sequencer memor
1947:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOMode << BITP_AFE_CMDDATACON_DATAMEMMDE; 				  /* Data FIFO mode: stream 
1948:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOSize << BITP_AFE_CMDDATACON_DATA_MEM_SEL;  		  /* Data FIFO memory size 
1949:ad5940lib/ad5940.c ****   /* The reset memory can be used for sequencer, configure it by function AD5940_SEQCfg() */
1950:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CMDDATACON, tempreg);
1951:ad5940lib/ad5940.c **** 
1952:ad5940lib/ad5940.c ****   /* FIFO Threshold */
1953:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DATAFIFOTHRES, pFifoCfg->FIFOThresh << BITP_AFE_DATAFIFOTHRES_HIGHTHRES);
1954:ad5940lib/ad5940.c ****   /* FIFOCON register. Final step is to enable FIFO */
1955:ad5940lib/ad5940.c ****   tempreg = 0;
1956:ad5940lib/ad5940.c ****   if(pFifoCfg->FIFOEn == bTRUE)
1957:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;																/* Enable FIFO after everything set. */
1958:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOSrc << BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
1959:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, tempreg);
1960:ad5940lib/ad5940.c **** }
1961:ad5940lib/ad5940.c **** 
1962:ad5940lib/ad5940.c **** /**
1963:ad5940lib/ad5940.c ****    @brief Read current FIFO configuration.
1964:ad5940lib/ad5940.c ****    @param pFifoCfg: Pointer to a buffer that used to store FIFO configuration.
1965:ad5940lib/ad5940.c ****    @return return AD5940ERR_OK if succeed.
1966:ad5940lib/ad5940.c **** */
1967:ad5940lib/ad5940.c **** AD5940Err AD5940_FIFOGetCfg(FIFOCfg_Type *pFifoCfg)
1968:ad5940lib/ad5940.c **** {
1969:ad5940lib/ad5940.c ****   uint32_t tempreg;
1970:ad5940lib/ad5940.c ****   //check parameters
1971:ad5940lib/ad5940.c ****   if(pFifoCfg == NULL) return AD5940ERR_NULLP;
1972:ad5940lib/ad5940.c ****   /* CMDDATACON register. */
1973:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_CMDDATACON);
1974:ad5940lib/ad5940.c ****   pFifoCfg->FIFOMode = (tempreg&BITM_AFE_CMDDATACON_DATAMEMMDE)>>BITP_AFE_CMDDATACON_DATAMEMMDE;
1975:ad5940lib/ad5940.c ****   pFifoCfg->FIFOSize = (tempreg&BITM_AFE_CMDDATACON_DATA_MEM_SEL)>>BITP_AFE_CMDDATACON_DATA_MEM_SEL
1976:ad5940lib/ad5940.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 121


1977:ad5940lib/ad5940.c ****   /* FIFO Threshold */
1978:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_DATAFIFOTHRES);
1979:ad5940lib/ad5940.c ****   pFifoCfg->FIFOThresh = (tempreg&BITM_AFE_DATAFIFOTHRES_HIGHTHRES)>>BITP_AFE_DATAFIFOTHRES_HIGHTHR
1980:ad5940lib/ad5940.c ****   /* FIFOCON register. */
1981:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_FIFOCON);
1982:ad5940lib/ad5940.c ****   pFifoCfg->FIFOEn = (tempreg&BITM_AFE_FIFOCON_DATAFIFOEN)?bTRUE:bFALSE;
1983:ad5940lib/ad5940.c ****   pFifoCfg->FIFOSrc = (tempreg&BITM_AFE_FIFOCON_DATAFIFOSRCSEL)>>BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
1984:ad5940lib/ad5940.c **** 
1985:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
1986:ad5940lib/ad5940.c **** }
1987:ad5940lib/ad5940.c **** 
1988:ad5940lib/ad5940.c **** /**
1989:ad5940lib/ad5940.c ****  * @brief Configure AD5940 FIFO Source and enable or disable FIFO.
1990:ad5940lib/ad5940.c ****  * @param FifoSrc : available choices are @ref FIFOSRC_Const 
1991:ad5940lib/ad5940.c ****  *      - FIFOSRC_SINC3       SINC3 data
1992:ad5940lib/ad5940.c ****  *      - FIFOSRC_DFT         DFT real and imaginary part 
1993:ad5940lib/ad5940.c ****  *      - FIFOSRC_SINC2NOTCH  SINC2+NOTCH block. Notch can be bypassed, so SINC2 data can be feed t
1994:ad5940lib/ad5940.c ****  *      - FIFOSRC_VAR         Statistic variance output 
1995:ad5940lib/ad5940.c ****  *      - FIFOSRC_MEAN        Statistic mean output
1996:ad5940lib/ad5940.c ****  * @param FifoEn: enable or disable the FIFO.
1997:ad5940lib/ad5940.c ****  * @return return none.
1998:ad5940lib/ad5940.c **** */
1999:ad5940lib/ad5940.c **** void AD5940_FIFOCtrlS(uint32_t FifoSrc, BoolFlag FifoEn)
2000:ad5940lib/ad5940.c **** {
2001:ad5940lib/ad5940.c ****   uint32_t tempreg;
2002:ad5940lib/ad5940.c **** 
2003:ad5940lib/ad5940.c ****   tempreg = 0;
2004:ad5940lib/ad5940.c ****   if(FifoEn == bTRUE)
2005:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;
2006:ad5940lib/ad5940.c ****   tempreg |= FifoSrc << BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
2007:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, tempreg);
2008:ad5940lib/ad5940.c **** }
2009:ad5940lib/ad5940.c **** 
2010:ad5940lib/ad5940.c **** /**
2011:ad5940lib/ad5940.c ****  * @brief Configure AD5940 Data FIFO threshold value
2012:ad5940lib/ad5940.c ****    @param FIFOThresh: FIFO threshold value
2013:ad5940lib/ad5940.c ****    @return return none.
2014:ad5940lib/ad5940.c **** */
2015:ad5940lib/ad5940.c **** void AD5940_FIFOThrshSet(uint32_t FIFOThresh)
2016:ad5940lib/ad5940.c **** {
2017:ad5940lib/ad5940.c ****   /* FIFO Threshold */
2018:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DATAFIFOTHRES, FIFOThresh << BITP_AFE_DATAFIFOTHRES_HIGHTHRES);
2019:ad5940lib/ad5940.c **** }
2020:ad5940lib/ad5940.c **** 
2021:ad5940lib/ad5940.c **** /**
2022:ad5940lib/ad5940.c ****  * @brief Get Data count in FIFO
2023:ad5940lib/ad5940.c ****  * @return return none.
2024:ad5940lib/ad5940.c **** */
2025:ad5940lib/ad5940.c **** uint32_t AD5940_FIFOGetCnt(void)
2026:ad5940lib/ad5940.c **** {
2027:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AFE_FIFOCNTSTA) >> BITP_AFE_FIFOCNTSTA_DATAFIFOCNTSTA;
2028:ad5940lib/ad5940.c **** }
2029:ad5940lib/ad5940.c **** 
2030:ad5940lib/ad5940.c **** 
2031:ad5940lib/ad5940.c **** /* Sequencer */
2032:ad5940lib/ad5940.c **** /**
2033:ad5940lib/ad5940.c ****  * @brief Initialize Sequencer
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 122


2034:ad5940lib/ad5940.c ****  * @param pSeqCfg: Pointer to configuration structure
2035:ad5940lib/ad5940.c ****    @return return none.
2036:ad5940lib/ad5940.c **** */
2037:ad5940lib/ad5940.c **** void AD5940_SEQCfg(SEQCfg_Type *pSeqCfg)
2038:ad5940lib/ad5940.c **** {
2039:ad5940lib/ad5940.c ****   /* check parameters */
2040:ad5940lib/ad5940.c ****   uint32_t tempreg, fifocon;
2041:ad5940lib/ad5940.c ****   
2042:ad5940lib/ad5940.c ****   fifocon = AD5940_ReadReg(REG_AFE_FIFOCON);
2043:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, 0);  /* Disable FIFO before changing memory configuration */
2044:ad5940lib/ad5940.c ****   /* Configure CMDDATACON register */
2045:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_CMDDATACON);
2046:ad5940lib/ad5940.c ****   tempreg &= ~(BITM_AFE_CMDDATACON_CMDMEMMDE|BITM_AFE_CMDDATACON_CMD_MEM_SEL);  /* Clear settings f
2047:ad5940lib/ad5940.c ****   tempreg |= (1L) << BITP_AFE_CMDDATACON_CMDMEMMDE;    										  /* Sequencer is always in memory
2048:ad5940lib/ad5940.c ****   tempreg |= (pSeqCfg->SeqMemSize) << BITP_AFE_CMDDATACON_CMD_MEM_SEL; 	
2049:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CMDDATACON, tempreg);
2050:ad5940lib/ad5940.c **** 
2051:ad5940lib/ad5940.c ****   if(pSeqCfg->SeqCntCRCClr)
2052:ad5940lib/ad5940.c ****   {
2053:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_SEQCON, 0);  /* Disable sequencer firstly */
2054:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_SEQCNT, 0);  /* When sequencer is disabled, any write to SEQCNT will cl
2055:ad5940lib/ad5940.c ****   }
2056:ad5940lib/ad5940.c ****   tempreg = 0;
2057:ad5940lib/ad5940.c ****   if(pSeqCfg->SeqEnable == bTRUE)
2058:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
2059:ad5940lib/ad5940.c ****   tempreg |= (pSeqCfg->SeqWrTimer) << BITP_AFE_SEQCON_SEQWRTMR;
2060:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQCON, tempreg);
2061:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, fifocon);  /* restore FIFO configuration */
2062:ad5940lib/ad5940.c **** 
2063:ad5940lib/ad5940.c ****   // tempreg = 0;
2064:ad5940lib/ad5940.c ****   // if(pSeqCfg->SeqBreakEn)
2065:ad5940lib/ad5940.c ****   //   tempreg |= 0x01;  // add register definition? bitm_afe_
2066:ad5940lib/ad5940.c ****   // if(pSeqCfg->SeqIgnoreEn)
2067:ad5940lib/ad5940.c ****   //   tempreg |= 0x02;  
2068:ad5940lib/ad5940.c ****   // AD5940_WriteReg(0x21dc, tempreg);
2069:ad5940lib/ad5940.c **** }
2070:ad5940lib/ad5940.c **** /**
2071:ad5940lib/ad5940.c ****  * @brief Read back current sequencer configuration and store it to pSeqCfg
2072:ad5940lib/ad5940.c ****  * @param pSeqCfg: Pointer to structure
2073:ad5940lib/ad5940.c ****  * @return return AD5940ERR_OK if succeed.
2074:ad5940lib/ad5940.c **** */
2075:ad5940lib/ad5940.c **** AD5940Err AD5940_SEQGetCfg(SEQCfg_Type *pSeqCfg)
2076:ad5940lib/ad5940.c **** {
2077:ad5940lib/ad5940.c ****   /* check parameters */
2078:ad5940lib/ad5940.c ****   uint32_t tempreg;
2079:ad5940lib/ad5940.c ****   if(pSeqCfg == NULL)
2080:ad5940lib/ad5940.c ****     return AD5940ERR_NULLP;
2081:ad5940lib/ad5940.c ****   /* Read CMDDATACON register */
2082:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_CMDDATACON);
2083:ad5940lib/ad5940.c ****   pSeqCfg->SeqMemSize = (tempreg&BITM_AFE_CMDDATACON_CMD_MEM_SEL) >> BITP_AFE_CMDDATACON_CMD_MEM_SE
2084:ad5940lib/ad5940.c ****   pSeqCfg->SeqCntCRCClr = bFALSE; /* Has no meaning */
2085:ad5940lib/ad5940.c ****   /* SEQCON register */
2086:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_SEQCON);
2087:ad5940lib/ad5940.c ****   pSeqCfg->SeqEnable = (tempreg&BITM_AFE_SEQCON_SEQEN)?bTRUE:bFALSE;
2088:ad5940lib/ad5940.c ****   pSeqCfg->SeqWrTimer = (tempreg&BITM_AFE_SEQCON_SEQWRTMR) >> BITP_AFE_SEQCON_SEQWRTMR;
2089:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
2090:ad5940lib/ad5940.c **** }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 123


2091:ad5940lib/ad5940.c **** 
2092:ad5940lib/ad5940.c **** /**
2093:ad5940lib/ad5940.c ****  * @brief Enable or Disable sequencer. 
2094:ad5940lib/ad5940.c ****  * @note Only after valid trigger signal, sequencer can run.
2095:ad5940lib/ad5940.c ****  * @return return none.
2096:ad5940lib/ad5940.c **** */
2097:ad5940lib/ad5940.c **** void AD5940_SEQCtrlS(BoolFlag SeqEn)
2098:ad5940lib/ad5940.c **** {
2099:ad5940lib/ad5940.c ****   uint32_t tempreg = AD5940_ReadReg(REG_AFE_SEQCON);
2100:ad5940lib/ad5940.c ****   if(SeqEn == bTRUE)
2101:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
2102:ad5940lib/ad5940.c ****   else
2103:ad5940lib/ad5940.c ****     tempreg &= ~BITM_AFE_SEQCON_SEQEN;
2104:ad5940lib/ad5940.c **** 
2105:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQCON, tempreg);
2106:ad5940lib/ad5940.c **** }
2107:ad5940lib/ad5940.c **** 
2108:ad5940lib/ad5940.c **** /**
2109:ad5940lib/ad5940.c ****  * @brief Halt sequencer immediately. Use this to debug. In normal application, there is no situati
2110:ad5940lib/ad5940.c ****  * @return return none.
2111:ad5940lib/ad5940.c **** */
2112:ad5940lib/ad5940.c **** void AD5940_SEQHaltS(void)
2113:ad5940lib/ad5940.c **** {
2114:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQCON, BITM_AFE_SEQCON_SEQHALT|BITM_AFE_SEQCON_SEQEN);
2115:ad5940lib/ad5940.c **** }
2116:ad5940lib/ad5940.c **** 
2117:ad5940lib/ad5940.c **** /**
2118:ad5940lib/ad5940.c ****  * @brief Trigger sequencer by register write.
2119:ad5940lib/ad5940.c ****  * @return return none.
2120:ad5940lib/ad5940.c **** **/
2121:ad5940lib/ad5940.c **** void AD5940_SEQMmrTrig(uint32_t SeqId)
2122:ad5940lib/ad5940.c **** {
2123:ad5940lib/ad5940.c ****   if(SeqId > SEQID_3)
2124:ad5940lib/ad5940.c ****     return;
2125:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_TRIGSEQ, 1L<<SeqId);
2126:ad5940lib/ad5940.c **** }
2127:ad5940lib/ad5940.c **** 
2128:ad5940lib/ad5940.c **** /**
2129:ad5940lib/ad5940.c ****  * @brief Write sequencer commands to AD5940 SRAM.
2130:ad5940lib/ad5940.c ****  * @return return none.
2131:ad5940lib/ad5940.c **** **/
2132:ad5940lib/ad5940.c **** void AD5940_SEQCmdWrite(uint32_t StartAddr, const uint32_t *pCommand, uint32_t CmdCnt)
2133:ad5940lib/ad5940.c **** {
2134:ad5940lib/ad5940.c ****   while(CmdCnt--)
2135:ad5940lib/ad5940.c ****   {
2136:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_CMDFIFOWADDR, StartAddr++);
2137:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_CMDFIFOWRITE, *pCommand++);
2138:ad5940lib/ad5940.c ****   }
2139:ad5940lib/ad5940.c **** }
2140:ad5940lib/ad5940.c **** 
2141:ad5940lib/ad5940.c **** /**
2142:ad5940lib/ad5940.c ****    @brief Initialize Sequence INFO. 
2143:ad5940lib/ad5940.c ****    @details There are four set of registers that record sequence information. 
2144:ad5940lib/ad5940.c ****           The info contains command start address in SRAM and sequence length. 
2145:ad5940lib/ad5940.c ****           Hardware can automatically manage these four sequences. If the application 
2146:ad5940lib/ad5940.c ****           requires more than 4 sequences, user should manually record the sequence 
2147:ad5940lib/ad5940.c ****           Info(address and length) in MCU.
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 124


2148:ad5940lib/ad5940.c ****    @param pSeq: Pointer to configuration structure. Specify sequence start address in SRAM and sequ
2149:ad5940lib/ad5940.c ****    @return return none.
2150:ad5940lib/ad5940.c **** */
2151:ad5940lib/ad5940.c **** void AD5940_SEQInfoCfg(SEQInfo_Type *pSeq)
2152:ad5940lib/ad5940.c **** {
2153:ad5940lib/ad5940.c ****   switch(pSeq->SeqId)
2154:ad5940lib/ad5940.c ****   {
2155:ad5940lib/ad5940.c ****     case SEQID_0:
2156:ad5940lib/ad5940.c ****     /* Configure SEQINFO register */
2157:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_SEQ0INFO, (pSeq->SeqLen<< 16) | pSeq->SeqRamAddr);
2158:ad5940lib/ad5940.c ****     break;
2159:ad5940lib/ad5940.c ****     case SEQID_1:
2160:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_SEQ1INFO, (pSeq->SeqLen<< 16) | pSeq->SeqRamAddr);
2161:ad5940lib/ad5940.c ****     break;
2162:ad5940lib/ad5940.c ****     case SEQID_2:
2163:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_SEQ2INFO, (pSeq->SeqLen<< 16) | pSeq->SeqRamAddr);
2164:ad5940lib/ad5940.c ****     break;
2165:ad5940lib/ad5940.c ****     case SEQID_3:
2166:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_SEQ3INFO, (pSeq->SeqLen<< 16) | pSeq->SeqRamAddr);
2167:ad5940lib/ad5940.c ****     break;
2168:ad5940lib/ad5940.c ****     default:
2169:ad5940lib/ad5940.c ****     break;
2170:ad5940lib/ad5940.c ****   }
2171:ad5940lib/ad5940.c ****   if(pSeq->WriteSRAM == bTRUE)
2172:ad5940lib/ad5940.c ****   {
2173:ad5940lib/ad5940.c ****     AD5940_SEQCmdWrite(pSeq->SeqRamAddr, pSeq->pSeqCmd, pSeq->SeqLen);
2174:ad5940lib/ad5940.c ****   }
2175:ad5940lib/ad5940.c **** }
2176:ad5940lib/ad5940.c **** 
2177:ad5940lib/ad5940.c **** /**
2178:ad5940lib/ad5940.c ****  * @brief Get sequence info: start address and sequence length.
2179:ad5940lib/ad5940.c ****  * @param SeqId: Select from {SEQID_0, SEQID_1, SEQID_2, SEQID_3}
2180:ad5940lib/ad5940.c ****           - Select which sequence we want to get the information. 
2181:ad5940lib/ad5940.c ****    @param pSeqInfo: Pointer to sequence info structure. 
2182:ad5940lib/ad5940.c ****    @return return AD5940ERR_OK when succeed.
2183:ad5940lib/ad5940.c **** */
2184:ad5940lib/ad5940.c **** AD5940Err AD5940_SEQInfoGet(uint32_t SeqId, SEQInfo_Type *pSeqInfo)
2185:ad5940lib/ad5940.c **** {
2186:ad5940lib/ad5940.c ****   uint32_t tempreg;
2187:ad5940lib/ad5940.c ****   if(pSeqInfo == NULL) return AD5940ERR_NULLP;
2188:ad5940lib/ad5940.c ****   switch(SeqId)
2189:ad5940lib/ad5940.c ****   {
2190:ad5940lib/ad5940.c ****     case SEQID_0:
2191:ad5940lib/ad5940.c ****     tempreg = AD5940_ReadReg(REG_AFE_SEQ0INFO);
2192:ad5940lib/ad5940.c ****     break;
2193:ad5940lib/ad5940.c ****     case SEQID_1:
2194:ad5940lib/ad5940.c ****     tempreg = AD5940_ReadReg(REG_AFE_SEQ1INFO);
2195:ad5940lib/ad5940.c ****     break;
2196:ad5940lib/ad5940.c ****     case SEQID_2:
2197:ad5940lib/ad5940.c ****     tempreg = AD5940_ReadReg(REG_AFE_SEQ2INFO);
2198:ad5940lib/ad5940.c ****     break;
2199:ad5940lib/ad5940.c ****     case SEQID_3:
2200:ad5940lib/ad5940.c ****     tempreg = AD5940_ReadReg(REG_AFE_SEQ3INFO);
2201:ad5940lib/ad5940.c ****     break;
2202:ad5940lib/ad5940.c ****     default:
2203:ad5940lib/ad5940.c **** 			return AD5940ERR_PARA;
2204:ad5940lib/ad5940.c ****   }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 125


2205:ad5940lib/ad5940.c ****   pSeqInfo->pSeqCmd = 0;    /* We don't know where you store the sequence in MCU SRAM */
2206:ad5940lib/ad5940.c ****   pSeqInfo->SeqId = SeqId;
2207:ad5940lib/ad5940.c ****   pSeqInfo->SeqLen = (tempreg>>16)&0x7ff;
2208:ad5940lib/ad5940.c ****   pSeqInfo->SeqRamAddr = tempreg&0x7ff;
2209:ad5940lib/ad5940.c ****   pSeqInfo->WriteSRAM = bFALSE;  /* Don't care */
2210:ad5940lib/ad5940.c **** 
2211:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
2212:ad5940lib/ad5940.c **** }
2213:ad5940lib/ad5940.c **** 
2214:ad5940lib/ad5940.c **** 
2215:ad5940lib/ad5940.c **** /**
2216:ad5940lib/ad5940.c ****    @brief Control GPIO with register SYNCEXTDEVICE. Because sequencer have no ability to access reg
2217:ad5940lib/ad5940.c ****          so we use this register for sequencer.
2218:ad5940lib/ad5940.c ****    @param Gpio : Select from {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5|AGP
2219:ad5940lib/ad5940.c ****           - The combination of GPIO pins. The selected pins will be set to High. Others will be pul
2220:ad5940lib/ad5940.c ****    @return return None.
2221:ad5940lib/ad5940.c **** 
2222:ad5940lib/ad5940.c **** **/
2223:ad5940lib/ad5940.c **** void AD5940_SEQGpioCtrlS(uint32_t Gpio)
2224:ad5940lib/ad5940.c **** {
2225:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SYNCEXTDEVICE, Gpio);
2226:ad5940lib/ad5940.c **** }
2227:ad5940lib/ad5940.c **** 
2228:ad5940lib/ad5940.c **** /**
2229:ad5940lib/ad5940.c ****  * @brief Read back current count down timer value for Sequencer Timer Out command.
2230:ad5940lib/ad5940.c ****  * @return return register value of Sequencer Timer out value.
2231:ad5940lib/ad5940.c **** **/
2232:ad5940lib/ad5940.c **** uint32_t AD5940_SEQTimeOutRd(void)
2233:ad5940lib/ad5940.c **** {
2234:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AFE_SEQTIMEOUT);
2235:ad5940lib/ad5940.c **** }
2236:ad5940lib/ad5940.c **** 
2237:ad5940lib/ad5940.c **** /**
2238:ad5940lib/ad5940.c ****  * @brief Configure GPIO to allow it to trigger corresponding sequence(SEQ0/1/2/3).
2239:ad5940lib/ad5940.c ****  * @details There are four sequences. We can use GPIO to trigger each sequence. For example,
2240:ad5940lib/ad5940.c ****  *          GP0 or GP4 can be used to trigger sequence0 and GP3 or GP7 to trigger sequence3.
2241:ad5940lib/ad5940.c ****  *          There are five mode available to detect pin action: Rising edge, falling edge, both ris
2242:ad5940lib/ad5940.c ****  *          edge, low level or high level.
2243:ad5940lib/ad5940.c ****  *          Be careful to use level detection. The trigger signal is always available if the pin le
2244:ad5940lib/ad5940.c ****  *          Once the sequence is done, it will immediately run again if the pin level is still matc
2245:ad5940lib/ad5940.c ****  * @return return AD5940ERR_OK if succeed.
2246:ad5940lib/ad5940.c **** **/
2247:ad5940lib/ad5940.c **** AD5940Err AD5940_SEQGpioTrigCfg(SeqGpioTrig_Cfg *pSeqGpioTrigCfg)
2248:ad5940lib/ad5940.c **** {
2249:ad5940lib/ad5940.c ****   uint32_t reg_ei0con, reg_ei1con;
2250:ad5940lib/ad5940.c ****   uint32_t pin_count, pin_mask;
2251:ad5940lib/ad5940.c ****   uint32_t mode, en;
2252:ad5940lib/ad5940.c ****   if(pSeqGpioTrigCfg == NULL)
2253:ad5940lib/ad5940.c ****     return AD5940ERR_NULLP;
2254:ad5940lib/ad5940.c ****   reg_ei0con = AD5940_ReadReg(REG_ALLON_EI0CON);
2255:ad5940lib/ad5940.c ****   reg_ei1con = AD5940_ReadReg(REG_ALLON_EI1CON);
2256:ad5940lib/ad5940.c **** 
2257:ad5940lib/ad5940.c ****   pin_count = 0;    /* Start from pin0 */
2258:ad5940lib/ad5940.c ****   pin_mask = 0x01;  /* start from pin0, mask 0x01 */
2259:ad5940lib/ad5940.c ****   pSeqGpioTrigCfg->SeqPinTrigMode &= 0x07;  /* 3bit width */
2260:ad5940lib/ad5940.c **** 
2261:ad5940lib/ad5940.c ****   mode = pSeqGpioTrigCfg->SeqPinTrigMode;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 126


2262:ad5940lib/ad5940.c ****   en = pSeqGpioTrigCfg->bEnable?1:0;
2263:ad5940lib/ad5940.c ****   for(;;)
2264:ad5940lib/ad5940.c ****   {
2265:ad5940lib/ad5940.c ****     uint32_t bit_position;
2266:ad5940lib/ad5940.c ****     if(pSeqGpioTrigCfg->PinSel&pin_mask)
2267:ad5940lib/ad5940.c ****     {
2268:ad5940lib/ad5940.c ****       if(pin_count < 4) /* EI0CON register */
2269:ad5940lib/ad5940.c ****       {
2270:ad5940lib/ad5940.c ****         bit_position = pin_count*4;
2271:ad5940lib/ad5940.c ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
2272:ad5940lib/ad5940.c ****         reg_ei1con |= mode << bit_position;
2273:ad5940lib/ad5940.c ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
2274:ad5940lib/ad5940.c ****       }
2275:ad5940lib/ad5940.c ****       else
2276:ad5940lib/ad5940.c ****       {
2277:ad5940lib/ad5940.c ****         bit_position = (pin_count-4)*4;
2278:ad5940lib/ad5940.c ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
2279:ad5940lib/ad5940.c ****         reg_ei1con |= mode << bit_position;
2280:ad5940lib/ad5940.c ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
2281:ad5940lib/ad5940.c ****       }
2282:ad5940lib/ad5940.c ****     }
2283:ad5940lib/ad5940.c ****     pin_count ++;
2284:ad5940lib/ad5940.c ****     pin_mask <<= 1;
2285:ad5940lib/ad5940.c ****     if(pin_count == 8)
2286:ad5940lib/ad5940.c ****       break;
2287:ad5940lib/ad5940.c ****   }
2288:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_EI0CON, reg_ei0con);
2289:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_EI0CON, reg_ei1con);
2290:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
2291:ad5940lib/ad5940.c **** }
2292:ad5940lib/ad5940.c **** 
2293:ad5940lib/ad5940.c **** /**
2294:ad5940lib/ad5940.c ****  * @brief Configure Wakeup Timer
2295:ad5940lib/ad5940.c ****  * @param pWuptCfg: Pointer to configuration structure.
2296:ad5940lib/ad5940.c ****  * @return return none.
2297:ad5940lib/ad5940.c **** */
2298:ad5940lib/ad5940.c **** void AD5940_WUPTCfg(WUPTCfg_Type *pWuptCfg)
2299:ad5940lib/ad5940.c **** {
2300:ad5940lib/ad5940.c ****   uint32_t tempreg;
2301:ad5940lib/ad5940.c ****   //check parameters
2302:ad5940lib/ad5940.c ****   /* Sleep and Wakeup time */
2303:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0WUPL, (pWuptCfg->SeqxWakeupTime[0] & 0xFFFF));    
2304:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (pWuptCfg->SeqxWakeupTime[0] & 0xF0000)>>16);
2305:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPL, (pWuptCfg->SeqxSleepTime[0] & 0xFFFF));    
2306:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPH, (pWuptCfg->SeqxSleepTime[0] & 0xF0000)>>16);
2307:ad5940lib/ad5940.c **** 
2308:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1WUPL, (pWuptCfg->SeqxWakeupTime[1] & 0xFFFF));    
2309:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1WUPH, (pWuptCfg->SeqxWakeupTime[1] & 0xF0000)>>16);
2310:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPL, (pWuptCfg->SeqxSleepTime[1] & 0xFFFF));    
2311:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPH, (pWuptCfg->SeqxSleepTime[1] & 0xF0000)>>16);
2312:ad5940lib/ad5940.c **** 
2313:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2WUPL, (pWuptCfg->SeqxWakeupTime[2] & 0xFFFF));    
2314:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2WUPH, (pWuptCfg->SeqxWakeupTime[2] & 0xF0000)>>16);
2315:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPL, (pWuptCfg->SeqxSleepTime[2] & 0xFFFF));    
2316:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPH, (pWuptCfg->SeqxSleepTime[2] & 0xF0000)>>16);
2317:ad5940lib/ad5940.c **** 
2318:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3WUPL, (pWuptCfg->SeqxWakeupTime[3] & 0xFFFF));    
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 127


2319:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3WUPH, (pWuptCfg->SeqxWakeupTime[3] & 0xF0000)>>16);
2320:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPL, (pWuptCfg->SeqxSleepTime[3] & 0xFFFF));    
2321:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPH, (pWuptCfg->SeqxSleepTime[3] & 0xF0000)>>16);
2322:ad5940lib/ad5940.c ****   
2323:ad5940lib/ad5940.c ****   /* TMRCON register */
2324:ad5940lib/ad5940.c ****   //if(pWuptCfg->WakeupEn == bTRUE)  /* enable use Wupt to wakeup AFE */
2325:ad5940lib/ad5940.c ****   /* We always allow Wupt to wakeup AFE automatically. */
2326:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_TMRCON, BITM_ALLON_TMRCON_TMRINTEN);
2327:ad5940lib/ad5940.c ****   /* Wupt order */
2328:ad5940lib/ad5940.c ****   tempreg = 0;
2329:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[0]&0x03) << BITP_WUPTMR_SEQORDER_SEQA; /* position A */
2330:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[1]&0x03) << BITP_WUPTMR_SEQORDER_SEQB; /* position B */
2331:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[2]&0x03) << BITP_WUPTMR_SEQORDER_SEQC; /* position C */
2332:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[3]&0x03) << BITP_WUPTMR_SEQORDER_SEQD; /* position D */
2333:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[4]&0x03) << BITP_WUPTMR_SEQORDER_SEQE; /* position E */
2334:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[5]&0x03) << BITP_WUPTMR_SEQORDER_SEQF; /* position F */
2335:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[6]&0x03) << BITP_WUPTMR_SEQORDER_SEQG; /* position G */
2336:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[7]&0x03) << BITP_WUPTMR_SEQORDER_SEQH; /* position H */
2337:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQORDER, tempreg);
2338:ad5940lib/ad5940.c **** 
2339:ad5940lib/ad5940.c ****   tempreg = 0;
2340:ad5940lib/ad5940.c ****   if(pWuptCfg->WuptEn == bTRUE)
2341:ad5940lib/ad5940.c ****     tempreg |= BITM_WUPTMR_CON_EN;
2342:ad5940lib/ad5940.c ****   /* We always allow Wupt to trigger sequencer */
2343:ad5940lib/ad5940.c ****   tempreg |= pWuptCfg->WuptEndSeq << BITP_WUPTMR_CON_ENDSEQ;
2344:ad5940lib/ad5940.c ****   //tempreg |= 1L<<4;
2345:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_CON, tempreg);
2346:ad5940lib/ad5940.c **** }
2347:ad5940lib/ad5940.c **** 
2348:ad5940lib/ad5940.c **** /**
2349:ad5940lib/ad5940.c ****  * @brief Enable or disable wakeup timer
2350:ad5940lib/ad5940.c ****  * @param Enable : {bTRUE, bFALSE}
2351:ad5940lib/ad5940.c ****  *        - bTRUE: enable wakeup timer
2352:ad5940lib/ad5940.c ****  *        - bFALSE: Disable wakeup timer
2353:ad5940lib/ad5940.c ****  * @return return none.
2354:ad5940lib/ad5940.c **** */
2355:ad5940lib/ad5940.c **** void AD5940_WUPTCtrl(BoolFlag Enable)
2356:ad5940lib/ad5940.c **** {
2357:ad5940lib/ad5940.c ****   uint16_t tempreg;
2358:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_WUPTMR_CON);
2359:ad5940lib/ad5940.c ****   tempreg &= ~BITM_WUPTMR_CON_EN;
2360:ad5940lib/ad5940.c **** 
2361:ad5940lib/ad5940.c ****   if(Enable == bTRUE)
2362:ad5940lib/ad5940.c ****     tempreg |= BITM_WUPTMR_CON_EN;
2363:ad5940lib/ad5940.c ****   
2364:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_CON, tempreg);
2365:ad5940lib/ad5940.c **** }
2366:ad5940lib/ad5940.c **** 
2367:ad5940lib/ad5940.c **** /**
2368:ad5940lib/ad5940.c ****  * @brief Configure WakeupTimer.
2369:ad5940lib/ad5940.c ****  * @param SeqId: Select from SEQID_0/1/2/3. The wakeup timer will load corresponding value from fou
2370:ad5940lib/ad5940.c ****  * @param SleepTime: After how much time, AFE will try to enter hibernate. We disabled this feature
2371:ad5940lib/ad5940.c ****  * @param WakeupTime: After how much time, AFE will wakeup and trigger corresponding sequencer.
2372:ad5940lib/ad5940.c ****  * @note By SleepTime and WakeupTime, the sequencer is triggered periodically and period is (SleepT
2373:ad5940lib/ad5940.c ****  * @return return none.
2374:ad5940lib/ad5940.c **** */
2375:ad5940lib/ad5940.c **** AD5940Err AD5940_WUPTTime(uint32_t SeqId, uint32_t SleepTime, uint32_t WakeupTime)
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 128


2376:ad5940lib/ad5940.c **** {
2377:ad5940lib/ad5940.c ****   switch (SeqId)
2378:ad5940lib/ad5940.c ****   {
2379:ad5940lib/ad5940.c ****     case SEQID_0:
2380:ad5940lib/ad5940.c ****     {
2381:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0WUPL, (WakeupTime & 0xFFFF));    
2382:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (WakeupTime & 0xF0000)>>16);
2383:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPL, (SleepTime & 0xFFFF));    
2384:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPH, (SleepTime & 0xF0000)>>16);
2385:ad5940lib/ad5940.c ****       break;
2386:ad5940lib/ad5940.c ****     }
2387:ad5940lib/ad5940.c ****     case SEQID_1:
2388:ad5940lib/ad5940.c ****     {
2389:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1WUPL, (WakeupTime & 0xFFFF));    
2390:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1WUPH, (WakeupTime & 0xF0000)>>16);
2391:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPL, (SleepTime & 0xFFFF));    
2392:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPH, (SleepTime & 0xF0000)>>16);
2393:ad5940lib/ad5940.c ****       break;
2394:ad5940lib/ad5940.c ****     }
2395:ad5940lib/ad5940.c ****     case SEQID_2:
2396:ad5940lib/ad5940.c ****     {
2397:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2WUPL, (WakeupTime & 0xFFFF));    
2398:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2WUPH, (WakeupTime & 0xF0000)>>16);
2399:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPL, (SleepTime & 0xFFFF));    
2400:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPH, (SleepTime & 0xF0000)>>16);
2401:ad5940lib/ad5940.c ****       break;
2402:ad5940lib/ad5940.c ****     }
2403:ad5940lib/ad5940.c ****     case SEQID_3:
2404:ad5940lib/ad5940.c ****     {
2405:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3WUPL, (WakeupTime & 0xFFFF));    
2406:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3WUPH, (WakeupTime & 0xF0000)>>16);
2407:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPL, (SleepTime & 0xFFFF));    
2408:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPH, (SleepTime & 0xF0000)>>16);
2409:ad5940lib/ad5940.c ****       break;
2410:ad5940lib/ad5940.c ****     }
2411:ad5940lib/ad5940.c ****     default:
2412:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
2413:ad5940lib/ad5940.c ****   }
2414:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
2415:ad5940lib/ad5940.c **** }
2416:ad5940lib/ad5940.c **** 
2417:ad5940lib/ad5940.c **** /**
2418:ad5940lib/ad5940.c ****  * @} end-of Sequencer_FIFO_Functions
2419:ad5940lib/ad5940.c ****  * @} end-of Sequencer_FIFO
2420:ad5940lib/ad5940.c **** */
2421:ad5940lib/ad5940.c **** 
2422:ad5940lib/ad5940.c **** /**
2423:ad5940lib/ad5940.c ****  * @defgroup MISC_Block
2424:ad5940lib/ad5940.c ****  * @brief Other functions not included in above blocks. Clock, GPIO, INTC etc.
2425:ad5940lib/ad5940.c ****  * @{
2426:ad5940lib/ad5940.c ****  *    @defgroup MISC_Block_Functions
2427:ad5940lib/ad5940.c ****  *    @{
2428:ad5940lib/ad5940.c **** */
2429:ad5940lib/ad5940.c **** 
2430:ad5940lib/ad5940.c **** /**
2431:ad5940lib/ad5940.c ****  * @brief Configure AD5940 clock
2432:ad5940lib/ad5940.c ****  * @param pClkCfg: Pointer to configuration structure.
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 129


2433:ad5940lib/ad5940.c ****  * @return return none.
2434:ad5940lib/ad5940.c **** */
2435:ad5940lib/ad5940.c **** void AD5940_CLKCfg(CLKCfg_Type *pClkCfg)
2436:ad5940lib/ad5940.c **** {
2437:ad5940lib/ad5940.c ****   uint32_t tempreg, reg_osccon;
2438:ad5940lib/ad5940.c **** 
2439:ad5940lib/ad5940.c ****   reg_osccon = AD5940_ReadReg(REG_ALLON_OSCCON);
2440:ad5940lib/ad5940.c ****   /* Enable clocks */
2441:ad5940lib/ad5940.c ****   if(pClkCfg->HFXTALEn == bTRUE)
2442:ad5940lib/ad5940.c ****   {
2443:ad5940lib/ad5940.c ****     reg_osccon |= BITM_ALLON_OSCCON_HFXTALEN;
2444:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */
2445:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable HFXTAL */
2446:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFXTALOK) == 0); /* Wait for clock re
2447:ad5940lib/ad5940.c ****   }
2448:ad5940lib/ad5940.c **** 
2449:ad5940lib/ad5940.c ****   if(pClkCfg->HFOSCEn == bTRUE)
2450:ad5940lib/ad5940.c ****   {
2451:ad5940lib/ad5940.c ****     reg_osccon |= BITM_ALLON_OSCCON_HFOSCEN;
2452:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */
2453:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable HFOSC */
2454:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
2455:ad5940lib/ad5940.c ****     /* Configure HFOSC mode if it's enabled. */
2456:ad5940lib/ad5940.c ****     if(pClkCfg->HfOSC32MHzMode  == bTRUE)
2457:ad5940lib/ad5940.c ****       AD5940_HFOSC32MHzCtrl(bTRUE);
2458:ad5940lib/ad5940.c ****     else
2459:ad5940lib/ad5940.c ****       AD5940_HFOSC32MHzCtrl(bFALSE);
2460:ad5940lib/ad5940.c ****   }
2461:ad5940lib/ad5940.c **** 
2462:ad5940lib/ad5940.c ****   if(pClkCfg->LFOSCEn == bTRUE)
2463:ad5940lib/ad5940.c ****   {
2464:ad5940lib/ad5940.c ****     reg_osccon |= BITM_ALLON_OSCCON_LFOSCEN;  
2465:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */  
2466:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable LFOSC */
2467:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_LFOSCOK) == 0); /* Wait for clock rea
2468:ad5940lib/ad5940.c ****   }
2469:ad5940lib/ad5940.c **** 
2470:ad5940lib/ad5940.c ****   /* Switch clocks */
2471:ad5940lib/ad5940.c ****   /* step1. Set clock divider */
2472:ad5940lib/ad5940.c ****   tempreg = pClkCfg->SysClkDiv&0x3f;
2473:ad5940lib/ad5940.c ****   tempreg |= (pClkCfg->SysClkDiv&0x3f) << BITP_AFECON_CLKCON0_SYSCLKDIV;
2474:ad5940lib/ad5940.c ****   tempreg |= (pClkCfg->ADCClkDiv&0xf) << BITP_AFECON_CLKCON0_ADCCLKDIV;
2475:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKCON0, tempreg);
2476:ad5940lib/ad5940.c ****   AD5940_Delay10us(10);
2477:ad5940lib/ad5940.c ****   /* Step2. set clock source */
2478:ad5940lib/ad5940.c ****   tempreg = pClkCfg->SysClkSrc;
2479:ad5940lib/ad5940.c ****   tempreg |= pClkCfg->ADCCLkSrc << BITP_AFECON_CLKSEL_ADCCLKSEL;
2480:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKSEL, tempreg);
2481:ad5940lib/ad5940.c **** 
2482:ad5940lib/ad5940.c ****   /* Disable clocks */
2483:ad5940lib/ad5940.c ****   if(pClkCfg->HFXTALEn == bFALSE)
2484:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFXTALEN;
2485:ad5940lib/ad5940.c ****   if(pClkCfg->HFOSCEn == bFALSE)
2486:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFOSCEN;
2487:ad5940lib/ad5940.c ****   if(pClkCfg->LFOSCEn == bFALSE)
2488:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_LFOSCEN;
2489:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_OSCKEY, KEY_OSCCON); /* Write Key */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 130


2490:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon);
2491:ad5940lib/ad5940.c **** }
2492:ad5940lib/ad5940.c **** 
2493:ad5940lib/ad5940.c **** /**
2494:ad5940lib/ad5940.c ****  * @brief Configure Internal HFOSC to output 32MHz or 16MHz.
2495:ad5940lib/ad5940.c ****  * @param Mode32MHz : {bTRUE, bFALSE}
2496:ad5940lib/ad5940.c ****  *        - bTRUE: HFOSC 32MHz mode.
2497:ad5940lib/ad5940.c ****  *        - bFALSE: HFOSC 16MHz mode.
2498:ad5940lib/ad5940.c ****  * @return return none.
2499:ad5940lib/ad5940.c **** */
2500:ad5940lib/ad5940.c **** void AD5940_HFOSC32MHzCtrl(BoolFlag Mode32MHz)
2501:ad5940lib/ad5940.c **** {
2502:ad5940lib/ad5940.c ****   uint32_t RdCLKEN1;
2503:ad5940lib/ad5940.c ****   uint32_t RdHPOSCCON;   
2504:ad5940lib/ad5940.c **** 
2505:ad5940lib/ad5940.c ****   uint32_t bit8,bit9;
2506:ad5940lib/ad5940.c ****     
2507:ad5940lib/ad5940.c ****   RdCLKEN1 = AD5940_ReadReg(REG_AFECON_CLKEN1);
2508:ad5940lib/ad5940.c ****   bit8 = (RdCLKEN1>>9)&0x01;
2509:ad5940lib/ad5940.c ****   bit9 = (RdCLKEN1>>8)&0x01;  /* Fix bug in silicon, bit8 and bit9 is swapped when read back. */
2510:ad5940lib/ad5940.c ****   RdCLKEN1 = RdCLKEN1&0xff;
2511:ad5940lib/ad5940.c ****   RdCLKEN1 |= (bit8<<8)|(bit9<<9);
2512:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
2513:ad5940lib/ad5940.c **** 
2514:ad5940lib/ad5940.c ****   RdHPOSCCON = AD5940_ReadReg(REG_AFE_HPOSCCON); 
2515:ad5940lib/ad5940.c ****   if(Mode32MHz == bTRUE)
2516:ad5940lib/ad5940.c ****   {
2517:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_HPOSCCON,RdHPOSCCON&(~BITM_AFE_HPOSCCON_CLK32MHZEN)); /* Enable 32MHz o
2518:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
2519:ad5940lib/ad5940.c ****   }
2520:ad5940lib/ad5940.c ****   else
2521:ad5940lib/ad5940.c ****   {
2522:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_HPOSCCON,RdHPOSCCON|BITM_AFE_HPOSCCON_CLK32MHZEN); /* Enable 16MHz outp
2523:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
2524:ad5940lib/ad5940.c ****   }
2525:ad5940lib/ad5940.c **** 
2526:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1&(~BITM_AFECON_CLKEN1_ACLKDIS)); /* Enable ACLK */
2527:ad5940lib/ad5940.c **** }
2528:ad5940lib/ad5940.c **** 
2529:ad5940lib/ad5940.c **** 
2530:ad5940lib/ad5940.c **** /**
2531:ad5940lib/ad5940.c ****  * @defgroup Interrupt_Controller_Functions
2532:ad5940lib/ad5940.c ****  * @{
2533:ad5940lib/ad5940.c **** */
2534:ad5940lib/ad5940.c **** /* AFE Interrupt Controller */
2535:ad5940lib/ad5940.c **** /**
2536:ad5940lib/ad5940.c ****  * @brief Enable or Disable selected interrupt source(s)
2537:ad5940lib/ad5940.c ****  * @param AfeIntcSel : {AFEINTC_0, AFEINTC_1}
2538:ad5940lib/ad5940.c ****  *        - AFEINTC_0: Configure Interrupt Controller 0
2539:ad5940lib/ad5940.c ****  *        - AFEINTC_1: Configure Interrupt Controller 1
2540:ad5940lib/ad5940.c ****  * @param AFEIntSrc: select from @ref AFEINTC_SRC_Const
2541:ad5940lib/ad5940.c ****  *       - AFEINTSRC_ADCRDY        : Bit0 ADC Result Ready Status
2542:ad5940lib/ad5940.c ****  *       - AFEINTSRC_DFTRDY        : Bit1 DFT Result Ready Status
2543:ad5940lib/ad5940.c ****  *       - AFEINTSRC_SUPPLYFILTRDY : Bit2 Low Pass Filter Result Status
2544:ad5940lib/ad5940.c ****  *       - AFEINTSRC_TEMPRDY       : Bit3, Temp Sensor Result Ready
2545:ad5940lib/ad5940.c ****  *       - AFEINTSRC_ADCMINERR     : Bit4, ADC Minimum Value
2546:ad5940lib/ad5940.c ****  *       - AFEINTSRC_ADCMAXERR     : Bit5, ADC Maximum Value
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 131


2547:ad5940lib/ad5940.c ****  *       - AFEINTSRC_ADCDIFFERR    : Bit6, ADC Delta Ready
2548:ad5940lib/ad5940.c ****  *       - AFEINTSRC_MEANRDY       : Bit7, Mean Result Ready
2549:ad5940lib/ad5940.c ****  *       - AFEINTSRC_VARRDY       : Bit8, Variance Result Ready 
2550:ad5940lib/ad5940.c ****  *       - AFEINTSRC_DLYCMDDONE   : Bit9, User controlled interrupt by writing AFEGENINTSTA. Provid
2551:ad5940lib/ad5940.c ****  *       - AFEINTSRC_HWSETUPDONE  : Bit10, User controlled interrupt by writing AFEGENINTSTA. Indic
2552:ad5940lib/ad5940.c ****  *       - AFEINTSRC_BRKSEQ       : Bit11, User controlled interrupt by writing AFEGENINTSTA.
2553:ad5940lib/ad5940.c ****  *       - AFEINTSRC_CUSTOMINS    : Bit12, User controlled interrupt by writing AFEGENINTSTA. Gener
2554:ad5940lib/ad5940.c ****  *       - AFEINTSRC_BOOTLDDONE   : Bit13, OTP Boot Loading Done 
2555:ad5940lib/ad5940.c ****  *       - AFEINTSRC_WAKEUP       : Bit14, AFE Woken up
2556:ad5940lib/ad5940.c ****  *       - AFEINTSRC_ENDSEQ       : Bit15, End of Sequence Interrupt. 
2557:ad5940lib/ad5940.c ****  *       - AFEINTSRC_SEQTIMEOUT   : Bit16, Sequencer Timeout Command Finished. 
2558:ad5940lib/ad5940.c ****  *       - AFEINTSRC_SEQTIMEOUTERR : Bit17, Sequencer Timeout Command Error. 
2559:ad5940lib/ad5940.c ****  *       - AFEINTSRC_CMDFIFOFULL  : Bit18, Command FIFO Full Interrupt. 
2560:ad5940lib/ad5940.c ****  *       - AFEINTSRC_CMDFIFOEMPTY : Bit19, Command FIFO Empty 
2561:ad5940lib/ad5940.c ****  *       - AFEINTSRC_CMDFIFOTHRESH: Bit20, Command FIFO Threshold Interrupt. 
2562:ad5940lib/ad5940.c ****  *       - AFEINTSRC_CMDFIFOOF    : Bit21, Command FIFO Overflow Interrupt. 
2563:ad5940lib/ad5940.c ****  *       - AFEINTSRC_CMDFIFOUF    : Bit22, Command FIFO Underflow Interrupt. 
2564:ad5940lib/ad5940.c ****  *       - AFEINTSRC_DATAFIFOFULL : Bit23, Data FIFO Full Interrupt. 
2565:ad5940lib/ad5940.c ****  *       - AFEINTSRC_DATAFIFOEMPTY: Bit24, Data FIFO Empty 
2566:ad5940lib/ad5940.c ****  *       - AFEINTSRC_DATAFIFOTHRESH: Bit25, Data FIFO Threshold Interrupt. 
2567:ad5940lib/ad5940.c ****  *       - AFEINTSRC_DATAFIFOOF   : Bit26, Data FIFO Overflow Interrupt. 
2568:ad5940lib/ad5940.c ****  *       - AFEINTSRC_DATAFIFOUF   : Bit27, Data FIFO Underflow Interrupt. 
2569:ad5940lib/ad5940.c ****  *       - AFEINTSRC_WDTIRQ       : Bit28, WDT Timeout Interrupt. 
2570:ad5940lib/ad5940.c ****  *       - AFEINTSRC_CRC_OUTLIER  : Bit29, CRC interrupt for M355, Outliers Int for AD5940  
2571:ad5940lib/ad5940.c ****  *       - AFEINTSRC_GPT0INT_SLPWUT: Bit30, General Purpose Timer0 IRQ for M355. Sleep or Wakeup Ti
2572:ad5940lib/ad5940.c ****  *       - AFEINTSRC_GPT1INT_TRYBRK: Bit31, General Purpose Timer1 IRQ for M355. Tried to Break IRQ
2573:ad5940lib/ad5940.c ****  *       - AFE_INTC_ALLINT        : All interrupts
2574:ad5940lib/ad5940.c ****  * @param State : {bTRUE, bFALSE}
2575:ad5940lib/ad5940.c ****  *      - bTRUE: Enable these interrupt source(s)
2576:ad5940lib/ad5940.c ****  *      - bFALSE: Disable interrupt source(s)
2577:ad5940lib/ad5940.c ****  * @return return none.
2578:ad5940lib/ad5940.c **** */
2579:ad5940lib/ad5940.c **** void AD5940_INTCCfg(uint32_t AfeIntcSel, uint32_t AFEIntSrc, BoolFlag State)
2580:ad5940lib/ad5940.c **** {
2581:ad5940lib/ad5940.c ****   uint32_t tempreg;
2582:ad5940lib/ad5940.c ****   uint32_t regaddr = REG_INTC_INTCSEL0;
2583:ad5940lib/ad5940.c ****   
2584:ad5940lib/ad5940.c ****   if(AfeIntcSel == AFEINTC_1)
2585:ad5940lib/ad5940.c ****     regaddr = REG_INTC_INTCSEL1;
2586:ad5940lib/ad5940.c ****   
2587:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(regaddr);
2588:ad5940lib/ad5940.c ****   if(State == bTRUE)
2589:ad5940lib/ad5940.c ****     tempreg |= AFEIntSrc;    /* Enable this interrupt */
2590:ad5940lib/ad5940.c ****   else
2591:ad5940lib/ad5940.c ****     tempreg &= ~(AFEIntSrc); /* Disable this interrupt  */
2592:ad5940lib/ad5940.c ****   AD5940_WriteReg(regaddr,tempreg);
2593:ad5940lib/ad5940.c **** }
2594:ad5940lib/ad5940.c **** 
2595:ad5940lib/ad5940.c **** /**
2596:ad5940lib/ad5940.c ****  * @brief Check if current interrupt configuration.
2597:ad5940lib/ad5940.c ****  * @param AfeIntcSel : {AFEINTC_0, AFEINTC_1}
2598:ad5940lib/ad5940.c ****  *        - AFEINTC_0: Configure Interrupt Controller 0
2599:ad5940lib/ad5940.c ****  *        - AFEINTC_1: Configure Interrupt Controller 1
2600:ad5940lib/ad5940.c **** */
2601:ad5940lib/ad5940.c **** uint32_t AD5940_INTCGetCfg(uint32_t AfeIntcSel)
2602:ad5940lib/ad5940.c **** {
2603:ad5940lib/ad5940.c ****   uint32_t tempreg;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 132


2604:ad5940lib/ad5940.c ****   if(AfeIntcSel == AFEINTC_0)
2605:ad5940lib/ad5940.c ****     tempreg = AD5940_ReadReg(REG_INTC_INTCSEL0);
2606:ad5940lib/ad5940.c ****   else
2607:ad5940lib/ad5940.c ****     tempreg = AD5940_ReadReg(REG_INTC_INTCSEL1);
2608:ad5940lib/ad5940.c ****   return tempreg;
2609:ad5940lib/ad5940.c **** }
2610:ad5940lib/ad5940.c **** 
2611:ad5940lib/ad5940.c **** /**
2612:ad5940lib/ad5940.c ****  * @brief Clear selected interrupt(s) flag(INTC0Flag and INTC1Flag are both cleared).
2613:ad5940lib/ad5940.c ****  * @param AfeIntSrcSel: Select from @ref AFEINTC_SRC_Const
2614:ad5940lib/ad5940.c ****  * @return return none.
2615:ad5940lib/ad5940.c **** **/
2616:ad5940lib/ad5940.c **** void AD5940_INTCClrFlag(uint32_t AfeIntSrcSel)
2617:ad5940lib/ad5940.c **** {
2618:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_INTC_INTCCLR,AfeIntSrcSel);
2619:ad5940lib/ad5940.c **** }
2620:ad5940lib/ad5940.c **** 
2621:ad5940lib/ad5940.c **** /**
2622:ad5940lib/ad5940.c ****  * @brief Test if selected interrupt source(s) is(are) bTRUE.
2623:ad5940lib/ad5940.c ****  * @param AfeIntcSel : {AFEINTC_0, AFEINTC_1}
2624:ad5940lib/ad5940.c ****  *        - AFEINTC_0: Read Interrupt Controller 0 flag
2625:ad5940lib/ad5940.c ****  *        - AFEINTC_1: Read Interrupt Controller 1 flag
2626:ad5940lib/ad5940.c ****  * @param AfeIntSrcSel: Select from @ref AFEINTC_SRC_Const
2627:ad5940lib/ad5940.c ****  * @return If selected interrupt source(s) are all cleared, return bFALSE. Otherwise return bTRUE.
2628:ad5940lib/ad5940.c **** **/
2629:ad5940lib/ad5940.c **** BoolFlag AD5940_INTCTestFlag(uint32_t AfeIntcSel, uint32_t AfeIntSrcSel)
2630:ad5940lib/ad5940.c **** {
2631:ad5940lib/ad5940.c ****   uint32_t tempreg;
2632:ad5940lib/ad5940.c ****   uint32_t regaddr = (AfeIntcSel == AFEINTC_0)? REG_INTC_INTCFLAG0: REG_INTC_INTCFLAG1;
2633:ad5940lib/ad5940.c ****   
2634:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(regaddr);
2635:ad5940lib/ad5940.c ****   if(tempreg & AfeIntSrcSel)
2636:ad5940lib/ad5940.c ****     return bTRUE;
2637:ad5940lib/ad5940.c ****   else
2638:ad5940lib/ad5940.c ****     return bFALSE;
2639:ad5940lib/ad5940.c **** }
2640:ad5940lib/ad5940.c **** 
2641:ad5940lib/ad5940.c **** /**
2642:ad5940lib/ad5940.c ****  * @brief return register value of REG_INTC_INTCFLAGx
2643:ad5940lib/ad5940.c ****  * @param AfeIntcSel : {AFEINTC_0, AFEINTC_1}
2644:ad5940lib/ad5940.c ****  *        - AFEINTC_0: Read Interrupt Controller 0 flag
2645:ad5940lib/ad5940.c ****  *        - AFEINTC_1: Read Interrupt Controller 1 flag     
2646:ad5940lib/ad5940.c ****  * @return register value of REG_INTC_INTCFLAGx.
2647:ad5940lib/ad5940.c **** **/
2648:ad5940lib/ad5940.c **** uint32_t AD5940_INTCGetFlag(uint32_t AfeIntcSel)
2649:ad5940lib/ad5940.c **** {
2650:ad5940lib/ad5940.c ****   uint32_t tempreg;
2651:ad5940lib/ad5940.c ****   uint32_t regaddr = (AfeIntcSel == AFEINTC_0)? REG_INTC_INTCFLAG0: REG_INTC_INTCFLAG1;
2652:ad5940lib/ad5940.c ****   
2653:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(regaddr);
2654:ad5940lib/ad5940.c ****   return tempreg;
2655:ad5940lib/ad5940.c **** }
2656:ad5940lib/ad5940.c **** 
2657:ad5940lib/ad5940.c **** /**
2658:ad5940lib/ad5940.c ****  * @} Interrupt_Controller_Functions
2659:ad5940lib/ad5940.c **** */
2660:ad5940lib/ad5940.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 133


2661:ad5940lib/ad5940.c **** /**
2662:ad5940lib/ad5940.c ****  * @defgroup GPIO_Block_Functions
2663:ad5940lib/ad5940.c ****  * @{
2664:ad5940lib/ad5940.c **** */
2665:ad5940lib/ad5940.c **** 
2666:ad5940lib/ad5940.c **** /**
2667:ad5940lib/ad5940.c ****  * @brief Initialize AFE GPIO
2668:ad5940lib/ad5940.c ****  * @param pAgpioCfg: Pointer to configuration structure
2669:ad5940lib/ad5940.c ****  * @return return none.
2670:ad5940lib/ad5940.c **** */
2671:ad5940lib/ad5940.c **** void AD5940_AGPIOCfg(AGPIOCfg_Type *pAgpioCfg)
2672:ad5940lib/ad5940.c **** {
2673:ad5940lib/ad5940.c ****   AD5940_AGPIOFuncCfg(pAgpioCfg->FuncSet);
2674:ad5940lib/ad5940.c ****   AD5940_AGPIOOen(pAgpioCfg->OutputEnSet);
2675:ad5940lib/ad5940.c ****   AD5940_AGPIOIen(pAgpioCfg->InputEnSet);
2676:ad5940lib/ad5940.c ****   AD5940_AGPIOPen(pAgpioCfg->PullEnSet);
2677:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AGPIO_GP0OUT, pAgpioCfg->OutVal);
2678:ad5940lib/ad5940.c **** }
2679:ad5940lib/ad5940.c **** 
2680:ad5940lib/ad5940.c **** /**
2681:ad5940lib/ad5940.c ****  * @brief Configure the function of GP0 to GP7.
2682:ad5940lib/ad5940.c ****  * @param uiCfgSet :{GP0_INT,GP0_TRIG,GP0_SYNC,GP0_GPIO|
2683:ad5940lib/ad5940.c ****  *               GP1_GPIO,GP1_TRIG,GP1_SYNC,GP1_SLEEP|
2684:ad5940lib/ad5940.c ****  *                GP2_PORB,GP2_TRIG,GP2_SYNC,GP2_EXTCLK|
2685:ad5940lib/ad5940.c ****  *                GP3_GPIO,GP3_TRIG,GP3_SYNC,GP3_INT0|\
2686:ad5940lib/ad5940.c ****  *                GP4_GPIO,GP4_TRIG,GP4_SYNC,GP4_INT1|
2687:ad5940lib/ad5940.c ****  *                GP5_GPIO,GP5_TRIG,GP5_SYNC,GP5_EXTCLK|
2688:ad5940lib/ad5940.c ****  *                GP6_GPIO,GP6_TRIG,GP6_SYNC,GP6_INT0|
2689:ad5940lib/ad5940.c ****  *                GP7_GPIO,GP7_TRIG,GP7_SYNC,GP7_INT}
2690:ad5940lib/ad5940.c ****  * @return return none.
2691:ad5940lib/ad5940.c **** **/
2692:ad5940lib/ad5940.c **** void AD5940_AGPIOFuncCfg(uint32_t uiCfgSet)
2693:ad5940lib/ad5940.c **** {
2694:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0CON,uiCfgSet);
2695:ad5940lib/ad5940.c **** }
2696:ad5940lib/ad5940.c **** 
2697:ad5940lib/ad5940.c **** /**
2698:ad5940lib/ad5940.c ****  * @brief Enable GPIO output mode on selected pins. Disable output on non-selected pins.
2699:ad5940lib/ad5940.c ****  * @param uiPinSet :Select from {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5|
2700:ad5940lib/ad5940.c ****  * @return return none
2701:ad5940lib/ad5940.c **** **/
2702:ad5940lib/ad5940.c **** void AD5940_AGPIOOen(uint32_t uiPinSet)
2703:ad5940lib/ad5940.c **** {
2704:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0OEN,uiPinSet);
2705:ad5940lib/ad5940.c **** }
2706:ad5940lib/ad5940.c **** 
2707:ad5940lib/ad5940.c **** /**
2708:ad5940lib/ad5940.c ****  * @brief Enable input on selected pins while disable others.
2709:ad5940lib/ad5940.c ****  * @param uiPinSet: Select from {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5|
2710:ad5940lib/ad5940.c ****  * @return return none
2711:ad5940lib/ad5940.c **** **/
2712:ad5940lib/ad5940.c **** void AD5940_AGPIOIen(uint32_t uiPinSet)
2713:ad5940lib/ad5940.c **** {
2714:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0IEN,uiPinSet);
2715:ad5940lib/ad5940.c **** }
2716:ad5940lib/ad5940.c **** 
2717:ad5940lib/ad5940.c **** /**
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 134


2718:ad5940lib/ad5940.c ****  * @brief Read the GPIO status.
2719:ad5940lib/ad5940.c ****  * @return return GP0IN register which is the GPIO status.
2720:ad5940lib/ad5940.c **** **/
2721:ad5940lib/ad5940.c **** uint32_t AD5940_AGPIOIn(void)
2722:ad5940lib/ad5940.c **** {
2723:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AGPIO_GP0IN);
2724:ad5940lib/ad5940.c **** }
2725:ad5940lib/ad5940.c **** 
2726:ad5940lib/ad5940.c **** /**
2727:ad5940lib/ad5940.c ****  * @brief Enable pull-up or down on selected pins while disable other pins.
2728:ad5940lib/ad5940.c ****  * @param uiPinSet: Select from: {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5
2729:ad5940lib/ad5940.c ****  * @return return none
2730:ad5940lib/ad5940.c **** **/
2731:ad5940lib/ad5940.c **** void AD5940_AGPIOPen(uint32_t uiPinSet)
2732:ad5940lib/ad5940.c **** {
2733:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0PE,uiPinSet);
2734:ad5940lib/ad5940.c **** }
2735:ad5940lib/ad5940.c **** 
2736:ad5940lib/ad5940.c **** /**
2737:ad5940lib/ad5940.c ****  * @brief Put selected GPIOs to high level.
2738:ad5940lib/ad5940.c ****  * @param uiPinSet: Select from: {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5
2739:ad5940lib/ad5940.c ****  * @return return none
2740:ad5940lib/ad5940.c **** **/
2741:ad5940lib/ad5940.c **** void AD5940_AGPIOSet(uint32_t uiPinSet)
2742:ad5940lib/ad5940.c **** {
2743:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0SET,uiPinSet);
2744:ad5940lib/ad5940.c **** }
2745:ad5940lib/ad5940.c **** 
2746:ad5940lib/ad5940.c **** /**
2747:ad5940lib/ad5940.c ****  * @brief Put selected GPIOs to low level.
2748:ad5940lib/ad5940.c ****  * @param uiPinSet: Select from: {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5
2749:ad5940lib/ad5940.c ****  * @return return none
2750:ad5940lib/ad5940.c **** **/
2751:ad5940lib/ad5940.c **** void AD5940_AGPIOClr(uint32_t uiPinSet)
2752:ad5940lib/ad5940.c **** {
2753:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0CLR,uiPinSet);
2754:ad5940lib/ad5940.c **** }
2755:ad5940lib/ad5940.c **** 
2756:ad5940lib/ad5940.c **** /**
2757:ad5940lib/ad5940.c ****  * @brief Toggle selected GPIOs.
2758:ad5940lib/ad5940.c ****  * @param uiPinSet: Select from: {AGPIO_Pin0|AGPIO_Pin1|AGPIO_Pin2|AGPIO_Pin3|AGPIO_Pin4|AGPIO_Pin5
2759:ad5940lib/ad5940.c ****  * @return return none
2760:ad5940lib/ad5940.c **** **/
2761:ad5940lib/ad5940.c **** void AD5940_AGPIOToggle(uint32_t uiPinSet)
2762:ad5940lib/ad5940.c **** {
2763:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0TGL,uiPinSet);
2764:ad5940lib/ad5940.c **** }
2765:ad5940lib/ad5940.c **** 
2766:ad5940lib/ad5940.c **** /**
2767:ad5940lib/ad5940.c ****  * @} GPIO_Block_Functions
2768:ad5940lib/ad5940.c **** */
2769:ad5940lib/ad5940.c **** 
2770:ad5940lib/ad5940.c **** /**
2771:ad5940lib/ad5940.c ****  * @defgroup LPMode_Block_Functions
2772:ad5940lib/ad5940.c ****  * @{
2773:ad5940lib/ad5940.c **** */
2774:ad5940lib/ad5940.c **** /**
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 135


2775:ad5940lib/ad5940.c ****  * @brief Enter or leave LPMODE. 
2776:ad5940lib/ad5940.c ****  * @details Once enter this mode, some registers are collected together to a new register so we can
2777:ad5940lib/ad5940.c ****  *          Control most blocks with in one register. The so called LPMODE has nothing to do with A
2778:ad5940lib/ad5940.c ****  * @return return AD5940ERR_OK
2779:ad5940lib/ad5940.c **** **/
2780:ad5940lib/ad5940.c **** AD5940Err AD5940_LPModeEnS(BoolFlag LPModeEn)
2781:ad5940lib/ad5940.c **** {
2782:ad5940lib/ad5940.c ****   if(LPModeEn == bTRUE)
2783:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPMODEKEY, KEY_LPMODEKEY);  /* Enter LP mode by right key. */
2784:ad5940lib/ad5940.c ****   else
2785:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPMODEKEY, 0); /* Write wrong key to exit LP mode */
2786:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
2787:ad5940lib/ad5940.c **** }
2788:ad5940lib/ad5940.c **** 
2789:ad5940lib/ad5940.c **** /**
2790:ad5940lib/ad5940.c ****  * @brief Select system clock source for LPMODE. 
2791:ad5940lib/ad5940.c ****  * @note Only in LP Mode, this operation takes effect. Enter LPMODE by function @ref AD5940_LPModeE
2792:ad5940lib/ad5940.c ****  * @param LPModeClk: Select from @ref LPMODECLK_Const
2793:ad5940lib/ad5940.c ****  *       - LPMODECLK_LFOSC: Select LFOSC 32kHz for system clock
2794:ad5940lib/ad5940.c ****  *       - LPMODECLK_HFOSC: Select HFOSC 16MHz/32MHz for system clock
2795:ad5940lib/ad5940.c ****  * @return none.
2796:ad5940lib/ad5940.c **** */
2797:ad5940lib/ad5940.c **** void AD5940_LPModeClkS(uint32_t LPModeClk)
2798:ad5940lib/ad5940.c **** {
2799:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPMODECLKSEL, LPModeClk);
2800:ad5940lib/ad5940.c **** }
2801:ad5940lib/ad5940.c **** 
2802:ad5940lib/ad5940.c **** /**
2803:ad5940lib/ad5940.c ****  * @} LPMode_Block_Functions
2804:ad5940lib/ad5940.c **** */
2805:ad5940lib/ad5940.c **** 
2806:ad5940lib/ad5940.c **** /**
2807:ad5940lib/ad5940.c ****  * @brief Enter sleep mode key to unlock it or enter incorrect key to lock it. \
2808:ad5940lib/ad5940.c ****  *        Once key is unlocked, it will always be effect until manually lock it
2809:ad5940lib/ad5940.c ****  * @param SlpKey : {SLPKEY_UNLOCK, SLPKEY_LOCK}
2810:ad5940lib/ad5940.c ****           - SLPKEY_UNLOCK Unlock Key so we can enter sleep(or called hibernate) mode.
2811:ad5940lib/ad5940.c ****           - SLPKEY_LOCK Lock key so AD5940 is prohibited to enter sleep mode.
2812:ad5940lib/ad5940.c ****    @return return none.
2813:ad5940lib/ad5940.c **** */
2814:ad5940lib/ad5940.c **** void AD5940_SleepKeyCtrlS(uint32_t SlpKey)
2815:ad5940lib/ad5940.c **** {
2816:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQSLPLOCK, SlpKey);
2817:ad5940lib/ad5940.c **** }
2818:ad5940lib/ad5940.c **** 
2819:ad5940lib/ad5940.c **** /**
2820:ad5940lib/ad5940.c ****  * @brief Put AFE to hibernate. 
2821:ad5940lib/ad5940.c ****  * @details This will only take effect when SLP_KEY has been unlocked. Use function @ref AD5940_Sle
2822:ad5940lib/ad5940.c ****  * @return return none.
2823:ad5940lib/ad5940.c **** */
2824:ad5940lib/ad5940.c **** void AD5940_EnterSleepS(void)
2825:ad5940lib/ad5940.c **** {
2826:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQTRGSLP, 0);
2827:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQTRGSLP, 1);
2828:ad5940lib/ad5940.c **** }
2829:ad5940lib/ad5940.c **** 
2830:ad5940lib/ad5940.c **** /**
2831:ad5940lib/ad5940.c ****  * @brief Turn off LP-Loop and put AFE to hibernate mode;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 136


2832:ad5940lib/ad5940.c ****  * @details By function @ref AD5940_EnterSleepS, we can put most blocks to hibernate mode except LP
2833:ad5940lib/ad5940.c ****  *          This function will shut down LP block and then enter sleep mode.
2834:ad5940lib/ad5940.c ****  * @return return none.
2835:ad5940lib/ad5940.c **** */
2836:ad5940lib/ad5940.c **** void AD5940_ShutDownS(void)
2837:ad5940lib/ad5940.c **** {
2838:ad5940lib/ad5940.c ****   /* Turn off LPloop related blocks which are not controlled automatically by hibernate operation *
2839:ad5940lib/ad5940.c ****   AFERefCfg_Type aferef_cfg;
2840:ad5940lib/ad5940.c ****   LPLoopCfg_Type lp_loop;
2841:ad5940lib/ad5940.c ****   /* Turn off LP-loop manually because it's not affected by sleep/hibernate mode */
2842:ad5940lib/ad5940.c ****   AD5940_StructInit(&aferef_cfg, sizeof(aferef_cfg));
2843:ad5940lib/ad5940.c ****   AD5940_StructInit(&lp_loop, sizeof(lp_loop));
2844:ad5940lib/ad5940.c ****   AD5940_REFCfgS(&aferef_cfg);
2845:ad5940lib/ad5940.c ****   AD5940_LPLoopCfgS(&lp_loop);
2846:ad5940lib/ad5940.c ****   AD5940_SleepKeyCtrlS(SLPKEY_UNLOCK);  /* Unlock the key */
2847:ad5940lib/ad5940.c ****   AD5940_EnterSleepS();  /* Enter Hibernate */
2848:ad5940lib/ad5940.c **** }
2849:ad5940lib/ad5940.c **** 
2850:ad5940lib/ad5940.c **** /**
2851:ad5940lib/ad5940.c ****  * @brief Try to wakeup AD5940 by read register.
2852:ad5940lib/ad5940.c ****  * @details Any SPI operation can wakeup AD5940. AD5940_Initialize must be called to enable this fu
2853:ad5940lib/ad5940.c ****  * @param TryCount Specify how many times we will read register. Zero or negative number means alwa
2854:ad5940lib/ad5940.c ****  * @return How many times register is read. If returned value is bigger than TryCount, it means wak
2855:ad5940lib/ad5940.c **** */
2856:ad5940lib/ad5940.c **** uint32_t  AD5940_WakeUp(int32_t TryCount)
2857:ad5940lib/ad5940.c **** {
2858:ad5940lib/ad5940.c ****   uint32_t count = 0;
2859:ad5940lib/ad5940.c ****   while(1)
2860:ad5940lib/ad5940.c ****   {
2861:ad5940lib/ad5940.c ****     count++;
2862:ad5940lib/ad5940.c ****     if(AD5940_ReadReg(REG_AFECON_ADIID) == AD5940_ADIID)
2863:ad5940lib/ad5940.c ****       break;    /* Succeed */
2864:ad5940lib/ad5940.c ****     if(TryCount<=0) 
2865:ad5940lib/ad5940.c ****       continue; /* Always try to wakeup AFE */
2866:ad5940lib/ad5940.c **** 
2867:ad5940lib/ad5940.c ****     if(count > TryCount)
2868:ad5940lib/ad5940.c ****       break;    /* Failed */
2869:ad5940lib/ad5940.c ****   }
2870:ad5940lib/ad5940.c ****   return count;
2871:ad5940lib/ad5940.c **** }
2872:ad5940lib/ad5940.c **** 
2873:ad5940lib/ad5940.c **** /**
2874:ad5940lib/ad5940.c ****  * @brief Read ADIID register, the value for current version is @ref AD5940_ADIID
2875:ad5940lib/ad5940.c ****  * @return return none.
2876:ad5940lib/ad5940.c **** */
2877:ad5940lib/ad5940.c **** uint32_t AD5940_GetADIID(void)
2878:ad5940lib/ad5940.c **** {
2879:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AFECON_ADIID);
2880:ad5940lib/ad5940.c **** }
2881:ad5940lib/ad5940.c **** 
2882:ad5940lib/ad5940.c **** /**
2883:ad5940lib/ad5940.c ****  * @brief Read CHIPID register, the value for current version is 0x5501.
2884:ad5940lib/ad5940.c ****  * @return return none.
2885:ad5940lib/ad5940.c **** */
2886:ad5940lib/ad5940.c **** uint32_t AD5940_GetChipID(void)
2887:ad5940lib/ad5940.c **** {
2888:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AFECON_CHIPID);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 137


2889:ad5940lib/ad5940.c **** }
2890:ad5940lib/ad5940.c **** /**
2891:ad5940lib/ad5940.c ****  * @brief Reset AD5940 by register.
2892:ad5940lib/ad5940.c ****  * @note AD5940 must be in active state so we can access registers.
2893:ad5940lib/ad5940.c ****  *       If AD5940 system clock is too low, we consider to use hardware reset, or 
2894:ad5940lib/ad5940.c ****  *       we need to make sure register write is successfully.
2895:ad5940lib/ad5940.c ****  * @return return none.
2896:ad5940lib/ad5940.c **** */
2897:ad5940lib/ad5940.c **** AD5940Err  AD5940_SoftRst(void)
2898:ad5940lib/ad5940.c **** {
2899:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_SWRSTCON, AD5940_SWRST);
2900:ad5940lib/ad5940.c ****   AD5940_Delay10us(20); /* AD5940 need some time to exit reset status. 200us looks good. */
2901:ad5940lib/ad5940.c ****   /* We can check RSTSTA register to make sure software reset happened. */
2902:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
2903:ad5940lib/ad5940.c **** }
2904:ad5940lib/ad5940.c **** 
2905:ad5940lib/ad5940.c **** /**
2906:ad5940lib/ad5940.c ****  * @brief Reset AD5940 with RESET pin.
2907:ad5940lib/ad5940.c ****  * @note This will call function AD5940_RstClr which locates in file XXXPort.C
2908:ad5940lib/ad5940.c ****  * @return return none.
2909:ad5940lib/ad5940.c **** */
2910:ad5940lib/ad5940.c **** void AD5940_HWReset(void)
2911:ad5940lib/ad5940.c **** {
2912:ad5940lib/ad5940.c **** #ifndef CHIPSEL_M355
2913:ad5940lib/ad5940.c ****   AD5940_RstClr();
2914:ad5940lib/ad5940.c ****   AD5940_Delay10us(200); /* Delay some time */
2915:ad5940lib/ad5940.c ****   AD5940_RstSet();
2916:ad5940lib/ad5940.c ****   AD5940_Delay10us(500); /* AD5940 need some time to exit reset status. 200us looks good. */
2917:ad5940lib/ad5940.c **** #else
2918:ad5940lib/ad5940.c ****   //There is no method to reset AFE only for M355.
2919:ad5940lib/ad5940.c **** #endif
2920:ad5940lib/ad5940.c **** }
2921:ad5940lib/ad5940.c **** 
2922:ad5940lib/ad5940.c **** /**
2923:ad5940lib/ad5940.c ****  * @} MISC_Block_Functions
2924:ad5940lib/ad5940.c ****  * @} MISC_Block
2925:ad5940lib/ad5940.c **** */
2926:ad5940lib/ad5940.c **** 
2927:ad5940lib/ad5940.c **** /**
2928:ad5940lib/ad5940.c ****  * @defgroup Calibration_Block
2929:ad5940lib/ad5940.c ****  * @brief The non-factory calibration routines.
2930:ad5940lib/ad5940.c ****  * @{
2931:ad5940lib/ad5940.c ****  *    @defgroup Calibration_Functions
2932:ad5940lib/ad5940.c ****  *    @{
2933:ad5940lib/ad5940.c ****  *  
2934:ad5940lib/ad5940.c ****  * 
2935:ad5940lib/ad5940.c ****  */
2936:ad5940lib/ad5940.c **** /**
2937:ad5940lib/ad5940.c ****  * @brief Turn on High power 1.8V/1.1V reference and 2.5V LP reference.
2938:ad5940lib/ad5940.c ****  * @return return none.
2939:ad5940lib/ad5940.c **** */
2940:ad5940lib/ad5940.c **** static void __AD5940_ReferenceON(void)
2941:ad5940lib/ad5940.c **** {
 3952              		.loc 1 2941 1 is_stmt 1 view -0
 3953              		.cfi_startproc
 3954              		@ args = 0, pretend = 0, frame = 16
 3955              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 138


 3956 0000 00B5     		push	{lr}
 3957              	.LCFI71:
 3958              		.cfi_def_cfa_offset 4
 3959              		.cfi_offset 14, -4
 3960 0002 85B0     		sub	sp, sp, #20
 3961              	.LCFI72:
 3962              		.cfi_def_cfa_offset 24
2942:ad5940lib/ad5940.c ****   AFERefCfg_Type ref_cfg;
 3963              		.loc 1 2942 3 view .LVU1195
2943:ad5940lib/ad5940.c ****   /* Turn ON ADC/DAC and LPDAC reference */
2944:ad5940lib/ad5940.c ****   ref_cfg.Hp1V1BuffEn = bTRUE;
 3964              		.loc 1 2944 3 view .LVU1196
 3965              		.loc 1 2944 23 is_stmt 0 view .LVU1197
 3966 0004 0123     		movs	r3, #1
 3967 0006 8DF80230 		strb	r3, [sp, #2]
2945:ad5940lib/ad5940.c ****   ref_cfg.Hp1V8BuffEn = bTRUE;
 3968              		.loc 1 2945 3 is_stmt 1 view .LVU1198
 3969              		.loc 1 2945 23 is_stmt 0 view .LVU1199
 3970 000a 8DF80130 		strb	r3, [sp, #1]
2946:ad5940lib/ad5940.c ****   ref_cfg.HpBandgapEn = bTRUE;
 3971              		.loc 1 2946 3 is_stmt 1 view .LVU1200
 3972              		.loc 1 2946 23 is_stmt 0 view .LVU1201
 3973 000e 8DF80030 		strb	r3, [sp]
2947:ad5940lib/ad5940.c ****   ref_cfg.HSDACRefEn = bTRUE;
 3974              		.loc 1 2947 3 is_stmt 1 view .LVU1202
 3975              		.loc 1 2947 22 is_stmt 0 view .LVU1203
 3976 0012 8DF80830 		strb	r3, [sp, #8]
2948:ad5940lib/ad5940.c ****   ref_cfg.LpBandgapEn = bTRUE;
 3977              		.loc 1 2948 3 is_stmt 1 view .LVU1204
 3978              		.loc 1 2948 23 is_stmt 0 view .LVU1205
 3979 0016 8DF80530 		strb	r3, [sp, #5]
2949:ad5940lib/ad5940.c ****   ref_cfg.LpRefBufEn = bTRUE;
 3980              		.loc 1 2949 3 is_stmt 1 view .LVU1206
 3981              		.loc 1 2949 22 is_stmt 0 view .LVU1207
 3982 001a 8DF80630 		strb	r3, [sp, #6]
2950:ad5940lib/ad5940.c **** 
2951:ad5940lib/ad5940.c ****   ref_cfg.Disc1V1Cap = bFALSE;
 3983              		.loc 1 2951 3 is_stmt 1 view .LVU1208
 3984              		.loc 1 2951 22 is_stmt 0 view .LVU1209
 3985 001e 0023     		movs	r3, #0
 3986 0020 8DF80C30 		strb	r3, [sp, #12]
2952:ad5940lib/ad5940.c ****   ref_cfg.Disc1V8Cap = bFALSE;
 3987              		.loc 1 2952 3 is_stmt 1 view .LVU1210
 3988              		.loc 1 2952 22 is_stmt 0 view .LVU1211
 3989 0024 8DF80B30 		strb	r3, [sp, #11]
2953:ad5940lib/ad5940.c ****   ref_cfg.Hp1V8Ilimit = bFALSE;
 3990              		.loc 1 2953 3 is_stmt 1 view .LVU1212
 3991              		.loc 1 2953 23 is_stmt 0 view .LVU1213
 3992 0028 8DF80A30 		strb	r3, [sp, #10]
2954:ad5940lib/ad5940.c ****   ref_cfg.Hp1V8ThemBuff = bFALSE;
 3993              		.loc 1 2954 3 is_stmt 1 view .LVU1214
 3994              		.loc 1 2954 25 is_stmt 0 view .LVU1215
 3995 002c 8DF80930 		strb	r3, [sp, #9]
2955:ad5940lib/ad5940.c ****   ref_cfg.Lp1V1BuffEn = bFALSE;
 3996              		.loc 1 2955 3 is_stmt 1 view .LVU1216
 3997              		.loc 1 2955 23 is_stmt 0 view .LVU1217
 3998 0030 8DF80430 		strb	r3, [sp, #4]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 139


2956:ad5940lib/ad5940.c ****   ref_cfg.Lp1V8BuffEn = bFALSE;
 3999              		.loc 1 2956 3 is_stmt 1 view .LVU1218
 4000              		.loc 1 2956 23 is_stmt 0 view .LVU1219
 4001 0034 8DF80330 		strb	r3, [sp, #3]
2957:ad5940lib/ad5940.c ****   ref_cfg.LpRefBoostEn = bFALSE;
 4002              		.loc 1 2957 3 is_stmt 1 view .LVU1220
 4003              		.loc 1 2957 24 is_stmt 0 view .LVU1221
 4004 0038 8DF80730 		strb	r3, [sp, #7]
2958:ad5940lib/ad5940.c ****   AD5940_REFCfgS(&ref_cfg);
 4005              		.loc 1 2958 3 is_stmt 1 view .LVU1222
 4006 003c 6846     		mov	r0, sp
 4007 003e FFF7FEFF 		bl	AD5940_REFCfgS
 4008              	.LVL318:
2959:ad5940lib/ad5940.c **** }
 4009              		.loc 1 2959 1 is_stmt 0 view .LVU1223
 4010 0042 05B0     		add	sp, sp, #20
 4011              	.LCFI73:
 4012              		.cfi_def_cfa_offset 4
 4013              		@ sp needed
 4014 0044 5DF804FB 		ldr	pc, [sp], #4
 4015              		.cfi_endproc
 4016              	.LFE113:
 4018              		.section	.text.AD5940_SWMatrixCfgS,"ax",%progbits
 4019              		.align	1
 4020              		.global	AD5940_SWMatrixCfgS
 4021              		.syntax unified
 4022              		.thumb
 4023              		.thumb_func
 4024              		.fpu fpv5-d16
 4026              	AD5940_SWMatrixCfgS:
 4027              	.LVL319:
 4028              	.LFB42:
1302:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DSWFULLCON, pSwMatrix->Dswitch);
 4029              		.loc 1 1302 1 is_stmt 1 view -0
 4030              		.cfi_startproc
 4031              		@ args = 0, pretend = 0, frame = 0
 4032              		@ frame_needed = 0, uses_anonymous_args = 0
1302:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DSWFULLCON, pSwMatrix->Dswitch);
 4033              		.loc 1 1302 1 is_stmt 0 view .LVU1225
 4034 0000 10B5     		push	{r4, lr}
 4035              	.LCFI74:
 4036              		.cfi_def_cfa_offset 8
 4037              		.cfi_offset 4, -8
 4038              		.cfi_offset 14, -4
 4039 0002 0446     		mov	r4, r0
1303:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_PSWFULLCON, pSwMatrix->Pswitch);
 4040              		.loc 1 1303 3 is_stmt 1 view .LVU1226
 4041 0004 0168     		ldr	r1, [r0]
 4042 0006 42F25010 		movw	r0, #8528
 4043              	.LVL320:
1303:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_PSWFULLCON, pSwMatrix->Pswitch);
 4044              		.loc 1 1303 3 is_stmt 0 view .LVU1227
 4045 000a FFF7FEFF 		bl	AD5940_WriteReg
 4046              	.LVL321:
1304:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_NSWFULLCON, pSwMatrix->Nswitch);
 4047              		.loc 1 1304 3 is_stmt 1 view .LVU1228
 4048 000e 6168     		ldr	r1, [r4, #4]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 140


 4049 0010 42F25810 		movw	r0, #8536
 4050 0014 FFF7FEFF 		bl	AD5940_WriteReg
 4051              	.LVL322:
1305:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_TSWFULLCON, pSwMatrix->Tswitch);
 4052              		.loc 1 1305 3 view .LVU1229
 4053 0018 A168     		ldr	r1, [r4, #8]
 4054 001a 42F25410 		movw	r0, #8532
 4055 001e FFF7FEFF 		bl	AD5940_WriteReg
 4056              	.LVL323:
1306:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SWCON, BITM_AFE_SWCON_SWSOURCESEL); /* Update switch configuration */
 4057              		.loc 1 1306 3 view .LVU1230
 4058 0022 E168     		ldr	r1, [r4, #12]
 4059 0024 42F25C10 		movw	r0, #8540
 4060 0028 FFF7FEFF 		bl	AD5940_WriteReg
 4061              	.LVL324:
1307:ad5940lib/ad5940.c **** }
 4062              		.loc 1 1307 3 view .LVU1231
 4063 002c 4FF48031 		mov	r1, #65536
 4064 0030 42F20C00 		movw	r0, #8204
 4065 0034 FFF7FEFF 		bl	AD5940_WriteReg
 4066              	.LVL325:
1308:ad5940lib/ad5940.c **** 
 4067              		.loc 1 1308 1 is_stmt 0 view .LVU1232
 4068 0038 10BD     		pop	{r4, pc}
1308:ad5940lib/ad5940.c **** 
 4069              		.loc 1 1308 1 view .LVU1233
 4070              		.cfi_endproc
 4071              	.LFE42:
 4073              		.section	.text.AD5940_HSDacCfgS,"ax",%progbits
 4074              		.align	1
 4075              		.global	AD5940_HSDacCfgS
 4076              		.syntax unified
 4077              		.thumb
 4078              		.thumb_func
 4079              		.fpu fpv5-d16
 4081              	AD5940_HSDacCfgS:
 4082              	.LVL326:
 4083              	.LFB43:
1316:ad5940lib/ad5940.c ****   uint32_t tempreg;
 4084              		.loc 1 1316 1 is_stmt 1 view -0
 4085              		.cfi_startproc
 4086              		@ args = 0, pretend = 0, frame = 0
 4087              		@ frame_needed = 0, uses_anonymous_args = 0
1316:ad5940lib/ad5940.c ****   uint32_t tempreg;
 4088              		.loc 1 1316 1 is_stmt 0 view .LVU1235
 4089 0000 08B5     		push	{r3, lr}
 4090              	.LCFI75:
 4091              		.cfi_def_cfa_offset 8
 4092              		.cfi_offset 3, -8
 4093              		.cfi_offset 14, -4
1317:ad5940lib/ad5940.c ****   //Check parameters
 4094              		.loc 1 1317 3 is_stmt 1 view .LVU1236
1319:ad5940lib/ad5940.c ****   if(pHsDacCfg->ExcitBufGain == EXCITBUFGAIN_0P25)
 4095              		.loc 1 1319 3 view .LVU1237
 4096              	.LVL327:
1320:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSDACCON_INAMPGNMDE; /* Enable attenuator */
 4097              		.loc 1 1320 3 view .LVU1238
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 141


1320:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSDACCON_INAMPGNMDE; /* Enable attenuator */
 4098              		.loc 1 1320 15 is_stmt 0 view .LVU1239
 4099 0002 0368     		ldr	r3, [r0]
1320:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSDACCON_INAMPGNMDE; /* Enable attenuator */
 4100              		.loc 1 1320 5 view .LVU1240
 4101 0004 012B     		cmp	r3, #1
 4102 0006 0DD0     		beq	.L284
1319:ad5940lib/ad5940.c ****   if(pHsDacCfg->ExcitBufGain == EXCITBUFGAIN_0P25)
 4103              		.loc 1 1319 11 view .LVU1241
 4104 0008 0021     		movs	r1, #0
 4105              	.L282:
 4106              	.LVL328:
1322:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSDACCON_ATTENEN; /* Enable attenuator */
 4107              		.loc 1 1322 3 is_stmt 1 view .LVU1242
1322:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSDACCON_ATTENEN; /* Enable attenuator */
 4108              		.loc 1 1322 15 is_stmt 0 view .LVU1243
 4109 000a 4368     		ldr	r3, [r0, #4]
1322:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSDACCON_ATTENEN; /* Enable attenuator */
 4110              		.loc 1 1322 5 view .LVU1244
 4111 000c 012B     		cmp	r3, #1
 4112 000e 0CD0     		beq	.L286
 4113              	.L283:
1324:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSDACCON, tempreg);
 4114              		.loc 1 1324 3 is_stmt 1 view .LVU1245
1324:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSDACCON, tempreg);
 4115              		.loc 1 1324 24 is_stmt 0 view .LVU1246
 4116 0010 8368     		ldr	r3, [r0, #8]
1324:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSDACCON, tempreg);
 4117              		.loc 1 1324 47 view .LVU1247
 4118 0012 5B00     		lsls	r3, r3, #1
 4119 0014 03F4FF73 		and	r3, r3, #510
 4120              	.LVL329:
1325:ad5940lib/ad5940.c **** }
 4121              		.loc 1 1325 3 is_stmt 1 view .LVU1248
 4122 0018 1943     		orrs	r1, r1, r3
 4123              	.LVL330:
1325:ad5940lib/ad5940.c **** }
 4124              		.loc 1 1325 3 is_stmt 0 view .LVU1249
 4125 001a 42F21000 		movw	r0, #8208
 4126              	.LVL331:
1325:ad5940lib/ad5940.c **** }
 4127              		.loc 1 1325 3 view .LVU1250
 4128 001e FFF7FEFF 		bl	AD5940_WriteReg
 4129              	.LVL332:
1326:ad5940lib/ad5940.c **** 
 4130              		.loc 1 1326 1 view .LVU1251
 4131 0022 08BD     		pop	{r3, pc}
 4132              	.LVL333:
 4133              	.L284:
1321:ad5940lib/ad5940.c ****   if(pHsDacCfg->HsDacGain == HSDACGAIN_0P2)
 4134              		.loc 1 1321 13 view .LVU1252
 4135 0024 4FF48051 		mov	r1, #4096
 4136 0028 EFE7     		b	.L282
 4137              	.LVL334:
 4138              	.L286:
1323:ad5940lib/ad5940.c ****   tempreg |= (pHsDacCfg->HsDacUpdateRate&0xff)<<BITP_AFE_HSDACCON_RATE;
 4139              		.loc 1 1323 5 is_stmt 1 view .LVU1253
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 142


1323:ad5940lib/ad5940.c ****   tempreg |= (pHsDacCfg->HsDacUpdateRate&0xff)<<BITP_AFE_HSDACCON_RATE;
 4140              		.loc 1 1323 13 is_stmt 0 view .LVU1254
 4141 002a 41F00101 		orr	r1, r1, #1
 4142              	.LVL335:
1323:ad5940lib/ad5940.c ****   tempreg |= (pHsDacCfg->HsDacUpdateRate&0xff)<<BITP_AFE_HSDACCON_RATE;
 4143              		.loc 1 1323 13 view .LVU1255
 4144 002e EFE7     		b	.L283
 4145              		.cfi_endproc
 4146              	.LFE43:
 4148              		.section	.text.AD5940_HSTIACfgS,"ax",%progbits
 4149              		.align	1
 4150              		.global	AD5940_HSTIACfgS
 4151              		.syntax unified
 4152              		.thumb
 4153              		.thumb_func
 4154              		.fpu fpv5-d16
 4156              	AD5940_HSTIACfgS:
 4157              	.LVL336:
 4158              	.LFB45:
1367:ad5940lib/ad5940.c ****   uint32_t tempreg;
 4159              		.loc 1 1367 1 is_stmt 1 view -0
 4160              		.cfi_startproc
 4161              		@ args = 0, pretend = 0, frame = 0
 4162              		@ frame_needed = 0, uses_anonymous_args = 0
1368:ad5940lib/ad5940.c ****   //Check parameters
 4163              		.loc 1 1368 3 view .LVU1257
1370:ad5940lib/ad5940.c ****     /* Available parameter is 1k, 5k,...,160k, short, OPEN */
 4164              		.loc 1 1370 3 view .LVU1258
1370:ad5940lib/ad5940.c ****     /* Available parameter is 1k, 5k,...,160k, short, OPEN */
 4165              		.loc 1 1370 5 is_stmt 0 view .LVU1259
 4166 0000 18B3     		cbz	r0, .L290
1367:ad5940lib/ad5940.c ****   uint32_t tempreg;
 4167              		.loc 1 1367 1 view .LVU1260
 4168 0002 10B5     		push	{r4, lr}
 4169              	.LCFI76:
 4170              		.cfi_def_cfa_offset 8
 4171              		.cfi_offset 4, -8
 4172              		.cfi_offset 14, -4
 4173 0004 0446     		mov	r4, r0
1372:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
 4174              		.loc 1 1372 3 is_stmt 1 view .LVU1261
1372:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
 4175              		.loc 1 1372 15 is_stmt 0 view .LVU1262
 4176 0006 0369     		ldr	r3, [r0, #16]
1372:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
 4177              		.loc 1 1372 5 view .LVU1263
 4178 0008 022B     		cmp	r3, #2
 4179 000a 21D9     		bls	.L291
1374:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;  /* Parameter is invalid */
 4180              		.loc 1 1374 3 is_stmt 1 view .LVU1264
1374:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;  /* Parameter is invalid */
 4181              		.loc 1 1374 5 is_stmt 0 view .LVU1265
 4182 000c 0B2B     		cmp	r3, #11
 4183 000e 22D8     		bhi	.L292
1377:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;  /* Available parameter is OPEN, 0R,..., 100R */
 4184              		.loc 1 1377 3 is_stmt 1 view .LVU1266
1377:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;  /* Available parameter is OPEN, 0R,..., 100R */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 143


 4185              		.loc 1 1377 15 is_stmt 0 view .LVU1267
 4186 0010 4369     		ldr	r3, [r0, #20]
1377:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;  /* Available parameter is OPEN, 0R,..., 100R */
 4187              		.loc 1 1377 5 view .LVU1268
 4188 0012 052B     		cmp	r3, #5
 4189 0014 22D8     		bhi	.L293
1380:ad5940lib/ad5940.c ****   tempreg |= pHsTiaCfg->HstiaBias;
 4190              		.loc 1 1380 3 is_stmt 1 view .LVU1269
 4191              	.LVL337:
1381:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSTIACON, tempreg);
 4192              		.loc 1 1381 3 view .LVU1270
1382:ad5940lib/ad5940.c ****   /* HSRTIACON */
 4193              		.loc 1 1382 3 view .LVU1271
 4194 0016 0168     		ldr	r1, [r0]
 4195 0018 42F2FC00 		movw	r0, #8444
 4196              	.LVL338:
1382:ad5940lib/ad5940.c ****   /* HSRTIACON */
 4197              		.loc 1 1382 3 is_stmt 0 view .LVU1272
 4198 001c FFF7FEFF 		bl	AD5940_WriteReg
 4199              	.LVL339:
1385:ad5940lib/ad5940.c ****   tempreg |= pHsTiaCfg->HstiaRtiaSel;
 4200              		.loc 1 1385 3 is_stmt 1 view .LVU1273
1385:ad5940lib/ad5940.c ****   tempreg |= pHsTiaCfg->HstiaRtiaSel;
 4201              		.loc 1 1385 22 is_stmt 0 view .LVU1274
 4202 0020 A368     		ldr	r3, [r4, #8]
 4203              	.LVL340:
1386:ad5940lib/ad5940.c ****   if(pHsTiaCfg->DiodeClose == bTRUE)
 4204              		.loc 1 1386 3 is_stmt 1 view .LVU1275
1386:ad5940lib/ad5940.c ****   if(pHsTiaCfg->DiodeClose == bTRUE)
 4205              		.loc 1 1386 23 is_stmt 0 view .LVU1276
 4206 0022 6168     		ldr	r1, [r4, #4]
1386:ad5940lib/ad5940.c ****   if(pHsTiaCfg->DiodeClose == bTRUE)
 4207              		.loc 1 1386 11 view .LVU1277
 4208 0024 41EA4311 		orr	r1, r1, r3, lsl #5
 4209              	.LVL341:
1387:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSRTIACON_TIASW6CON; /* Close switch 6 */
 4210              		.loc 1 1387 3 is_stmt 1 view .LVU1278
1387:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSRTIACON_TIASW6CON; /* Close switch 6 */
 4211              		.loc 1 1387 15 is_stmt 0 view .LVU1279
 4212 0028 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
1387:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_HSRTIACON_TIASW6CON; /* Close switch 6 */
 4213              		.loc 1 1387 5 view .LVU1280
 4214 002a 012B     		cmp	r3, #1
 4215 002c 0AD0     		beq	.L298
 4216              	.L289:
1389:ad5940lib/ad5940.c ****   /* DExRESCON */
 4217              		.loc 1 1389 3 is_stmt 1 view .LVU1281
 4218 002e 42F2F000 		movw	r0, #8432
 4219 0032 FFF7FEFF 		bl	AD5940_WriteReg
 4220              	.LVL342:
1391:ad5940lib/ad5940.c **** #ifdef CHIPSEL_M355
 4221              		.loc 1 1391 3 view .LVU1282
 4222 0036 6269     		ldr	r2, [r4, #20]
 4223 0038 2169     		ldr	r1, [r4, #16]
 4224 003a 0020     		movs	r0, #0
 4225 003c FFF7FEFF 		bl	__AD5940_SetDExRTIA
 4226              	.LVL343:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 144


1397:ad5940lib/ad5940.c **** }
 4227              		.loc 1 1397 3 view .LVU1283
1397:ad5940lib/ad5940.c **** }
 4228              		.loc 1 1397 10 is_stmt 0 view .LVU1284
 4229 0040 0020     		movs	r0, #0
 4230              	.L287:
1398:ad5940lib/ad5940.c **** /**
 4231              		.loc 1 1398 1 view .LVU1285
 4232 0042 10BD     		pop	{r4, pc}
 4233              	.LVL344:
 4234              	.L298:
1388:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSRTIACON, tempreg);
 4235              		.loc 1 1388 5 is_stmt 1 view .LVU1286
1388:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSRTIACON, tempreg);
 4236              		.loc 1 1388 13 is_stmt 0 view .LVU1287
 4237 0044 41F01001 		orr	r1, r1, #16
 4238              	.LVL345:
1388:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSRTIACON, tempreg);
 4239              		.loc 1 1388 13 view .LVU1288
 4240 0048 F1E7     		b	.L289
 4241              	.LVL346:
 4242              	.L290:
 4243              	.LCFI77:
 4244              		.cfi_def_cfa_offset 0
 4245              		.cfi_restore 4
 4246              		.cfi_restore 14
1370:ad5940lib/ad5940.c ****     /* Available parameter is 1k, 5k,...,160k, short, OPEN */
 4247              		.loc 1 1370 32 view .LVU1289
 4248 004a 6FF00200 		mvn	r0, #2
 4249              	.LVL347:
1398:ad5940lib/ad5940.c **** /**
 4250              		.loc 1 1398 1 view .LVU1290
 4251 004e 7047     		bx	lr
 4252              	.LVL348:
 4253              	.L291:
 4254              	.LCFI78:
 4255              		.cfi_def_cfa_offset 8
 4256              		.cfi_offset 4, -8
 4257              		.cfi_offset 14, -4
1373:ad5940lib/ad5940.c ****   if(pHsTiaCfg->HstiaDeRtia > HSTIADERTIA_OPEN)
 4258              		.loc 1 1373 12 view .LVU1291
 4259 0050 6FF00100 		mvn	r0, #1
 4260              	.LVL349:
1373:ad5940lib/ad5940.c ****   if(pHsTiaCfg->HstiaDeRtia > HSTIADERTIA_OPEN)
 4261              		.loc 1 1373 12 view .LVU1292
 4262 0054 F5E7     		b	.L287
 4263              	.LVL350:
 4264              	.L292:
1375:ad5940lib/ad5940.c **** 
 4265              		.loc 1 1375 12 view .LVU1293
 4266 0056 6FF00100 		mvn	r0, #1
 4267              	.LVL351:
1375:ad5940lib/ad5940.c **** 
 4268              		.loc 1 1375 12 view .LVU1294
 4269 005a F2E7     		b	.L287
 4270              	.LVL352:
 4271              	.L293:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 145


1378:ad5940lib/ad5940.c **** 
 4272              		.loc 1 1378 12 view .LVU1295
 4273 005c 6FF00100 		mvn	r0, #1
 4274              	.LVL353:
1378:ad5940lib/ad5940.c **** 
 4275              		.loc 1 1378 12 view .LVU1296
 4276 0060 EFE7     		b	.L287
 4277              		.cfi_endproc
 4278              	.LFE45:
 4280              		.section	.text.AD5940_HSRTIACfgS,"ax",%progbits
 4281              		.align	1
 4282              		.global	AD5940_HSRTIACfgS
 4283              		.syntax unified
 4284              		.thumb
 4285              		.thumb_func
 4286              		.fpu fpv5-d16
 4288              	AD5940_HSRTIACfgS:
 4289              	.LVL354:
 4290              	.LFB46:
1405:ad5940lib/ad5940.c ****   uint32_t tempreg;
 4291              		.loc 1 1405 1 is_stmt 1 view -0
 4292              		.cfi_startproc
 4293              		@ args = 0, pretend = 0, frame = 0
 4294              		@ frame_needed = 0, uses_anonymous_args = 0
1405:ad5940lib/ad5940.c ****   uint32_t tempreg;
 4295              		.loc 1 1405 1 is_stmt 0 view .LVU1298
 4296 0000 10B5     		push	{r4, lr}
 4297              	.LCFI79:
 4298              		.cfi_def_cfa_offset 8
 4299              		.cfi_offset 4, -8
 4300              		.cfi_offset 14, -4
 4301 0002 0446     		mov	r4, r0
1406:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_HSRTIACON);
 4302              		.loc 1 1406 3 is_stmt 1 view .LVU1299
1407:ad5940lib/ad5940.c ****   tempreg &= ~BITM_AFE_HSRTIACON_RTIACON;
 4303              		.loc 1 1407 3 view .LVU1300
1407:ad5940lib/ad5940.c ****   tempreg &= ~BITM_AFE_HSRTIACON_RTIACON;
 4304              		.loc 1 1407 13 is_stmt 0 view .LVU1301
 4305 0004 42F2F000 		movw	r0, #8432
 4306              	.LVL355:
1407:ad5940lib/ad5940.c ****   tempreg &= ~BITM_AFE_HSRTIACON_RTIACON;
 4307              		.loc 1 1407 13 view .LVU1302
 4308 0008 FFF7FEFF 		bl	AD5940_ReadReg
 4309              	.LVL356:
1408:ad5940lib/ad5940.c ****   HSTIARtia &= BITM_AFE_HSRTIACON_RTIACON;
 4310              		.loc 1 1408 3 is_stmt 1 view .LVU1303
1408:ad5940lib/ad5940.c ****   HSTIARtia &= BITM_AFE_HSRTIACON_RTIACON;
 4311              		.loc 1 1408 11 is_stmt 0 view .LVU1304
 4312 000c 20F00F01 		bic	r1, r0, #15
 4313              	.LVL357:
1409:ad5940lib/ad5940.c ****   tempreg |= HSTIARtia<<BITP_AFE_HSRTIACON_RTIACON;
 4314              		.loc 1 1409 3 is_stmt 1 view .LVU1305
1409:ad5940lib/ad5940.c ****   tempreg |= HSTIARtia<<BITP_AFE_HSRTIACON_RTIACON;
 4315              		.loc 1 1409 13 is_stmt 0 view .LVU1306
 4316 0010 04F00F04 		and	r4, r4, #15
 4317              	.LVL358:
1410:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSRTIACON, tempreg);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 146


 4318              		.loc 1 1410 3 is_stmt 1 view .LVU1307
1411:ad5940lib/ad5940.c **** }
 4319              		.loc 1 1411 3 view .LVU1308
 4320 0014 2143     		orrs	r1, r1, r4
 4321              	.LVL359:
1411:ad5940lib/ad5940.c **** }
 4322              		.loc 1 1411 3 is_stmt 0 view .LVU1309
 4323 0016 42F2F000 		movw	r0, #8432
 4324 001a FFF7FEFF 		bl	AD5940_WriteReg
 4325              	.LVL360:
1412:ad5940lib/ad5940.c **** 
 4326              		.loc 1 1412 1 view .LVU1310
 4327 001e 10BD     		pop	{r4, pc}
1412:ad5940lib/ad5940.c **** 
 4328              		.loc 1 1412 1 view .LVU1311
 4329              		.cfi_endproc
 4330              	.LFE46:
 4332              		.section	.text.AD5940_WGCfgS,"ax",%progbits
 4333              		.align	1
 4334              		.global	AD5940_WGCfgS
 4335              		.syntax unified
 4336              		.thumb
 4337              		.thumb_func
 4338              		.fpu fpv5-d16
 4340              	AD5940_WGCfgS:
 4341              	.LVL361:
 4342              	.LFB47:
1424:ad5940lib/ad5940.c ****   //Check parameters
 4343              		.loc 1 1424 1 is_stmt 1 view -0
 4344              		.cfi_startproc
 4345              		@ args = 0, pretend = 0, frame = 0
 4346              		@ frame_needed = 0, uses_anonymous_args = 0
1424:ad5940lib/ad5940.c ****   //Check parameters
 4347              		.loc 1 1424 1 is_stmt 0 view .LVU1313
 4348 0000 10B5     		push	{r4, lr}
 4349              	.LCFI80:
 4350              		.cfi_def_cfa_offset 8
 4351              		.cfi_offset 4, -8
 4352              		.cfi_offset 14, -4
 4353 0002 0446     		mov	r4, r0
1426:ad5940lib/ad5940.c ****   if(pWGInit->WgType == WGTYPE_SIN)
 4354              		.loc 1 1426 3 is_stmt 1 view .LVU1314
1427:ad5940lib/ad5940.c ****   {
 4355              		.loc 1 1427 3 view .LVU1315
1427:ad5940lib/ad5940.c ****   {
 4356              		.loc 1 1427 13 is_stmt 0 view .LVU1316
 4357 0004 0368     		ldr	r3, [r0]
1427:ad5940lib/ad5940.c ****   {
 4358              		.loc 1 1427 5 view .LVU1317
 4359 0006 022B     		cmp	r3, #2
 4360 0008 15D0     		beq	.L309
1435:ad5940lib/ad5940.c ****   {
 4361              		.loc 1 1435 8 is_stmt 1 view .LVU1318
1435:ad5940lib/ad5940.c ****   {
 4362              		.loc 1 1435 10 is_stmt 0 view .LVU1319
 4363 000a 032B     		cmp	r3, #3
 4364 000c 28D0     		beq	.L310
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 147


1448:ad5940lib/ad5940.c ****   }
 4365              		.loc 1 1448 5 is_stmt 1 view .LVU1320
 4366 000e 016B     		ldr	r1, [r0, #48]
 4367 0010 42F24800 		movw	r0, #8264
 4368              	.LVL362:
1448:ad5940lib/ad5940.c ****   }
 4369              		.loc 1 1448 5 is_stmt 0 view .LVU1321
 4370 0014 FFF7FEFF 		bl	AD5940_WriteReg
 4371              	.LVL363:
 4372              	.L303:
1450:ad5940lib/ad5940.c ****   
 4373              		.loc 1 1450 3 is_stmt 1 view .LVU1322
1452:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_WGCON_DACGAINCAL;
 4374              		.loc 1 1452 3 view .LVU1323
1452:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_WGCON_DACGAINCAL;
 4375              		.loc 1 1452 13 is_stmt 0 view .LVU1324
 4376 0018 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
1452:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_WGCON_DACGAINCAL;
 4377              		.loc 1 1452 5 view .LVU1325
 4378 001a 012B     		cmp	r3, #1
 4379 001c 3FD0     		beq	.L307
1450:ad5940lib/ad5940.c ****   
 4380              		.loc 1 1450 11 view .LVU1326
 4381 001e 0023     		movs	r3, #0
 4382              	.L305:
 4383              	.LVL364:
1454:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_WGCON_DACOFFSETCAL;
 4384              		.loc 1 1454 3 is_stmt 1 view .LVU1327
1454:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_WGCON_DACOFFSETCAL;
 4385              		.loc 1 1454 13 is_stmt 0 view .LVU1328
 4386 0020 6279     		ldrb	r2, [r4, #5]	@ zero_extendqisi2
1454:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_WGCON_DACOFFSETCAL;
 4387              		.loc 1 1454 5 view .LVU1329
 4388 0022 012A     		cmp	r2, #1
 4389 0024 3DD0     		beq	.L311
 4390              	.L306:
1456:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_WGCON, tempreg);
 4391              		.loc 1 1456 3 is_stmt 1 view .LVU1330
1456:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_WGCON, tempreg);
 4392              		.loc 1 1456 22 is_stmt 0 view .LVU1331
 4393 0026 2168     		ldr	r1, [r4]
 4394              	.LVL365:
1457:ad5940lib/ad5940.c **** }
 4395              		.loc 1 1457 3 is_stmt 1 view .LVU1332
 4396 0028 43EA4101 		orr	r1, r3, r1, lsl #1
 4397              	.LVL366:
1457:ad5940lib/ad5940.c **** }
 4398              		.loc 1 1457 3 is_stmt 0 view .LVU1333
 4399 002c 42F21400 		movw	r0, #8212
 4400 0030 FFF7FEFF 		bl	AD5940_WriteReg
 4401              	.LVL367:
1458:ad5940lib/ad5940.c **** 
 4402              		.loc 1 1458 1 view .LVU1334
 4403 0034 10BD     		pop	{r4, pc}
 4404              	.LVL368:
 4405              	.L309:
1430:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGAMPLITUDE, pWGInit->SinCfg.SinAmplitudeWord);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 148


 4406              		.loc 1 1430 5 is_stmt 1 view .LVU1335
 4407 0036 016A     		ldr	r1, [r0, #32]
 4408 0038 42F23000 		movw	r0, #8240
 4409              	.LVL369:
1430:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGAMPLITUDE, pWGInit->SinCfg.SinAmplitudeWord);
 4410              		.loc 1 1430 5 is_stmt 0 view .LVU1336
 4411 003c FFF7FEFF 		bl	AD5940_WriteReg
 4412              	.LVL370:
1431:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGOFFSET, pWGInit->SinCfg.SinOffsetWord);
 4413              		.loc 1 1431 5 is_stmt 1 view .LVU1337
 4414 0040 616A     		ldr	r1, [r4, #36]
 4415 0042 42F23C00 		movw	r0, #8252
 4416 0046 FFF7FEFF 		bl	AD5940_WriteReg
 4417              	.LVL371:
1432:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGPHASE, pWGInit->SinCfg.SinPhaseWord);
 4418              		.loc 1 1432 5 view .LVU1338
 4419 004a A16A     		ldr	r1, [r4, #40]
 4420 004c 42F23800 		movw	r0, #8248
 4421 0050 FFF7FEFF 		bl	AD5940_WriteReg
 4422              	.LVL372:
1433:ad5940lib/ad5940.c ****   }
 4423              		.loc 1 1433 5 view .LVU1339
 4424 0054 E16A     		ldr	r1, [r4, #44]
 4425 0056 42F23400 		movw	r0, #8244
 4426 005a FFF7FEFF 		bl	AD5940_WriteReg
 4427              	.LVL373:
 4428 005e DBE7     		b	.L303
 4429              	.LVL374:
 4430              	.L310:
1438:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGDCLEVEL2, pWGInit->TrapzCfg.WGTrapzDCLevel2);
 4431              		.loc 1 1438 5 view .LVU1340
 4432 0060 8168     		ldr	r1, [r0, #8]
 4433 0062 42F21800 		movw	r0, #8216
 4434              	.LVL375:
1438:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGDCLEVEL2, pWGInit->TrapzCfg.WGTrapzDCLevel2);
 4435              		.loc 1 1438 5 is_stmt 0 view .LVU1341
 4436 0066 FFF7FEFF 		bl	AD5940_WriteReg
 4437              	.LVL376:
1439:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGDELAY1, pWGInit->TrapzCfg.WGTrapzDelay1);
 4438              		.loc 1 1439 5 is_stmt 1 view .LVU1342
 4439 006a E168     		ldr	r1, [r4, #12]
 4440 006c 42F21C00 		movw	r0, #8220
 4441 0070 FFF7FEFF 		bl	AD5940_WriteReg
 4442              	.LVL377:
1440:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGDELAY2, pWGInit->TrapzCfg.WGTrapzDelay2);
 4443              		.loc 1 1440 5 view .LVU1343
 4444 0074 2169     		ldr	r1, [r4, #16]
 4445 0076 42F22000 		movw	r0, #8224
 4446 007a FFF7FEFF 		bl	AD5940_WriteReg
 4447              	.LVL378:
1441:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGSLOPE1, pWGInit->TrapzCfg.WGTrapzSlope1);
 4448              		.loc 1 1441 5 view .LVU1344
 4449 007e 6169     		ldr	r1, [r4, #20]
 4450 0080 42F22800 		movw	r0, #8232
 4451 0084 FFF7FEFF 		bl	AD5940_WriteReg
 4452              	.LVL379:
1442:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_WGSLOPE2, pWGInit->TrapzCfg.WGTrapzSlope2);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 149


 4453              		.loc 1 1442 5 view .LVU1345
 4454 0088 A169     		ldr	r1, [r4, #24]
 4455 008a 42F22400 		movw	r0, #8228
 4456 008e FFF7FEFF 		bl	AD5940_WriteReg
 4457              	.LVL380:
1443:ad5940lib/ad5940.c ****   }
 4458              		.loc 1 1443 5 view .LVU1346
 4459 0092 E169     		ldr	r1, [r4, #28]
 4460 0094 42F22C00 		movw	r0, #8236
 4461 0098 FFF7FEFF 		bl	AD5940_WriteReg
 4462              	.LVL381:
 4463 009c BCE7     		b	.L303
 4464              	.LVL382:
 4465              	.L307:
1453:ad5940lib/ad5940.c ****   if(pWGInit->OffsetCalEn == bTRUE)
 4466              		.loc 1 1453 13 is_stmt 0 view .LVU1347
 4467 009e 2023     		movs	r3, #32
 4468 00a0 BEE7     		b	.L305
 4469              	.LVL383:
 4470              	.L311:
1455:ad5940lib/ad5940.c ****   tempreg |= (pWGInit->WgType) << BITP_AFE_WGCON_TYPESEL;
 4471              		.loc 1 1455 5 is_stmt 1 view .LVU1348
1455:ad5940lib/ad5940.c ****   tempreg |= (pWGInit->WgType) << BITP_AFE_WGCON_TYPESEL;
 4472              		.loc 1 1455 13 is_stmt 0 view .LVU1349
 4473 00a2 43F01003 		orr	r3, r3, #16
 4474              	.LVL384:
1455:ad5940lib/ad5940.c ****   tempreg |= (pWGInit->WgType) << BITP_AFE_WGCON_TYPESEL;
 4475              		.loc 1 1455 13 view .LVU1350
 4476 00a6 BEE7     		b	.L306
 4477              		.cfi_endproc
 4478              	.LFE47:
 4480              		.section	.text.AD5940_HSLoopCfgS,"ax",%progbits
 4481              		.align	1
 4482              		.global	AD5940_HSLoopCfgS
 4483              		.syntax unified
 4484              		.thumb
 4485              		.thumb_func
 4486              		.fpu fpv5-d16
 4488              	AD5940_HSLoopCfgS:
 4489              	.LVL385:
 4490              	.LFB41:
1289:ad5940lib/ad5940.c ****   AD5940_HSDacCfgS(&pHsLoopCfg->HsDacCfg);
 4491              		.loc 1 1289 1 is_stmt 1 view -0
 4492              		.cfi_startproc
 4493              		@ args = 0, pretend = 0, frame = 0
 4494              		@ frame_needed = 0, uses_anonymous_args = 0
1289:ad5940lib/ad5940.c ****   AD5940_HSDacCfgS(&pHsLoopCfg->HsDacCfg);
 4495              		.loc 1 1289 1 is_stmt 0 view .LVU1352
 4496 0000 10B5     		push	{r4, lr}
 4497              	.LCFI81:
 4498              		.cfi_def_cfa_offset 8
 4499              		.cfi_offset 4, -8
 4500              		.cfi_offset 14, -4
 4501 0002 0446     		mov	r4, r0
1290:ad5940lib/ad5940.c ****   AD5940_HSTIACfgS(&pHsLoopCfg->HsTiaCfg);
 4502              		.loc 1 1290 3 is_stmt 1 view .LVU1353
 4503 0004 1030     		adds	r0, r0, #16
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 150


 4504              	.LVL386:
1290:ad5940lib/ad5940.c ****   AD5940_HSTIACfgS(&pHsLoopCfg->HsTiaCfg);
 4505              		.loc 1 1290 3 is_stmt 0 view .LVU1354
 4506 0006 FFF7FEFF 		bl	AD5940_HSDacCfgS
 4507              	.LVL387:
1291:ad5940lib/ad5940.c ****   AD5940_SWMatrixCfgS(&pHsLoopCfg->SWMatCfg);
 4508              		.loc 1 1291 3 is_stmt 1 view .LVU1355
 4509 000a 04F15000 		add	r0, r4, #80
 4510 000e FFF7FEFF 		bl	AD5940_HSTIACfgS
 4511              	.LVL388:
1292:ad5940lib/ad5940.c ****   AD5940_WGCfgS(&pHsLoopCfg->WgCfg);
 4512              		.loc 1 1292 3 view .LVU1356
 4513 0012 2046     		mov	r0, r4
 4514 0014 FFF7FEFF 		bl	AD5940_SWMatrixCfgS
 4515              	.LVL389:
1293:ad5940lib/ad5940.c **** }
 4516              		.loc 1 1293 3 view .LVU1357
 4517 0018 04F11C00 		add	r0, r4, #28
 4518 001c FFF7FEFF 		bl	AD5940_WGCfgS
 4519              	.LVL390:
1294:ad5940lib/ad5940.c **** 
 4520              		.loc 1 1294 1 is_stmt 0 view .LVU1358
 4521 0020 10BD     		pop	{r4, pc}
1294:ad5940lib/ad5940.c **** 
 4522              		.loc 1 1294 1 view .LVU1359
 4523              		.cfi_endproc
 4524              	.LFE41:
 4526              		.section	.text.AD5940_WGDACCodeS,"ax",%progbits
 4527              		.align	1
 4528              		.global	AD5940_WGDACCodeS
 4529              		.syntax unified
 4530              		.thumb
 4531              		.thumb_func
 4532              		.fpu fpv5-d16
 4534              	AD5940_WGDACCodeS:
 4535              	.LVL391:
 4536              	.LFB48:
1466:ad5940lib/ad5940.c ****   code &= 0xfff;
 4537              		.loc 1 1466 1 is_stmt 1 view -0
 4538              		.cfi_startproc
 4539              		@ args = 0, pretend = 0, frame = 0
 4540              		@ frame_needed = 0, uses_anonymous_args = 0
1466:ad5940lib/ad5940.c ****   code &= 0xfff;
 4541              		.loc 1 1466 1 is_stmt 0 view .LVU1361
 4542 0000 08B5     		push	{r3, lr}
 4543              	.LCFI82:
 4544              		.cfi_def_cfa_offset 8
 4545              		.cfi_offset 3, -8
 4546              		.cfi_offset 14, -4
1467:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_HSDACDAT, code);
 4547              		.loc 1 1467 3 is_stmt 1 view .LVU1362
 4548              	.LVL392:
1468:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 4549              		.loc 1 1468 3 view .LVU1363
 4550 0002 C0F30B01 		ubfx	r1, r0, #0, #12
 4551 0006 42F24800 		movw	r0, #8264
 4552              	.LVL393:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 151


1468:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 4553              		.loc 1 1468 3 is_stmt 0 view .LVU1364
 4554 000a FFF7FEFF 		bl	AD5940_WriteReg
 4555              	.LVL394:
1469:ad5940lib/ad5940.c **** }
 4556              		.loc 1 1469 3 is_stmt 1 view .LVU1365
1470:ad5940lib/ad5940.c **** 
 4557              		.loc 1 1470 1 is_stmt 0 view .LVU1366
 4558 000e 0020     		movs	r0, #0
 4559 0010 08BD     		pop	{r3, pc}
 4560              		.cfi_endproc
 4561              	.LFE48:
 4563              		.global	__aeabi_l2f
 4564              		.section	.text.AD5940_WGFreqWordCal,"ax",%progbits
 4565              		.align	1
 4566              		.global	AD5940_WGFreqWordCal
 4567              		.syntax unified
 4568              		.thumb
 4569              		.thumb_func
 4570              		.fpu fpv5-d16
 4572              	AD5940_WGFreqWordCal:
 4573              	.LVL395:
 4574              	.LFB50:
1492:ad5940lib/ad5940.c ****   uint32_t temp;
 4575              		.loc 1 1492 1 is_stmt 1 view -0
 4576              		.cfi_startproc
 4577              		@ args = 0, pretend = 0, frame = 0
 4578              		@ frame_needed = 0, uses_anonymous_args = 0
1492:ad5940lib/ad5940.c ****   uint32_t temp;
 4579              		.loc 1 1492 1 is_stmt 0 view .LVU1368
 4580 0000 10B5     		push	{r4, lr}
 4581              	.LCFI83:
 4582              		.cfi_def_cfa_offset 8
 4583              		.cfi_offset 4, -8
 4584              		.cfi_offset 14, -4
 4585 0002 2DED028B 		vpush.64	{d8}
 4586              	.LCFI84:
 4587              		.cfi_def_cfa_offset 16
 4588              		.cfi_offset 80, -16
 4589              		.cfi_offset 81, -12
 4590 0006 F0EE408A 		vmov.f32	s17, s0
 4591 000a B0EE608A 		vmov.f32	s16, s1
1493:ad5940lib/ad5940.c ****   uint32_t __BITWIDTH_WGFCW = 26;
 4592              		.loc 1 1493 3 is_stmt 1 view .LVU1369
1494:ad5940lib/ad5940.c ****   if(bIsS2silicon == bTRUE)
 4593              		.loc 1 1494 3 view .LVU1370
 4594              	.LVL396:
1495:ad5940lib/ad5940.c ****     __BITWIDTH_WGFCW = 30;
 4595              		.loc 1 1495 3 view .LVU1371
1495:ad5940lib/ad5940.c ****     __BITWIDTH_WGFCW = 30;
 4596              		.loc 1 1495 19 is_stmt 0 view .LVU1372
 4597 000e 1A4B     		ldr	r3, .L325
 4598 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1495:ad5940lib/ad5940.c ****     __BITWIDTH_WGFCW = 30;
 4599              		.loc 1 1495 5 view .LVU1373
 4600 0012 012B     		cmp	r3, #1
 4601 0014 28D0     		beq	.L320
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 152


1494:ad5940lib/ad5940.c ****   if(bIsS2silicon == bTRUE)
 4602              		.loc 1 1494 12 view .LVU1374
 4603 0016 1A24     		movs	r4, #26
 4604              	.L317:
 4605              	.LVL397:
1497:ad5940lib/ad5940.c ****   temp = (uint32_t)(SinFreqHz*(1LL<<__BITWIDTH_WGFCW)/WGClock + 0.5f);
 4606              		.loc 1 1497 3 is_stmt 1 view .LVU1375
1497:ad5940lib/ad5940.c ****   temp = (uint32_t)(SinFreqHz*(1LL<<__BITWIDTH_WGFCW)/WGClock + 0.5f);
 4607              		.loc 1 1497 5 is_stmt 0 view .LVU1376
 4608 0018 B5EE408A 		vcmp.f32	s16, #0
 4609 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4610 0020 26D0     		beq	.L321
1498:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 4611              		.loc 1 1498 3 is_stmt 1 view .LVU1377
1498:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 4612              		.loc 1 1498 35 is_stmt 0 view .LVU1378
 4613 0022 0120     		movs	r0, #1
 4614 0024 A4F12001 		sub	r1, r4, #32
 4615 0028 C4F12003 		rsb	r3, r4, #32
 4616 002c 00FA01F1 		lsl	r1, r0, r1
 4617 0030 20FA03F3 		lsr	r3, r0, r3
1498:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 4618              		.loc 1 1498 30 view .LVU1379
 4619 0034 A040     		lsls	r0, r0, r4
 4620 0036 1943     		orrs	r1, r1, r3
 4621 0038 FFF7FEFF 		bl	__aeabi_l2f
 4622              	.LVL398:
1498:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 4623              		.loc 1 1498 30 view .LVU1380
 4624 003c 00EE100A 		vmov	s0, r0
 4625 0040 20EE280A 		vmul.f32	s0, s0, s17
1498:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 4626              		.loc 1 1498 54 view .LVU1381
 4627 0044 C0EE087A 		vdiv.f32	s15, s0, s16
1498:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 4628              		.loc 1 1498 63 view .LVU1382
 4629 0048 B6EE007A 		vmov.f32	s14, #5.0e-1
 4630 004c 77EE877A 		vadd.f32	s15, s15, s14
1498:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 4631              		.loc 1 1498 8 view .LVU1383
 4632 0050 FCEEE77A 		vcvt.u32.f32	s15, s15
 4633 0054 17EE903A 		vmov	r3, s15	@ int
 4634              	.LVL399:
1499:ad5940lib/ad5940.c ****     temp = (__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff;
 4635              		.loc 1 1499 3 is_stmt 1 view .LVU1384
1499:ad5940lib/ad5940.c ****     temp = (__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff;
 4636              		.loc 1 1499 46 is_stmt 0 view .LVU1385
 4637 0058 1A2C     		cmp	r4, #26
 4638 005a 07D0     		beq	.L324
 4639 005c 6FF07F40 		mvn	r0, #-16777216
 4640              	.L319:
1499:ad5940lib/ad5940.c ****     temp = (__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff;
 4641              		.loc 1 1499 5 discriminator 4 view .LVU1386
 4642 0060 9842     		cmp	r0, r3
 4643 0062 06D3     		bcc	.L316
1498:ad5940lib/ad5940.c ****   if(temp > ((__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff))
 4644              		.loc 1 1498 8 view .LVU1387
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 153


 4645 0064 1846     		mov	r0, r3
 4646 0066 04E0     		b	.L316
 4647              	.LVL400:
 4648              	.L320:
1496:ad5940lib/ad5940.c ****   if(WGClock == 0) return 0;
 4649              		.loc 1 1496 22 view .LVU1388
 4650 0068 1E24     		movs	r4, #30
 4651 006a D5E7     		b	.L317
 4652              	.LVL401:
 4653              	.L324:
1499:ad5940lib/ad5940.c ****     temp = (__BITWIDTH_WGFCW == 26)?0xfffff:0xffffff;
 4654              		.loc 1 1499 46 view .LVU1389
 4655 006c 0348     		ldr	r0, .L325+4
 4656 006e F7E7     		b	.L319
 4657              	.LVL402:
 4658              	.L321:
1497:ad5940lib/ad5940.c ****   temp = (uint32_t)(SinFreqHz*(1LL<<__BITWIDTH_WGFCW)/WGClock + 0.5f);
 4659              		.loc 1 1497 27 view .LVU1390
 4660 0070 0020     		movs	r0, #0
 4661              	.LVL403:
 4662              	.L316:
1503:ad5940lib/ad5940.c **** 
 4663              		.loc 1 1503 1 view .LVU1391
 4664 0072 BDEC028B 		vldm	sp!, {d8}
 4665              	.LCFI85:
 4666              		.cfi_restore 80
 4667              		.cfi_restore 81
 4668              		.cfi_def_cfa_offset 8
 4669              	.LVL404:
1503:ad5940lib/ad5940.c **** 
 4670              		.loc 1 1503 1 view .LVU1392
 4671 0076 10BD     		pop	{r4, pc}
 4672              	.LVL405:
 4673              	.L326:
1503:ad5940lib/ad5940.c **** 
 4674              		.loc 1 1503 1 view .LVU1393
 4675              		.align	2
 4676              	.L325:
 4677 0078 00000000 		.word	.LANCHOR1
 4678 007c FFFF0F00 		.word	1048575
 4679              		.cfi_endproc
 4680              	.LFE50:
 4682              		.section	.text.AD5940_WGFreqCtrlS,"ax",%progbits
 4683              		.align	1
 4684              		.global	AD5940_WGFreqCtrlS
 4685              		.syntax unified
 4686              		.thumb
 4687              		.thumb_func
 4688              		.fpu fpv5-d16
 4690              	AD5940_WGFreqCtrlS:
 4691              	.LVL406:
 4692              	.LFB49:
1479:ad5940lib/ad5940.c ****   uint32_t freq_word;
 4693              		.loc 1 1479 1 is_stmt 1 view -0
 4694              		.cfi_startproc
 4695              		@ args = 0, pretend = 0, frame = 0
 4696              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 154


1479:ad5940lib/ad5940.c ****   uint32_t freq_word;
 4697              		.loc 1 1479 1 is_stmt 0 view .LVU1395
 4698 0000 08B5     		push	{r3, lr}
 4699              	.LCFI86:
 4700              		.cfi_def_cfa_offset 8
 4701              		.cfi_offset 3, -8
 4702              		.cfi_offset 14, -4
1480:ad5940lib/ad5940.c ****   freq_word = AD5940_WGFreqWordCal(SinFreqHz, WGClock);
 4703              		.loc 1 1480 3 is_stmt 1 view .LVU1396
1481:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_WGFCW, freq_word);
 4704              		.loc 1 1481 3 view .LVU1397
1481:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_WGFCW, freq_word);
 4705              		.loc 1 1481 15 is_stmt 0 view .LVU1398
 4706 0002 FFF7FEFF 		bl	AD5940_WGFreqWordCal
 4707              	.LVL407:
1481:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_WGFCW, freq_word);
 4708              		.loc 1 1481 15 view .LVU1399
 4709 0006 0146     		mov	r1, r0
 4710              	.LVL408:
1482:ad5940lib/ad5940.c **** }
 4711              		.loc 1 1482 3 is_stmt 1 view .LVU1400
 4712 0008 42F23000 		movw	r0, #8240
 4713              	.LVL409:
1482:ad5940lib/ad5940.c **** }
 4714              		.loc 1 1482 3 is_stmt 0 view .LVU1401
 4715 000c FFF7FEFF 		bl	AD5940_WriteReg
 4716              	.LVL410:
1483:ad5940lib/ad5940.c **** 
 4717              		.loc 1 1483 1 view .LVU1402
 4718 0010 08BD     		pop	{r3, pc}
 4719              		.cfi_endproc
 4720              	.LFE49:
 4722              		.section	.text.AD5940_LPDACWriteS,"ax",%progbits
 4723              		.align	1
 4724              		.global	AD5940_LPDACWriteS
 4725              		.syntax unified
 4726              		.thumb
 4727              		.thumb_func
 4728              		.fpu fpv5-d16
 4730              	AD5940_LPDACWriteS:
 4731              	.LVL411:
 4732              	.LFB53:
1569:ad5940lib/ad5940.c ****   /* Check parameter */
 4733              		.loc 1 1569 1 is_stmt 1 view -0
 4734              		.cfi_startproc
 4735              		@ args = 0, pretend = 0, frame = 0
 4736              		@ frame_needed = 0, uses_anonymous_args = 0
1569:ad5940lib/ad5940.c ****   /* Check parameter */
 4737              		.loc 1 1569 1 is_stmt 0 view .LVU1404
 4738 0000 08B5     		push	{r3, lr}
 4739              	.LCFI87:
 4740              		.cfi_def_cfa_offset 8
 4741              		.cfi_offset 3, -8
 4742              		.cfi_offset 14, -4
1571:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
 4743              		.loc 1 1571 3 is_stmt 1 view .LVU1405
1571:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 155


 4744              		.loc 1 1571 12 is_stmt 0 view .LVU1406
 4745 0002 01F03F01 		and	r1, r1, #63
 4746              	.LVL412:
1572:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT0, ((uint32_t)Data6Bit<<12)|Data12Bit);
 4747              		.loc 1 1572 3 is_stmt 1 view .LVU1407
1572:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT0, ((uint32_t)Data6Bit<<12)|Data12Bit);
 4748              		.loc 1 1572 13 is_stmt 0 view .LVU1408
 4749 0006 C0F30B00 		ubfx	r0, r0, #0, #12
 4750              	.LVL413:
1573:ad5940lib/ad5940.c **** }
 4751              		.loc 1 1573 3 is_stmt 1 view .LVU1409
 4752 000a 40EA0131 		orr	r1, r0, r1, lsl #12
 4753              	.LVL414:
1573:ad5940lib/ad5940.c **** }
 4754              		.loc 1 1573 3 is_stmt 0 view .LVU1410
 4755 000e 42F22010 		movw	r0, #8480
 4756              	.LVL415:
1573:ad5940lib/ad5940.c **** }
 4757              		.loc 1 1573 3 view .LVU1411
 4758 0012 FFF7FEFF 		bl	AD5940_WriteReg
 4759              	.LVL416:
1574:ad5940lib/ad5940.c **** 
 4760              		.loc 1 1574 1 view .LVU1412
 4761 0016 08BD     		pop	{r3, pc}
 4762              		.cfi_endproc
 4763              	.LFE53:
 4765              		.section	.text.AD5940_LPDAC0WriteS,"ax",%progbits
 4766              		.align	1
 4767              		.global	AD5940_LPDAC0WriteS
 4768              		.syntax unified
 4769              		.thumb
 4770              		.thumb_func
 4771              		.fpu fpv5-d16
 4773              	AD5940_LPDAC0WriteS:
 4774              	.LVL417:
 4775              	.LFB54:
1583:ad5940lib/ad5940.c ****   /* Check parameter */
 4776              		.loc 1 1583 1 is_stmt 1 view -0
 4777              		.cfi_startproc
 4778              		@ args = 0, pretend = 0, frame = 0
 4779              		@ frame_needed = 0, uses_anonymous_args = 0
1583:ad5940lib/ad5940.c ****   /* Check parameter */
 4780              		.loc 1 1583 1 is_stmt 0 view .LVU1414
 4781 0000 08B5     		push	{r3, lr}
 4782              	.LCFI88:
 4783              		.cfi_def_cfa_offset 8
 4784              		.cfi_offset 3, -8
 4785              		.cfi_offset 14, -4
1585:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
 4786              		.loc 1 1585 3 is_stmt 1 view .LVU1415
1585:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
 4787              		.loc 1 1585 12 is_stmt 0 view .LVU1416
 4788 0002 01F03F01 		and	r1, r1, #63
 4789              	.LVL418:
1586:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT0, ((uint32_t)Data6Bit<<12)|Data12Bit);
 4790              		.loc 1 1586 3 is_stmt 1 view .LVU1417
1586:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT0, ((uint32_t)Data6Bit<<12)|Data12Bit);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 156


 4791              		.loc 1 1586 13 is_stmt 0 view .LVU1418
 4792 0006 C0F30B00 		ubfx	r0, r0, #0, #12
 4793              	.LVL419:
1587:ad5940lib/ad5940.c **** }
 4794              		.loc 1 1587 3 is_stmt 1 view .LVU1419
 4795 000a 40EA0131 		orr	r1, r0, r1, lsl #12
 4796              	.LVL420:
1587:ad5940lib/ad5940.c **** }
 4797              		.loc 1 1587 3 is_stmt 0 view .LVU1420
 4798 000e 42F22010 		movw	r0, #8480
 4799              	.LVL421:
1587:ad5940lib/ad5940.c **** }
 4800              		.loc 1 1587 3 view .LVU1421
 4801 0012 FFF7FEFF 		bl	AD5940_WriteReg
 4802              	.LVL422:
1588:ad5940lib/ad5940.c **** 
 4803              		.loc 1 1588 1 view .LVU1422
 4804 0016 08BD     		pop	{r3, pc}
 4805              		.cfi_endproc
 4806              	.LFE54:
 4808              		.section	.text.AD5940_LPDAC1WriteS,"ax",%progbits
 4809              		.align	1
 4810              		.global	AD5940_LPDAC1WriteS
 4811              		.syntax unified
 4812              		.thumb
 4813              		.thumb_func
 4814              		.fpu fpv5-d16
 4816              	AD5940_LPDAC1WriteS:
 4817              	.LVL423:
 4818              	.LFB55:
1597:ad5940lib/ad5940.c ****   /* Check parameter */
 4819              		.loc 1 1597 1 is_stmt 1 view -0
 4820              		.cfi_startproc
 4821              		@ args = 0, pretend = 0, frame = 0
 4822              		@ frame_needed = 0, uses_anonymous_args = 0
1597:ad5940lib/ad5940.c ****   /* Check parameter */
 4823              		.loc 1 1597 1 is_stmt 0 view .LVU1424
 4824 0000 08B5     		push	{r3, lr}
 4825              	.LCFI89:
 4826              		.cfi_def_cfa_offset 8
 4827              		.cfi_offset 3, -8
 4828              		.cfi_offset 14, -4
1599:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
 4829              		.loc 1 1599 3 is_stmt 1 view .LVU1425
1599:ad5940lib/ad5940.c ****   Data12Bit &= 0xfff;
 4830              		.loc 1 1599 12 is_stmt 0 view .LVU1426
 4831 0002 01F03F01 		and	r1, r1, #63
 4832              	.LVL424:
1600:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT1, ((uint32_t)Data6Bit<<12)|Data12Bit);
 4833              		.loc 1 1600 3 is_stmt 1 view .LVU1427
1600:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPDACDAT1, ((uint32_t)Data6Bit<<12)|Data12Bit);
 4834              		.loc 1 1600 13 is_stmt 0 view .LVU1428
 4835 0006 C0F30B00 		ubfx	r0, r0, #0, #12
 4836              	.LVL425:
1601:ad5940lib/ad5940.c **** }
 4837              		.loc 1 1601 3 is_stmt 1 view .LVU1429
 4838 000a 40EA0131 		orr	r1, r0, r1, lsl #12
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 157


 4839              	.LVL426:
1601:ad5940lib/ad5940.c **** }
 4840              		.loc 1 1601 3 is_stmt 0 view .LVU1430
 4841 000e 42F22C10 		movw	r0, #8492
 4842              	.LVL427:
1601:ad5940lib/ad5940.c **** }
 4843              		.loc 1 1601 3 view .LVU1431
 4844 0012 FFF7FEFF 		bl	AD5940_WriteReg
 4845              	.LVL428:
1602:ad5940lib/ad5940.c **** 
 4846              		.loc 1 1602 1 view .LVU1432
 4847 0016 08BD     		pop	{r3, pc}
 4848              		.cfi_endproc
 4849              	.LFE55:
 4851              		.section	.text.AD5940_LPDACCfgS,"ax",%progbits
 4852              		.align	1
 4853              		.global	AD5940_LPDACCfgS
 4854              		.syntax unified
 4855              		.thumb
 4856              		.thumb_func
 4857              		.fpu fpv5-d16
 4859              	AD5940_LPDACCfgS:
 4860              	.LVL429:
 4861              	.LFB52:
1537:ad5940lib/ad5940.c ****   uint32_t tempreg;
 4862              		.loc 1 1537 1 is_stmt 1 view -0
 4863              		.cfi_startproc
 4864              		@ args = 0, pretend = 0, frame = 0
 4865              		@ frame_needed = 0, uses_anonymous_args = 0
1537:ad5940lib/ad5940.c ****   uint32_t tempreg;
 4866              		.loc 1 1537 1 is_stmt 0 view .LVU1434
 4867 0000 10B5     		push	{r4, lr}
 4868              	.LCFI90:
 4869              		.cfi_def_cfa_offset 8
 4870              		.cfi_offset 4, -8
 4871              		.cfi_offset 14, -4
 4872 0002 0446     		mov	r4, r0
1538:ad5940lib/ad5940.c ****   tempreg = 0;
 4873              		.loc 1 1538 3 is_stmt 1 view .LVU1435
1539:ad5940lib/ad5940.c ****   tempreg = (pLpDacCfg->LpDacSrc)<<BITP_AFE_LPDACCON0_WAVETYPE;
 4874              		.loc 1 1539 3 view .LVU1436
 4875              	.LVL430:
1540:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacVzeroMux)<<BITP_AFE_LPDACCON0_VZEROMUX;
 4876              		.loc 1 1540 3 view .LVU1437
1540:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacVzeroMux)<<BITP_AFE_LPDACCON0_VZEROMUX;
 4877              		.loc 1 1540 23 is_stmt 0 view .LVU1438
 4878 0004 4268     		ldr	r2, [r0, #4]
 4879              	.LVL431:
1541:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacVbiasMux)<<BITP_AFE_LPDACCON0_VBIASMUX;
 4880              		.loc 1 1541 3 is_stmt 1 view .LVU1439
1541:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacVbiasMux)<<BITP_AFE_LPDACCON0_VBIASMUX;
 4881              		.loc 1 1541 24 is_stmt 0 view .LVU1440
 4882 0006 8368     		ldr	r3, [r0, #8]
1541:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacVbiasMux)<<BITP_AFE_LPDACCON0_VBIASMUX;
 4883              		.loc 1 1541 40 view .LVU1441
 4884 0008 1901     		lsls	r1, r3, #4
1541:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacVbiasMux)<<BITP_AFE_LPDACCON0_VBIASMUX;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 158


 4885              		.loc 1 1541 11 view .LVU1442
 4886 000a 41EA8211 		orr	r1, r1, r2, lsl #6
 4887              	.LVL432:
1542:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacRef)<<BITP_AFE_LPDACCON0_REFSEL;
 4888              		.loc 1 1542 3 is_stmt 1 view .LVU1443
1542:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacRef)<<BITP_AFE_LPDACCON0_REFSEL;
 4889              		.loc 1 1542 24 is_stmt 0 view .LVU1444
 4890 000e C368     		ldr	r3, [r0, #12]
1542:ad5940lib/ad5940.c ****   tempreg |= (pLpDacCfg->LpDacRef)<<BITP_AFE_LPDACCON0_REFSEL;
 4891              		.loc 1 1542 11 view .LVU1445
 4892 0010 41EAC301 		orr	r1, r1, r3, lsl #3
 4893              	.LVL433:
1543:ad5940lib/ad5940.c ****   if(pLpDacCfg->DataRst == bFALSE)
 4894              		.loc 1 1543 3 is_stmt 1 view .LVU1446
1543:ad5940lib/ad5940.c ****   if(pLpDacCfg->DataRst == bFALSE)
 4895              		.loc 1 1543 24 is_stmt 0 view .LVU1447
 4896 0014 4369     		ldr	r3, [r0, #20]
1543:ad5940lib/ad5940.c ****   if(pLpDacCfg->DataRst == bFALSE)
 4897              		.loc 1 1543 11 view .LVU1448
 4898 0016 41EA8301 		orr	r1, r1, r3, lsl #2
 4899              	.LVL434:
1544:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPDACCON0_RSTEN;
 4900              		.loc 1 1544 3 is_stmt 1 view .LVU1449
1544:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPDACCON0_RSTEN;
 4901              		.loc 1 1544 15 is_stmt 0 view .LVU1450
 4902 001a 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
1544:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPDACCON0_RSTEN;
 4903              		.loc 1 1544 5 view .LVU1451
 4904 001c 0BB9     		cbnz	r3, .L336
1545:ad5940lib/ad5940.c ****   if(pLpDacCfg->PowerEn == bFALSE)
 4905              		.loc 1 1545 5 is_stmt 1 view .LVU1452
1545:ad5940lib/ad5940.c ****   if(pLpDacCfg->PowerEn == bFALSE)
 4906              		.loc 1 1545 13 is_stmt 0 view .LVU1453
 4907 001e 41F00101 		orr	r1, r1, #1
 4908              	.LVL435:
 4909              	.L336:
1546:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPDACCON0_PWDEN;
 4910              		.loc 1 1546 3 is_stmt 1 view .LVU1454
1546:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPDACCON0_PWDEN;
 4911              		.loc 1 1546 15 is_stmt 0 view .LVU1455
 4912 0022 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
1546:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPDACCON0_PWDEN;
 4913              		.loc 1 1546 5 view .LVU1456
 4914 0024 0BB9     		cbnz	r3, .L337
1547:ad5940lib/ad5940.c ****   if(pLpDacCfg->LpdacSel == LPDAC0)
 4915              		.loc 1 1547 5 is_stmt 1 view .LVU1457
1547:ad5940lib/ad5940.c ****   if(pLpDacCfg->LpdacSel == LPDAC0)
 4916              		.loc 1 1547 13 is_stmt 0 view .LVU1458
 4917 0026 41F00201 		orr	r1, r1, #2
 4918              	.LVL436:
 4919              	.L337:
1548:ad5940lib/ad5940.c ****   {
 4920              		.loc 1 1548 3 is_stmt 1 view .LVU1459
1548:ad5940lib/ad5940.c ****   {
 4921              		.loc 1 1548 15 is_stmt 0 view .LVU1460
 4922 002a 2368     		ldr	r3, [r4]
1548:ad5940lib/ad5940.c ****   {
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 159


 4923              		.loc 1 1548 5 view .LVU1461
 4924 002c 7BB9     		cbnz	r3, .L338
1550:ad5940lib/ad5940.c ****     AD5940_LPDAC0WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
 4925              		.loc 1 1550 5 is_stmt 1 view .LVU1462
 4926 002e 42F22810 		movw	r0, #8488
 4927              	.LVL437:
1550:ad5940lib/ad5940.c ****     AD5940_LPDAC0WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
 4928              		.loc 1 1550 5 is_stmt 0 view .LVU1463
 4929 0032 FFF7FEFF 		bl	AD5940_WriteReg
 4930              	.LVL438:
1551:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPDACSW0, pLpDacCfg->LpDacSW|BITM_AFE_LPDACSW0_LPMODEDIS);  /* Overwrit
 4931              		.loc 1 1551 5 is_stmt 1 view .LVU1464
 4932 0036 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 4933 0038 608B     		ldrh	r0, [r4, #26]
 4934 003a FFF7FEFF 		bl	AD5940_LPDAC0WriteS
 4935              	.LVL439:
1552:ad5940lib/ad5940.c ****   }
 4936              		.loc 1 1552 5 view .LVU1465
1552:ad5940lib/ad5940.c ****   }
 4937              		.loc 1 1552 48 is_stmt 0 view .LVU1466
 4938 003e 2169     		ldr	r1, [r4, #16]
1552:ad5940lib/ad5940.c ****   }
 4939              		.loc 1 1552 5 view .LVU1467
 4940 0040 41F02001 		orr	r1, r1, #32
 4941 0044 42F22410 		movw	r0, #8484
 4942 0048 FFF7FEFF 		bl	AD5940_WriteReg
 4943              	.LVL440:
 4944              	.L335:
1560:ad5940lib/ad5940.c **** 
 4945              		.loc 1 1560 1 view .LVU1468
 4946 004c 10BD     		pop	{r4, pc}
 4947              	.LVL441:
 4948              	.L338:
1556:ad5940lib/ad5940.c ****     AD5940_LPDAC1WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
 4949              		.loc 1 1556 5 is_stmt 1 view .LVU1469
 4950 004e 42F23410 		movw	r0, #8500
 4951              	.LVL442:
1556:ad5940lib/ad5940.c ****     AD5940_LPDAC1WriteS(pLpDacCfg->DacData12Bit, pLpDacCfg->DacData6Bit);
 4952              		.loc 1 1556 5 is_stmt 0 view .LVU1470
 4953 0052 FFF7FEFF 		bl	AD5940_WriteReg
 4954              	.LVL443:
1557:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPDACSW1, pLpDacCfg->LpDacSW|BITM_AFE_LPDACSW0_LPMODEDIS);  /* Overwrit
 4955              		.loc 1 1557 5 is_stmt 1 view .LVU1471
 4956 0056 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 4957 0058 608B     		ldrh	r0, [r4, #26]
 4958 005a FFF7FEFF 		bl	AD5940_LPDAC1WriteS
 4959              	.LVL444:
1558:ad5940lib/ad5940.c ****   }
 4960              		.loc 1 1558 5 view .LVU1472
1558:ad5940lib/ad5940.c ****   }
 4961              		.loc 1 1558 48 is_stmt 0 view .LVU1473
 4962 005e 2169     		ldr	r1, [r4, #16]
1558:ad5940lib/ad5940.c ****   }
 4963              		.loc 1 1558 5 view .LVU1474
 4964 0060 41F02001 		orr	r1, r1, #32
 4965 0064 42F23010 		movw	r0, #8496
 4966 0068 FFF7FEFF 		bl	AD5940_WriteReg
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 160


 4967              	.LVL445:
1560:ad5940lib/ad5940.c **** 
 4968              		.loc 1 1560 1 view .LVU1475
 4969 006c EEE7     		b	.L335
 4970              		.cfi_endproc
 4971              	.LFE52:
 4973              		.section	.text.AD5940_LPAMPCfgS,"ax",%progbits
 4974              		.align	1
 4975              		.global	AD5940_LPAMPCfgS
 4976              		.syntax unified
 4977              		.thumb
 4978              		.thumb_func
 4979              		.fpu fpv5-d16
 4981              	AD5940_LPAMPCfgS:
 4982              	.LVL446:
 4983              	.LFB56:
1610:ad5940lib/ad5940.c ****   //check parameters
 4984              		.loc 1 1610 1 is_stmt 1 view -0
 4985              		.cfi_startproc
 4986              		@ args = 0, pretend = 0, frame = 0
 4987              		@ frame_needed = 0, uses_anonymous_args = 0
1610:ad5940lib/ad5940.c ****   //check parameters
 4988              		.loc 1 1610 1 is_stmt 0 view .LVU1477
 4989 0000 10B5     		push	{r4, lr}
 4990              	.LCFI91:
 4991              		.cfi_def_cfa_offset 8
 4992              		.cfi_offset 4, -8
 4993              		.cfi_offset 14, -4
 4994 0002 0446     		mov	r4, r0
1612:ad5940lib/ad5940.c **** 
 4995              		.loc 1 1612 3 is_stmt 1 view .LVU1478
1614:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpPaPwrEn == bFALSE)
 4996              		.loc 1 1614 3 view .LVU1479
 4997              	.LVL447:
1615:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_PAPDEN; 
 4998              		.loc 1 1615 3 view .LVU1480
1615:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_PAPDEN; 
 4999              		.loc 1 1615 15 is_stmt 0 view .LVU1481
 5000 0004 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
1615:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_PAPDEN; 
 5001              		.loc 1 1615 5 view .LVU1482
 5002 0006 F3B1     		cbz	r3, .L348
1614:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpPaPwrEn == bFALSE)
 5003              		.loc 1 1614 11 view .LVU1483
 5004 0008 0023     		movs	r3, #0
 5005              	.L342:
 5006              	.LVL448:
1617:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_TIAPDEN;
 5007              		.loc 1 1617 3 is_stmt 1 view .LVU1484
1617:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_TIAPDEN;
 5008              		.loc 1 1617 15 is_stmt 0 view .LVU1485
 5009 000a 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
1617:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_TIAPDEN;
 5010              		.loc 1 1617 5 view .LVU1486
 5011 000c 0AB9     		cbnz	r2, .L343
1618:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpAmpPwrMod == LPAMPPWR_HALF) 
 5012              		.loc 1 1618 5 is_stmt 1 view .LVU1487
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 161


1618:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpAmpPwrMod == LPAMPPWR_HALF) 
 5013              		.loc 1 1618 13 is_stmt 0 view .LVU1488
 5014 000e 43F00103 		orr	r3, r3, #1
 5015              	.LVL449:
 5016              	.L343:
1619:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_HALFPWR;
 5017              		.loc 1 1619 3 is_stmt 1 view .LVU1489
1619:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_HALFPWR;
 5018              		.loc 1 1619 15 is_stmt 0 view .LVU1490
 5019 0012 2169     		ldr	r1, [r4, #16]
1619:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_LPTIACON0_HALFPWR;
 5020              		.loc 1 1619 5 view .LVU1491
 5021 0014 0429     		cmp	r1, #4
 5022 0016 18D0     		beq	.L350
1623:ad5940lib/ad5940.c ****   }
 5023              		.loc 1 1623 5 is_stmt 1 view .LVU1492
1623:ad5940lib/ad5940.c ****   }
 5024              		.loc 1 1623 13 is_stmt 0 view .LVU1493
 5025 0018 43EAC101 		orr	r1, r3, r1, lsl #3
 5026              	.LVL450:
 5027              	.L345:
1625:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRload<<BITP_AFE_LPTIACON0_TIARL;
 5028              		.loc 1 1625 3 is_stmt 1 view .LVU1494
1625:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRload<<BITP_AFE_LPTIACON0_TIARL;
 5029              		.loc 1 1625 23 is_stmt 0 view .LVU1495
 5030 001c E368     		ldr	r3, [r4, #12]
1625:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRload<<BITP_AFE_LPTIACON0_TIARL;
 5031              		.loc 1 1625 11 view .LVU1496
 5032 001e 41EA4311 		orr	r1, r1, r3, lsl #5
 5033              	.LVL451:
1626:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRf<<BITP_AFE_LPTIACON0_TIARF;
 5034              		.loc 1 1626 3 is_stmt 1 view .LVU1497
1626:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRf<<BITP_AFE_LPTIACON0_TIARF;
 5035              		.loc 1 1626 23 is_stmt 0 view .LVU1498
 5036 0022 A368     		ldr	r3, [r4, #8]
1626:ad5940lib/ad5940.c ****   tempreg |= pLpAmpCfg->LpTiaRf<<BITP_AFE_LPTIACON0_TIARF;
 5037              		.loc 1 1626 11 view .LVU1499
 5038 0024 41EA8321 		orr	r1, r1, r3, lsl #10
 5039              	.LVL452:
1627:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpAmpSel == LPAMP0)
 5040              		.loc 1 1627 3 is_stmt 1 view .LVU1500
1627:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpAmpSel == LPAMP0)
 5041              		.loc 1 1627 23 is_stmt 0 view .LVU1501
 5042 0028 6368     		ldr	r3, [r4, #4]
1627:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpAmpSel == LPAMP0)
 5043              		.loc 1 1627 11 view .LVU1502
 5044 002a 41EA4331 		orr	r1, r1, r3, lsl #13
 5045              	.LVL453:
1628:ad5940lib/ad5940.c ****   {
 5046              		.loc 1 1628 3 is_stmt 1 view .LVU1503
1628:ad5940lib/ad5940.c ****   {
 5047              		.loc 1 1628 15 is_stmt 0 view .LVU1504
 5048 002e 2368     		ldr	r3, [r4]
1628:ad5940lib/ad5940.c ****   {
 5049              		.loc 1 1628 5 view .LVU1505
 5050 0030 73B9     		cbnz	r3, .L346
1630:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPTIASW0, pLpAmpCfg->LpTiaSW);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 162


 5051              		.loc 1 1630 5 is_stmt 1 view .LVU1506
 5052 0032 42F2EC00 		movw	r0, #8428
 5053              	.LVL454:
1630:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPTIASW0, pLpAmpCfg->LpTiaSW);
 5054              		.loc 1 1630 5 is_stmt 0 view .LVU1507
 5055 0036 FFF7FEFF 		bl	AD5940_WriteReg
 5056              	.LVL455:
1631:ad5940lib/ad5940.c ****   }
 5057              		.loc 1 1631 5 is_stmt 1 view .LVU1508
 5058 003a 6169     		ldr	r1, [r4, #20]
 5059 003c 42F2E400 		movw	r0, #8420
 5060 0040 FFF7FEFF 		bl	AD5940_WriteReg
 5061              	.LVL456:
 5062              	.L341:
1638:ad5940lib/ad5940.c **** /**
 5063              		.loc 1 1638 1 is_stmt 0 view .LVU1509
 5064 0044 10BD     		pop	{r4, pc}
 5065              	.LVL457:
 5066              	.L348:
1616:ad5940lib/ad5940.c ****   if(pLpAmpCfg->LpTiaPwrEn == bFALSE)
 5067              		.loc 1 1616 13 view .LVU1510
 5068 0046 0223     		movs	r3, #2
 5069 0048 DFE7     		b	.L342
 5070              	.LVL458:
 5071              	.L350:
1620:ad5940lib/ad5940.c ****   else
 5072              		.loc 1 1620 5 is_stmt 1 view .LVU1511
1620:ad5940lib/ad5940.c ****   else
 5073              		.loc 1 1620 13 is_stmt 0 view .LVU1512
 5074 004a 43F00401 		orr	r1, r3, #4
 5075              	.LVL459:
1620:ad5940lib/ad5940.c ****   else
 5076              		.loc 1 1620 13 view .LVU1513
 5077 004e E5E7     		b	.L345
 5078              	.L346:
1635:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPTIASW1, pLpAmpCfg->LpTiaSW);
 5079              		.loc 1 1635 5 is_stmt 1 view .LVU1514
 5080 0050 42F2E800 		movw	r0, #8424
 5081              	.LVL460:
1635:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPTIASW1, pLpAmpCfg->LpTiaSW);
 5082              		.loc 1 1635 5 is_stmt 0 view .LVU1515
 5083 0054 FFF7FEFF 		bl	AD5940_WriteReg
 5084              	.LVL461:
1636:ad5940lib/ad5940.c ****   }
 5085              		.loc 1 1636 5 is_stmt 1 view .LVU1516
 5086 0058 6169     		ldr	r1, [r4, #20]
 5087 005a 42F2E000 		movw	r0, #8416
 5088 005e FFF7FEFF 		bl	AD5940_WriteReg
 5089              	.LVL462:
1638:ad5940lib/ad5940.c **** /**
 5090              		.loc 1 1638 1 is_stmt 0 view .LVU1517
 5091 0062 EFE7     		b	.L341
 5092              		.cfi_endproc
 5093              	.LFE56:
 5095              		.section	.text.AD5940_LPLoopCfgS,"ax",%progbits
 5096              		.align	1
 5097              		.global	AD5940_LPLoopCfgS
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 163


 5098              		.syntax unified
 5099              		.thumb
 5100              		.thumb_func
 5101              		.fpu fpv5-d16
 5103              	AD5940_LPLoopCfgS:
 5104              	.LVL463:
 5105              	.LFB51:
1526:ad5940lib/ad5940.c ****   AD5940_LPDACCfgS(&pLpLoopCfg->LpDacCfg);
 5106              		.loc 1 1526 1 is_stmt 1 view -0
 5107              		.cfi_startproc
 5108              		@ args = 0, pretend = 0, frame = 0
 5109              		@ frame_needed = 0, uses_anonymous_args = 0
1526:ad5940lib/ad5940.c ****   AD5940_LPDACCfgS(&pLpLoopCfg->LpDacCfg);
 5110              		.loc 1 1526 1 is_stmt 0 view .LVU1519
 5111 0000 10B5     		push	{r4, lr}
 5112              	.LCFI92:
 5113              		.cfi_def_cfa_offset 8
 5114              		.cfi_offset 4, -8
 5115              		.cfi_offset 14, -4
 5116 0002 0446     		mov	r4, r0
1527:ad5940lib/ad5940.c ****   AD5940_LPAMPCfgS(&pLpLoopCfg->LpAmpCfg);
 5117              		.loc 1 1527 3 is_stmt 1 view .LVU1520
 5118 0004 FFF7FEFF 		bl	AD5940_LPDACCfgS
 5119              	.LVL464:
1528:ad5940lib/ad5940.c **** }
 5120              		.loc 1 1528 3 view .LVU1521
 5121 0008 04F12000 		add	r0, r4, #32
 5122 000c FFF7FEFF 		bl	AD5940_LPAMPCfgS
 5123              	.LVL465:
1529:ad5940lib/ad5940.c **** 
 5124              		.loc 1 1529 1 is_stmt 0 view .LVU1522
 5125 0010 10BD     		pop	{r4, pc}
1529:ad5940lib/ad5940.c **** 
 5126              		.loc 1 1529 1 view .LVU1523
 5127              		.cfi_endproc
 5128              	.LFE51:
 5130              		.section	.text.AD5940_ReadAfeResult,"ax",%progbits
 5131              		.align	1
 5132              		.global	AD5940_ReadAfeResult
 5133              		.syntax unified
 5134              		.thumb
 5135              		.thumb_func
 5136              		.fpu fpv5-d16
 5138              	AD5940_ReadAfeResult:
 5139              	.LVL466:
 5140              	.LFB58:
1676:ad5940lib/ad5940.c ****   uint32_t rd = 0;
 5141              		.loc 1 1676 1 is_stmt 1 view -0
 5142              		.cfi_startproc
 5143              		@ args = 0, pretend = 0, frame = 0
 5144              		@ frame_needed = 0, uses_anonymous_args = 0
1676:ad5940lib/ad5940.c ****   uint32_t rd = 0;
 5145              		.loc 1 1676 1 is_stmt 0 view .LVU1525
 5146 0000 08B5     		push	{r3, lr}
 5147              	.LCFI93:
 5148              		.cfi_def_cfa_offset 8
 5149              		.cfi_offset 3, -8
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 164


 5150              		.cfi_offset 14, -4
1677:ad5940lib/ad5940.c ****   //PARA_CHECK((AfeResultSel));
 5151              		.loc 1 1677 3 is_stmt 1 view .LVU1526
 5152              	.LVL467:
1679:ad5940lib/ad5940.c ****   {
 5153              		.loc 1 1679 3 view .LVU1527
 5154 0002 0628     		cmp	r0, #6
 5155 0004 28D8     		bhi	.L363
 5156 0006 DFE800F0 		tbb	[pc, r0]
 5157              	.L356:
 5158 000a 04       		.byte	(.L362-.L356)/2
 5159 000b 09       		.byte	(.L361-.L356)/2
 5160 000c 0E       		.byte	(.L360-.L356)/2
 5161 000d 13       		.byte	(.L359-.L356)/2
 5162 000e 18       		.byte	(.L358-.L356)/2
 5163 000f 1D       		.byte	(.L357-.L356)/2
 5164 0010 22       		.byte	(.L355-.L356)/2
 5165 0011 00       		.p2align 1
 5166              	.L362:
1682:ad5940lib/ad5940.c ****       break;
 5167              		.loc 1 1682 7 view .LVU1528
1682:ad5940lib/ad5940.c ****       break;
 5168              		.loc 1 1682 12 is_stmt 0 view .LVU1529
 5169 0012 42F27400 		movw	r0, #8308
 5170              	.LVL468:
1682:ad5940lib/ad5940.c ****       break;
 5171              		.loc 1 1682 12 view .LVU1530
 5172 0016 FFF7FEFF 		bl	AD5940_ReadReg
 5173              	.LVL469:
1683:ad5940lib/ad5940.c ****     case AFERESULT_SINC2:
 5174              		.loc 1 1683 7 is_stmt 1 view .LVU1531
 5175              	.L353:
1705:ad5940lib/ad5940.c **** 
 5176              		.loc 1 1705 1 is_stmt 0 view .LVU1532
 5177 001a 08BD     		pop	{r3, pc}
 5178              	.LVL470:
 5179              	.L361:
1685:ad5940lib/ad5940.c ****       break;
 5180              		.loc 1 1685 7 is_stmt 1 view .LVU1533
1685:ad5940lib/ad5940.c ****       break;
 5181              		.loc 1 1685 12 is_stmt 0 view .LVU1534
 5182 001c 4FF40250 		mov	r0, #8320
 5183              	.LVL471:
1685:ad5940lib/ad5940.c ****       break;
 5184              		.loc 1 1685 12 view .LVU1535
 5185 0020 FFF7FEFF 		bl	AD5940_ReadReg
 5186              	.LVL472:
1686:ad5940lib/ad5940.c ****     case AFERESULT_TEMPSENSOR:
 5187              		.loc 1 1686 7 is_stmt 1 view .LVU1536
 5188 0024 F9E7     		b	.L353
 5189              	.LVL473:
 5190              	.L360:
1688:ad5940lib/ad5940.c ****       break;
 5191              		.loc 1 1688 7 view .LVU1537
1688:ad5940lib/ad5940.c ****       break;
 5192              		.loc 1 1688 12 is_stmt 0 view .LVU1538
 5193 0026 42F28400 		movw	r0, #8324
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 165


 5194              	.LVL474:
1688:ad5940lib/ad5940.c ****       break;
 5195              		.loc 1 1688 12 view .LVU1539
 5196 002a FFF7FEFF 		bl	AD5940_ReadReg
 5197              	.LVL475:
1689:ad5940lib/ad5940.c ****     case AFERESULT_DFTREAL:
 5198              		.loc 1 1689 7 is_stmt 1 view .LVU1540
 5199 002e F4E7     		b	.L353
 5200              	.LVL476:
 5201              	.L359:
1691:ad5940lib/ad5940.c ****       break;
 5202              		.loc 1 1691 7 view .LVU1541
1691:ad5940lib/ad5940.c ****       break;
 5203              		.loc 1 1691 12 is_stmt 0 view .LVU1542
 5204 0030 42F27800 		movw	r0, #8312
 5205              	.LVL477:
1691:ad5940lib/ad5940.c ****       break;
 5206              		.loc 1 1691 12 view .LVU1543
 5207 0034 FFF7FEFF 		bl	AD5940_ReadReg
 5208              	.LVL478:
1692:ad5940lib/ad5940.c ****     case AFERESULT_DFTIMAGE:
 5209              		.loc 1 1692 7 is_stmt 1 view .LVU1544
 5210 0038 EFE7     		b	.L353
 5211              	.LVL479:
 5212              	.L358:
1694:ad5940lib/ad5940.c ****       break;
 5213              		.loc 1 1694 7 view .LVU1545
1694:ad5940lib/ad5940.c ****       break;
 5214              		.loc 1 1694 12 is_stmt 0 view .LVU1546
 5215 003a 42F27C00 		movw	r0, #8316
 5216              	.LVL480:
1694:ad5940lib/ad5940.c ****       break;
 5217              		.loc 1 1694 12 view .LVU1547
 5218 003e FFF7FEFF 		bl	AD5940_ReadReg
 5219              	.LVL481:
1695:ad5940lib/ad5940.c ****     case AFERESULT_STATSMEAN:
 5220              		.loc 1 1695 7 is_stmt 1 view .LVU1548
 5221 0042 EAE7     		b	.L353
 5222              	.LVL482:
 5223              	.L357:
1697:ad5940lib/ad5940.c ****       break;
 5224              		.loc 1 1697 7 view .LVU1549
1697:ad5940lib/ad5940.c ****       break;
 5225              		.loc 1 1697 12 is_stmt 0 view .LVU1550
 5226 0044 42F2C810 		movw	r0, #8648
 5227              	.LVL483:
1697:ad5940lib/ad5940.c ****       break;
 5228              		.loc 1 1697 12 view .LVU1551
 5229 0048 FFF7FEFF 		bl	AD5940_ReadReg
 5230              	.LVL484:
1698:ad5940lib/ad5940.c ****     case AFERESULT_STATSVAR:
 5231              		.loc 1 1698 7 is_stmt 1 view .LVU1552
 5232 004c E5E7     		b	.L353
 5233              	.LVL485:
 5234              	.L355:
1700:ad5940lib/ad5940.c ****       break;
 5235              		.loc 1 1700 7 view .LVU1553
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 166


1700:ad5940lib/ad5940.c ****       break;
 5236              		.loc 1 1700 12 is_stmt 0 view .LVU1554
 5237 004e 4FF40750 		mov	r0, #8640
 5238              	.LVL486:
1700:ad5940lib/ad5940.c ****       break;
 5239              		.loc 1 1700 12 view .LVU1555
 5240 0052 FFF7FEFF 		bl	AD5940_ReadReg
 5241              	.LVL487:
1701:ad5940lib/ad5940.c ****   }
 5242              		.loc 1 1701 7 is_stmt 1 view .LVU1556
 5243 0056 E0E7     		b	.L353
 5244              	.LVL488:
 5245              	.L363:
1676:ad5940lib/ad5940.c ****   uint32_t rd = 0;
 5246              		.loc 1 1676 1 is_stmt 0 view .LVU1557
 5247 0058 0020     		movs	r0, #0
 5248              	.LVL489:
1704:ad5940lib/ad5940.c **** }
 5249              		.loc 1 1704 3 is_stmt 1 view .LVU1558
1704:ad5940lib/ad5940.c **** }
 5250              		.loc 1 1704 10 is_stmt 0 view .LVU1559
 5251 005a DEE7     		b	.L353
 5252              		.cfi_endproc
 5253              	.LFE58:
 5255              		.section	.text.AD5940_ADCBaseCfgS,"ax",%progbits
 5256              		.align	1
 5257              		.global	AD5940_ADCBaseCfgS
 5258              		.syntax unified
 5259              		.thumb
 5260              		.thumb_func
 5261              		.fpu fpv5-d16
 5263              	AD5940_ADCBaseCfgS:
 5264              	.LVL490:
 5265              	.LFB59:
1718:ad5940lib/ad5940.c ****   uint32_t tempreg = 0;
 5266              		.loc 1 1718 1 is_stmt 1 view -0
 5267              		.cfi_startproc
 5268              		@ args = 0, pretend = 0, frame = 0
 5269              		@ frame_needed = 0, uses_anonymous_args = 0
1718:ad5940lib/ad5940.c ****   uint32_t tempreg = 0;
 5270              		.loc 1 1718 1 is_stmt 0 view .LVU1561
 5271 0000 08B5     		push	{r3, lr}
 5272              	.LCFI94:
 5273              		.cfi_def_cfa_offset 8
 5274              		.cfi_offset 3, -8
 5275              		.cfi_offset 14, -4
1719:ad5940lib/ad5940.c ****   //PARA_CHECK(IS_ADCMUXP(pADCInit->ADCMuxP));
 5276              		.loc 1 1719 3 is_stmt 1 view .LVU1562
 5277              	.LVL491:
1722:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCAAF(pADCInit->ADCAAF));
 5278              		.loc 1 1722 42 view .LVU1563
1723:ad5940lib/ad5940.c **** 
 5279              		.loc 1 1723 42 view .LVU1564
1725:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pADCInit->ADCMuxN)<<BITP_AFE_ADCCON_MUXSELN;
 5280              		.loc 1 1725 3 view .LVU1565
1725:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pADCInit->ADCMuxN)<<BITP_AFE_ADCCON_MUXSELN;
 5281              		.loc 1 1725 11 is_stmt 0 view .LVU1566
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 167


 5282 0002 0168     		ldr	r1, [r0]
 5283              	.LVL492:
1726:ad5940lib/ad5940.c ****   //if(pADCInit->OffCancEnable == bTRUE)
 5284              		.loc 1 1726 3 is_stmt 1 view .LVU1567
1726:ad5940lib/ad5940.c ****   //if(pADCInit->OffCancEnable == bTRUE)
 5285              		.loc 1 1726 33 is_stmt 0 view .LVU1568
 5286 0004 4368     		ldr	r3, [r0, #4]
1726:ad5940lib/ad5940.c ****   //if(pADCInit->OffCancEnable == bTRUE)
 5287              		.loc 1 1726 11 view .LVU1569
 5288 0006 41EA0321 		orr	r1, r1, r3, lsl #8
 5289              	.LVL493:
1729:ad5940lib/ad5940.c **** 
 5290              		.loc 1 1729 3 is_stmt 1 view .LVU1570
1729:ad5940lib/ad5940.c **** 
 5291              		.loc 1 1729 33 is_stmt 0 view .LVU1571
 5292 000a 8368     		ldr	r3, [r0, #8]
 5293              	.LVL494:
1731:ad5940lib/ad5940.c **** }
 5294              		.loc 1 1731 3 is_stmt 1 view .LVU1572
 5295 000c 41EA0341 		orr	r1, r1, r3, lsl #16
 5296              	.LVL495:
1731:ad5940lib/ad5940.c **** }
 5297              		.loc 1 1731 3 is_stmt 0 view .LVU1573
 5298 0010 42F2A810 		movw	r0, #8616
 5299              	.LVL496:
1731:ad5940lib/ad5940.c **** }
 5300              		.loc 1 1731 3 view .LVU1574
 5301 0014 FFF7FEFF 		bl	AD5940_WriteReg
 5302              	.LVL497:
1732:ad5940lib/ad5940.c **** 
 5303              		.loc 1 1732 1 view .LVU1575
 5304 0018 08BD     		pop	{r3, pc}
 5305              		.cfi_endproc
 5306              	.LFE59:
 5308              		.section	.text.AD5940_ADCFilterCfgS,"ax",%progbits
 5309              		.align	1
 5310              		.global	AD5940_ADCFilterCfgS
 5311              		.syntax unified
 5312              		.thumb
 5313              		.thumb_func
 5314              		.fpu fpv5-d16
 5316              	AD5940_ADCFilterCfgS:
 5317              	.LVL498:
 5318              	.LFB60:
1740:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5319              		.loc 1 1740 1 is_stmt 1 view -0
 5320              		.cfi_startproc
 5321              		@ args = 0, pretend = 0, frame = 0
 5322              		@ frame_needed = 0, uses_anonymous_args = 0
1740:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5323              		.loc 1 1740 1 is_stmt 0 view .LVU1577
 5324 0000 10B5     		push	{r4, lr}
 5325              	.LCFI95:
 5326              		.cfi_def_cfa_offset 8
 5327              		.cfi_offset 4, -8
 5328              		.cfi_offset 14, -4
 5329 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 168


1741:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCSINC3OSR(pFiltCfg->ADCSinc3Osr));
 5330              		.loc 1 1741 3 is_stmt 1 view .LVU1578
1742:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCSINC2OSR(pFiltCfg->ADCSinc2Osr));
 5331              		.loc 1 1742 52 view .LVU1579
1743:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCAVGNUM(pFiltCfg->ADCAvgNum));
 5332              		.loc 1 1743 52 view .LVU1580
1744:ad5940lib/ad5940.c ****   PARA_CHECK(IS_ADCRATE(pFiltCfg->ADCRate));
 5333              		.loc 1 1744 48 view .LVU1581
1745:ad5940lib/ad5940.c **** 
 5334              		.loc 1 1745 44 view .LVU1582
1747:ad5940lib/ad5940.c ****   tempreg &= BITM_AFE_ADCFILTERCON_AVRGEN; /* Keep this bit setting. */
 5335              		.loc 1 1747 3 view .LVU1583
1747:ad5940lib/ad5940.c ****   tempreg &= BITM_AFE_ADCFILTERCON_AVRGEN; /* Keep this bit setting. */
 5336              		.loc 1 1747 13 is_stmt 0 view .LVU1584
 5337 0004 42F24400 		movw	r0, #8260
 5338              	.LVL499:
1747:ad5940lib/ad5940.c ****   tempreg &= BITM_AFE_ADCFILTERCON_AVRGEN; /* Keep this bit setting. */
 5339              		.loc 1 1747 13 view .LVU1585
 5340 0008 FFF7FEFF 		bl	AD5940_ReadReg
 5341              	.LVL500:
1748:ad5940lib/ad5940.c **** 
 5342              		.loc 1 1748 3 is_stmt 1 view .LVU1586
1748:ad5940lib/ad5940.c **** 
 5343              		.loc 1 1748 11 is_stmt 0 view .LVU1587
 5344 000c 00F08001 		and	r1, r0, #128
 5345              	.LVL501:
1750:ad5940lib/ad5940.c ****   if(pFiltCfg->BpNotch == bTRUE)
 5346              		.loc 1 1750 3 is_stmt 1 view .LVU1588
1750:ad5940lib/ad5940.c ****   if(pFiltCfg->BpNotch == bTRUE)
 5347              		.loc 1 1750 22 is_stmt 0 view .LVU1589
 5348 0010 E068     		ldr	r0, [r4, #12]
1750:ad5940lib/ad5940.c ****   if(pFiltCfg->BpNotch == bTRUE)
 5349              		.loc 1 1750 11 view .LVU1590
 5350 0012 0843     		orrs	r0, r0, r1
 5351              	.LVL502:
1751:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_ADCFILTERCON_LPFBYPEN;
 5352              		.loc 1 1751 3 is_stmt 1 view .LVU1591
1751:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_ADCFILTERCON_LPFBYPEN;
 5353              		.loc 1 1751 14 is_stmt 0 view .LVU1592
 5354 0014 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
1751:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_ADCFILTERCON_LPFBYPEN;
 5355              		.loc 1 1751 5 view .LVU1593
 5356 0016 012B     		cmp	r3, #1
 5357 0018 12D0     		beq	.L372
 5358              	.L368:
1753:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_ADCFILTERCON_SINC3BYP;
 5359              		.loc 1 1753 3 is_stmt 1 view .LVU1594
1753:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_ADCFILTERCON_SINC3BYP;
 5360              		.loc 1 1753 14 is_stmt 0 view .LVU1595
 5361 001a 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
1753:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_ADCFILTERCON_SINC3BYP;
 5362              		.loc 1 1753 5 view .LVU1596
 5363 001c 012B     		cmp	r3, #1
 5364 001e 12D0     		beq	.L373
 5365              	.L369:
1761:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCSinc3Osr)<<BITP_AFE_ADCFILTERCON_SINC3OSR;
 5366              		.loc 1 1761 3 is_stmt 1 view .LVU1597
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 169


1761:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCSinc3Osr)<<BITP_AFE_ADCFILTERCON_SINC3OSR;
 5367              		.loc 1 1761 33 is_stmt 0 view .LVU1598
 5368 0020 6168     		ldr	r1, [r4, #4]
1761:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCSinc3Osr)<<BITP_AFE_ADCFILTERCON_SINC3OSR;
 5369              		.loc 1 1761 11 view .LVU1599
 5370 0022 40EA0120 		orr	r0, r0, r1, lsl #8
 5371              	.LVL503:
1762:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCAvgNum)<<BITP_AFE_ADCFILTERCON_AVRGNUM;
 5372              		.loc 1 1762 3 is_stmt 1 view .LVU1600
1762:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCAvgNum)<<BITP_AFE_ADCFILTERCON_AVRGNUM;
 5373              		.loc 1 1762 33 is_stmt 0 view .LVU1601
 5374 0026 2168     		ldr	r1, [r4]
1762:ad5940lib/ad5940.c ****   tempreg |= (uint32_t)(pFiltCfg->ADCAvgNum)<<BITP_AFE_ADCFILTERCON_AVRGNUM;
 5375              		.loc 1 1762 11 view .LVU1602
 5376 0028 40EA0130 		orr	r0, r0, r1, lsl #12
 5377              	.LVL504:
1763:ad5940lib/ad5940.c **** 
 5378              		.loc 1 1763 3 is_stmt 1 view .LVU1603
1763:ad5940lib/ad5940.c **** 
 5379              		.loc 1 1763 33 is_stmt 0 view .LVU1604
 5380 002c A168     		ldr	r1, [r4, #8]
 5381              	.LVL505:
1765:ad5940lib/ad5940.c **** 
 5382              		.loc 1 1765 3 is_stmt 1 view .LVU1605
 5383 002e 40EA8131 		orr	r1, r0, r1, lsl #14
 5384              	.LVL506:
1765:ad5940lib/ad5940.c **** 
 5385              		.loc 1 1765 3 is_stmt 0 view .LVU1606
 5386 0032 42F24400 		movw	r0, #8260
 5387 0036 FFF7FEFF 		bl	AD5940_WriteReg
 5388              	.LVL507:
1768:ad5940lib/ad5940.c ****   {
 5389              		.loc 1 1768 3 is_stmt 1 view .LVU1607
1768:ad5940lib/ad5940.c ****   {
 5390              		.loc 1 1768 14 is_stmt 0 view .LVU1608
 5391 003a A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
1768:ad5940lib/ad5940.c ****   {
 5392              		.loc 1 1768 5 view .LVU1609
 5393 003c 33B9     		cbnz	r3, .L374
 5394              	.L367:
1772:ad5940lib/ad5940.c **** 
 5395              		.loc 1 1772 1 view .LVU1610
 5396 003e 10BD     		pop	{r4, pc}
 5397              	.LVL508:
 5398              	.L372:
1752:ad5940lib/ad5940.c ****   if(pFiltCfg->BpSinc3 == bTRUE)
 5399              		.loc 1 1752 5 is_stmt 1 view .LVU1611
1752:ad5940lib/ad5940.c ****   if(pFiltCfg->BpSinc3 == bTRUE)
 5400              		.loc 1 1752 13 is_stmt 0 view .LVU1612
 5401 0040 40F01000 		orr	r0, r0, #16
 5402              	.LVL509:
1752:ad5940lib/ad5940.c ****   if(pFiltCfg->BpSinc3 == bTRUE)
 5403              		.loc 1 1752 13 view .LVU1613
 5404 0044 E9E7     		b	.L368
 5405              	.L373:
1754:ad5940lib/ad5940.c ****   /**
 5406              		.loc 1 1754 5 is_stmt 1 view .LVU1614
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 170


1754:ad5940lib/ad5940.c ****   /**
 5407              		.loc 1 1754 13 is_stmt 0 view .LVU1615
 5408 0046 40F04000 		orr	r0, r0, #64
 5409              	.LVL510:
1754:ad5940lib/ad5940.c ****   /**
 5410              		.loc 1 1754 13 view .LVU1616
 5411 004a E9E7     		b	.L369
 5412              	.LVL511:
 5413              	.L374:
1770:ad5940lib/ad5940.c ****   }
 5414              		.loc 1 1770 5 is_stmt 1 view .LVU1617
 5415 004c 0121     		movs	r1, #1
 5416 004e 4FF48030 		mov	r0, #65536
 5417 0052 FFF7FEFF 		bl	AD5940_AFECtrlS
 5418              	.LVL512:
1772:ad5940lib/ad5940.c **** 
 5419              		.loc 1 1772 1 is_stmt 0 view .LVU1618
 5420 0056 F2E7     		b	.L367
 5421              		.cfi_endproc
 5422              	.LFE60:
 5424              		.section	.text.AD5940_ADCPowerCtrlS,"ax",%progbits
 5425              		.align	1
 5426              		.global	AD5940_ADCPowerCtrlS
 5427              		.syntax unified
 5428              		.thumb
 5429              		.thumb_func
 5430              		.fpu fpv5-d16
 5432              	AD5940_ADCPowerCtrlS:
 5433              	.LVL513:
 5434              	.LFB61:
1782:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5435              		.loc 1 1782 1 is_stmt 1 view -0
 5436              		.cfi_startproc
 5437              		@ args = 0, pretend = 0, frame = 0
 5438              		@ frame_needed = 0, uses_anonymous_args = 0
1782:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5439              		.loc 1 1782 1 is_stmt 0 view .LVU1620
 5440 0000 10B5     		push	{r4, lr}
 5441              	.LCFI96:
 5442              		.cfi_def_cfa_offset 8
 5443              		.cfi_offset 4, -8
 5444              		.cfi_offset 14, -4
 5445 0002 0446     		mov	r4, r0
1783:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
 5446              		.loc 1 1783 3 is_stmt 1 view .LVU1621
1784:ad5940lib/ad5940.c ****   if(State == bTRUE)
 5447              		.loc 1 1784 3 view .LVU1622
1784:ad5940lib/ad5940.c ****   if(State == bTRUE)
 5448              		.loc 1 1784 13 is_stmt 0 view .LVU1623
 5449 0004 4FF40050 		mov	r0, #8192
 5450              	.LVL514:
1784:ad5940lib/ad5940.c ****   if(State == bTRUE)
 5451              		.loc 1 1784 13 view .LVU1624
 5452 0008 FFF7FEFF 		bl	AD5940_ReadReg
 5453              	.LVL515:
1785:ad5940lib/ad5940.c ****   {
 5454              		.loc 1 1785 3 is_stmt 1 view .LVU1625
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 171


1785:ad5940lib/ad5940.c ****   {
 5455              		.loc 1 1785 5 is_stmt 0 view .LVU1626
 5456 000c 012C     		cmp	r4, #1
 5457 000e 06D0     		beq	.L379
1791:ad5940lib/ad5940.c ****   }
 5458              		.loc 1 1791 5 is_stmt 1 view .LVU1627
1791:ad5940lib/ad5940.c ****   }
 5459              		.loc 1 1791 13 is_stmt 0 view .LVU1628
 5460 0010 20F08001 		bic	r1, r0, #128
 5461              	.LVL516:
 5462              	.L377:
1793:ad5940lib/ad5940.c **** }
 5463              		.loc 1 1793 3 is_stmt 1 view .LVU1629
 5464 0014 4FF40050 		mov	r0, #8192
 5465 0018 FFF7FEFF 		bl	AD5940_WriteReg
 5466              	.LVL517:
1794:ad5940lib/ad5940.c **** 
 5467              		.loc 1 1794 1 is_stmt 0 view .LVU1630
 5468 001c 10BD     		pop	{r4, pc}
 5469              	.LVL518:
 5470              	.L379:
1787:ad5940lib/ad5940.c ****   }
 5471              		.loc 1 1787 5 is_stmt 1 view .LVU1631
1787:ad5940lib/ad5940.c ****   }
 5472              		.loc 1 1787 13 is_stmt 0 view .LVU1632
 5473 001e 40F08001 		orr	r1, r0, #128
 5474              	.LVL519:
1787:ad5940lib/ad5940.c ****   }
 5475              		.loc 1 1787 13 view .LVU1633
 5476 0022 F7E7     		b	.L377
 5477              		.cfi_endproc
 5478              	.LFE61:
 5480              		.section	.text.AD5940_ADCConvtCtrlS,"ax",%progbits
 5481              		.align	1
 5482              		.global	AD5940_ADCConvtCtrlS
 5483              		.syntax unified
 5484              		.thumb
 5485              		.thumb_func
 5486              		.fpu fpv5-d16
 5488              	AD5940_ADCConvtCtrlS:
 5489              	.LVL520:
 5490              	.LFB62:
1804:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5491              		.loc 1 1804 1 is_stmt 1 view -0
 5492              		.cfi_startproc
 5493              		@ args = 0, pretend = 0, frame = 0
 5494              		@ frame_needed = 0, uses_anonymous_args = 0
1804:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5495              		.loc 1 1804 1 is_stmt 0 view .LVU1635
 5496 0000 10B5     		push	{r4, lr}
 5497              	.LCFI97:
 5498              		.cfi_def_cfa_offset 8
 5499              		.cfi_offset 4, -8
 5500              		.cfi_offset 14, -4
 5501 0002 0446     		mov	r4, r0
1805:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_AFE_AFECON);
 5502              		.loc 1 1805 3 is_stmt 1 view .LVU1636
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 172


1806:ad5940lib/ad5940.c ****   if(State == bTRUE)
 5503              		.loc 1 1806 3 view .LVU1637
1806:ad5940lib/ad5940.c ****   if(State == bTRUE)
 5504              		.loc 1 1806 13 is_stmt 0 view .LVU1638
 5505 0004 4FF40050 		mov	r0, #8192
 5506              	.LVL521:
1806:ad5940lib/ad5940.c ****   if(State == bTRUE)
 5507              		.loc 1 1806 13 view .LVU1639
 5508 0008 FFF7FEFF 		bl	AD5940_ReadReg
 5509              	.LVL522:
1807:ad5940lib/ad5940.c ****   {
 5510              		.loc 1 1807 3 is_stmt 1 view .LVU1640
1807:ad5940lib/ad5940.c ****   {
 5511              		.loc 1 1807 5 is_stmt 0 view .LVU1641
 5512 000c 012C     		cmp	r4, #1
 5513 000e 06D0     		beq	.L384
1813:ad5940lib/ad5940.c ****   }
 5514              		.loc 1 1813 5 is_stmt 1 view .LVU1642
1813:ad5940lib/ad5940.c ****   }
 5515              		.loc 1 1813 13 is_stmt 0 view .LVU1643
 5516 0010 20F48071 		bic	r1, r0, #256
 5517              	.LVL523:
 5518              	.L382:
1815:ad5940lib/ad5940.c **** }
 5519              		.loc 1 1815 3 is_stmt 1 view .LVU1644
 5520 0014 4FF40050 		mov	r0, #8192
 5521 0018 FFF7FEFF 		bl	AD5940_WriteReg
 5522              	.LVL524:
1816:ad5940lib/ad5940.c **** 
 5523              		.loc 1 1816 1 is_stmt 0 view .LVU1645
 5524 001c 10BD     		pop	{r4, pc}
 5525              	.LVL525:
 5526              	.L384:
1809:ad5940lib/ad5940.c ****   }
 5527              		.loc 1 1809 5 is_stmt 1 view .LVU1646
1809:ad5940lib/ad5940.c ****   }
 5528              		.loc 1 1809 13 is_stmt 0 view .LVU1647
 5529 001e 40F48071 		orr	r1, r0, #256
 5530              	.LVL526:
1809:ad5940lib/ad5940.c ****   }
 5531              		.loc 1 1809 13 view .LVU1648
 5532 0022 F7E7     		b	.L382
 5533              		.cfi_endproc
 5534              	.LFE62:
 5536              		.section	.text.AD5940_ADCMuxCfgS,"ax",%progbits
 5537              		.align	1
 5538              		.global	AD5940_ADCMuxCfgS
 5539              		.syntax unified
 5540              		.thumb
 5541              		.thumb_func
 5542              		.fpu fpv5-d16
 5544              	AD5940_ADCMuxCfgS:
 5545              	.LVL527:
 5546              	.LFB63:
1832:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5547              		.loc 1 1832 1 is_stmt 1 view -0
 5548              		.cfi_startproc
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 173


 5549              		@ args = 0, pretend = 0, frame = 0
 5550              		@ frame_needed = 0, uses_anonymous_args = 0
1832:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5551              		.loc 1 1832 1 is_stmt 0 view .LVU1650
 5552 0000 38B5     		push	{r3, r4, r5, lr}
 5553              	.LCFI98:
 5554              		.cfi_def_cfa_offset 16
 5555              		.cfi_offset 3, -16
 5556              		.cfi_offset 4, -12
 5557              		.cfi_offset 5, -8
 5558              		.cfi_offset 14, -4
 5559 0002 0546     		mov	r5, r0
 5560 0004 0C46     		mov	r4, r1
1833:ad5940lib/ad5940.c ****   //PARA_CHECK(IS_ADCMUXP(ADCMuxP));
 5561              		.loc 1 1833 3 is_stmt 1 view .LVU1651
1837:ad5940lib/ad5940.c ****   tempreg &= ~(BITM_AFE_ADCCON_MUXSELN|BITM_AFE_ADCCON_MUXSELP);
 5562              		.loc 1 1837 3 view .LVU1652
1837:ad5940lib/ad5940.c ****   tempreg &= ~(BITM_AFE_ADCCON_MUXSELN|BITM_AFE_ADCCON_MUXSELP);
 5563              		.loc 1 1837 13 is_stmt 0 view .LVU1653
 5564 0006 42F2A810 		movw	r0, #8616
 5565              	.LVL528:
1837:ad5940lib/ad5940.c ****   tempreg &= ~(BITM_AFE_ADCCON_MUXSELN|BITM_AFE_ADCCON_MUXSELP);
 5566              		.loc 1 1837 13 view .LVU1654
 5567 000a FFF7FEFF 		bl	AD5940_ReadReg
 5568              	.LVL529:
1838:ad5940lib/ad5940.c ****   tempreg |= ADCMuxP<<BITP_AFE_ADCCON_MUXSELP;
 5569              		.loc 1 1838 3 is_stmt 1 view .LVU1655
1838:ad5940lib/ad5940.c ****   tempreg |= ADCMuxP<<BITP_AFE_ADCCON_MUXSELP;
 5570              		.loc 1 1838 11 is_stmt 0 view .LVU1656
 5571 000e 054B     		ldr	r3, .L387
 5572 0010 0340     		ands	r3, r3, r0
 5573              	.LVL530:
1839:ad5940lib/ad5940.c ****   tempreg |= ADCMuxN<<BITP_AFE_ADCCON_MUXSELN;
 5574              		.loc 1 1839 3 is_stmt 1 view .LVU1657
1839:ad5940lib/ad5940.c ****   tempreg |= ADCMuxN<<BITP_AFE_ADCCON_MUXSELN;
 5575              		.loc 1 1839 11 is_stmt 0 view .LVU1658
 5576 0012 2B43     		orrs	r3, r3, r5
 5577              	.LVL531:
1840:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCCON, tempreg);
 5578              		.loc 1 1840 3 is_stmt 1 view .LVU1659
1841:ad5940lib/ad5940.c **** }
 5579              		.loc 1 1841 3 view .LVU1660
 5580 0014 43EA0421 		orr	r1, r3, r4, lsl #8
 5581              	.LVL532:
1841:ad5940lib/ad5940.c **** }
 5582              		.loc 1 1841 3 is_stmt 0 view .LVU1661
 5583 0018 42F2A810 		movw	r0, #8616
 5584 001c FFF7FEFF 		bl	AD5940_WriteReg
 5585              	.LVL533:
1842:ad5940lib/ad5940.c **** 
 5586              		.loc 1 1842 1 view .LVU1662
 5587 0020 38BD     		pop	{r3, r4, r5, pc}
 5588              	.LVL534:
 5589              	.L388:
1842:ad5940lib/ad5940.c **** 
 5590              		.loc 1 1842 1 view .LVU1663
 5591 0022 00BF     		.align	2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 174


 5592              	.L387:
 5593 0024 C0E0FFFF 		.word	-8000
 5594              		.cfi_endproc
 5595              	.LFE63:
 5597              		.section	.text.AD5940_ADCDigCompCfgS,"ax",%progbits
 5598              		.align	1
 5599              		.global	AD5940_ADCDigCompCfgS
 5600              		.syntax unified
 5601              		.thumb
 5602              		.thumb_func
 5603              		.fpu fpv5-d16
 5605              	AD5940_ADCDigCompCfgS:
 5606              	.LVL535:
 5607              	.LFB64:
1850:ad5940lib/ad5940.c ****   //PARA_CHECK((AfeResultSel));
 5608              		.loc 1 1850 1 is_stmt 1 view -0
 5609              		.cfi_startproc
 5610              		@ args = 0, pretend = 0, frame = 0
 5611              		@ frame_needed = 0, uses_anonymous_args = 0
1850:ad5940lib/ad5940.c ****   //PARA_CHECK((AfeResultSel));
 5612              		.loc 1 1850 1 is_stmt 0 view .LVU1665
 5613 0000 10B5     		push	{r4, lr}
 5614              	.LCFI99:
 5615              		.cfi_def_cfa_offset 8
 5616              		.cfi_offset 4, -8
 5617              		.cfi_offset 14, -4
 5618 0002 0446     		mov	r4, r0
1852:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCMINSM, pCompCfg->ADCMinHys);
 5619              		.loc 1 1852 3 is_stmt 1 view .LVU1666
 5620 0004 0188     		ldrh	r1, [r0]
 5621 0006 42F2A800 		movw	r0, #8360
 5622              	.LVL536:
1852:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCMINSM, pCompCfg->ADCMinHys);
 5623              		.loc 1 1852 3 is_stmt 0 view .LVU1667
 5624 000a FFF7FEFF 		bl	AD5940_WriteReg
 5625              	.LVL537:
1853:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCMAX, pCompCfg->ADCMax);
 5626              		.loc 1 1853 3 is_stmt 1 view .LVU1668
 5627 000e 6188     		ldrh	r1, [r4, #2]
 5628 0010 42F2AC00 		movw	r0, #8364
 5629 0014 FFF7FEFF 		bl	AD5940_WriteReg
 5630              	.LVL538:
1854:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_ADCMAXSMEN, pCompCfg->ADCMaxHys);
 5631              		.loc 1 1854 3 view .LVU1669
 5632 0018 A188     		ldrh	r1, [r4, #4]
 5633 001a 42F2B000 		movw	r0, #8368
 5634 001e FFF7FEFF 		bl	AD5940_WriteReg
 5635              	.LVL539:
1855:ad5940lib/ad5940.c **** }
 5636              		.loc 1 1855 3 view .LVU1670
 5637 0022 E188     		ldrh	r1, [r4, #6]
 5638 0024 42F2B400 		movw	r0, #8372
 5639 0028 FFF7FEFF 		bl	AD5940_WriteReg
 5640              	.LVL540:
1856:ad5940lib/ad5940.c **** /** @} ADC_Block_Functions */
 5641              		.loc 1 1856 1 is_stmt 0 view .LVU1671
 5642 002c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 175


1856:ad5940lib/ad5940.c **** /** @} ADC_Block_Functions */
 5643              		.loc 1 1856 1 view .LVU1672
 5644              		.cfi_endproc
 5645              	.LFE64:
 5647              		.section	.text.AD5940_StatisticCfgS,"ax",%progbits
 5648              		.align	1
 5649              		.global	AD5940_StatisticCfgS
 5650              		.syntax unified
 5651              		.thumb
 5652              		.thumb_func
 5653              		.fpu fpv5-d16
 5655              	AD5940_StatisticCfgS:
 5656              	.LVL541:
 5657              	.LFB65:
1865:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5658              		.loc 1 1865 1 is_stmt 1 view -0
 5659              		.cfi_startproc
 5660              		@ args = 0, pretend = 0, frame = 0
 5661              		@ frame_needed = 0, uses_anonymous_args = 0
1865:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5662              		.loc 1 1865 1 is_stmt 0 view .LVU1674
 5663 0000 08B5     		push	{r3, lr}
 5664              	.LCFI100:
 5665              		.cfi_def_cfa_offset 8
 5666              		.cfi_offset 3, -8
 5667              		.cfi_offset 14, -4
1866:ad5940lib/ad5940.c ****   //check parameters
 5668              		.loc 1 1866 3 is_stmt 1 view .LVU1675
1868:ad5940lib/ad5940.c ****   if(pStatCfg->StatEnable == bTRUE)
 5669              		.loc 1 1868 3 view .LVU1676
 5670              	.LVL542:
1869:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_STATSCON_STATSEN;
 5671              		.loc 1 1869 3 view .LVU1677
1869:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_STATSCON_STATSEN;
 5672              		.loc 1 1869 14 is_stmt 0 view .LVU1678
 5673 0002 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
1869:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_STATSCON_STATSEN;
 5674              		.loc 1 1869 5 view .LVU1679
 5675 0004 012B     		cmp	r3, #1
 5676 0006 0BD0     		beq	.L393
1868:ad5940lib/ad5940.c ****   if(pStatCfg->StatEnable == bTRUE)
 5677              		.loc 1 1868 11 view .LVU1680
 5678 0008 0023     		movs	r3, #0
 5679              	.L392:
 5680              	.LVL543:
1871:ad5940lib/ad5940.c ****   tempreg |= (pStatCfg->StatDev) << BITP_AFE_STATSCON_STDDEV;
 5681              		.loc 1 1871 3 is_stmt 1 view .LVU1681
1871:ad5940lib/ad5940.c ****   tempreg |= (pStatCfg->StatDev) << BITP_AFE_STATSCON_STDDEV;
 5682              		.loc 1 1871 23 is_stmt 0 view .LVU1682
 5683 000a 4168     		ldr	r1, [r0, #4]
1871:ad5940lib/ad5940.c ****   tempreg |= (pStatCfg->StatDev) << BITP_AFE_STATSCON_STDDEV;
 5684              		.loc 1 1871 11 view .LVU1683
 5685 000c 43EA0113 		orr	r3, r3, r1, lsl #4
 5686              	.LVL544:
1872:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_STATSCON, tempreg);
 5687              		.loc 1 1872 3 is_stmt 1 view .LVU1684
1872:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_STATSCON, tempreg);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 176


 5688              		.loc 1 1872 23 is_stmt 0 view .LVU1685
 5689 0010 0168     		ldr	r1, [r0]
 5690              	.LVL545:
1873:ad5940lib/ad5940.c **** }
 5691              		.loc 1 1873 3 is_stmt 1 view .LVU1686
 5692 0012 43EAC111 		orr	r1, r3, r1, lsl #7
 5693              	.LVL546:
1873:ad5940lib/ad5940.c **** }
 5694              		.loc 1 1873 3 is_stmt 0 view .LVU1687
 5695 0016 42F2C410 		movw	r0, #8644
 5696              	.LVL547:
1873:ad5940lib/ad5940.c **** }
 5697              		.loc 1 1873 3 view .LVU1688
 5698 001a FFF7FEFF 		bl	AD5940_WriteReg
 5699              	.LVL548:
1874:ad5940lib/ad5940.c **** 
 5700              		.loc 1 1874 1 view .LVU1689
 5701 001e 08BD     		pop	{r3, pc}
 5702              	.LVL549:
 5703              	.L393:
1870:ad5940lib/ad5940.c ****   tempreg |= (pStatCfg->StatSample) << BITP_AFE_STATSCON_SAMPLENUM;
 5704              		.loc 1 1870 13 view .LVU1690
 5705 0020 0123     		movs	r3, #1
 5706 0022 F2E7     		b	.L392
 5707              		.cfi_endproc
 5708              	.LFE65:
 5710              		.section	.text.AD5940_ADCRepeatCfgS,"ax",%progbits
 5711              		.align	1
 5712              		.global	AD5940_ADCRepeatCfgS
 5713              		.syntax unified
 5714              		.thumb
 5715              		.thumb_func
 5716              		.fpu fpv5-d16
 5718              	AD5940_ADCRepeatCfgS:
 5719              	.LVL550:
 5720              	.LFB66:
1882:ad5940lib/ad5940.c ****   //check parameter if(number<255)
 5721              		.loc 1 1882 1 is_stmt 1 view -0
 5722              		.cfi_startproc
 5723              		@ args = 0, pretend = 0, frame = 0
 5724              		@ frame_needed = 0, uses_anonymous_args = 0
1882:ad5940lib/ad5940.c ****   //check parameter if(number<255)
 5725              		.loc 1 1882 1 is_stmt 0 view .LVU1692
 5726 0000 08B5     		push	{r3, lr}
 5727              	.LCFI101:
 5728              		.cfi_def_cfa_offset 8
 5729              		.cfi_offset 3, -8
 5730              		.cfi_offset 14, -4
1884:ad5940lib/ad5940.c **** }
 5731              		.loc 1 1884 3 is_stmt 1 view .LVU1693
 5732 0002 0101     		lsls	r1, r0, #4
 5733 0004 42F2F010 		movw	r0, #8688
 5734              	.LVL551:
1884:ad5940lib/ad5940.c **** }
 5735              		.loc 1 1884 3 is_stmt 0 view .LVU1694
 5736 0008 FFF7FEFF 		bl	AD5940_WriteReg
 5737              	.LVL552:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 177


1885:ad5940lib/ad5940.c **** 
 5738              		.loc 1 1885 1 view .LVU1695
 5739 000c 08BD     		pop	{r3, pc}
 5740              		.cfi_endproc
 5741              	.LFE66:
 5743              		.section	.text.AD5940_DFTCfgS,"ax",%progbits
 5744              		.align	1
 5745              		.global	AD5940_DFTCfgS
 5746              		.syntax unified
 5747              		.thumb
 5748              		.thumb_func
 5749              		.fpu fpv5-d16
 5751              	AD5940_DFTCfgS:
 5752              	.LVL553:
 5753              	.LFB67:
1893:ad5940lib/ad5940.c ****   uint32_t reg_dftcon, reg_adcfilter;
 5754              		.loc 1 1893 1 is_stmt 1 view -0
 5755              		.cfi_startproc
 5756              		@ args = 0, pretend = 0, frame = 0
 5757              		@ frame_needed = 0, uses_anonymous_args = 0
1893:ad5940lib/ad5940.c ****   uint32_t reg_dftcon, reg_adcfilter;
 5758              		.loc 1 1893 1 is_stmt 0 view .LVU1697
 5759 0000 10B5     		push	{r4, lr}
 5760              	.LCFI102:
 5761              		.cfi_def_cfa_offset 8
 5762              		.cfi_offset 4, -8
 5763              		.cfi_offset 14, -4
 5764 0002 0446     		mov	r4, r0
1894:ad5940lib/ad5940.c **** 
 5765              		.loc 1 1894 3 is_stmt 1 view .LVU1698
1896:ad5940lib/ad5940.c ****   /* Deal with DFTSRC_AVG. Once average function is enabled, it's automatically set as DFT source *
 5766              		.loc 1 1896 3 view .LVU1699
 5767              	.LVL554:
1898:ad5940lib/ad5940.c ****   if(pDftCfg->DftSrc == DFTSRC_AVG)
 5768              		.loc 1 1898 3 view .LVU1700
1898:ad5940lib/ad5940.c ****   if(pDftCfg->DftSrc == DFTSRC_AVG)
 5769              		.loc 1 1898 19 is_stmt 0 view .LVU1701
 5770 0004 42F24400 		movw	r0, #8260
 5771              	.LVL555:
1898:ad5940lib/ad5940.c ****   if(pDftCfg->DftSrc == DFTSRC_AVG)
 5772              		.loc 1 1898 19 view .LVU1702
 5773 0008 FFF7FEFF 		bl	AD5940_ReadReg
 5774              	.LVL556:
1899:ad5940lib/ad5940.c ****   {
 5775              		.loc 1 1899 3 is_stmt 1 view .LVU1703
1899:ad5940lib/ad5940.c ****   {
 5776              		.loc 1 1899 13 is_stmt 0 view .LVU1704
 5777 000c 6368     		ldr	r3, [r4, #4]
1899:ad5940lib/ad5940.c ****   {
 5778              		.loc 1 1899 5 view .LVU1705
 5779 000e 032B     		cmp	r3, #3
 5780 0010 12D0     		beq	.L402
1907:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_ADCFILTERCON, reg_adcfilter);
 5781              		.loc 1 1907 5 is_stmt 1 view .LVU1706
 5782              	.LVL557:
1908:ad5940lib/ad5940.c **** 
 5783              		.loc 1 1908 5 view .LVU1707
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 178


 5784 0012 20F08001 		bic	r1, r0, #128
 5785              	.LVL558:
1908:ad5940lib/ad5940.c **** 
 5786              		.loc 1 1908 5 is_stmt 0 view .LVU1708
 5787 0016 42F24400 		movw	r0, #8260
 5788 001a FFF7FEFF 		bl	AD5940_WriteReg
 5789              	.LVL559:
1911:ad5940lib/ad5940.c ****   }
 5790              		.loc 1 1911 5 is_stmt 1 view .LVU1709
1911:ad5940lib/ad5940.c ****   }
 5791              		.loc 1 1911 27 is_stmt 0 view .LVU1710
 5792 001e 6168     		ldr	r1, [r4, #4]
1911:ad5940lib/ad5940.c ****   }
 5793              		.loc 1 1911 37 view .LVU1711
 5794 0020 0905     		lsls	r1, r1, #20
 5795              	.LVL560:
 5796              	.L399:
1914:ad5940lib/ad5940.c ****   
 5797              		.loc 1 1914 3 is_stmt 1 view .LVU1712
1914:ad5940lib/ad5940.c ****   
 5798              		.loc 1 1914 25 is_stmt 0 view .LVU1713
 5799 0022 2368     		ldr	r3, [r4]
1914:ad5940lib/ad5940.c ****   
 5800              		.loc 1 1914 14 view .LVU1714
 5801 0024 41EA0311 		orr	r1, r1, r3, lsl #4
 5802              	.LVL561:
1916:ad5940lib/ad5940.c ****     reg_dftcon |= BITM_AFE_DFTCON_HANNINGEN;
 5803              		.loc 1 1916 3 is_stmt 1 view .LVU1715
1916:ad5940lib/ad5940.c ****     reg_dftcon |= BITM_AFE_DFTCON_HANNINGEN;
 5804              		.loc 1 1916 13 is_stmt 0 view .LVU1716
 5805 0028 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
1916:ad5940lib/ad5940.c ****     reg_dftcon |= BITM_AFE_DFTCON_HANNINGEN;
 5806              		.loc 1 1916 5 view .LVU1717
 5807 002a 012B     		cmp	r3, #1
 5808 002c 0CD0     		beq	.L403
 5809              	.L400:
1918:ad5940lib/ad5940.c **** }
 5810              		.loc 1 1918 3 is_stmt 1 view .LVU1718
 5811 002e 42F2D000 		movw	r0, #8400
 5812 0032 FFF7FEFF 		bl	AD5940_WriteReg
 5813              	.LVL562:
1919:ad5940lib/ad5940.c **** 
 5814              		.loc 1 1919 1 is_stmt 0 view .LVU1719
 5815 0036 10BD     		pop	{r4, pc}
 5816              	.LVL563:
 5817              	.L402:
1901:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_ADCFILTERCON, reg_adcfilter);
 5818              		.loc 1 1901 5 is_stmt 1 view .LVU1720
1902:ad5940lib/ad5940.c ****   }
 5819              		.loc 1 1902 5 view .LVU1721
 5820 0038 40F08001 		orr	r1, r0, #128
 5821              	.LVL564:
1902:ad5940lib/ad5940.c ****   }
 5822              		.loc 1 1902 5 is_stmt 0 view .LVU1722
 5823 003c 42F24400 		movw	r0, #8260
 5824 0040 FFF7FEFF 		bl	AD5940_WriteReg
 5825              	.LVL565:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 179


1896:ad5940lib/ad5940.c ****   /* Deal with DFTSRC_AVG. Once average function is enabled, it's automatically set as DFT source *
 5826              		.loc 1 1896 14 view .LVU1723
 5827 0044 0021     		movs	r1, #0
 5828 0046 ECE7     		b	.L399
 5829              	.LVL566:
 5830              	.L403:
1917:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DFTCON, reg_dftcon);
 5831              		.loc 1 1917 5 is_stmt 1 view .LVU1724
1917:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DFTCON, reg_dftcon);
 5832              		.loc 1 1917 16 is_stmt 0 view .LVU1725
 5833 0048 41F00101 		orr	r1, r1, #1
 5834              	.LVL567:
1917:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_DFTCON, reg_dftcon);
 5835              		.loc 1 1917 16 view .LVU1726
 5836 004c EFE7     		b	.L400
 5837              		.cfi_endproc
 5838              	.LFE67:
 5840              		.section	.text.AD5940_DSPCfgS,"ax",%progbits
 5841              		.align	1
 5842              		.global	AD5940_DSPCfgS
 5843              		.syntax unified
 5844              		.thumb
 5845              		.thumb_func
 5846              		.fpu fpv5-d16
 5848              	AD5940_DSPCfgS:
 5849              	.LVL568:
 5850              	.LFB57:
1659:ad5940lib/ad5940.c ****   AD5940_ADCBaseCfgS(&pDSPCfg->ADCBaseCfg);
 5851              		.loc 1 1659 1 is_stmt 1 view -0
 5852              		.cfi_startproc
 5853              		@ args = 0, pretend = 0, frame = 0
 5854              		@ frame_needed = 0, uses_anonymous_args = 0
1659:ad5940lib/ad5940.c ****   AD5940_ADCBaseCfgS(&pDSPCfg->ADCBaseCfg);
 5855              		.loc 1 1659 1 is_stmt 0 view .LVU1728
 5856 0000 10B5     		push	{r4, lr}
 5857              	.LCFI103:
 5858              		.cfi_def_cfa_offset 8
 5859              		.cfi_offset 4, -8
 5860              		.cfi_offset 14, -4
 5861 0002 0446     		mov	r4, r0
1660:ad5940lib/ad5940.c ****   AD5940_ADCFilterCfgS(&pDSPCfg->ADCFilterCfg);
 5862              		.loc 1 1660 3 is_stmt 1 view .LVU1729
 5863 0004 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 5864              	.LVL569:
1661:ad5940lib/ad5940.c ****   AD5940_ADCDigCompCfgS(&pDSPCfg->ADCDigCompCfg);
 5865              		.loc 1 1661 3 view .LVU1730
 5866 0008 04F10C00 		add	r0, r4, #12
 5867 000c FFF7FEFF 		bl	AD5940_ADCFilterCfgS
 5868              	.LVL570:
1662:ad5940lib/ad5940.c ****   AD5940_DFTCfgS(&pDSPCfg->DftCfg);
 5869              		.loc 1 1662 3 view .LVU1731
 5870 0010 04F12000 		add	r0, r4, #32
 5871 0014 FFF7FEFF 		bl	AD5940_ADCDigCompCfgS
 5872              	.LVL571:
1663:ad5940lib/ad5940.c ****   AD5940_StatisticCfgS(&pDSPCfg->StatCfg);
 5873              		.loc 1 1663 3 view .LVU1732
 5874 0018 04F12800 		add	r0, r4, #40
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 180


 5875 001c FFF7FEFF 		bl	AD5940_DFTCfgS
 5876              	.LVL572:
1664:ad5940lib/ad5940.c **** }
 5877              		.loc 1 1664 3 view .LVU1733
 5878 0020 04F13400 		add	r0, r4, #52
 5879 0024 FFF7FEFF 		bl	AD5940_StatisticCfgS
 5880              	.LVL573:
1665:ad5940lib/ad5940.c **** 
 5881              		.loc 1 1665 1 is_stmt 0 view .LVU1734
 5882 0028 10BD     		pop	{r4, pc}
1665:ad5940lib/ad5940.c **** 
 5883              		.loc 1 1665 1 view .LVU1735
 5884              		.cfi_endproc
 5885              	.LFE57:
 5887              		.section	.text.AD5940_FIFOCfg,"ax",%progbits
 5888              		.align	1
 5889              		.global	AD5940_FIFOCfg
 5890              		.syntax unified
 5891              		.thumb
 5892              		.thumb_func
 5893              		.fpu fpv5-d16
 5895              	AD5940_FIFOCfg:
 5896              	.LVL574:
 5897              	.LFB68:
1940:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5898              		.loc 1 1940 1 is_stmt 1 view -0
 5899              		.cfi_startproc
 5900              		@ args = 0, pretend = 0, frame = 0
 5901              		@ frame_needed = 0, uses_anonymous_args = 0
1940:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5902              		.loc 1 1940 1 is_stmt 0 view .LVU1737
 5903 0000 10B5     		push	{r4, lr}
 5904              	.LCFI104:
 5905              		.cfi_def_cfa_offset 8
 5906              		.cfi_offset 4, -8
 5907              		.cfi_offset 14, -4
 5908 0002 0446     		mov	r4, r0
1941:ad5940lib/ad5940.c ****   //check parameters
 5909              		.loc 1 1941 3 is_stmt 1 view .LVU1738
1943:ad5940lib/ad5940.c ****   /* CMDDATACON register. Configure this firstly */
 5910              		.loc 1 1943 3 view .LVU1739
 5911 0004 0021     		movs	r1, #0
 5912 0006 42F20800 		movw	r0, #8200
 5913              	.LVL575:
1943:ad5940lib/ad5940.c ****   /* CMDDATACON register. Configure this firstly */
 5914              		.loc 1 1943 3 is_stmt 0 view .LVU1740
 5915 000a FFF7FEFF 		bl	AD5940_WriteReg
 5916              	.LVL576:
1945:ad5940lib/ad5940.c ****   tempreg &= BITM_AFE_CMDDATACON_CMD_MEM_SEL|BITM_AFE_CMDDATACON_CMDMEMMDE; /* Keep sequencer memor
 5917              		.loc 1 1945 3 is_stmt 1 view .LVU1741
1945:ad5940lib/ad5940.c ****   tempreg &= BITM_AFE_CMDDATACON_CMD_MEM_SEL|BITM_AFE_CMDDATACON_CMDMEMMDE; /* Keep sequencer memor
 5918              		.loc 1 1945 13 is_stmt 0 view .LVU1742
 5919 000e 42F2D810 		movw	r0, #8664
 5920 0012 FFF7FEFF 		bl	AD5940_ReadReg
 5921              	.LVL577:
1946:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOMode << BITP_AFE_CMDDATACON_DATAMEMMDE; 				  /* Data FIFO mode: stream 
 5922              		.loc 1 1946 3 is_stmt 1 view .LVU1743
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 181


1946:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOMode << BITP_AFE_CMDDATACON_DATAMEMMDE; 				  /* Data FIFO mode: stream 
 5923              		.loc 1 1946 11 is_stmt 0 view .LVU1744
 5924 0016 00F03F00 		and	r0, r0, #63
 5925              	.LVL578:
1947:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOSize << BITP_AFE_CMDDATACON_DATA_MEM_SEL;  		  /* Data FIFO memory size 
 5926              		.loc 1 1947 3 is_stmt 1 view .LVU1745
1947:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOSize << BITP_AFE_CMDDATACON_DATA_MEM_SEL;  		  /* Data FIFO memory size 
 5927              		.loc 1 1947 22 is_stmt 0 view .LVU1746
 5928 001a 6168     		ldr	r1, [r4, #4]
1947:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOSize << BITP_AFE_CMDDATACON_DATA_MEM_SEL;  		  /* Data FIFO memory size 
 5929              		.loc 1 1947 11 view .LVU1747
 5930 001c 40EA4120 		orr	r0, r0, r1, lsl #9
 5931              	.LVL579:
1948:ad5940lib/ad5940.c ****   /* The reset memory can be used for sequencer, configure it by function AD5940_SEQCfg() */
 5932              		.loc 1 1948 3 is_stmt 1 view .LVU1748
1948:ad5940lib/ad5940.c ****   /* The reset memory can be used for sequencer, configure it by function AD5940_SEQCfg() */
 5933              		.loc 1 1948 22 is_stmt 0 view .LVU1749
 5934 0020 A168     		ldr	r1, [r4, #8]
 5935              	.LVL580:
1950:ad5940lib/ad5940.c **** 
 5936              		.loc 1 1950 3 is_stmt 1 view .LVU1750
 5937 0022 40EA8111 		orr	r1, r0, r1, lsl #6
 5938              	.LVL581:
1950:ad5940lib/ad5940.c **** 
 5939              		.loc 1 1950 3 is_stmt 0 view .LVU1751
 5940 0026 42F2D810 		movw	r0, #8664
 5941 002a FFF7FEFF 		bl	AD5940_WriteReg
 5942              	.LVL582:
1953:ad5940lib/ad5940.c ****   /* FIFOCON register. Final step is to enable FIFO */
 5943              		.loc 1 1953 3 is_stmt 1 view .LVU1752
1953:ad5940lib/ad5940.c ****   /* FIFOCON register. Final step is to enable FIFO */
 5944              		.loc 1 1953 50 is_stmt 0 view .LVU1753
 5945 002e 2169     		ldr	r1, [r4, #16]
1953:ad5940lib/ad5940.c ****   /* FIFOCON register. Final step is to enable FIFO */
 5946              		.loc 1 1953 3 view .LVU1754
 5947 0030 0904     		lsls	r1, r1, #16
 5948 0032 42F2E010 		movw	r0, #8672
 5949 0036 FFF7FEFF 		bl	AD5940_WriteReg
 5950              	.LVL583:
1955:ad5940lib/ad5940.c ****   if(pFifoCfg->FIFOEn == bTRUE)
 5951              		.loc 1 1955 3 is_stmt 1 view .LVU1755
1956:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;																/* Enable FIFO after everything set. */
 5952              		.loc 1 1956 3 view .LVU1756
1956:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;																/* Enable FIFO after everything set. */
 5953              		.loc 1 1956 14 is_stmt 0 view .LVU1757
 5954 003a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
1956:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;																/* Enable FIFO after everything set. */
 5955              		.loc 1 1956 5 view .LVU1758
 5956 003c 012B     		cmp	r3, #1
 5957 003e 08D0     		beq	.L408
1955:ad5940lib/ad5940.c ****   if(pFifoCfg->FIFOEn == bTRUE)
 5958              		.loc 1 1955 11 view .LVU1759
 5959 0040 0023     		movs	r3, #0
 5960              	.L407:
 5961              	.LVL584:
1958:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, tempreg);
 5962              		.loc 1 1958 3 is_stmt 1 view .LVU1760
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 182


1958:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, tempreg);
 5963              		.loc 1 1958 22 is_stmt 0 view .LVU1761
 5964 0042 E168     		ldr	r1, [r4, #12]
 5965              	.LVL585:
1959:ad5940lib/ad5940.c **** }
 5966              		.loc 1 1959 3 is_stmt 1 view .LVU1762
 5967 0044 43EA4131 		orr	r1, r3, r1, lsl #13
 5968              	.LVL586:
1959:ad5940lib/ad5940.c **** }
 5969              		.loc 1 1959 3 is_stmt 0 view .LVU1763
 5970 0048 42F20800 		movw	r0, #8200
 5971 004c FFF7FEFF 		bl	AD5940_WriteReg
 5972              	.LVL587:
1960:ad5940lib/ad5940.c **** 
 5973              		.loc 1 1960 1 view .LVU1764
 5974 0050 10BD     		pop	{r4, pc}
 5975              	.LVL588:
 5976              	.L408:
1957:ad5940lib/ad5940.c ****   tempreg |= pFifoCfg->FIFOSrc << BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 5977              		.loc 1 1957 13 view .LVU1765
 5978 0052 4FF40063 		mov	r3, #2048
 5979 0056 F4E7     		b	.L407
 5980              		.cfi_endproc
 5981              	.LFE68:
 5983              		.section	.text.AD5940_FIFOGetCfg,"ax",%progbits
 5984              		.align	1
 5985              		.global	AD5940_FIFOGetCfg
 5986              		.syntax unified
 5987              		.thumb
 5988              		.thumb_func
 5989              		.fpu fpv5-d16
 5991              	AD5940_FIFOGetCfg:
 5992              	.LVL589:
 5993              	.LFB69:
1968:ad5940lib/ad5940.c ****   uint32_t tempreg;
 5994              		.loc 1 1968 1 is_stmt 1 view -0
 5995              		.cfi_startproc
 5996              		@ args = 0, pretend = 0, frame = 0
 5997              		@ frame_needed = 0, uses_anonymous_args = 0
1969:ad5940lib/ad5940.c ****   //check parameters
 5998              		.loc 1 1969 3 view .LVU1767
1971:ad5940lib/ad5940.c ****   /* CMDDATACON register. */
 5999              		.loc 1 1971 3 view .LVU1768
1971:ad5940lib/ad5940.c ****   /* CMDDATACON register. */
 6000              		.loc 1 1971 5 is_stmt 0 view .LVU1769
 6001 0000 F0B1     		cbz	r0, .L412
1968:ad5940lib/ad5940.c ****   uint32_t tempreg;
 6002              		.loc 1 1968 1 view .LVU1770
 6003 0002 10B5     		push	{r4, lr}
 6004              	.LCFI105:
 6005              		.cfi_def_cfa_offset 8
 6006              		.cfi_offset 4, -8
 6007              		.cfi_offset 14, -4
 6008 0004 0446     		mov	r4, r0
1973:ad5940lib/ad5940.c ****   pFifoCfg->FIFOMode = (tempreg&BITM_AFE_CMDDATACON_DATAMEMMDE)>>BITP_AFE_CMDDATACON_DATAMEMMDE;
 6009              		.loc 1 1973 3 is_stmt 1 view .LVU1771
1973:ad5940lib/ad5940.c ****   pFifoCfg->FIFOMode = (tempreg&BITM_AFE_CMDDATACON_DATAMEMMDE)>>BITP_AFE_CMDDATACON_DATAMEMMDE;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 183


 6010              		.loc 1 1973 13 is_stmt 0 view .LVU1772
 6011 0006 42F2D810 		movw	r0, #8664
 6012              	.LVL590:
1973:ad5940lib/ad5940.c ****   pFifoCfg->FIFOMode = (tempreg&BITM_AFE_CMDDATACON_DATAMEMMDE)>>BITP_AFE_CMDDATACON_DATAMEMMDE;
 6013              		.loc 1 1973 13 view .LVU1773
 6014 000a FFF7FEFF 		bl	AD5940_ReadReg
 6015              	.LVL591:
1974:ad5940lib/ad5940.c ****   pFifoCfg->FIFOSize = (tempreg&BITM_AFE_CMDDATACON_DATA_MEM_SEL)>>BITP_AFE_CMDDATACON_DATA_MEM_SEL
 6016              		.loc 1 1974 3 is_stmt 1 view .LVU1774
1974:ad5940lib/ad5940.c ****   pFifoCfg->FIFOSize = (tempreg&BITM_AFE_CMDDATACON_DATA_MEM_SEL)>>BITP_AFE_CMDDATACON_DATA_MEM_SEL
 6017              		.loc 1 1974 64 is_stmt 0 view .LVU1775
 6018 000e C0F34223 		ubfx	r3, r0, #9, #3
1974:ad5940lib/ad5940.c ****   pFifoCfg->FIFOSize = (tempreg&BITM_AFE_CMDDATACON_DATA_MEM_SEL)>>BITP_AFE_CMDDATACON_DATA_MEM_SEL
 6019              		.loc 1 1974 22 view .LVU1776
 6020 0012 6360     		str	r3, [r4, #4]
1975:ad5940lib/ad5940.c **** 
 6021              		.loc 1 1975 3 is_stmt 1 view .LVU1777
1975:ad5940lib/ad5940.c **** 
 6022              		.loc 1 1975 66 is_stmt 0 view .LVU1778
 6023 0014 C0F38210 		ubfx	r0, r0, #6, #3
 6024              	.LVL592:
1975:ad5940lib/ad5940.c **** 
 6025              		.loc 1 1975 22 view .LVU1779
 6026 0018 A060     		str	r0, [r4, #8]
1978:ad5940lib/ad5940.c ****   pFifoCfg->FIFOThresh = (tempreg&BITM_AFE_DATAFIFOTHRES_HIGHTHRES)>>BITP_AFE_DATAFIFOTHRES_HIGHTHR
 6027              		.loc 1 1978 3 is_stmt 1 view .LVU1780
1978:ad5940lib/ad5940.c ****   pFifoCfg->FIFOThresh = (tempreg&BITM_AFE_DATAFIFOTHRES_HIGHTHRES)>>BITP_AFE_DATAFIFOTHRES_HIGHTHR
 6028              		.loc 1 1978 13 is_stmt 0 view .LVU1781
 6029 001a 42F2E010 		movw	r0, #8672
 6030 001e FFF7FEFF 		bl	AD5940_ReadReg
 6031              	.LVL593:
1979:ad5940lib/ad5940.c ****   /* FIFOCON register. */
 6032              		.loc 1 1979 3 is_stmt 1 view .LVU1782
1979:ad5940lib/ad5940.c ****   /* FIFOCON register. */
 6033              		.loc 1 1979 68 is_stmt 0 view .LVU1783
 6034 0022 C0F30A40 		ubfx	r0, r0, #16, #11
 6035              	.LVL594:
1979:ad5940lib/ad5940.c ****   /* FIFOCON register. */
 6036              		.loc 1 1979 24 view .LVU1784
 6037 0026 2061     		str	r0, [r4, #16]
1981:ad5940lib/ad5940.c ****   pFifoCfg->FIFOEn = (tempreg&BITM_AFE_FIFOCON_DATAFIFOEN)?bTRUE:bFALSE;
 6038              		.loc 1 1981 3 is_stmt 1 view .LVU1785
1981:ad5940lib/ad5940.c ****   pFifoCfg->FIFOEn = (tempreg&BITM_AFE_FIFOCON_DATAFIFOEN)?bTRUE:bFALSE;
 6039              		.loc 1 1981 13 is_stmt 0 view .LVU1786
 6040 0028 42F20800 		movw	r0, #8200
 6041 002c FFF7FEFF 		bl	AD5940_ReadReg
 6042              	.LVL595:
1982:ad5940lib/ad5940.c ****   pFifoCfg->FIFOSrc = (tempreg&BITM_AFE_FIFOCON_DATAFIFOSRCSEL)>>BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 6043              		.loc 1 1982 3 is_stmt 1 view .LVU1787
1982:ad5940lib/ad5940.c ****   pFifoCfg->FIFOSrc = (tempreg&BITM_AFE_FIFOCON_DATAFIFOSRCSEL)>>BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 6044              		.loc 1 1982 65 is_stmt 0 view .LVU1788
 6045 0030 C0F3C023 		ubfx	r3, r0, #11, #1
1982:ad5940lib/ad5940.c ****   pFifoCfg->FIFOSrc = (tempreg&BITM_AFE_FIFOCON_DATAFIFOSRCSEL)>>BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 6046              		.loc 1 1982 20 view .LVU1789
 6047 0034 2370     		strb	r3, [r4]
1983:ad5940lib/ad5940.c **** 
 6048              		.loc 1 1983 3 is_stmt 1 view .LVU1790
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 184


1983:ad5940lib/ad5940.c **** 
 6049              		.loc 1 1983 64 is_stmt 0 view .LVU1791
 6050 0036 C0F34230 		ubfx	r0, r0, #13, #3
 6051              	.LVL596:
1983:ad5940lib/ad5940.c **** 
 6052              		.loc 1 1983 21 view .LVU1792
 6053 003a E060     		str	r0, [r4, #12]
1985:ad5940lib/ad5940.c **** }
 6054              		.loc 1 1985 3 is_stmt 1 view .LVU1793
1985:ad5940lib/ad5940.c **** }
 6055              		.loc 1 1985 10 is_stmt 0 view .LVU1794
 6056 003c 0020     		movs	r0, #0
1986:ad5940lib/ad5940.c **** 
 6057              		.loc 1 1986 1 view .LVU1795
 6058 003e 10BD     		pop	{r4, pc}
 6059              	.LVL597:
 6060              	.L412:
 6061              	.LCFI106:
 6062              		.cfi_def_cfa_offset 0
 6063              		.cfi_restore 4
 6064              		.cfi_restore 14
1971:ad5940lib/ad5940.c ****   /* CMDDATACON register. */
 6065              		.loc 1 1971 31 view .LVU1796
 6066 0040 6FF00200 		mvn	r0, #2
 6067              	.LVL598:
1986:ad5940lib/ad5940.c **** 
 6068              		.loc 1 1986 1 view .LVU1797
 6069 0044 7047     		bx	lr
 6070              		.cfi_endproc
 6071              	.LFE69:
 6073              		.section	.text.AD5940_FIFOCtrlS,"ax",%progbits
 6074              		.align	1
 6075              		.global	AD5940_FIFOCtrlS
 6076              		.syntax unified
 6077              		.thumb
 6078              		.thumb_func
 6079              		.fpu fpv5-d16
 6081              	AD5940_FIFOCtrlS:
 6082              	.LVL599:
 6083              	.LFB70:
2000:ad5940lib/ad5940.c ****   uint32_t tempreg;
 6084              		.loc 1 2000 1 is_stmt 1 view -0
 6085              		.cfi_startproc
 6086              		@ args = 0, pretend = 0, frame = 0
 6087              		@ frame_needed = 0, uses_anonymous_args = 0
2000:ad5940lib/ad5940.c ****   uint32_t tempreg;
 6088              		.loc 1 2000 1 is_stmt 0 view .LVU1799
 6089 0000 08B5     		push	{r3, lr}
 6090              	.LCFI107:
 6091              		.cfi_def_cfa_offset 8
 6092              		.cfi_offset 3, -8
 6093              		.cfi_offset 14, -4
2001:ad5940lib/ad5940.c **** 
 6094              		.loc 1 2001 3 is_stmt 1 view .LVU1800
2003:ad5940lib/ad5940.c ****   if(FifoEn == bTRUE)
 6095              		.loc 1 2003 3 view .LVU1801
 6096              	.LVL600:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 185


2004:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;
 6097              		.loc 1 2004 3 view .LVU1802
2004:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_FIFOCON_DATAFIFOEN;
 6098              		.loc 1 2004 5 is_stmt 0 view .LVU1803
 6099 0002 0129     		cmp	r1, #1
 6100 0004 07D0     		beq	.L419
2003:ad5940lib/ad5940.c ****   if(FifoEn == bTRUE)
 6101              		.loc 1 2003 11 view .LVU1804
 6102 0006 0021     		movs	r1, #0
 6103              	.LVL601:
 6104              	.L418:
2006:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, tempreg);
 6105              		.loc 1 2006 3 is_stmt 1 view .LVU1805
2007:ad5940lib/ad5940.c **** }
 6106              		.loc 1 2007 3 view .LVU1806
 6107 0008 41EA4031 		orr	r1, r1, r0, lsl #13
 6108              	.LVL602:
2007:ad5940lib/ad5940.c **** }
 6109              		.loc 1 2007 3 is_stmt 0 view .LVU1807
 6110 000c 42F20800 		movw	r0, #8200
 6111              	.LVL603:
2007:ad5940lib/ad5940.c **** }
 6112              		.loc 1 2007 3 view .LVU1808
 6113 0010 FFF7FEFF 		bl	AD5940_WriteReg
 6114              	.LVL604:
2008:ad5940lib/ad5940.c **** 
 6115              		.loc 1 2008 1 view .LVU1809
 6116 0014 08BD     		pop	{r3, pc}
 6117              	.LVL605:
 6118              	.L419:
2005:ad5940lib/ad5940.c ****   tempreg |= FifoSrc << BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 6119              		.loc 1 2005 13 view .LVU1810
 6120 0016 4FF40061 		mov	r1, #2048
 6121              	.LVL606:
2005:ad5940lib/ad5940.c ****   tempreg |= FifoSrc << BITP_AFE_FIFOCON_DATAFIFOSRCSEL;
 6122              		.loc 1 2005 13 view .LVU1811
 6123 001a F5E7     		b	.L418
 6124              		.cfi_endproc
 6125              	.LFE70:
 6127              		.section	.text.AD5940_FIFOThrshSet,"ax",%progbits
 6128              		.align	1
 6129              		.global	AD5940_FIFOThrshSet
 6130              		.syntax unified
 6131              		.thumb
 6132              		.thumb_func
 6133              		.fpu fpv5-d16
 6135              	AD5940_FIFOThrshSet:
 6136              	.LVL607:
 6137              	.LFB71:
2016:ad5940lib/ad5940.c ****   /* FIFO Threshold */
 6138              		.loc 1 2016 1 is_stmt 1 view -0
 6139              		.cfi_startproc
 6140              		@ args = 0, pretend = 0, frame = 0
 6141              		@ frame_needed = 0, uses_anonymous_args = 0
2016:ad5940lib/ad5940.c ****   /* FIFO Threshold */
 6142              		.loc 1 2016 1 is_stmt 0 view .LVU1813
 6143 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 186


 6144              	.LCFI108:
 6145              		.cfi_def_cfa_offset 8
 6146              		.cfi_offset 3, -8
 6147              		.cfi_offset 14, -4
2018:ad5940lib/ad5940.c **** }
 6148              		.loc 1 2018 3 is_stmt 1 view .LVU1814
 6149 0002 0104     		lsls	r1, r0, #16
 6150 0004 42F2E010 		movw	r0, #8672
 6151              	.LVL608:
2018:ad5940lib/ad5940.c **** }
 6152              		.loc 1 2018 3 is_stmt 0 view .LVU1815
 6153 0008 FFF7FEFF 		bl	AD5940_WriteReg
 6154              	.LVL609:
2019:ad5940lib/ad5940.c **** 
 6155              		.loc 1 2019 1 view .LVU1816
 6156 000c 08BD     		pop	{r3, pc}
 6157              		.cfi_endproc
 6158              	.LFE71:
 6160              		.section	.text.AD5940_FIFOGetCnt,"ax",%progbits
 6161              		.align	1
 6162              		.global	AD5940_FIFOGetCnt
 6163              		.syntax unified
 6164              		.thumb
 6165              		.thumb_func
 6166              		.fpu fpv5-d16
 6168              	AD5940_FIFOGetCnt:
 6169              	.LFB72:
2026:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AFE_FIFOCNTSTA) >> BITP_AFE_FIFOCNTSTA_DATAFIFOCNTSTA;
 6170              		.loc 1 2026 1 is_stmt 1 view -0
 6171              		.cfi_startproc
 6172              		@ args = 0, pretend = 0, frame = 0
 6173              		@ frame_needed = 0, uses_anonymous_args = 0
 6174 0000 08B5     		push	{r3, lr}
 6175              	.LCFI109:
 6176              		.cfi_def_cfa_offset 8
 6177              		.cfi_offset 3, -8
 6178              		.cfi_offset 14, -4
2027:ad5940lib/ad5940.c **** }
 6179              		.loc 1 2027 3 view .LVU1818
2027:ad5940lib/ad5940.c **** }
 6180              		.loc 1 2027 10 is_stmt 0 view .LVU1819
 6181 0002 4FF40850 		mov	r0, #8704
 6182 0006 FFF7FEFF 		bl	AD5940_ReadReg
 6183              	.LVL610:
2028:ad5940lib/ad5940.c **** 
 6184              		.loc 1 2028 1 view .LVU1820
 6185 000a 000C     		lsrs	r0, r0, #16
 6186 000c 08BD     		pop	{r3, pc}
 6187              		.cfi_endproc
 6188              	.LFE72:
 6190              		.section	.text.AD5940_SEQCfg,"ax",%progbits
 6191              		.align	1
 6192              		.global	AD5940_SEQCfg
 6193              		.syntax unified
 6194              		.thumb
 6195              		.thumb_func
 6196              		.fpu fpv5-d16
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 187


 6198              	AD5940_SEQCfg:
 6199              	.LVL611:
 6200              	.LFB73:
2038:ad5940lib/ad5940.c ****   /* check parameters */
 6201              		.loc 1 2038 1 is_stmt 1 view -0
 6202              		.cfi_startproc
 6203              		@ args = 0, pretend = 0, frame = 0
 6204              		@ frame_needed = 0, uses_anonymous_args = 0
2038:ad5940lib/ad5940.c ****   /* check parameters */
 6205              		.loc 1 2038 1 is_stmt 0 view .LVU1822
 6206 0000 38B5     		push	{r3, r4, r5, lr}
 6207              	.LCFI110:
 6208              		.cfi_def_cfa_offset 16
 6209              		.cfi_offset 3, -16
 6210              		.cfi_offset 4, -12
 6211              		.cfi_offset 5, -8
 6212              		.cfi_offset 14, -4
 6213 0002 0446     		mov	r4, r0
2040:ad5940lib/ad5940.c ****   
 6214              		.loc 1 2040 3 is_stmt 1 view .LVU1823
2042:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, 0);  /* Disable FIFO before changing memory configuration */
 6215              		.loc 1 2042 3 view .LVU1824
2042:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, 0);  /* Disable FIFO before changing memory configuration */
 6216              		.loc 1 2042 13 is_stmt 0 view .LVU1825
 6217 0004 42F20800 		movw	r0, #8200
 6218              	.LVL612:
2042:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, 0);  /* Disable FIFO before changing memory configuration */
 6219              		.loc 1 2042 13 view .LVU1826
 6220 0008 FFF7FEFF 		bl	AD5940_ReadReg
 6221              	.LVL613:
 6222 000c 0546     		mov	r5, r0
 6223              	.LVL614:
2043:ad5940lib/ad5940.c ****   /* Configure CMDDATACON register */
 6224              		.loc 1 2043 3 is_stmt 1 view .LVU1827
 6225 000e 0021     		movs	r1, #0
 6226 0010 42F20800 		movw	r0, #8200
 6227              	.LVL615:
2043:ad5940lib/ad5940.c ****   /* Configure CMDDATACON register */
 6228              		.loc 1 2043 3 is_stmt 0 view .LVU1828
 6229 0014 FFF7FEFF 		bl	AD5940_WriteReg
 6230              	.LVL616:
2045:ad5940lib/ad5940.c ****   tempreg &= ~(BITM_AFE_CMDDATACON_CMDMEMMDE|BITM_AFE_CMDDATACON_CMD_MEM_SEL);  /* Clear settings f
 6231              		.loc 1 2045 3 is_stmt 1 view .LVU1829
2045:ad5940lib/ad5940.c ****   tempreg &= ~(BITM_AFE_CMDDATACON_CMDMEMMDE|BITM_AFE_CMDDATACON_CMD_MEM_SEL);  /* Clear settings f
 6232              		.loc 1 2045 13 is_stmt 0 view .LVU1830
 6233 0018 42F2D810 		movw	r0, #8664
 6234 001c FFF7FEFF 		bl	AD5940_ReadReg
 6235              	.LVL617:
2046:ad5940lib/ad5940.c ****   tempreg |= (1L) << BITP_AFE_CMDDATACON_CMDMEMMDE;    										  /* Sequencer is always in memory
 6236              		.loc 1 2046 3 is_stmt 1 view .LVU1831
2046:ad5940lib/ad5940.c ****   tempreg |= (1L) << BITP_AFE_CMDDATACON_CMDMEMMDE;    										  /* Sequencer is always in memory
 6237              		.loc 1 2046 11 is_stmt 0 view .LVU1832
 6238 0020 20F03F03 		bic	r3, r0, #63
 6239              	.LVL618:
2047:ad5940lib/ad5940.c ****   tempreg |= (pSeqCfg->SeqMemSize) << BITP_AFE_CMDDATACON_CMD_MEM_SEL; 	
 6240              		.loc 1 2047 3 is_stmt 1 view .LVU1833
2047:ad5940lib/ad5940.c ****   tempreg |= (pSeqCfg->SeqMemSize) << BITP_AFE_CMDDATACON_CMD_MEM_SEL; 	
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 188


 6241              		.loc 1 2047 11 is_stmt 0 view .LVU1834
 6242 0024 43F00803 		orr	r3, r3, #8
 6243              	.LVL619:
2048:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CMDDATACON, tempreg);
 6244              		.loc 1 2048 3 is_stmt 1 view .LVU1835
2048:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CMDDATACON, tempreg);
 6245              		.loc 1 2048 36 is_stmt 0 view .LVU1836
 6246 0028 2168     		ldr	r1, [r4]
 6247              	.LVL620:
2049:ad5940lib/ad5940.c **** 
 6248              		.loc 1 2049 3 is_stmt 1 view .LVU1837
 6249 002a 1943     		orrs	r1, r1, r3
 6250              	.LVL621:
2049:ad5940lib/ad5940.c **** 
 6251              		.loc 1 2049 3 is_stmt 0 view .LVU1838
 6252 002c 42F2D810 		movw	r0, #8664
 6253 0030 FFF7FEFF 		bl	AD5940_WriteReg
 6254              	.LVL622:
2051:ad5940lib/ad5940.c ****   {
 6255              		.loc 1 2051 3 is_stmt 1 view .LVU1839
2051:ad5940lib/ad5940.c ****   {
 6256              		.loc 1 2051 13 is_stmt 0 view .LVU1840
 6257 0034 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
2051:ad5940lib/ad5940.c ****   {
 6258              		.loc 1 2051 5 view .LVU1841
 6259 0036 83B9     		cbnz	r3, .L430
 6260              	.L426:
2056:ad5940lib/ad5940.c ****   if(pSeqCfg->SeqEnable == bTRUE)
 6261              		.loc 1 2056 3 is_stmt 1 view .LVU1842
 6262              	.LVL623:
2057:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
 6263              		.loc 1 2057 3 view .LVU1843
2057:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
 6264              		.loc 1 2057 13 is_stmt 0 view .LVU1844
 6265 0038 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
2057:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
 6266              		.loc 1 2057 5 view .LVU1845
 6267 003a 012B     		cmp	r3, #1
 6268 003c 18D0     		beq	.L428
2056:ad5940lib/ad5940.c ****   if(pSeqCfg->SeqEnable == bTRUE)
 6269              		.loc 1 2056 11 view .LVU1846
 6270 003e 0023     		movs	r3, #0
 6271              	.L427:
 6272              	.LVL624:
2059:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQCON, tempreg);
 6273              		.loc 1 2059 3 is_stmt 1 view .LVU1847
2059:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQCON, tempreg);
 6274              		.loc 1 2059 22 is_stmt 0 view .LVU1848
 6275 0040 A168     		ldr	r1, [r4, #8]
 6276              	.LVL625:
2060:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, fifocon);  /* restore FIFO configuration */
 6277              		.loc 1 2060 3 is_stmt 1 view .LVU1849
 6278 0042 43EA0121 		orr	r1, r3, r1, lsl #8
 6279              	.LVL626:
2060:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_FIFOCON, fifocon);  /* restore FIFO configuration */
 6280              		.loc 1 2060 3 is_stmt 0 view .LVU1850
 6281 0046 42F20400 		movw	r0, #8196
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 189


 6282 004a FFF7FEFF 		bl	AD5940_WriteReg
 6283              	.LVL627:
2061:ad5940lib/ad5940.c **** 
 6284              		.loc 1 2061 3 is_stmt 1 view .LVU1851
 6285 004e 2946     		mov	r1, r5
 6286 0050 42F20800 		movw	r0, #8200
 6287 0054 FFF7FEFF 		bl	AD5940_WriteReg
 6288              	.LVL628:
2069:ad5940lib/ad5940.c **** /**
 6289              		.loc 1 2069 1 is_stmt 0 view .LVU1852
 6290 0058 38BD     		pop	{r3, r4, r5, pc}
 6291              	.LVL629:
 6292              	.L430:
2053:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_SEQCNT, 0);  /* When sequencer is disabled, any write to SEQCNT will cl
 6293              		.loc 1 2053 5 is_stmt 1 view .LVU1853
 6294 005a 0021     		movs	r1, #0
 6295 005c 42F20400 		movw	r0, #8196
 6296 0060 FFF7FEFF 		bl	AD5940_WriteReg
 6297              	.LVL630:
2054:ad5940lib/ad5940.c ****   }
 6298              		.loc 1 2054 5 view .LVU1854
 6299 0064 0021     		movs	r1, #0
 6300 0066 42F26400 		movw	r0, #8292
 6301 006a FFF7FEFF 		bl	AD5940_WriteReg
 6302              	.LVL631:
 6303 006e E3E7     		b	.L426
 6304              	.LVL632:
 6305              	.L428:
2058:ad5940lib/ad5940.c ****   tempreg |= (pSeqCfg->SeqWrTimer) << BITP_AFE_SEQCON_SEQWRTMR;
 6306              		.loc 1 2058 13 is_stmt 0 view .LVU1855
 6307 0070 0123     		movs	r3, #1
 6308 0072 E5E7     		b	.L427
 6309              		.cfi_endproc
 6310              	.LFE73:
 6312              		.section	.text.AD5940_SEQGetCfg,"ax",%progbits
 6313              		.align	1
 6314              		.global	AD5940_SEQGetCfg
 6315              		.syntax unified
 6316              		.thumb
 6317              		.thumb_func
 6318              		.fpu fpv5-d16
 6320              	AD5940_SEQGetCfg:
 6321              	.LVL633:
 6322              	.LFB74:
2076:ad5940lib/ad5940.c ****   /* check parameters */
 6323              		.loc 1 2076 1 is_stmt 1 view -0
 6324              		.cfi_startproc
 6325              		@ args = 0, pretend = 0, frame = 0
 6326              		@ frame_needed = 0, uses_anonymous_args = 0
2078:ad5940lib/ad5940.c ****   if(pSeqCfg == NULL)
 6327              		.loc 1 2078 3 view .LVU1857
2079:ad5940lib/ad5940.c ****     return AD5940ERR_NULLP;
 6328              		.loc 1 2079 3 view .LVU1858
2079:ad5940lib/ad5940.c ****     return AD5940ERR_NULLP;
 6329              		.loc 1 2079 5 is_stmt 0 view .LVU1859
 6330 0000 B0B1     		cbz	r0, .L433
2076:ad5940lib/ad5940.c ****   /* check parameters */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 190


 6331              		.loc 1 2076 1 view .LVU1860
 6332 0002 38B5     		push	{r3, r4, r5, lr}
 6333              	.LCFI111:
 6334              		.cfi_def_cfa_offset 16
 6335              		.cfi_offset 3, -16
 6336              		.cfi_offset 4, -12
 6337              		.cfi_offset 5, -8
 6338              		.cfi_offset 14, -4
 6339 0004 0546     		mov	r5, r0
2082:ad5940lib/ad5940.c ****   pSeqCfg->SeqMemSize = (tempreg&BITM_AFE_CMDDATACON_CMD_MEM_SEL) >> BITP_AFE_CMDDATACON_CMD_MEM_SE
 6340              		.loc 1 2082 3 is_stmt 1 view .LVU1861
2082:ad5940lib/ad5940.c ****   pSeqCfg->SeqMemSize = (tempreg&BITM_AFE_CMDDATACON_CMD_MEM_SEL) >> BITP_AFE_CMDDATACON_CMD_MEM_SE
 6341              		.loc 1 2082 13 is_stmt 0 view .LVU1862
 6342 0006 42F2D810 		movw	r0, #8664
 6343              	.LVL634:
2082:ad5940lib/ad5940.c ****   pSeqCfg->SeqMemSize = (tempreg&BITM_AFE_CMDDATACON_CMD_MEM_SEL) >> BITP_AFE_CMDDATACON_CMD_MEM_SE
 6344              		.loc 1 2082 13 view .LVU1863
 6345 000a FFF7FEFF 		bl	AD5940_ReadReg
 6346              	.LVL635:
2083:ad5940lib/ad5940.c ****   pSeqCfg->SeqCntCRCClr = bFALSE; /* Has no meaning */
 6347              		.loc 1 2083 3 is_stmt 1 view .LVU1864
2083:ad5940lib/ad5940.c ****   pSeqCfg->SeqCntCRCClr = bFALSE; /* Has no meaning */
 6348              		.loc 1 2083 67 is_stmt 0 view .LVU1865
 6349 000e 00F00700 		and	r0, r0, #7
 6350              	.LVL636:
2083:ad5940lib/ad5940.c ****   pSeqCfg->SeqCntCRCClr = bFALSE; /* Has no meaning */
 6351              		.loc 1 2083 23 view .LVU1866
 6352 0012 2860     		str	r0, [r5]
2084:ad5940lib/ad5940.c ****   /* SEQCON register */
 6353              		.loc 1 2084 3 is_stmt 1 view .LVU1867
2084:ad5940lib/ad5940.c ****   /* SEQCON register */
 6354              		.loc 1 2084 25 is_stmt 0 view .LVU1868
 6355 0014 0024     		movs	r4, #0
 6356 0016 EC71     		strb	r4, [r5, #7]
2086:ad5940lib/ad5940.c ****   pSeqCfg->SeqEnable = (tempreg&BITM_AFE_SEQCON_SEQEN)?bTRUE:bFALSE;
 6357              		.loc 1 2086 3 is_stmt 1 view .LVU1869
2086:ad5940lib/ad5940.c ****   pSeqCfg->SeqEnable = (tempreg&BITM_AFE_SEQCON_SEQEN)?bTRUE:bFALSE;
 6358              		.loc 1 2086 13 is_stmt 0 view .LVU1870
 6359 0018 42F20400 		movw	r0, #8196
 6360 001c FFF7FEFF 		bl	AD5940_ReadReg
 6361              	.LVL637:
2087:ad5940lib/ad5940.c ****   pSeqCfg->SeqWrTimer = (tempreg&BITM_AFE_SEQCON_SEQWRTMR) >> BITP_AFE_SEQCON_SEQWRTMR;
 6362              		.loc 1 2087 3 is_stmt 1 view .LVU1871
2087:ad5940lib/ad5940.c ****   pSeqCfg->SeqWrTimer = (tempreg&BITM_AFE_SEQCON_SEQWRTMR) >> BITP_AFE_SEQCON_SEQWRTMR;
 6363              		.loc 1 2087 61 is_stmt 0 view .LVU1872
 6364 0020 00F00103 		and	r3, r0, #1
2087:ad5940lib/ad5940.c ****   pSeqCfg->SeqWrTimer = (tempreg&BITM_AFE_SEQCON_SEQWRTMR) >> BITP_AFE_SEQCON_SEQWRTMR;
 6365              		.loc 1 2087 22 view .LVU1873
 6366 0024 2B71     		strb	r3, [r5, #4]
2088:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 6367              		.loc 1 2088 3 is_stmt 1 view .LVU1874
2088:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 6368              		.loc 1 2088 60 is_stmt 0 view .LVU1875
 6369 0026 C0F30720 		ubfx	r0, r0, #8, #8
 6370              	.LVL638:
2088:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 6371              		.loc 1 2088 23 view .LVU1876
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 191


 6372 002a A860     		str	r0, [r5, #8]
2089:ad5940lib/ad5940.c **** }
 6373              		.loc 1 2089 3 is_stmt 1 view .LVU1877
2089:ad5940lib/ad5940.c **** }
 6374              		.loc 1 2089 10 is_stmt 0 view .LVU1878
 6375 002c 2046     		mov	r0, r4
2090:ad5940lib/ad5940.c **** 
 6376              		.loc 1 2090 1 view .LVU1879
 6377 002e 38BD     		pop	{r3, r4, r5, pc}
 6378              	.LVL639:
 6379              	.L433:
 6380              	.LCFI112:
 6381              		.cfi_def_cfa_offset 0
 6382              		.cfi_restore 3
 6383              		.cfi_restore 4
 6384              		.cfi_restore 5
 6385              		.cfi_restore 14
2080:ad5940lib/ad5940.c ****   /* Read CMDDATACON register */
 6386              		.loc 1 2080 12 view .LVU1880
 6387 0030 6FF00200 		mvn	r0, #2
 6388              	.LVL640:
2090:ad5940lib/ad5940.c **** 
 6389              		.loc 1 2090 1 view .LVU1881
 6390 0034 7047     		bx	lr
 6391              		.cfi_endproc
 6392              	.LFE74:
 6394              		.section	.text.AD5940_SEQCtrlS,"ax",%progbits
 6395              		.align	1
 6396              		.global	AD5940_SEQCtrlS
 6397              		.syntax unified
 6398              		.thumb
 6399              		.thumb_func
 6400              		.fpu fpv5-d16
 6402              	AD5940_SEQCtrlS:
 6403              	.LVL641:
 6404              	.LFB75:
2098:ad5940lib/ad5940.c ****   uint32_t tempreg = AD5940_ReadReg(REG_AFE_SEQCON);
 6405              		.loc 1 2098 1 is_stmt 1 view -0
 6406              		.cfi_startproc
 6407              		@ args = 0, pretend = 0, frame = 0
 6408              		@ frame_needed = 0, uses_anonymous_args = 0
2098:ad5940lib/ad5940.c ****   uint32_t tempreg = AD5940_ReadReg(REG_AFE_SEQCON);
 6409              		.loc 1 2098 1 is_stmt 0 view .LVU1883
 6410 0000 10B5     		push	{r4, lr}
 6411              	.LCFI113:
 6412              		.cfi_def_cfa_offset 8
 6413              		.cfi_offset 4, -8
 6414              		.cfi_offset 14, -4
 6415 0002 0446     		mov	r4, r0
2099:ad5940lib/ad5940.c ****   if(SeqEn == bTRUE)
 6416              		.loc 1 2099 3 is_stmt 1 view .LVU1884
2099:ad5940lib/ad5940.c ****   if(SeqEn == bTRUE)
 6417              		.loc 1 2099 22 is_stmt 0 view .LVU1885
 6418 0004 42F20400 		movw	r0, #8196
 6419              	.LVL642:
2099:ad5940lib/ad5940.c ****   if(SeqEn == bTRUE)
 6420              		.loc 1 2099 22 view .LVU1886
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 192


 6421 0008 FFF7FEFF 		bl	AD5940_ReadReg
 6422              	.LVL643:
2100:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
 6423              		.loc 1 2100 3 is_stmt 1 view .LVU1887
2100:ad5940lib/ad5940.c ****     tempreg |= BITM_AFE_SEQCON_SEQEN;
 6424              		.loc 1 2100 5 is_stmt 0 view .LVU1888
 6425 000c 012C     		cmp	r4, #1
 6426 000e 06D0     		beq	.L442
2103:ad5940lib/ad5940.c **** 
 6427              		.loc 1 2103 5 is_stmt 1 view .LVU1889
2103:ad5940lib/ad5940.c **** 
 6428              		.loc 1 2103 13 is_stmt 0 view .LVU1890
 6429 0010 20F00101 		bic	r1, r0, #1
 6430              	.LVL644:
 6431              	.L440:
2105:ad5940lib/ad5940.c **** }
 6432              		.loc 1 2105 3 is_stmt 1 view .LVU1891
 6433 0014 42F20400 		movw	r0, #8196
 6434 0018 FFF7FEFF 		bl	AD5940_WriteReg
 6435              	.LVL645:
2106:ad5940lib/ad5940.c **** 
 6436              		.loc 1 2106 1 is_stmt 0 view .LVU1892
 6437 001c 10BD     		pop	{r4, pc}
 6438              	.LVL646:
 6439              	.L442:
2101:ad5940lib/ad5940.c ****   else
 6440              		.loc 1 2101 5 is_stmt 1 view .LVU1893
2101:ad5940lib/ad5940.c ****   else
 6441              		.loc 1 2101 13 is_stmt 0 view .LVU1894
 6442 001e 40F00101 		orr	r1, r0, #1
 6443              	.LVL647:
2101:ad5940lib/ad5940.c ****   else
 6444              		.loc 1 2101 13 view .LVU1895
 6445 0022 F7E7     		b	.L440
 6446              		.cfi_endproc
 6447              	.LFE75:
 6449              		.section	.text.AD5940_SEQHaltS,"ax",%progbits
 6450              		.align	1
 6451              		.global	AD5940_SEQHaltS
 6452              		.syntax unified
 6453              		.thumb
 6454              		.thumb_func
 6455              		.fpu fpv5-d16
 6457              	AD5940_SEQHaltS:
 6458              	.LFB76:
2113:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQCON, BITM_AFE_SEQCON_SEQHALT|BITM_AFE_SEQCON_SEQEN);
 6459              		.loc 1 2113 1 is_stmt 1 view -0
 6460              		.cfi_startproc
 6461              		@ args = 0, pretend = 0, frame = 0
 6462              		@ frame_needed = 0, uses_anonymous_args = 0
 6463 0000 08B5     		push	{r3, lr}
 6464              	.LCFI114:
 6465              		.cfi_def_cfa_offset 8
 6466              		.cfi_offset 3, -8
 6467              		.cfi_offset 14, -4
2114:ad5940lib/ad5940.c **** }
 6468              		.loc 1 2114 3 view .LVU1897
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 193


 6469 0002 1121     		movs	r1, #17
 6470 0004 42F20400 		movw	r0, #8196
 6471 0008 FFF7FEFF 		bl	AD5940_WriteReg
 6472              	.LVL648:
2115:ad5940lib/ad5940.c **** 
 6473              		.loc 1 2115 1 is_stmt 0 view .LVU1898
 6474 000c 08BD     		pop	{r3, pc}
 6475              		.cfi_endproc
 6476              	.LFE76:
 6478              		.section	.text.AD5940_SEQMmrTrig,"ax",%progbits
 6479              		.align	1
 6480              		.global	AD5940_SEQMmrTrig
 6481              		.syntax unified
 6482              		.thumb
 6483              		.thumb_func
 6484              		.fpu fpv5-d16
 6486              	AD5940_SEQMmrTrig:
 6487              	.LVL649:
 6488              	.LFB77:
2122:ad5940lib/ad5940.c ****   if(SeqId > SEQID_3)
 6489              		.loc 1 2122 1 is_stmt 1 view -0
 6490              		.cfi_startproc
 6491              		@ args = 0, pretend = 0, frame = 0
 6492              		@ frame_needed = 0, uses_anonymous_args = 0
2123:ad5940lib/ad5940.c ****     return;
 6493              		.loc 1 2123 3 view .LVU1900
2123:ad5940lib/ad5940.c ****     return;
 6494              		.loc 1 2123 5 is_stmt 0 view .LVU1901
 6495 0000 0328     		cmp	r0, #3
 6496 0002 00D9     		bls	.L451
 6497 0004 7047     		bx	lr
 6498              	.L451:
2122:ad5940lib/ad5940.c ****   if(SeqId > SEQID_3)
 6499              		.loc 1 2122 1 view .LVU1902
 6500 0006 08B5     		push	{r3, lr}
 6501              	.LCFI115:
 6502              		.cfi_def_cfa_offset 8
 6503              		.cfi_offset 3, -8
 6504              		.cfi_offset 14, -4
2125:ad5940lib/ad5940.c **** }
 6505              		.loc 1 2125 3 is_stmt 1 view .LVU1903
 6506 0008 0121     		movs	r1, #1
 6507 000a 8140     		lsls	r1, r1, r0
 6508 000c 4FF48660 		mov	r0, #1072
 6509              	.LVL650:
2125:ad5940lib/ad5940.c **** }
 6510              		.loc 1 2125 3 is_stmt 0 view .LVU1904
 6511 0010 FFF7FEFF 		bl	AD5940_WriteReg
 6512              	.LVL651:
2126:ad5940lib/ad5940.c **** 
 6513              		.loc 1 2126 1 view .LVU1905
 6514 0014 08BD     		pop	{r3, pc}
 6515              		.cfi_endproc
 6516              	.LFE77:
 6518              		.section	.text.AD5940_SEQCmdWrite,"ax",%progbits
 6519              		.align	1
 6520              		.global	AD5940_SEQCmdWrite
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 194


 6521              		.syntax unified
 6522              		.thumb
 6523              		.thumb_func
 6524              		.fpu fpv5-d16
 6526              	AD5940_SEQCmdWrite:
 6527              	.LVL652:
 6528              	.LFB78:
2133:ad5940lib/ad5940.c ****   while(CmdCnt--)
 6529              		.loc 1 2133 1 is_stmt 1 view -0
 6530              		.cfi_startproc
 6531              		@ args = 0, pretend = 0, frame = 0
 6532              		@ frame_needed = 0, uses_anonymous_args = 0
2133:ad5940lib/ad5940.c ****   while(CmdCnt--)
 6533              		.loc 1 2133 1 is_stmt 0 view .LVU1907
 6534 0000 70B5     		push	{r4, r5, r6, lr}
 6535              	.LCFI116:
 6536              		.cfi_def_cfa_offset 16
 6537              		.cfi_offset 4, -16
 6538              		.cfi_offset 5, -12
 6539              		.cfi_offset 6, -8
 6540              		.cfi_offset 14, -4
 6541 0002 0C46     		mov	r4, r1
2134:ad5940lib/ad5940.c ****   {
 6542              		.loc 1 2134 3 is_stmt 1 view .LVU1908
 6543              	.LVL653:
 6544              	.L453:
2134:ad5940lib/ad5940.c ****   {
 6545              		.loc 1 2134 8 view .LVU1909
2134:ad5940lib/ad5940.c ****   {
 6546              		.loc 1 2134 15 is_stmt 0 view .LVU1910
 6547 0004 551E     		subs	r5, r2, #1
 6548              	.LVL654:
2134:ad5940lib/ad5940.c ****   {
 6549              		.loc 1 2134 8 view .LVU1911
 6550 0006 72B1     		cbz	r2, .L456
2136:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_CMDFIFOWRITE, *pCommand++);
 6551              		.loc 1 2136 5 is_stmt 1 view .LVU1912
 6552 0008 461C     		adds	r6, r0, #1
 6553              	.LVL655:
2136:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_CMDFIFOWRITE, *pCommand++);
 6554              		.loc 1 2136 5 is_stmt 0 view .LVU1913
 6555 000a 0146     		mov	r1, r0
 6556 000c 42F2D410 		movw	r0, #8660
 6557 0010 FFF7FEFF 		bl	AD5940_WriteReg
 6558              	.LVL656:
2137:ad5940lib/ad5940.c ****   }
 6559              		.loc 1 2137 5 is_stmt 1 view .LVU1914
2137:ad5940lib/ad5940.c ****   }
 6560              		.loc 1 2137 5 is_stmt 0 view .LVU1915
 6561 0014 54F8041B 		ldr	r1, [r4], #4
 6562              	.LVL657:
2137:ad5940lib/ad5940.c ****   }
 6563              		.loc 1 2137 5 view .LVU1916
 6564 0018 42F27000 		movw	r0, #8304
 6565 001c FFF7FEFF 		bl	AD5940_WriteReg
 6566              	.LVL658:
2134:ad5940lib/ad5940.c ****   {
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 195


 6567              		.loc 1 2134 15 view .LVU1917
 6568 0020 2A46     		mov	r2, r5
2136:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_CMDFIFOWRITE, *pCommand++);
 6569              		.loc 1 2136 5 view .LVU1918
 6570 0022 3046     		mov	r0, r6
 6571 0024 EEE7     		b	.L453
 6572              	.LVL659:
 6573              	.L456:
2139:ad5940lib/ad5940.c **** 
 6574              		.loc 1 2139 1 view .LVU1919
 6575 0026 70BD     		pop	{r4, r5, r6, pc}
2139:ad5940lib/ad5940.c **** 
 6576              		.loc 1 2139 1 view .LVU1920
 6577              		.cfi_endproc
 6578              	.LFE78:
 6580              		.section	.text.AD5940_SEQInfoCfg,"ax",%progbits
 6581              		.align	1
 6582              		.global	AD5940_SEQInfoCfg
 6583              		.syntax unified
 6584              		.thumb
 6585              		.thumb_func
 6586              		.fpu fpv5-d16
 6588              	AD5940_SEQInfoCfg:
 6589              	.LVL660:
 6590              	.LFB79:
2152:ad5940lib/ad5940.c ****   switch(pSeq->SeqId)
 6591              		.loc 1 2152 1 is_stmt 1 view -0
 6592              		.cfi_startproc
 6593              		@ args = 0, pretend = 0, frame = 0
 6594              		@ frame_needed = 0, uses_anonymous_args = 0
2152:ad5940lib/ad5940.c ****   switch(pSeq->SeqId)
 6595              		.loc 1 2152 1 is_stmt 0 view .LVU1922
 6596 0000 10B5     		push	{r4, lr}
 6597              	.LCFI117:
 6598              		.cfi_def_cfa_offset 8
 6599              		.cfi_offset 4, -8
 6600              		.cfi_offset 14, -4
 6601 0002 0446     		mov	r4, r0
2153:ad5940lib/ad5940.c ****   {
 6602              		.loc 1 2153 3 is_stmt 1 view .LVU1923
2153:ad5940lib/ad5940.c ****   {
 6603              		.loc 1 2153 14 is_stmt 0 view .LVU1924
 6604 0004 0368     		ldr	r3, [r0]
 6605 0006 032B     		cmp	r3, #3
 6606 0008 0BD8     		bhi	.L458
 6607 000a DFE803F0 		tbb	[pc, r3]
 6608              	.L460:
 6609 000e 02       		.byte	(.L463-.L460)/2
 6610 000f 0E       		.byte	(.L462-.L460)/2
 6611 0010 17       		.byte	(.L461-.L460)/2
 6612 0011 20       		.byte	(.L459-.L460)/2
 6613              		.p2align 1
 6614              	.L463:
2157:ad5940lib/ad5940.c ****     break;
 6615              		.loc 1 2157 5 is_stmt 1 view .LVU1925
2157:ad5940lib/ad5940.c ****     break;
 6616              		.loc 1 2157 44 is_stmt 0 view .LVU1926
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 196


 6617 0012 8168     		ldr	r1, [r0, #8]
2157:ad5940lib/ad5940.c ****     break;
 6618              		.loc 1 2157 65 view .LVU1927
 6619 0014 4368     		ldr	r3, [r0, #4]
2157:ad5940lib/ad5940.c ****     break;
 6620              		.loc 1 2157 5 view .LVU1928
 6621 0016 43EA0141 		orr	r1, r3, r1, lsl #16
 6622 001a 42F2CC10 		movw	r0, #8652
 6623              	.LVL661:
2157:ad5940lib/ad5940.c ****     break;
 6624              		.loc 1 2157 5 view .LVU1929
 6625 001e FFF7FEFF 		bl	AD5940_WriteReg
 6626              	.LVL662:
2158:ad5940lib/ad5940.c ****     case SEQID_1:
 6627              		.loc 1 2158 5 is_stmt 1 view .LVU1930
 6628              	.L458:
2171:ad5940lib/ad5940.c ****   {
 6629              		.loc 1 2171 3 view .LVU1931
2171:ad5940lib/ad5940.c ****   {
 6630              		.loc 1 2171 10 is_stmt 0 view .LVU1932
 6631 0022 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
2171:ad5940lib/ad5940.c ****   {
 6632              		.loc 1 2171 5 view .LVU1933
 6633 0024 012B     		cmp	r3, #1
 6634 0026 1BD0     		beq	.L466
 6635              	.L457:
2175:ad5940lib/ad5940.c **** 
 6636              		.loc 1 2175 1 view .LVU1934
 6637 0028 10BD     		pop	{r4, pc}
 6638              	.LVL663:
 6639              	.L462:
2160:ad5940lib/ad5940.c ****     break;
 6640              		.loc 1 2160 5 is_stmt 1 view .LVU1935
2160:ad5940lib/ad5940.c ****     break;
 6641              		.loc 1 2160 44 is_stmt 0 view .LVU1936
 6642 002a 8168     		ldr	r1, [r0, #8]
2160:ad5940lib/ad5940.c ****     break;
 6643              		.loc 1 2160 65 view .LVU1937
 6644 002c 4368     		ldr	r3, [r0, #4]
2160:ad5940lib/ad5940.c ****     break;
 6645              		.loc 1 2160 5 view .LVU1938
 6646 002e 43EA0141 		orr	r1, r3, r1, lsl #16
 6647 0032 42F2E810 		movw	r0, #8680
 6648              	.LVL664:
2160:ad5940lib/ad5940.c ****     break;
 6649              		.loc 1 2160 5 view .LVU1939
 6650 0036 FFF7FEFF 		bl	AD5940_WriteReg
 6651              	.LVL665:
2161:ad5940lib/ad5940.c ****     case SEQID_2:
 6652              		.loc 1 2161 5 is_stmt 1 view .LVU1940
 6653 003a F2E7     		b	.L458
 6654              	.LVL666:
 6655              	.L461:
2163:ad5940lib/ad5940.c ****     break;
 6656              		.loc 1 2163 5 view .LVU1941
2163:ad5940lib/ad5940.c ****     break;
 6657              		.loc 1 2163 44 is_stmt 0 view .LVU1942
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 197


 6658 003c 8168     		ldr	r1, [r0, #8]
2163:ad5940lib/ad5940.c ****     break;
 6659              		.loc 1 2163 65 view .LVU1943
 6660 003e 4368     		ldr	r3, [r0, #4]
2163:ad5940lib/ad5940.c ****     break;
 6661              		.loc 1 2163 5 view .LVU1944
 6662 0040 43EA0141 		orr	r1, r3, r1, lsl #16
 6663 0044 42F2D010 		movw	r0, #8656
 6664              	.LVL667:
2163:ad5940lib/ad5940.c ****     break;
 6665              		.loc 1 2163 5 view .LVU1945
 6666 0048 FFF7FEFF 		bl	AD5940_WriteReg
 6667              	.LVL668:
2164:ad5940lib/ad5940.c ****     case SEQID_3:
 6668              		.loc 1 2164 5 is_stmt 1 view .LVU1946
 6669 004c E9E7     		b	.L458
 6670              	.LVL669:
 6671              	.L459:
2166:ad5940lib/ad5940.c ****     break;
 6672              		.loc 1 2166 5 view .LVU1947
2166:ad5940lib/ad5940.c ****     break;
 6673              		.loc 1 2166 44 is_stmt 0 view .LVU1948
 6674 004e 8168     		ldr	r1, [r0, #8]
2166:ad5940lib/ad5940.c ****     break;
 6675              		.loc 1 2166 65 view .LVU1949
 6676 0050 4368     		ldr	r3, [r0, #4]
2166:ad5940lib/ad5940.c ****     break;
 6677              		.loc 1 2166 5 view .LVU1950
 6678 0052 43EA0141 		orr	r1, r3, r1, lsl #16
 6679 0056 42F2E410 		movw	r0, #8676
 6680              	.LVL670:
2166:ad5940lib/ad5940.c ****     break;
 6681              		.loc 1 2166 5 view .LVU1951
 6682 005a FFF7FEFF 		bl	AD5940_WriteReg
 6683              	.LVL671:
2167:ad5940lib/ad5940.c ****     default:
 6684              		.loc 1 2167 5 is_stmt 1 view .LVU1952
 6685 005e E0E7     		b	.L458
 6686              	.L466:
2173:ad5940lib/ad5940.c ****   }
 6687              		.loc 1 2173 5 view .LVU1953
 6688 0060 A268     		ldr	r2, [r4, #8]
 6689 0062 2169     		ldr	r1, [r4, #16]
 6690 0064 6068     		ldr	r0, [r4, #4]
 6691 0066 FFF7FEFF 		bl	AD5940_SEQCmdWrite
 6692              	.LVL672:
2175:ad5940lib/ad5940.c **** 
 6693              		.loc 1 2175 1 is_stmt 0 view .LVU1954
 6694 006a DDE7     		b	.L457
 6695              		.cfi_endproc
 6696              	.LFE79:
 6698              		.section	.text.AD5940_SEQInfoGet,"ax",%progbits
 6699              		.align	1
 6700              		.global	AD5940_SEQInfoGet
 6701              		.syntax unified
 6702              		.thumb
 6703              		.thumb_func
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 198


 6704              		.fpu fpv5-d16
 6706              	AD5940_SEQInfoGet:
 6707              	.LVL673:
 6708              	.LFB80:
2185:ad5940lib/ad5940.c ****   uint32_t tempreg;
 6709              		.loc 1 2185 1 is_stmt 1 view -0
 6710              		.cfi_startproc
 6711              		@ args = 0, pretend = 0, frame = 0
 6712              		@ frame_needed = 0, uses_anonymous_args = 0
2186:ad5940lib/ad5940.c ****   if(pSeqInfo == NULL) return AD5940ERR_NULLP;
 6713              		.loc 1 2186 3 view .LVU1956
2187:ad5940lib/ad5940.c ****   switch(SeqId)
 6714              		.loc 1 2187 3 view .LVU1957
2187:ad5940lib/ad5940.c ****   switch(SeqId)
 6715              		.loc 1 2187 5 is_stmt 0 view .LVU1958
 6716 0000 39B3     		cbz	r1, .L475
2185:ad5940lib/ad5940.c ****   uint32_t tempreg;
 6717              		.loc 1 2185 1 view .LVU1959
 6718 0002 38B5     		push	{r3, r4, r5, lr}
 6719              	.LCFI118:
 6720              		.cfi_def_cfa_offset 16
 6721              		.cfi_offset 3, -16
 6722              		.cfi_offset 4, -12
 6723              		.cfi_offset 5, -8
 6724              		.cfi_offset 14, -4
 6725 0004 0446     		mov	r4, r0
 6726 0006 0D46     		mov	r5, r1
2188:ad5940lib/ad5940.c ****   {
 6727              		.loc 1 2188 3 is_stmt 1 view .LVU1960
 6728 0008 0328     		cmp	r0, #3
 6729 000a 25D8     		bhi	.L476
 6730 000c DFE800F0 		tbb	[pc, r0]
 6731              	.L470:
 6732 0010 02       		.byte	(.L473-.L470)/2
 6733 0011 12       		.byte	(.L472-.L470)/2
 6734 0012 17       		.byte	(.L471-.L470)/2
 6735 0013 1C       		.byte	(.L469-.L470)/2
 6736              		.p2align 1
 6737              	.L473:
2191:ad5940lib/ad5940.c ****     break;
 6738              		.loc 1 2191 5 view .LVU1961
2191:ad5940lib/ad5940.c ****     break;
 6739              		.loc 1 2191 15 is_stmt 0 view .LVU1962
 6740 0014 42F2CC10 		movw	r0, #8652
 6741              	.LVL674:
2191:ad5940lib/ad5940.c ****     break;
 6742              		.loc 1 2191 15 view .LVU1963
 6743 0018 FFF7FEFF 		bl	AD5940_ReadReg
 6744              	.LVL675:
2192:ad5940lib/ad5940.c ****     case SEQID_1:
 6745              		.loc 1 2192 5 is_stmt 1 view .LVU1964
 6746              	.L474:
2205:ad5940lib/ad5940.c ****   pSeqInfo->SeqId = SeqId;
 6747              		.loc 1 2205 3 view .LVU1965
2205:ad5940lib/ad5940.c ****   pSeqInfo->SeqId = SeqId;
 6748              		.loc 1 2205 21 is_stmt 0 view .LVU1966
 6749 001c 0022     		movs	r2, #0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 199


 6750 001e 2A61     		str	r2, [r5, #16]
2206:ad5940lib/ad5940.c ****   pSeqInfo->SeqLen = (tempreg>>16)&0x7ff;
 6751              		.loc 1 2206 3 is_stmt 1 view .LVU1967
2206:ad5940lib/ad5940.c ****   pSeqInfo->SeqLen = (tempreg>>16)&0x7ff;
 6752              		.loc 1 2206 19 is_stmt 0 view .LVU1968
 6753 0020 2C60     		str	r4, [r5]
2207:ad5940lib/ad5940.c ****   pSeqInfo->SeqRamAddr = tempreg&0x7ff;
 6754              		.loc 1 2207 3 is_stmt 1 view .LVU1969
2207:ad5940lib/ad5940.c ****   pSeqInfo->SeqRamAddr = tempreg&0x7ff;
 6755              		.loc 1 2207 35 is_stmt 0 view .LVU1970
 6756 0022 C0F30A43 		ubfx	r3, r0, #16, #11
2207:ad5940lib/ad5940.c ****   pSeqInfo->SeqRamAddr = tempreg&0x7ff;
 6757              		.loc 1 2207 20 view .LVU1971
 6758 0026 AB60     		str	r3, [r5, #8]
2208:ad5940lib/ad5940.c ****   pSeqInfo->WriteSRAM = bFALSE;  /* Don't care */
 6759              		.loc 1 2208 3 is_stmt 1 view .LVU1972
2208:ad5940lib/ad5940.c ****   pSeqInfo->WriteSRAM = bFALSE;  /* Don't care */
 6760              		.loc 1 2208 33 is_stmt 0 view .LVU1973
 6761 0028 C0F30A00 		ubfx	r0, r0, #0, #11
 6762              	.LVL676:
2208:ad5940lib/ad5940.c ****   pSeqInfo->WriteSRAM = bFALSE;  /* Don't care */
 6763              		.loc 1 2208 24 view .LVU1974
 6764 002c 6860     		str	r0, [r5, #4]
2209:ad5940lib/ad5940.c **** 
 6765              		.loc 1 2209 3 is_stmt 1 view .LVU1975
2209:ad5940lib/ad5940.c **** 
 6766              		.loc 1 2209 23 is_stmt 0 view .LVU1976
 6767 002e 2A73     		strb	r2, [r5, #12]
2211:ad5940lib/ad5940.c **** }
 6768              		.loc 1 2211 3 is_stmt 1 view .LVU1977
2211:ad5940lib/ad5940.c **** }
 6769              		.loc 1 2211 10 is_stmt 0 view .LVU1978
 6770 0030 1046     		mov	r0, r2
 6771              	.L467:
2212:ad5940lib/ad5940.c **** 
 6772              		.loc 1 2212 1 view .LVU1979
 6773 0032 38BD     		pop	{r3, r4, r5, pc}
 6774              	.LVL677:
 6775              	.L472:
2194:ad5940lib/ad5940.c ****     break;
 6776              		.loc 1 2194 5 is_stmt 1 view .LVU1980
2194:ad5940lib/ad5940.c ****     break;
 6777              		.loc 1 2194 15 is_stmt 0 view .LVU1981
 6778 0034 42F2E810 		movw	r0, #8680
 6779              	.LVL678:
2194:ad5940lib/ad5940.c ****     break;
 6780              		.loc 1 2194 15 view .LVU1982
 6781 0038 FFF7FEFF 		bl	AD5940_ReadReg
 6782              	.LVL679:
2195:ad5940lib/ad5940.c ****     case SEQID_2:
 6783              		.loc 1 2195 5 is_stmt 1 view .LVU1983
 6784 003c EEE7     		b	.L474
 6785              	.LVL680:
 6786              	.L471:
2197:ad5940lib/ad5940.c ****     break;
 6787              		.loc 1 2197 5 view .LVU1984
2197:ad5940lib/ad5940.c ****     break;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 200


 6788              		.loc 1 2197 15 is_stmt 0 view .LVU1985
 6789 003e 42F2D010 		movw	r0, #8656
 6790              	.LVL681:
2197:ad5940lib/ad5940.c ****     break;
 6791              		.loc 1 2197 15 view .LVU1986
 6792 0042 FFF7FEFF 		bl	AD5940_ReadReg
 6793              	.LVL682:
2198:ad5940lib/ad5940.c ****     case SEQID_3:
 6794              		.loc 1 2198 5 is_stmt 1 view .LVU1987
 6795 0046 E9E7     		b	.L474
 6796              	.LVL683:
 6797              	.L469:
2200:ad5940lib/ad5940.c ****     break;
 6798              		.loc 1 2200 5 view .LVU1988
2200:ad5940lib/ad5940.c ****     break;
 6799              		.loc 1 2200 15 is_stmt 0 view .LVU1989
 6800 0048 42F2E410 		movw	r0, #8676
 6801              	.LVL684:
2200:ad5940lib/ad5940.c ****     break;
 6802              		.loc 1 2200 15 view .LVU1990
 6803 004c FFF7FEFF 		bl	AD5940_ReadReg
 6804              	.LVL685:
2201:ad5940lib/ad5940.c ****     default:
 6805              		.loc 1 2201 5 is_stmt 1 view .LVU1991
 6806 0050 E4E7     		b	.L474
 6807              	.LVL686:
 6808              	.L475:
 6809              	.LCFI119:
 6810              		.cfi_def_cfa_offset 0
 6811              		.cfi_restore 3
 6812              		.cfi_restore 4
 6813              		.cfi_restore 5
 6814              		.cfi_restore 14
2187:ad5940lib/ad5940.c ****   switch(SeqId)
 6815              		.loc 1 2187 31 is_stmt 0 view .LVU1992
 6816 0052 6FF00200 		mvn	r0, #2
 6817              	.LVL687:
2212:ad5940lib/ad5940.c **** 
 6818              		.loc 1 2212 1 view .LVU1993
 6819 0056 7047     		bx	lr
 6820              	.LVL688:
 6821              	.L476:
2187:ad5940lib/ad5940.c ****   switch(SeqId)
 6822              		.loc 1 2187 5 view .LVU1994
 6823 0058 6FF00100 		mvn	r0, #1
 6824              	.LVL689:
2187:ad5940lib/ad5940.c ****   switch(SeqId)
 6825              		.loc 1 2187 5 view .LVU1995
 6826 005c E9E7     		b	.L467
 6827              		.cfi_endproc
 6828              	.LFE80:
 6830              		.section	.text.AD5940_SEQGpioCtrlS,"ax",%progbits
 6831              		.align	1
 6832              		.global	AD5940_SEQGpioCtrlS
 6833              		.syntax unified
 6834              		.thumb
 6835              		.thumb_func
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 201


 6836              		.fpu fpv5-d16
 6838              	AD5940_SEQGpioCtrlS:
 6839              	.LVL690:
 6840              	.LFB81:
2224:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SYNCEXTDEVICE, Gpio);
 6841              		.loc 1 2224 1 is_stmt 1 view -0
 6842              		.cfi_startproc
 6843              		@ args = 0, pretend = 0, frame = 0
 6844              		@ frame_needed = 0, uses_anonymous_args = 0
2224:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SYNCEXTDEVICE, Gpio);
 6845              		.loc 1 2224 1 is_stmt 0 view .LVU1997
 6846 0000 08B5     		push	{r3, lr}
 6847              	.LCFI120:
 6848              		.cfi_def_cfa_offset 8
 6849              		.cfi_offset 3, -8
 6850              		.cfi_offset 14, -4
 6851 0002 0146     		mov	r1, r0
2225:ad5940lib/ad5940.c **** }
 6852              		.loc 1 2225 3 is_stmt 1 view .LVU1998
 6853 0004 42F25400 		movw	r0, #8276
 6854              	.LVL691:
2225:ad5940lib/ad5940.c **** }
 6855              		.loc 1 2225 3 is_stmt 0 view .LVU1999
 6856 0008 FFF7FEFF 		bl	AD5940_WriteReg
 6857              	.LVL692:
2226:ad5940lib/ad5940.c **** 
 6858              		.loc 1 2226 1 view .LVU2000
 6859 000c 08BD     		pop	{r3, pc}
 6860              		.cfi_endproc
 6861              	.LFE81:
 6863              		.section	.text.AD5940_SEQTimeOutRd,"ax",%progbits
 6864              		.align	1
 6865              		.global	AD5940_SEQTimeOutRd
 6866              		.syntax unified
 6867              		.thumb
 6868              		.thumb_func
 6869              		.fpu fpv5-d16
 6871              	AD5940_SEQTimeOutRd:
 6872              	.LFB82:
2233:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AFE_SEQTIMEOUT);
 6873              		.loc 1 2233 1 is_stmt 1 view -0
 6874              		.cfi_startproc
 6875              		@ args = 0, pretend = 0, frame = 0
 6876              		@ frame_needed = 0, uses_anonymous_args = 0
 6877 0000 08B5     		push	{r3, lr}
 6878              	.LCFI121:
 6879              		.cfi_def_cfa_offset 8
 6880              		.cfi_offset 3, -8
 6881              		.cfi_offset 14, -4
2234:ad5940lib/ad5940.c **** }
 6882              		.loc 1 2234 3 view .LVU2002
2234:ad5940lib/ad5940.c **** }
 6883              		.loc 1 2234 10 is_stmt 0 view .LVU2003
 6884 0002 42F26800 		movw	r0, #8296
 6885 0006 FFF7FEFF 		bl	AD5940_ReadReg
 6886              	.LVL693:
2235:ad5940lib/ad5940.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 202


 6887              		.loc 1 2235 1 view .LVU2004
 6888 000a 08BD     		pop	{r3, pc}
 6889              		.cfi_endproc
 6890              	.LFE82:
 6892              		.section	.text.AD5940_SEQGpioTrigCfg,"ax",%progbits
 6893              		.align	1
 6894              		.global	AD5940_SEQGpioTrigCfg
 6895              		.syntax unified
 6896              		.thumb
 6897              		.thumb_func
 6898              		.fpu fpv5-d16
 6900              	AD5940_SEQGpioTrigCfg:
 6901              	.LVL694:
 6902              	.LFB83:
2248:ad5940lib/ad5940.c ****   uint32_t reg_ei0con, reg_ei1con;
 6903              		.loc 1 2248 1 is_stmt 1 view -0
 6904              		.cfi_startproc
 6905              		@ args = 0, pretend = 0, frame = 0
 6906              		@ frame_needed = 0, uses_anonymous_args = 0
2249:ad5940lib/ad5940.c ****   uint32_t pin_count, pin_mask;
 6907              		.loc 1 2249 3 view .LVU2006
2250:ad5940lib/ad5940.c ****   uint32_t mode, en;
 6908              		.loc 1 2250 3 view .LVU2007
2251:ad5940lib/ad5940.c ****   if(pSeqGpioTrigCfg == NULL)
 6909              		.loc 1 2251 3 view .LVU2008
2252:ad5940lib/ad5940.c ****     return AD5940ERR_NULLP;
 6910              		.loc 1 2252 3 view .LVU2009
2252:ad5940lib/ad5940.c ****     return AD5940ERR_NULLP;
 6911              		.loc 1 2252 5 is_stmt 0 view .LVU2010
 6912 0000 0028     		cmp	r0, #0
 6913 0002 48D0     		beq	.L490
2248:ad5940lib/ad5940.c ****   uint32_t reg_ei0con, reg_ei1con;
 6914              		.loc 1 2248 1 view .LVU2011
 6915 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6916              	.LCFI122:
 6917              		.cfi_def_cfa_offset 24
 6918              		.cfi_offset 3, -24
 6919              		.cfi_offset 4, -20
 6920              		.cfi_offset 5, -16
 6921              		.cfi_offset 6, -12
 6922              		.cfi_offset 7, -8
 6923              		.cfi_offset 14, -4
 6924 0006 0546     		mov	r5, r0
2254:ad5940lib/ad5940.c ****   reg_ei1con = AD5940_ReadReg(REG_ALLON_EI1CON);
 6925              		.loc 1 2254 3 is_stmt 1 view .LVU2012
2254:ad5940lib/ad5940.c ****   reg_ei1con = AD5940_ReadReg(REG_ALLON_EI1CON);
 6926              		.loc 1 2254 16 is_stmt 0 view .LVU2013
 6927 0008 4FF42260 		mov	r0, #2592
 6928              	.LVL695:
2254:ad5940lib/ad5940.c ****   reg_ei1con = AD5940_ReadReg(REG_ALLON_EI1CON);
 6929              		.loc 1 2254 16 view .LVU2014
 6930 000c FFF7FEFF 		bl	AD5940_ReadReg
 6931              	.LVL696:
 6932 0010 0646     		mov	r6, r0
 6933              	.LVL697:
2255:ad5940lib/ad5940.c **** 
 6934              		.loc 1 2255 3 is_stmt 1 view .LVU2015
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 203


2255:ad5940lib/ad5940.c **** 
 6935              		.loc 1 2255 16 is_stmt 0 view .LVU2016
 6936 0012 40F62420 		movw	r0, #2596
 6937              	.LVL698:
2255:ad5940lib/ad5940.c **** 
 6938              		.loc 1 2255 16 view .LVU2017
 6939 0016 FFF7FEFF 		bl	AD5940_ReadReg
 6940              	.LVL699:
 6941 001a 0446     		mov	r4, r0
 6942              	.LVL700:
2257:ad5940lib/ad5940.c ****   pin_mask = 0x01;  /* start from pin0, mask 0x01 */
 6943              		.loc 1 2257 3 is_stmt 1 view .LVU2018
2258:ad5940lib/ad5940.c ****   pSeqGpioTrigCfg->SeqPinTrigMode &= 0x07;  /* 3bit width */
 6944              		.loc 1 2258 3 view .LVU2019
2259:ad5940lib/ad5940.c **** 
 6945              		.loc 1 2259 3 view .LVU2020
2259:ad5940lib/ad5940.c **** 
 6946              		.loc 1 2259 35 is_stmt 0 view .LVU2021
 6947 001c 6F68     		ldr	r7, [r5, #4]
 6948 001e 07F00707 		and	r7, r7, #7
 6949 0022 6F60     		str	r7, [r5, #4]
2261:ad5940lib/ad5940.c ****   en = pSeqGpioTrigCfg->bEnable?1:0;
 6950              		.loc 1 2261 3 is_stmt 1 view .LVU2022
 6951              	.LVL701:
2262:ad5940lib/ad5940.c ****   for(;;)
 6952              		.loc 1 2262 3 view .LVU2023
2262:ad5940lib/ad5940.c ****   for(;;)
 6953              		.loc 1 2262 23 is_stmt 0 view .LVU2024
 6954 0024 95F808C0 		ldrb	ip, [r5, #8]	@ zero_extendqisi2
2262:ad5940lib/ad5940.c ****   for(;;)
 6955              		.loc 1 2262 34 view .LVU2025
 6956 0028 BCF1000C 		subs	ip, ip, #0
 6957 002c 18BF     		it	ne
 6958 002e 4FF0010C 		movne	ip, #1
 6959              	.LVL702:
2258:ad5940lib/ad5940.c ****   pSeqGpioTrigCfg->SeqPinTrigMode &= 0x07;  /* 3bit width */
 6960              		.loc 1 2258 12 view .LVU2026
 6961 0032 0122     		movs	r2, #1
2257:ad5940lib/ad5940.c ****   pin_mask = 0x01;  /* start from pin0, mask 0x01 */
 6962              		.loc 1 2257 13 view .LVU2027
 6963 0034 0023     		movs	r3, #0
 6964 0036 10E0     		b	.L489
 6965              	.LVL703:
 6966              	.L488:
 6967              	.LBB12:
2277:ad5940lib/ad5940.c ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
 6968              		.loc 1 2277 9 is_stmt 1 view .LVU2028
2277:ad5940lib/ad5940.c ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
 6969              		.loc 1 2277 34 is_stmt 0 view .LVU2029
 6970 0038 191F     		subs	r1, r3, #4
2277:ad5940lib/ad5940.c ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
 6971              		.loc 1 2277 22 view .LVU2030
 6972 003a 8900     		lsls	r1, r1, #2
 6973              	.LVL704:
2278:ad5940lib/ad5940.c ****         reg_ei1con |= mode << bit_position;
 6974              		.loc 1 2278 9 is_stmt 1 view .LVU2031
2278:ad5940lib/ad5940.c ****         reg_ei1con |= mode << bit_position;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 204


 6975              		.loc 1 2278 29 is_stmt 0 view .LVU2032
 6976 003c 0F20     		movs	r0, #15
 6977 003e 8840     		lsls	r0, r0, r1
2278:ad5940lib/ad5940.c ****         reg_ei1con |= mode << bit_position;
 6978              		.loc 1 2278 20 view .LVU2033
 6979 0040 24EA0004 		bic	r4, r4, r0
 6980              	.LVL705:
2279:ad5940lib/ad5940.c ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
 6981              		.loc 1 2279 9 is_stmt 1 view .LVU2034
2279:ad5940lib/ad5940.c ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
 6982              		.loc 1 2279 28 is_stmt 0 view .LVU2035
 6983 0044 07FA01F0 		lsl	r0, r7, r1
2279:ad5940lib/ad5940.c ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
 6984              		.loc 1 2279 20 view .LVU2036
 6985 0048 0443     		orrs	r4, r4, r0
 6986              	.LVL706:
2280:ad5940lib/ad5940.c ****       }
 6987              		.loc 1 2280 9 is_stmt 1 view .LVU2037
2280:ad5940lib/ad5940.c ****       }
 6988              		.loc 1 2280 43 is_stmt 0 view .LVU2038
 6989 004a 0331     		adds	r1, r1, #3
 6990              	.LVL707:
2280:ad5940lib/ad5940.c ****       }
 6991              		.loc 1 2280 26 view .LVU2039
 6992 004c 0CFA01F1 		lsl	r1, ip, r1
 6993              	.LVL708:
2280:ad5940lib/ad5940.c ****       }
 6994              		.loc 1 2280 20 view .LVU2040
 6995 0050 0C43     		orrs	r4, r4, r1
 6996              	.LVL709:
 6997              	.L487:
2283:ad5940lib/ad5940.c ****     pin_mask <<= 1;
 6998              		.loc 1 2283 5 is_stmt 1 view .LVU2041
2283:ad5940lib/ad5940.c ****     pin_mask <<= 1;
 6999              		.loc 1 2283 15 is_stmt 0 view .LVU2042
 7000 0052 0133     		adds	r3, r3, #1
 7001              	.LVL710:
2284:ad5940lib/ad5940.c ****     if(pin_count == 8)
 7002              		.loc 1 2284 5 is_stmt 1 view .LVU2043
2284:ad5940lib/ad5940.c ****     if(pin_count == 8)
 7003              		.loc 1 2284 14 is_stmt 0 view .LVU2044
 7004 0054 5200     		lsls	r2, r2, #1
 7005              	.LVL711:
2285:ad5940lib/ad5940.c ****       break;
 7006              		.loc 1 2285 5 is_stmt 1 view .LVU2045
2285:ad5940lib/ad5940.c ****       break;
 7007              		.loc 1 2285 7 is_stmt 0 view .LVU2046
 7008 0056 082B     		cmp	r3, #8
 7009 0058 11D0     		beq	.L495
 7010              	.LVL712:
 7011              	.L489:
2285:ad5940lib/ad5940.c ****       break;
 7012              		.loc 1 2285 7 view .LVU2047
 7013              	.LBE12:
2263:ad5940lib/ad5940.c ****   {
 7014              		.loc 1 2263 3 is_stmt 1 view .LVU2048
 7015              	.LBB13:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 205


2265:ad5940lib/ad5940.c ****     if(pSeqGpioTrigCfg->PinSel&pin_mask)
 7016              		.loc 1 2265 5 view .LVU2049
2266:ad5940lib/ad5940.c ****     {
 7017              		.loc 1 2266 5 view .LVU2050
2266:ad5940lib/ad5940.c ****     {
 7018              		.loc 1 2266 23 is_stmt 0 view .LVU2051
 7019 005a 2968     		ldr	r1, [r5]
2266:ad5940lib/ad5940.c ****     {
 7020              		.loc 1 2266 7 view .LVU2052
 7021 005c 1142     		tst	r1, r2
 7022 005e F8D0     		beq	.L487
2268:ad5940lib/ad5940.c ****       {
 7023              		.loc 1 2268 7 is_stmt 1 view .LVU2053
2268:ad5940lib/ad5940.c ****       {
 7024              		.loc 1 2268 9 is_stmt 0 view .LVU2054
 7025 0060 032B     		cmp	r3, #3
 7026 0062 E9D8     		bhi	.L488
2270:ad5940lib/ad5940.c ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
 7027              		.loc 1 2270 9 is_stmt 1 view .LVU2055
2270:ad5940lib/ad5940.c ****         reg_ei1con &= ~(0xfL<<bit_position); /* Clear bits */
 7028              		.loc 1 2270 22 is_stmt 0 view .LVU2056
 7029 0064 9900     		lsls	r1, r3, #2
 7030              	.LVL713:
2271:ad5940lib/ad5940.c ****         reg_ei1con |= mode << bit_position;
 7031              		.loc 1 2271 9 is_stmt 1 view .LVU2057
2271:ad5940lib/ad5940.c ****         reg_ei1con |= mode << bit_position;
 7032              		.loc 1 2271 29 is_stmt 0 view .LVU2058
 7033 0066 0F20     		movs	r0, #15
 7034 0068 8840     		lsls	r0, r0, r1
2271:ad5940lib/ad5940.c ****         reg_ei1con |= mode << bit_position;
 7035              		.loc 1 2271 20 view .LVU2059
 7036 006a 24EA0004 		bic	r4, r4, r0
 7037              	.LVL714:
2272:ad5940lib/ad5940.c ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
 7038              		.loc 1 2272 9 is_stmt 1 view .LVU2060
2272:ad5940lib/ad5940.c ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
 7039              		.loc 1 2272 28 is_stmt 0 view .LVU2061
 7040 006e 07FA01F0 		lsl	r0, r7, r1
2272:ad5940lib/ad5940.c ****         reg_ei1con |= en << (bit_position + 3); /* bit offset 3 is the EN bit. */
 7041              		.loc 1 2272 20 view .LVU2062
 7042 0072 0443     		orrs	r4, r4, r0
 7043              	.LVL715:
2273:ad5940lib/ad5940.c ****       }
 7044              		.loc 1 2273 9 is_stmt 1 view .LVU2063
2273:ad5940lib/ad5940.c ****       }
 7045              		.loc 1 2273 43 is_stmt 0 view .LVU2064
 7046 0074 0331     		adds	r1, r1, #3
 7047              	.LVL716:
2273:ad5940lib/ad5940.c ****       }
 7048              		.loc 1 2273 26 view .LVU2065
 7049 0076 0CFA01F1 		lsl	r1, ip, r1
 7050              	.LVL717:
2273:ad5940lib/ad5940.c ****       }
 7051              		.loc 1 2273 20 view .LVU2066
 7052 007a 0C43     		orrs	r4, r4, r1
 7053              	.LVL718:
2273:ad5940lib/ad5940.c ****       }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 206


 7054              		.loc 1 2273 20 view .LVU2067
 7055 007c E9E7     		b	.L487
 7056              	.LVL719:
 7057              	.L495:
2273:ad5940lib/ad5940.c ****       }
 7058              		.loc 1 2273 20 view .LVU2068
 7059              	.LBE13:
2288:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_EI0CON, reg_ei1con);
 7060              		.loc 1 2288 3 is_stmt 1 view .LVU2069
 7061 007e 3146     		mov	r1, r6
 7062 0080 4FF42260 		mov	r0, #2592
 7063 0084 FFF7FEFF 		bl	AD5940_WriteReg
 7064              	.LVL720:
2289:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 7065              		.loc 1 2289 3 view .LVU2070
 7066 0088 2146     		mov	r1, r4
 7067 008a 4FF42260 		mov	r0, #2592
 7068 008e FFF7FEFF 		bl	AD5940_WriteReg
 7069              	.LVL721:
2290:ad5940lib/ad5940.c **** }
 7070              		.loc 1 2290 3 view .LVU2071
2290:ad5940lib/ad5940.c **** }
 7071              		.loc 1 2290 10 is_stmt 0 view .LVU2072
 7072 0092 0020     		movs	r0, #0
2291:ad5940lib/ad5940.c **** 
 7073              		.loc 1 2291 1 view .LVU2073
 7074 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7075              	.LVL722:
 7076              	.L490:
 7077              	.LCFI123:
 7078              		.cfi_def_cfa_offset 0
 7079              		.cfi_restore 3
 7080              		.cfi_restore 4
 7081              		.cfi_restore 5
 7082              		.cfi_restore 6
 7083              		.cfi_restore 7
 7084              		.cfi_restore 14
2253:ad5940lib/ad5940.c ****   reg_ei0con = AD5940_ReadReg(REG_ALLON_EI0CON);
 7085              		.loc 1 2253 12 view .LVU2074
 7086 0096 6FF00200 		mvn	r0, #2
 7087              	.LVL723:
2291:ad5940lib/ad5940.c **** 
 7088              		.loc 1 2291 1 view .LVU2075
 7089 009a 7047     		bx	lr
 7090              		.cfi_endproc
 7091              	.LFE83:
 7093              		.section	.text.AD5940_WUPTCfg,"ax",%progbits
 7094              		.align	1
 7095              		.global	AD5940_WUPTCfg
 7096              		.syntax unified
 7097              		.thumb
 7098              		.thumb_func
 7099              		.fpu fpv5-d16
 7101              	AD5940_WUPTCfg:
 7102              	.LVL724:
 7103              	.LFB84:
2299:ad5940lib/ad5940.c ****   uint32_t tempreg;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 207


 7104              		.loc 1 2299 1 is_stmt 1 view -0
 7105              		.cfi_startproc
 7106              		@ args = 0, pretend = 0, frame = 0
 7107              		@ frame_needed = 0, uses_anonymous_args = 0
2299:ad5940lib/ad5940.c ****   uint32_t tempreg;
 7108              		.loc 1 2299 1 is_stmt 0 view .LVU2077
 7109 0000 10B5     		push	{r4, lr}
 7110              	.LCFI124:
 7111              		.cfi_def_cfa_offset 8
 7112              		.cfi_offset 4, -8
 7113              		.cfi_offset 14, -4
 7114 0002 0446     		mov	r4, r0
2300:ad5940lib/ad5940.c ****   //check parameters
 7115              		.loc 1 2300 3 is_stmt 1 view .LVU2078
2303:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (pWuptCfg->SeqxWakeupTime[0] & 0xF0000)>>16);
 7116              		.loc 1 2303 3 view .LVU2079
 7117 0004 818E     		ldrh	r1, [r0, #52]
 7118 0006 40F60800 		movw	r0, #2056
 7119              	.LVL725:
2303:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (pWuptCfg->SeqxWakeupTime[0] & 0xF0000)>>16);
 7120              		.loc 1 2303 3 is_stmt 0 view .LVU2080
 7121 000a FFF7FEFF 		bl	AD5940_WriteReg
 7122              	.LVL726:
2304:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPL, (pWuptCfg->SeqxSleepTime[0] & 0xFFFF));    
 7123              		.loc 1 2304 3 is_stmt 1 view .LVU2081
2304:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPL, (pWuptCfg->SeqxSleepTime[0] & 0xFFFF));    
 7124              		.loc 1 2304 79 is_stmt 0 view .LVU2082
 7125 000e E18E     		ldrh	r1, [r4, #54]
2304:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPL, (pWuptCfg->SeqxSleepTime[0] & 0xFFFF));    
 7126              		.loc 1 2304 3 view .LVU2083
 7127 0010 01F00F01 		and	r1, r1, #15
 7128 0014 40F60C00 		movw	r0, #2060
 7129 0018 FFF7FEFF 		bl	AD5940_WriteReg
 7130              	.LVL727:
2305:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPH, (pWuptCfg->SeqxSleepTime[0] & 0xF0000)>>16);
 7131              		.loc 1 2305 3 is_stmt 1 view .LVU2084
 7132 001c A18C     		ldrh	r1, [r4, #36]
 7133 001e 4FF40160 		mov	r0, #2064
 7134 0022 FFF7FEFF 		bl	AD5940_WriteReg
 7135              	.LVL728:
2306:ad5940lib/ad5940.c **** 
 7136              		.loc 1 2306 3 view .LVU2085
2306:ad5940lib/ad5940.c **** 
 7137              		.loc 1 2306 80 is_stmt 0 view .LVU2086
 7138 0026 E18C     		ldrh	r1, [r4, #38]
2306:ad5940lib/ad5940.c **** 
 7139              		.loc 1 2306 3 view .LVU2087
 7140 0028 01F00F01 		and	r1, r1, #15
 7141 002c 40F61400 		movw	r0, #2068
 7142 0030 FFF7FEFF 		bl	AD5940_WriteReg
 7143              	.LVL729:
2308:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1WUPH, (pWuptCfg->SeqxWakeupTime[1] & 0xF0000)>>16);
 7144              		.loc 1 2308 3 is_stmt 1 view .LVU2088
 7145 0034 218F     		ldrh	r1, [r4, #56]
 7146 0036 40F61800 		movw	r0, #2072
 7147 003a FFF7FEFF 		bl	AD5940_WriteReg
 7148              	.LVL730:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 208


2309:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPL, (pWuptCfg->SeqxSleepTime[1] & 0xFFFF));    
 7149              		.loc 1 2309 3 view .LVU2089
2309:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPL, (pWuptCfg->SeqxSleepTime[1] & 0xFFFF));    
 7150              		.loc 1 2309 79 is_stmt 0 view .LVU2090
 7151 003e 618F     		ldrh	r1, [r4, #58]
2309:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPL, (pWuptCfg->SeqxSleepTime[1] & 0xFFFF));    
 7152              		.loc 1 2309 3 view .LVU2091
 7153 0040 01F00F01 		and	r1, r1, #15
 7154 0044 40F61C00 		movw	r0, #2076
 7155 0048 FFF7FEFF 		bl	AD5940_WriteReg
 7156              	.LVL731:
2310:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPH, (pWuptCfg->SeqxSleepTime[1] & 0xF0000)>>16);
 7157              		.loc 1 2310 3 is_stmt 1 view .LVU2092
 7158 004c 218D     		ldrh	r1, [r4, #40]
 7159 004e 4FF40260 		mov	r0, #2080
 7160 0052 FFF7FEFF 		bl	AD5940_WriteReg
 7161              	.LVL732:
2311:ad5940lib/ad5940.c **** 
 7162              		.loc 1 2311 3 view .LVU2093
2311:ad5940lib/ad5940.c **** 
 7163              		.loc 1 2311 80 is_stmt 0 view .LVU2094
 7164 0056 618D     		ldrh	r1, [r4, #42]
2311:ad5940lib/ad5940.c **** 
 7165              		.loc 1 2311 3 view .LVU2095
 7166 0058 01F00F01 		and	r1, r1, #15
 7167 005c 40F62400 		movw	r0, #2084
 7168 0060 FFF7FEFF 		bl	AD5940_WriteReg
 7169              	.LVL733:
2313:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2WUPH, (pWuptCfg->SeqxWakeupTime[2] & 0xF0000)>>16);
 7170              		.loc 1 2313 3 is_stmt 1 view .LVU2096
 7171 0064 A18F     		ldrh	r1, [r4, #60]
 7172 0066 40F62800 		movw	r0, #2088
 7173 006a FFF7FEFF 		bl	AD5940_WriteReg
 7174              	.LVL734:
2314:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPL, (pWuptCfg->SeqxSleepTime[2] & 0xFFFF));    
 7175              		.loc 1 2314 3 view .LVU2097
2314:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPL, (pWuptCfg->SeqxSleepTime[2] & 0xFFFF));    
 7176              		.loc 1 2314 79 is_stmt 0 view .LVU2098
 7177 006e E18F     		ldrh	r1, [r4, #62]
2314:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPL, (pWuptCfg->SeqxSleepTime[2] & 0xFFFF));    
 7178              		.loc 1 2314 3 view .LVU2099
 7179 0070 01F00F01 		and	r1, r1, #15
 7180 0074 40F62C00 		movw	r0, #2092
 7181 0078 FFF7FEFF 		bl	AD5940_WriteReg
 7182              	.LVL735:
2315:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPH, (pWuptCfg->SeqxSleepTime[2] & 0xF0000)>>16);
 7183              		.loc 1 2315 3 is_stmt 1 view .LVU2100
 7184 007c A18D     		ldrh	r1, [r4, #44]
 7185 007e 4FF40360 		mov	r0, #2096
 7186 0082 FFF7FEFF 		bl	AD5940_WriteReg
 7187              	.LVL736:
2316:ad5940lib/ad5940.c **** 
 7188              		.loc 1 2316 3 view .LVU2101
2316:ad5940lib/ad5940.c **** 
 7189              		.loc 1 2316 80 is_stmt 0 view .LVU2102
 7190 0086 E18D     		ldrh	r1, [r4, #46]
2316:ad5940lib/ad5940.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 209


 7191              		.loc 1 2316 3 view .LVU2103
 7192 0088 01F00F01 		and	r1, r1, #15
 7193 008c 40F63400 		movw	r0, #2100
 7194 0090 FFF7FEFF 		bl	AD5940_WriteReg
 7195              	.LVL737:
2318:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3WUPH, (pWuptCfg->SeqxWakeupTime[3] & 0xF0000)>>16);
 7196              		.loc 1 2318 3 is_stmt 1 view .LVU2104
 7197 0094 B4F84010 		ldrh	r1, [r4, #64]
 7198 0098 40F63800 		movw	r0, #2104
 7199 009c FFF7FEFF 		bl	AD5940_WriteReg
 7200              	.LVL738:
2319:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPL, (pWuptCfg->SeqxSleepTime[3] & 0xFFFF));    
 7201              		.loc 1 2319 3 view .LVU2105
2319:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPL, (pWuptCfg->SeqxSleepTime[3] & 0xFFFF));    
 7202              		.loc 1 2319 79 is_stmt 0 view .LVU2106
 7203 00a0 B4F84210 		ldrh	r1, [r4, #66]
2319:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPL, (pWuptCfg->SeqxSleepTime[3] & 0xFFFF));    
 7204              		.loc 1 2319 3 view .LVU2107
 7205 00a4 01F00F01 		and	r1, r1, #15
 7206 00a8 40F63C00 		movw	r0, #2108
 7207 00ac FFF7FEFF 		bl	AD5940_WriteReg
 7208              	.LVL739:
2320:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPH, (pWuptCfg->SeqxSleepTime[3] & 0xF0000)>>16);
 7209              		.loc 1 2320 3 is_stmt 1 view .LVU2108
 7210 00b0 218E     		ldrh	r1, [r4, #48]
 7211 00b2 4FF40460 		mov	r0, #2112
 7212 00b6 FFF7FEFF 		bl	AD5940_WriteReg
 7213              	.LVL740:
2321:ad5940lib/ad5940.c ****   
 7214              		.loc 1 2321 3 view .LVU2109
2321:ad5940lib/ad5940.c ****   
 7215              		.loc 1 2321 80 is_stmt 0 view .LVU2110
 7216 00ba 618E     		ldrh	r1, [r4, #50]
2321:ad5940lib/ad5940.c ****   
 7217              		.loc 1 2321 3 view .LVU2111
 7218 00bc 01F00F01 		and	r1, r1, #15
 7219 00c0 40F64400 		movw	r0, #2116
 7220 00c4 FFF7FEFF 		bl	AD5940_WriteReg
 7221              	.LVL741:
2326:ad5940lib/ad5940.c ****   /* Wupt order */
 7222              		.loc 1 2326 3 is_stmt 1 view .LVU2112
 7223 00c8 0121     		movs	r1, #1
 7224 00ca 40F61C20 		movw	r0, #2588
 7225 00ce FFF7FEFF 		bl	AD5940_WriteReg
 7226              	.LVL742:
2328:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[0]&0x03) << BITP_WUPTMR_SEQORDER_SEQA; /* position A */
 7227              		.loc 1 2328 3 view .LVU2113
2329:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[1]&0x03) << BITP_WUPTMR_SEQORDER_SEQB; /* position B */
 7228              		.loc 1 2329 3 view .LVU2114
2329:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[1]&0x03) << BITP_WUPTMR_SEQORDER_SEQB; /* position B */
 7229              		.loc 1 2329 34 is_stmt 0 view .LVU2115
 7230 00d2 6168     		ldr	r1, [r4, #4]
2329:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[1]&0x03) << BITP_WUPTMR_SEQORDER_SEQB; /* position B */
 7231              		.loc 1 2329 44 view .LVU2116
 7232 00d4 01F00301 		and	r1, r1, #3
 7233              	.LVL743:
2330:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[2]&0x03) << BITP_WUPTMR_SEQORDER_SEQC; /* position C */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 210


 7234              		.loc 1 2330 3 is_stmt 1 view .LVU2117
2330:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[2]&0x03) << BITP_WUPTMR_SEQORDER_SEQC; /* position C */
 7235              		.loc 1 2330 34 is_stmt 0 view .LVU2118
 7236 00d8 A368     		ldr	r3, [r4, #8]
2330:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[2]&0x03) << BITP_WUPTMR_SEQORDER_SEQC; /* position C */
 7237              		.loc 1 2330 44 view .LVU2119
 7238 00da 9B00     		lsls	r3, r3, #2
 7239 00dc 03F00C03 		and	r3, r3, #12
2330:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[2]&0x03) << BITP_WUPTMR_SEQORDER_SEQC; /* position C */
 7240              		.loc 1 2330 11 view .LVU2120
 7241 00e0 1943     		orrs	r1, r1, r3
 7242              	.LVL744:
2331:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[3]&0x03) << BITP_WUPTMR_SEQORDER_SEQD; /* position D */
 7243              		.loc 1 2331 3 is_stmt 1 view .LVU2121
2331:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[3]&0x03) << BITP_WUPTMR_SEQORDER_SEQD; /* position D */
 7244              		.loc 1 2331 34 is_stmt 0 view .LVU2122
 7245 00e2 E268     		ldr	r2, [r4, #12]
2331:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[3]&0x03) << BITP_WUPTMR_SEQORDER_SEQD; /* position D */
 7246              		.loc 1 2331 44 view .LVU2123
 7247 00e4 1201     		lsls	r2, r2, #4
 7248 00e6 02F03003 		and	r3, r2, #48
2331:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[3]&0x03) << BITP_WUPTMR_SEQORDER_SEQD; /* position D */
 7249              		.loc 1 2331 11 view .LVU2124
 7250 00ea 1943     		orrs	r1, r1, r3
 7251              	.LVL745:
2332:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[4]&0x03) << BITP_WUPTMR_SEQORDER_SEQE; /* position E */
 7252              		.loc 1 2332 3 is_stmt 1 view .LVU2125
2332:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[4]&0x03) << BITP_WUPTMR_SEQORDER_SEQE; /* position E */
 7253              		.loc 1 2332 34 is_stmt 0 view .LVU2126
 7254 00ec 2269     		ldr	r2, [r4, #16]
2332:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[4]&0x03) << BITP_WUPTMR_SEQORDER_SEQE; /* position E */
 7255              		.loc 1 2332 44 view .LVU2127
 7256 00ee 9301     		lsls	r3, r2, #6
 7257 00f0 DBB2     		uxtb	r3, r3
2332:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[4]&0x03) << BITP_WUPTMR_SEQORDER_SEQE; /* position E */
 7258              		.loc 1 2332 11 view .LVU2128
 7259 00f2 0B43     		orrs	r3, r3, r1
 7260              	.LVL746:
2333:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[5]&0x03) << BITP_WUPTMR_SEQORDER_SEQF; /* position F */
 7261              		.loc 1 2333 3 is_stmt 1 view .LVU2129
2333:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[5]&0x03) << BITP_WUPTMR_SEQORDER_SEQF; /* position F */
 7262              		.loc 1 2333 34 is_stmt 0 view .LVU2130
 7263 00f4 6269     		ldr	r2, [r4, #20]
2333:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[5]&0x03) << BITP_WUPTMR_SEQORDER_SEQF; /* position F */
 7264              		.loc 1 2333 44 view .LVU2131
 7265 00f6 1202     		lsls	r2, r2, #8
 7266 00f8 02F44071 		and	r1, r2, #768
2333:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[5]&0x03) << BITP_WUPTMR_SEQORDER_SEQF; /* position F */
 7267              		.loc 1 2333 11 view .LVU2132
 7268 00fc 0B43     		orrs	r3, r3, r1
 7269              	.LVL747:
2334:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[6]&0x03) << BITP_WUPTMR_SEQORDER_SEQG; /* position G */
 7270              		.loc 1 2334 3 is_stmt 1 view .LVU2133
2334:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[6]&0x03) << BITP_WUPTMR_SEQORDER_SEQG; /* position G */
 7271              		.loc 1 2334 34 is_stmt 0 view .LVU2134
 7272 00fe A269     		ldr	r2, [r4, #24]
2334:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[6]&0x03) << BITP_WUPTMR_SEQORDER_SEQG; /* position G */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 211


 7273              		.loc 1 2334 44 view .LVU2135
 7274 0100 9102     		lsls	r1, r2, #10
 7275 0102 01F44061 		and	r1, r1, #3072
2334:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[6]&0x03) << BITP_WUPTMR_SEQORDER_SEQG; /* position G */
 7276              		.loc 1 2334 11 view .LVU2136
 7277 0106 1943     		orrs	r1, r1, r3
 7278              	.LVL748:
2335:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[7]&0x03) << BITP_WUPTMR_SEQORDER_SEQH; /* position H */
 7279              		.loc 1 2335 3 is_stmt 1 view .LVU2137
2335:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[7]&0x03) << BITP_WUPTMR_SEQORDER_SEQH; /* position H */
 7280              		.loc 1 2335 34 is_stmt 0 view .LVU2138
 7281 0108 E369     		ldr	r3, [r4, #28]
2335:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[7]&0x03) << BITP_WUPTMR_SEQORDER_SEQH; /* position H */
 7282              		.loc 1 2335 44 view .LVU2139
 7283 010a 1B03     		lsls	r3, r3, #12
 7284 010c 03F44053 		and	r3, r3, #12288
2335:ad5940lib/ad5940.c ****   tempreg |= (pWuptCfg->WuptOrder[7]&0x03) << BITP_WUPTMR_SEQORDER_SEQH; /* position H */
 7285              		.loc 1 2335 11 view .LVU2140
 7286 0110 0B43     		orrs	r3, r3, r1
 7287              	.LVL749:
2336:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQORDER, tempreg);
 7288              		.loc 1 2336 3 is_stmt 1 view .LVU2141
2336:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQORDER, tempreg);
 7289              		.loc 1 2336 34 is_stmt 0 view .LVU2142
 7290 0112 216A     		ldr	r1, [r4, #32]
2336:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_WUPTMR_SEQORDER, tempreg);
 7291              		.loc 1 2336 44 view .LVU2143
 7292 0114 8903     		lsls	r1, r1, #14
 7293 0116 89B2     		uxth	r1, r1
 7294              	.LVL750:
2337:ad5940lib/ad5940.c **** 
 7295              		.loc 1 2337 3 is_stmt 1 view .LVU2144
 7296 0118 1943     		orrs	r1, r1, r3
 7297              	.LVL751:
2337:ad5940lib/ad5940.c **** 
 7298              		.loc 1 2337 3 is_stmt 0 view .LVU2145
 7299 011a 40F60400 		movw	r0, #2052
 7300 011e FFF7FEFF 		bl	AD5940_WriteReg
 7301              	.LVL752:
2339:ad5940lib/ad5940.c ****   if(pWuptCfg->WuptEn == bTRUE)
 7302              		.loc 1 2339 3 is_stmt 1 view .LVU2146
2340:ad5940lib/ad5940.c ****     tempreg |= BITM_WUPTMR_CON_EN;
 7303              		.loc 1 2340 3 view .LVU2147
2340:ad5940lib/ad5940.c ****     tempreg |= BITM_WUPTMR_CON_EN;
 7304              		.loc 1 2340 14 is_stmt 0 view .LVU2148
 7305 0122 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
2340:ad5940lib/ad5940.c ****     tempreg |= BITM_WUPTMR_CON_EN;
 7306              		.loc 1 2340 5 view .LVU2149
 7307 0126 012B     		cmp	r3, #1
 7308 0128 08D0     		beq	.L498
2339:ad5940lib/ad5940.c ****   if(pWuptCfg->WuptEn == bTRUE)
 7309              		.loc 1 2339 11 view .LVU2150
 7310 012a 0023     		movs	r3, #0
 7311              	.L497:
 7312              	.LVL753:
2343:ad5940lib/ad5940.c ****   //tempreg |= 1L<<4;
 7313              		.loc 1 2343 3 is_stmt 1 view .LVU2151
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 212


2343:ad5940lib/ad5940.c ****   //tempreg |= 1L<<4;
 7314              		.loc 1 2343 22 is_stmt 0 view .LVU2152
 7315 012c 2168     		ldr	r1, [r4]
 7316              	.LVL754:
2345:ad5940lib/ad5940.c **** }
 7317              		.loc 1 2345 3 is_stmt 1 view .LVU2153
 7318 012e 43EA4101 		orr	r1, r3, r1, lsl #1
 7319              	.LVL755:
2345:ad5940lib/ad5940.c **** }
 7320              		.loc 1 2345 3 is_stmt 0 view .LVU2154
 7321 0132 4FF40060 		mov	r0, #2048
 7322 0136 FFF7FEFF 		bl	AD5940_WriteReg
 7323              	.LVL756:
2346:ad5940lib/ad5940.c **** 
 7324              		.loc 1 2346 1 view .LVU2155
 7325 013a 10BD     		pop	{r4, pc}
 7326              	.LVL757:
 7327              	.L498:
2341:ad5940lib/ad5940.c ****   /* We always allow Wupt to trigger sequencer */
 7328              		.loc 1 2341 13 view .LVU2156
 7329 013c 0123     		movs	r3, #1
 7330 013e F5E7     		b	.L497
 7331              		.cfi_endproc
 7332              	.LFE84:
 7334              		.section	.text.AD5940_WUPTCtrl,"ax",%progbits
 7335              		.align	1
 7336              		.global	AD5940_WUPTCtrl
 7337              		.syntax unified
 7338              		.thumb
 7339              		.thumb_func
 7340              		.fpu fpv5-d16
 7342              	AD5940_WUPTCtrl:
 7343              	.LVL758:
 7344              	.LFB85:
2356:ad5940lib/ad5940.c ****   uint16_t tempreg;
 7345              		.loc 1 2356 1 is_stmt 1 view -0
 7346              		.cfi_startproc
 7347              		@ args = 0, pretend = 0, frame = 0
 7348              		@ frame_needed = 0, uses_anonymous_args = 0
2356:ad5940lib/ad5940.c ****   uint16_t tempreg;
 7349              		.loc 1 2356 1 is_stmt 0 view .LVU2158
 7350 0000 10B5     		push	{r4, lr}
 7351              	.LCFI125:
 7352              		.cfi_def_cfa_offset 8
 7353              		.cfi_offset 4, -8
 7354              		.cfi_offset 14, -4
 7355 0002 0446     		mov	r4, r0
2357:ad5940lib/ad5940.c ****   tempreg = AD5940_ReadReg(REG_WUPTMR_CON);
 7356              		.loc 1 2357 3 is_stmt 1 view .LVU2159
2358:ad5940lib/ad5940.c ****   tempreg &= ~BITM_WUPTMR_CON_EN;
 7357              		.loc 1 2358 3 view .LVU2160
2358:ad5940lib/ad5940.c ****   tempreg &= ~BITM_WUPTMR_CON_EN;
 7358              		.loc 1 2358 13 is_stmt 0 view .LVU2161
 7359 0004 4FF40060 		mov	r0, #2048
 7360              	.LVL759:
2358:ad5940lib/ad5940.c ****   tempreg &= ~BITM_WUPTMR_CON_EN;
 7361              		.loc 1 2358 13 view .LVU2162
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 213


 7362 0008 FFF7FEFF 		bl	AD5940_ReadReg
 7363              	.LVL760:
2358:ad5940lib/ad5940.c ****   tempreg &= ~BITM_WUPTMR_CON_EN;
 7364              		.loc 1 2358 11 view .LVU2163
 7365 000c 81B2     		uxth	r1, r0
 7366              	.LVL761:
2359:ad5940lib/ad5940.c **** 
 7367              		.loc 1 2359 3 is_stmt 1 view .LVU2164
2359:ad5940lib/ad5940.c **** 
 7368              		.loc 1 2359 11 is_stmt 0 view .LVU2165
 7369 000e 21F00101 		bic	r1, r1, #1
 7370              	.LVL762:
2359:ad5940lib/ad5940.c **** 
 7371              		.loc 1 2359 11 view .LVU2166
 7372 0012 89B2     		uxth	r1, r1
 7373              	.LVL763:
2361:ad5940lib/ad5940.c ****     tempreg |= BITM_WUPTMR_CON_EN;
 7374              		.loc 1 2361 3 is_stmt 1 view .LVU2167
2361:ad5940lib/ad5940.c ****     tempreg |= BITM_WUPTMR_CON_EN;
 7375              		.loc 1 2361 5 is_stmt 0 view .LVU2168
 7376 0014 012C     		cmp	r4, #1
 7377 0016 04D0     		beq	.L503
 7378              	.L501:
2364:ad5940lib/ad5940.c **** }
 7379              		.loc 1 2364 3 is_stmt 1 view .LVU2169
 7380 0018 4FF40060 		mov	r0, #2048
 7381 001c FFF7FEFF 		bl	AD5940_WriteReg
 7382              	.LVL764:
2365:ad5940lib/ad5940.c **** 
 7383              		.loc 1 2365 1 is_stmt 0 view .LVU2170
 7384 0020 10BD     		pop	{r4, pc}
 7385              	.LVL765:
 7386              	.L503:
2362:ad5940lib/ad5940.c ****   
 7387              		.loc 1 2362 5 is_stmt 1 view .LVU2171
2362:ad5940lib/ad5940.c ****   
 7388              		.loc 1 2362 13 is_stmt 0 view .LVU2172
 7389 0022 41F00101 		orr	r1, r1, #1
 7390              	.LVL766:
2362:ad5940lib/ad5940.c ****   
 7391              		.loc 1 2362 13 view .LVU2173
 7392 0026 F7E7     		b	.L501
 7393              		.cfi_endproc
 7394              	.LFE85:
 7396              		.section	.text.AD5940_WUPTTime,"ax",%progbits
 7397              		.align	1
 7398              		.global	AD5940_WUPTTime
 7399              		.syntax unified
 7400              		.thumb
 7401              		.thumb_func
 7402              		.fpu fpv5-d16
 7404              	AD5940_WUPTTime:
 7405              	.LVL767:
 7406              	.LFB86:
2376:ad5940lib/ad5940.c ****   switch (SeqId)
 7407              		.loc 1 2376 1 is_stmt 1 view -0
 7408              		.cfi_startproc
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 214


 7409              		@ args = 0, pretend = 0, frame = 0
 7410              		@ frame_needed = 0, uses_anonymous_args = 0
2376:ad5940lib/ad5940.c ****   switch (SeqId)
 7411              		.loc 1 2376 1 is_stmt 0 view .LVU2175
 7412 0000 38B5     		push	{r3, r4, r5, lr}
 7413              	.LCFI126:
 7414              		.cfi_def_cfa_offset 16
 7415              		.cfi_offset 3, -16
 7416              		.cfi_offset 4, -12
 7417              		.cfi_offset 5, -8
 7418              		.cfi_offset 14, -4
 7419 0002 0C46     		mov	r4, r1
 7420 0004 1546     		mov	r5, r2
2377:ad5940lib/ad5940.c ****   {
 7421              		.loc 1 2377 3 is_stmt 1 view .LVU2176
 7422 0006 0328     		cmp	r0, #3
 7423 0008 63D8     		bhi	.L511
 7424 000a DFE800F0 		tbb	[pc, r0]
 7425              	.L507:
 7426 000e 02       		.byte	(.L510-.L507)/2
 7427 000f 1A       		.byte	(.L509-.L507)/2
 7428 0010 32       		.byte	(.L508-.L507)/2
 7429 0011 4A       		.byte	(.L506-.L507)/2
 7430              		.p2align 1
 7431              	.L510:
2381:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (WakeupTime & 0xF0000)>>16);
 7432              		.loc 1 2381 7 view .LVU2177
 7433 0012 91B2     		uxth	r1, r2
 7434              	.LVL768:
2381:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (WakeupTime & 0xF0000)>>16);
 7435              		.loc 1 2381 7 is_stmt 0 view .LVU2178
 7436 0014 40F60800 		movw	r0, #2056
 7437              	.LVL769:
2381:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0WUPH, (WakeupTime & 0xF0000)>>16);
 7438              		.loc 1 2381 7 view .LVU2179
 7439 0018 FFF7FEFF 		bl	AD5940_WriteReg
 7440              	.LVL770:
2382:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPL, (SleepTime & 0xFFFF));    
 7441              		.loc 1 2382 7 is_stmt 1 view .LVU2180
 7442 001c C5F30341 		ubfx	r1, r5, #16, #4
 7443 0020 40F60C00 		movw	r0, #2060
 7444 0024 FFF7FEFF 		bl	AD5940_WriteReg
 7445              	.LVL771:
2383:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ0SLEEPH, (SleepTime & 0xF0000)>>16);
 7446              		.loc 1 2383 7 view .LVU2181
 7447 0028 A1B2     		uxth	r1, r4
 7448 002a 4FF40160 		mov	r0, #2064
 7449 002e FFF7FEFF 		bl	AD5940_WriteReg
 7450              	.LVL772:
2384:ad5940lib/ad5940.c ****       break;
 7451              		.loc 1 2384 7 view .LVU2182
 7452 0032 C4F30341 		ubfx	r1, r4, #16, #4
 7453 0036 40F61400 		movw	r0, #2068
 7454 003a FFF7FEFF 		bl	AD5940_WriteReg
 7455              	.LVL773:
2385:ad5940lib/ad5940.c ****     }
 7456              		.loc 1 2385 7 view .LVU2183
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 215


2414:ad5940lib/ad5940.c **** }
 7457              		.loc 1 2414 10 is_stmt 0 view .LVU2184
 7458 003e 0020     		movs	r0, #0
 7459              	.L504:
2415:ad5940lib/ad5940.c **** 
 7460              		.loc 1 2415 1 view .LVU2185
 7461 0040 38BD     		pop	{r3, r4, r5, pc}
 7462              	.LVL774:
 7463              	.L509:
2389:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1WUPH, (WakeupTime & 0xF0000)>>16);
 7464              		.loc 1 2389 7 is_stmt 1 view .LVU2186
 7465 0042 91B2     		uxth	r1, r2
 7466              	.LVL775:
2389:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1WUPH, (WakeupTime & 0xF0000)>>16);
 7467              		.loc 1 2389 7 is_stmt 0 view .LVU2187
 7468 0044 40F61800 		movw	r0, #2072
 7469              	.LVL776:
2389:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1WUPH, (WakeupTime & 0xF0000)>>16);
 7470              		.loc 1 2389 7 view .LVU2188
 7471 0048 FFF7FEFF 		bl	AD5940_WriteReg
 7472              	.LVL777:
2390:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPL, (SleepTime & 0xFFFF));    
 7473              		.loc 1 2390 7 is_stmt 1 view .LVU2189
 7474 004c C5F30341 		ubfx	r1, r5, #16, #4
 7475 0050 40F61C00 		movw	r0, #2076
 7476 0054 FFF7FEFF 		bl	AD5940_WriteReg
 7477              	.LVL778:
2391:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ1SLEEPH, (SleepTime & 0xF0000)>>16);
 7478              		.loc 1 2391 7 view .LVU2190
 7479 0058 A1B2     		uxth	r1, r4
 7480 005a 4FF40260 		mov	r0, #2080
 7481 005e FFF7FEFF 		bl	AD5940_WriteReg
 7482              	.LVL779:
2392:ad5940lib/ad5940.c ****       break;
 7483              		.loc 1 2392 7 view .LVU2191
 7484 0062 C4F30341 		ubfx	r1, r4, #16, #4
 7485 0066 40F62400 		movw	r0, #2084
 7486 006a FFF7FEFF 		bl	AD5940_WriteReg
 7487              	.LVL780:
2393:ad5940lib/ad5940.c ****     }
 7488              		.loc 1 2393 7 view .LVU2192
2414:ad5940lib/ad5940.c **** }
 7489              		.loc 1 2414 10 is_stmt 0 view .LVU2193
 7490 006e 0020     		movs	r0, #0
2393:ad5940lib/ad5940.c ****     }
 7491              		.loc 1 2393 7 view .LVU2194
 7492 0070 E6E7     		b	.L504
 7493              	.LVL781:
 7494              	.L508:
2397:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2WUPH, (WakeupTime & 0xF0000)>>16);
 7495              		.loc 1 2397 7 is_stmt 1 view .LVU2195
 7496 0072 91B2     		uxth	r1, r2
 7497              	.LVL782:
2397:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2WUPH, (WakeupTime & 0xF0000)>>16);
 7498              		.loc 1 2397 7 is_stmt 0 view .LVU2196
 7499 0074 40F62800 		movw	r0, #2088
 7500              	.LVL783:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 216


2397:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2WUPH, (WakeupTime & 0xF0000)>>16);
 7501              		.loc 1 2397 7 view .LVU2197
 7502 0078 FFF7FEFF 		bl	AD5940_WriteReg
 7503              	.LVL784:
2398:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPL, (SleepTime & 0xFFFF));    
 7504              		.loc 1 2398 7 is_stmt 1 view .LVU2198
 7505 007c C5F30341 		ubfx	r1, r5, #16, #4
 7506 0080 40F62C00 		movw	r0, #2092
 7507 0084 FFF7FEFF 		bl	AD5940_WriteReg
 7508              	.LVL785:
2399:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ2SLEEPH, (SleepTime & 0xF0000)>>16);
 7509              		.loc 1 2399 7 view .LVU2199
 7510 0088 A1B2     		uxth	r1, r4
 7511 008a 4FF40360 		mov	r0, #2096
 7512 008e FFF7FEFF 		bl	AD5940_WriteReg
 7513              	.LVL786:
2400:ad5940lib/ad5940.c ****       break;
 7514              		.loc 1 2400 7 view .LVU2200
 7515 0092 C4F30341 		ubfx	r1, r4, #16, #4
 7516 0096 40F63400 		movw	r0, #2100
 7517 009a FFF7FEFF 		bl	AD5940_WriteReg
 7518              	.LVL787:
2401:ad5940lib/ad5940.c ****     }
 7519              		.loc 1 2401 7 view .LVU2201
2414:ad5940lib/ad5940.c **** }
 7520              		.loc 1 2414 10 is_stmt 0 view .LVU2202
 7521 009e 0020     		movs	r0, #0
2401:ad5940lib/ad5940.c ****     }
 7522              		.loc 1 2401 7 view .LVU2203
 7523 00a0 CEE7     		b	.L504
 7524              	.LVL788:
 7525              	.L506:
2405:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3WUPH, (WakeupTime & 0xF0000)>>16);
 7526              		.loc 1 2405 7 is_stmt 1 view .LVU2204
 7527 00a2 91B2     		uxth	r1, r2
 7528              	.LVL789:
2405:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3WUPH, (WakeupTime & 0xF0000)>>16);
 7529              		.loc 1 2405 7 is_stmt 0 view .LVU2205
 7530 00a4 40F63800 		movw	r0, #2104
 7531              	.LVL790:
2405:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3WUPH, (WakeupTime & 0xF0000)>>16);
 7532              		.loc 1 2405 7 view .LVU2206
 7533 00a8 FFF7FEFF 		bl	AD5940_WriteReg
 7534              	.LVL791:
2406:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPL, (SleepTime & 0xFFFF));    
 7535              		.loc 1 2406 7 is_stmt 1 view .LVU2207
 7536 00ac C5F30341 		ubfx	r1, r5, #16, #4
 7537 00b0 40F63C00 		movw	r0, #2108
 7538 00b4 FFF7FEFF 		bl	AD5940_WriteReg
 7539              	.LVL792:
2407:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_WUPTMR_SEQ3SLEEPH, (SleepTime & 0xF0000)>>16);
 7540              		.loc 1 2407 7 view .LVU2208
 7541 00b8 A1B2     		uxth	r1, r4
 7542 00ba 4FF40460 		mov	r0, #2112
 7543 00be FFF7FEFF 		bl	AD5940_WriteReg
 7544              	.LVL793:
2408:ad5940lib/ad5940.c ****       break;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 217


 7545              		.loc 1 2408 7 view .LVU2209
 7546 00c2 C4F30341 		ubfx	r1, r4, #16, #4
 7547 00c6 40F64400 		movw	r0, #2116
 7548 00ca FFF7FEFF 		bl	AD5940_WriteReg
 7549              	.LVL794:
2409:ad5940lib/ad5940.c ****     }
 7550              		.loc 1 2409 7 view .LVU2210
2414:ad5940lib/ad5940.c **** }
 7551              		.loc 1 2414 10 is_stmt 0 view .LVU2211
 7552 00ce 0020     		movs	r0, #0
2409:ad5940lib/ad5940.c ****     }
 7553              		.loc 1 2409 7 view .LVU2212
 7554 00d0 B6E7     		b	.L504
 7555              	.LVL795:
 7556              	.L511:
2414:ad5940lib/ad5940.c **** }
 7557              		.loc 1 2414 10 view .LVU2213
 7558 00d2 6FF00100 		mvn	r0, #1
 7559              	.LVL796:
2414:ad5940lib/ad5940.c **** }
 7560              		.loc 1 2414 10 view .LVU2214
 7561 00d6 B3E7     		b	.L504
 7562              		.cfi_endproc
 7563              	.LFE86:
 7565              		.section	.text.AD5940_HFOSC32MHzCtrl,"ax",%progbits
 7566              		.align	1
 7567              		.global	AD5940_HFOSC32MHzCtrl
 7568              		.syntax unified
 7569              		.thumb
 7570              		.thumb_func
 7571              		.fpu fpv5-d16
 7573              	AD5940_HFOSC32MHzCtrl:
 7574              	.LVL797:
 7575              	.LFB88:
2501:ad5940lib/ad5940.c ****   uint32_t RdCLKEN1;
 7576              		.loc 1 2501 1 is_stmt 1 view -0
 7577              		.cfi_startproc
 7578              		@ args = 0, pretend = 0, frame = 0
 7579              		@ frame_needed = 0, uses_anonymous_args = 0
2501:ad5940lib/ad5940.c ****   uint32_t RdCLKEN1;
 7580              		.loc 1 2501 1 is_stmt 0 view .LVU2216
 7581 0000 38B5     		push	{r3, r4, r5, lr}
 7582              	.LCFI127:
 7583              		.cfi_def_cfa_offset 16
 7584              		.cfi_offset 3, -16
 7585              		.cfi_offset 4, -12
 7586              		.cfi_offset 5, -8
 7587              		.cfi_offset 14, -4
 7588 0002 0546     		mov	r5, r0
2502:ad5940lib/ad5940.c ****   uint32_t RdHPOSCCON;   
 7589              		.loc 1 2502 3 is_stmt 1 view .LVU2217
2503:ad5940lib/ad5940.c **** 
 7590              		.loc 1 2503 3 view .LVU2218
2505:ad5940lib/ad5940.c ****     
 7591              		.loc 1 2505 3 view .LVU2219
2507:ad5940lib/ad5940.c ****   bit8 = (RdCLKEN1>>9)&0x01;
 7592              		.loc 1 2507 3 view .LVU2220
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 218


2507:ad5940lib/ad5940.c ****   bit8 = (RdCLKEN1>>9)&0x01;
 7593              		.loc 1 2507 14 is_stmt 0 view .LVU2221
 7594 0004 4FF48260 		mov	r0, #1040
 7595              	.LVL798:
2507:ad5940lib/ad5940.c ****   bit8 = (RdCLKEN1>>9)&0x01;
 7596              		.loc 1 2507 14 view .LVU2222
 7597 0008 FFF7FEFF 		bl	AD5940_ReadReg
 7598              	.LVL799:
2508:ad5940lib/ad5940.c ****   bit9 = (RdCLKEN1>>8)&0x01;  /* Fix bug in silicon, bit8 and bit9 is swapped when read back. */
 7599              		.loc 1 2508 3 is_stmt 1 view .LVU2223
2508:ad5940lib/ad5940.c ****   bit9 = (RdCLKEN1>>8)&0x01;  /* Fix bug in silicon, bit8 and bit9 is swapped when read back. */
 7600              		.loc 1 2508 19 is_stmt 0 view .LVU2224
 7601 000c 440A     		lsrs	r4, r0, #9
 7602              	.LVL800:
2509:ad5940lib/ad5940.c ****   RdCLKEN1 = RdCLKEN1&0xff;
 7603              		.loc 1 2509 3 is_stmt 1 view .LVU2225
2509:ad5940lib/ad5940.c ****   RdCLKEN1 = RdCLKEN1&0xff;
 7604              		.loc 1 2509 19 is_stmt 0 view .LVU2226
 7605 000e 030A     		lsrs	r3, r0, #8
 7606              	.LVL801:
2510:ad5940lib/ad5940.c ****   RdCLKEN1 |= (bit8<<8)|(bit9<<9);
 7607              		.loc 1 2510 3 is_stmt 1 view .LVU2227
2510:ad5940lib/ad5940.c ****   RdCLKEN1 |= (bit8<<8)|(bit9<<9);
 7608              		.loc 1 2510 12 is_stmt 0 view .LVU2228
 7609 0010 C1B2     		uxtb	r1, r0
 7610              	.LVL802:
2511:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
 7611              		.loc 1 2511 3 is_stmt 1 view .LVU2229
2511:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
 7612              		.loc 1 2511 20 is_stmt 0 view .LVU2230
 7613 0012 2402     		lsls	r4, r4, #8
 7614              	.LVL803:
2511:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
 7615              		.loc 1 2511 20 view .LVU2231
 7616 0014 04F48074 		and	r4, r4, #256
2511:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
 7617              		.loc 1 2511 30 view .LVU2232
 7618 0018 5B02     		lsls	r3, r3, #9
 7619              	.LVL804:
2511:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
 7620              		.loc 1 2511 30 view .LVU2233
 7621 001a 03F40073 		and	r3, r3, #512
2511:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
 7622              		.loc 1 2511 24 view .LVU2234
 7623 001e 1C43     		orrs	r4, r4, r3
2511:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKEN1,RdCLKEN1|BITM_AFECON_CLKEN1_ACLKDIS); /* Disable ACLK during cl
 7624              		.loc 1 2511 12 view .LVU2235
 7625 0020 0C43     		orrs	r4, r4, r1
 7626              	.LVL805:
2512:ad5940lib/ad5940.c **** 
 7627              		.loc 1 2512 3 is_stmt 1 view .LVU2236
 7628 0022 44F02001 		orr	r1, r4, #32
 7629 0026 4FF48260 		mov	r0, #1040
 7630              	.LVL806:
2512:ad5940lib/ad5940.c **** 
 7631              		.loc 1 2512 3 is_stmt 0 view .LVU2237
 7632 002a FFF7FEFF 		bl	AD5940_WriteReg
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 219


 7633              	.LVL807:
2514:ad5940lib/ad5940.c ****   if(Mode32MHz == bTRUE)
 7634              		.loc 1 2514 3 is_stmt 1 view .LVU2238
2514:ad5940lib/ad5940.c ****   if(Mode32MHz == bTRUE)
 7635              		.loc 1 2514 16 is_stmt 0 view .LVU2239
 7636 002e 42F2BC00 		movw	r0, #8380
 7637 0032 FFF7FEFF 		bl	AD5940_ReadReg
 7638              	.LVL808:
2515:ad5940lib/ad5940.c ****   {
 7639              		.loc 1 2515 3 is_stmt 1 view .LVU2240
2515:ad5940lib/ad5940.c ****   {
 7640              		.loc 1 2515 5 is_stmt 0 view .LVU2241
 7641 0036 012D     		cmp	r5, #1
 7642 0038 13D0     		beq	.L519
2522:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
 7643              		.loc 1 2522 5 is_stmt 1 view .LVU2242
 7644 003a 40F00401 		orr	r1, r0, #4
 7645 003e 42F2BC00 		movw	r0, #8380
 7646              	.LVL809:
2522:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
 7647              		.loc 1 2522 5 is_stmt 0 view .LVU2243
 7648 0042 FFF7FEFF 		bl	AD5940_WriteReg
 7649              	.LVL810:
2523:ad5940lib/ad5940.c ****   }
 7650              		.loc 1 2523 5 is_stmt 1 view .LVU2244
 7651              	.L517:
2523:ad5940lib/ad5940.c ****   }
 7652              		.loc 1 2523 77 discriminator 1 view .LVU2245
2523:ad5940lib/ad5940.c ****   }
 7653              		.loc 1 2523 10 discriminator 1 view .LVU2246
2523:ad5940lib/ad5940.c ****   }
 7654              		.loc 1 2523 12 is_stmt 0 discriminator 1 view .LVU2247
 7655 0046 4FF42160 		mov	r0, #2576
 7656 004a FFF7FEFF 		bl	AD5940_ReadReg
 7657              	.LVL811:
2523:ad5940lib/ad5940.c ****   }
 7658              		.loc 1 2523 10 discriminator 1 view .LVU2248
 7659 004e 10F4007F 		tst	r0, #512
 7660 0052 F8D0     		beq	.L517
 7661              	.L516:
2526:ad5940lib/ad5940.c **** }
 7662              		.loc 1 2526 3 is_stmt 1 view .LVU2249
 7663 0054 24F02001 		bic	r1, r4, #32
 7664 0058 4FF48260 		mov	r0, #1040
 7665 005c FFF7FEFF 		bl	AD5940_WriteReg
 7666              	.LVL812:
2527:ad5940lib/ad5940.c **** 
 7667              		.loc 1 2527 1 is_stmt 0 view .LVU2250
 7668 0060 38BD     		pop	{r3, r4, r5, pc}
 7669              	.LVL813:
 7670              	.L519:
2517:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
 7671              		.loc 1 2517 5 is_stmt 1 view .LVU2251
 7672 0062 20F00401 		bic	r1, r0, #4
 7673 0066 42F2BC00 		movw	r0, #8380
 7674              	.LVL814:
2517:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 220


 7675              		.loc 1 2517 5 is_stmt 0 view .LVU2252
 7676 006a FFF7FEFF 		bl	AD5940_WriteReg
 7677              	.LVL815:
2518:ad5940lib/ad5940.c ****   }
 7678              		.loc 1 2518 5 is_stmt 1 view .LVU2253
 7679              	.L515:
2518:ad5940lib/ad5940.c ****   }
 7680              		.loc 1 2518 77 discriminator 1 view .LVU2254
2518:ad5940lib/ad5940.c ****   }
 7681              		.loc 1 2518 10 discriminator 1 view .LVU2255
2518:ad5940lib/ad5940.c ****   }
 7682              		.loc 1 2518 12 is_stmt 0 discriminator 1 view .LVU2256
 7683 006e 4FF42160 		mov	r0, #2576
 7684 0072 FFF7FEFF 		bl	AD5940_ReadReg
 7685              	.LVL816:
2518:ad5940lib/ad5940.c ****   }
 7686              		.loc 1 2518 10 discriminator 1 view .LVU2257
 7687 0076 10F4007F 		tst	r0, #512
 7688 007a F8D0     		beq	.L515
 7689 007c EAE7     		b	.L516
 7690              		.cfi_endproc
 7691              	.LFE88:
 7693              		.section	.text.AD5940_CLKCfg,"ax",%progbits
 7694              		.align	1
 7695              		.global	AD5940_CLKCfg
 7696              		.syntax unified
 7697              		.thumb
 7698              		.thumb_func
 7699              		.fpu fpv5-d16
 7701              	AD5940_CLKCfg:
 7702              	.LVL817:
 7703              	.LFB87:
2436:ad5940lib/ad5940.c ****   uint32_t tempreg, reg_osccon;
 7704              		.loc 1 2436 1 is_stmt 1 view -0
 7705              		.cfi_startproc
 7706              		@ args = 0, pretend = 0, frame = 0
 7707              		@ frame_needed = 0, uses_anonymous_args = 0
2436:ad5940lib/ad5940.c ****   uint32_t tempreg, reg_osccon;
 7708              		.loc 1 2436 1 is_stmt 0 view .LVU2259
 7709 0000 38B5     		push	{r3, r4, r5, lr}
 7710              	.LCFI128:
 7711              		.cfi_def_cfa_offset 16
 7712              		.cfi_offset 3, -16
 7713              		.cfi_offset 4, -12
 7714              		.cfi_offset 5, -8
 7715              		.cfi_offset 14, -4
 7716 0002 0446     		mov	r4, r0
2437:ad5940lib/ad5940.c **** 
 7717              		.loc 1 2437 3 is_stmt 1 view .LVU2260
2439:ad5940lib/ad5940.c ****   /* Enable clocks */
 7718              		.loc 1 2439 3 view .LVU2261
2439:ad5940lib/ad5940.c ****   /* Enable clocks */
 7719              		.loc 1 2439 16 is_stmt 0 view .LVU2262
 7720 0004 4FF42160 		mov	r0, #2576
 7721              	.LVL818:
2439:ad5940lib/ad5940.c ****   /* Enable clocks */
 7722              		.loc 1 2439 16 view .LVU2263
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 221


 7723 0008 FFF7FEFF 		bl	AD5940_ReadReg
 7724              	.LVL819:
 7725 000c 0546     		mov	r5, r0
 7726              	.LVL820:
2441:ad5940lib/ad5940.c ****   {
 7727              		.loc 1 2441 3 is_stmt 1 view .LVU2264
2441:ad5940lib/ad5940.c ****   {
 7728              		.loc 1 2441 13 is_stmt 0 view .LVU2265
 7729 000e E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
2441:ad5940lib/ad5940.c ****   {
 7730              		.loc 1 2441 5 view .LVU2266
 7731 0010 012B     		cmp	r3, #1
 7732 0012 34D0     		beq	.L532
 7733              	.LVL821:
 7734              	.L521:
2449:ad5940lib/ad5940.c ****   {
 7735              		.loc 1 2449 3 is_stmt 1 view .LVU2267
2449:ad5940lib/ad5940.c ****   {
 7736              		.loc 1 2449 13 is_stmt 0 view .LVU2268
 7737 0014 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
2449:ad5940lib/ad5940.c ****   {
 7738              		.loc 1 2449 5 view .LVU2269
 7739 0016 012B     		cmp	r3, #1
 7740 0018 46D0     		beq	.L533
 7741              	.L523:
2462:ad5940lib/ad5940.c ****   {
 7742              		.loc 1 2462 3 is_stmt 1 view .LVU2270
2462:ad5940lib/ad5940.c ****   {
 7743              		.loc 1 2462 13 is_stmt 0 view .LVU2271
 7744 001a A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
2462:ad5940lib/ad5940.c ****   {
 7745              		.loc 1 2462 5 view .LVU2272
 7746 001c 012B     		cmp	r3, #1
 7747 001e 62D0     		beq	.L534
 7748              	.L526:
2472:ad5940lib/ad5940.c ****   tempreg |= (pClkCfg->SysClkDiv&0x3f) << BITP_AFECON_CLKCON0_SYSCLKDIV;
 7749              		.loc 1 2472 3 is_stmt 1 view .LVU2273
2472:ad5940lib/ad5940.c ****   tempreg |= (pClkCfg->SysClkDiv&0x3f) << BITP_AFECON_CLKCON0_SYSCLKDIV;
 7750              		.loc 1 2472 20 is_stmt 0 view .LVU2274
 7751 0020 A168     		ldr	r1, [r4, #8]
2472:ad5940lib/ad5940.c ****   tempreg |= (pClkCfg->SysClkDiv&0x3f) << BITP_AFECON_CLKCON0_SYSCLKDIV;
 7752              		.loc 1 2472 11 view .LVU2275
 7753 0022 01F03F01 		and	r1, r1, #63
 7754              	.LVL822:
2473:ad5940lib/ad5940.c ****   tempreg |= (pClkCfg->ADCClkDiv&0xf) << BITP_AFECON_CLKCON0_ADCCLKDIV;
 7755              		.loc 1 2473 3 is_stmt 1 view .LVU2276
2474:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKCON0, tempreg);
 7756              		.loc 1 2474 3 view .LVU2277
2474:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKCON0, tempreg);
 7757              		.loc 1 2474 22 is_stmt 0 view .LVU2278
 7758 0026 E368     		ldr	r3, [r4, #12]
2474:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKCON0, tempreg);
 7759              		.loc 1 2474 39 view .LVU2279
 7760 0028 9B01     		lsls	r3, r3, #6
 7761 002a 03F47073 		and	r3, r3, #960
 7762              	.LVL823:
2475:ad5940lib/ad5940.c ****   AD5940_Delay10us(10);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 222


 7763              		.loc 1 2475 3 is_stmt 1 view .LVU2280
 7764 002e 1943     		orrs	r1, r1, r3
 7765              	.LVL824:
2475:ad5940lib/ad5940.c ****   AD5940_Delay10us(10);
 7766              		.loc 1 2475 3 is_stmt 0 view .LVU2281
 7767 0030 4FF48160 		mov	r0, #1032
 7768 0034 FFF7FEFF 		bl	AD5940_WriteReg
 7769              	.LVL825:
2476:ad5940lib/ad5940.c ****   /* Step2. set clock source */
 7770              		.loc 1 2476 3 is_stmt 1 view .LVU2282
 7771 0038 0A20     		movs	r0, #10
 7772 003a FFF7FEFF 		bl	AD5940_Delay10us
 7773              	.LVL826:
2478:ad5940lib/ad5940.c ****   tempreg |= pClkCfg->ADCCLkSrc << BITP_AFECON_CLKSEL_ADCCLKSEL;
 7774              		.loc 1 2478 3 view .LVU2283
2478:ad5940lib/ad5940.c ****   tempreg |= pClkCfg->ADCCLkSrc << BITP_AFECON_CLKSEL_ADCCLKSEL;
 7775              		.loc 1 2478 11 is_stmt 0 view .LVU2284
 7776 003e 2368     		ldr	r3, [r4]
 7777              	.LVL827:
2479:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKSEL, tempreg);
 7778              		.loc 1 2479 3 is_stmt 1 view .LVU2285
2479:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_CLKSEL, tempreg);
 7779              		.loc 1 2479 21 is_stmt 0 view .LVU2286
 7780 0040 6168     		ldr	r1, [r4, #4]
 7781              	.LVL828:
2480:ad5940lib/ad5940.c **** 
 7782              		.loc 1 2480 3 is_stmt 1 view .LVU2287
 7783 0042 43EA8101 		orr	r1, r3, r1, lsl #2
 7784              	.LVL829:
2480:ad5940lib/ad5940.c **** 
 7785              		.loc 1 2480 3 is_stmt 0 view .LVU2288
 7786 0046 40F21440 		movw	r0, #1044
 7787 004a FFF7FEFF 		bl	AD5940_WriteReg
 7788              	.LVL830:
2483:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFXTALEN;
 7789              		.loc 1 2483 3 is_stmt 1 view .LVU2289
2483:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFXTALEN;
 7790              		.loc 1 2483 13 is_stmt 0 view .LVU2290
 7791 004e E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
2483:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFXTALEN;
 7792              		.loc 1 2483 5 view .LVU2291
 7793 0050 0BB9     		cbnz	r3, .L528
2484:ad5940lib/ad5940.c ****   if(pClkCfg->HFOSCEn == bFALSE)
 7794              		.loc 1 2484 5 is_stmt 1 view .LVU2292
2484:ad5940lib/ad5940.c ****   if(pClkCfg->HFOSCEn == bFALSE)
 7795              		.loc 1 2484 16 is_stmt 0 view .LVU2293
 7796 0052 25F00405 		bic	r5, r5, #4
 7797              	.LVL831:
 7798              	.L528:
2485:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFOSCEN;
 7799              		.loc 1 2485 3 is_stmt 1 view .LVU2294
2485:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFOSCEN;
 7800              		.loc 1 2485 13 is_stmt 0 view .LVU2295
 7801 0056 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
2485:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_HFOSCEN;
 7802              		.loc 1 2485 5 view .LVU2296
 7803 0058 0BB9     		cbnz	r3, .L529
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 223


2486:ad5940lib/ad5940.c ****   if(pClkCfg->LFOSCEn == bFALSE)
 7804              		.loc 1 2486 5 is_stmt 1 view .LVU2297
2486:ad5940lib/ad5940.c ****   if(pClkCfg->LFOSCEn == bFALSE)
 7805              		.loc 1 2486 16 is_stmt 0 view .LVU2298
 7806 005a 25F00205 		bic	r5, r5, #2
 7807              	.LVL832:
 7808              	.L529:
2487:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_LFOSCEN;
 7809              		.loc 1 2487 3 is_stmt 1 view .LVU2299
2487:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_LFOSCEN;
 7810              		.loc 1 2487 13 is_stmt 0 view .LVU2300
 7811 005e A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
2487:ad5940lib/ad5940.c ****     reg_osccon &= ~BITM_ALLON_OSCCON_LFOSCEN;
 7812              		.loc 1 2487 5 view .LVU2301
 7813 0060 0BB9     		cbnz	r3, .L530
2488:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_OSCKEY, KEY_OSCCON); /* Write Key */
 7814              		.loc 1 2488 5 is_stmt 1 view .LVU2302
2488:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_OSCKEY, KEY_OSCCON); /* Write Key */
 7815              		.loc 1 2488 16 is_stmt 0 view .LVU2303
 7816 0062 25F00105 		bic	r5, r5, #1
 7817              	.LVL833:
 7818              	.L530:
2489:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon);
 7819              		.loc 1 2489 3 is_stmt 1 view .LVU2304
 7820 0066 4CF61431 		movw	r1, #51988
 7821 006a 40F60C20 		movw	r0, #2572
 7822 006e FFF7FEFF 		bl	AD5940_WriteReg
 7823              	.LVL834:
2490:ad5940lib/ad5940.c **** }
 7824              		.loc 1 2490 3 view .LVU2305
 7825 0072 2946     		mov	r1, r5
 7826 0074 4FF42160 		mov	r0, #2576
 7827 0078 FFF7FEFF 		bl	AD5940_WriteReg
 7828              	.LVL835:
2491:ad5940lib/ad5940.c **** 
 7829              		.loc 1 2491 1 is_stmt 0 view .LVU2306
 7830 007c 38BD     		pop	{r3, r4, r5, pc}
 7831              	.LVL836:
 7832              	.L532:
2443:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */
 7833              		.loc 1 2443 5 is_stmt 1 view .LVU2307
2443:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */
 7834              		.loc 1 2443 16 is_stmt 0 view .LVU2308
 7835 007e 40F00405 		orr	r5, r0, #4
 7836              	.LVL837:
2444:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable HFXTAL */
 7837              		.loc 1 2444 5 is_stmt 1 view .LVU2309
 7838 0082 4CF61431 		movw	r1, #51988
 7839 0086 40F60C20 		movw	r0, #2572
 7840 008a FFF7FEFF 		bl	AD5940_WriteReg
 7841              	.LVL838:
2445:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFXTALOK) == 0); /* Wait for clock re
 7842              		.loc 1 2445 5 view .LVU2310
 7843 008e 2946     		mov	r1, r5
 7844 0090 4FF42160 		mov	r0, #2576
 7845 0094 FFF7FEFF 		bl	AD5940_WriteReg
 7846              	.LVL839:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 224


2446:ad5940lib/ad5940.c ****   }
 7847              		.loc 1 2446 5 view .LVU2311
 7848              	.L522:
2446:ad5940lib/ad5940.c ****   }
 7849              		.loc 1 2446 78 discriminator 1 view .LVU2312
2446:ad5940lib/ad5940.c ****   }
 7850              		.loc 1 2446 10 discriminator 1 view .LVU2313
2446:ad5940lib/ad5940.c ****   }
 7851              		.loc 1 2446 12 is_stmt 0 discriminator 1 view .LVU2314
 7852 0098 4FF42160 		mov	r0, #2576
 7853 009c FFF7FEFF 		bl	AD5940_ReadReg
 7854              	.LVL840:
2446:ad5940lib/ad5940.c ****   }
 7855              		.loc 1 2446 10 discriminator 1 view .LVU2315
 7856 00a0 10F4806F 		tst	r0, #1024
 7857 00a4 F8D0     		beq	.L522
 7858 00a6 B5E7     		b	.L521
 7859              	.L533:
2451:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */
 7860              		.loc 1 2451 5 is_stmt 1 view .LVU2316
2451:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */
 7861              		.loc 1 2451 16 is_stmt 0 view .LVU2317
 7862 00a8 45F00205 		orr	r5, r5, #2
 7863              	.LVL841:
2452:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable HFOSC */
 7864              		.loc 1 2452 5 is_stmt 1 view .LVU2318
 7865 00ac 4CF61431 		movw	r1, #51988
 7866 00b0 40F60C20 		movw	r0, #2572
 7867 00b4 FFF7FEFF 		bl	AD5940_WriteReg
 7868              	.LVL842:
2453:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_HFOSCOK) == 0); /* Wait for clock rea
 7869              		.loc 1 2453 5 view .LVU2319
 7870 00b8 2946     		mov	r1, r5
 7871 00ba 4FF42160 		mov	r0, #2576
 7872 00be FFF7FEFF 		bl	AD5940_WriteReg
 7873              	.LVL843:
2454:ad5940lib/ad5940.c ****     /* Configure HFOSC mode if it's enabled. */
 7874              		.loc 1 2454 5 view .LVU2320
 7875              	.L524:
2454:ad5940lib/ad5940.c ****     /* Configure HFOSC mode if it's enabled. */
 7876              		.loc 1 2454 77 discriminator 1 view .LVU2321
2454:ad5940lib/ad5940.c ****     /* Configure HFOSC mode if it's enabled. */
 7877              		.loc 1 2454 10 discriminator 1 view .LVU2322
2454:ad5940lib/ad5940.c ****     /* Configure HFOSC mode if it's enabled. */
 7878              		.loc 1 2454 12 is_stmt 0 discriminator 1 view .LVU2323
 7879 00c2 4FF42160 		mov	r0, #2576
 7880 00c6 FFF7FEFF 		bl	AD5940_ReadReg
 7881              	.LVL844:
2454:ad5940lib/ad5940.c ****     /* Configure HFOSC mode if it's enabled. */
 7882              		.loc 1 2454 10 discriminator 1 view .LVU2324
 7883 00ca 10F4007F 		tst	r0, #512
 7884 00ce F8D0     		beq	.L524
2456:ad5940lib/ad5940.c ****       AD5940_HFOSC32MHzCtrl(bTRUE);
 7885              		.loc 1 2456 5 is_stmt 1 view .LVU2325
2456:ad5940lib/ad5940.c ****       AD5940_HFOSC32MHzCtrl(bTRUE);
 7886              		.loc 1 2456 15 is_stmt 0 view .LVU2326
 7887 00d0 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 225


2456:ad5940lib/ad5940.c ****       AD5940_HFOSC32MHzCtrl(bTRUE);
 7888              		.loc 1 2456 7 view .LVU2327
 7889 00d2 012B     		cmp	r3, #1
 7890 00d4 03D0     		beq	.L535
2459:ad5940lib/ad5940.c ****   }
 7891              		.loc 1 2459 7 is_stmt 1 view .LVU2328
 7892 00d6 0020     		movs	r0, #0
 7893 00d8 FFF7FEFF 		bl	AD5940_HFOSC32MHzCtrl
 7894              	.LVL845:
 7895 00dc 9DE7     		b	.L523
 7896              	.L535:
2457:ad5940lib/ad5940.c ****     else
 7897              		.loc 1 2457 7 view .LVU2329
 7898 00de 0120     		movs	r0, #1
 7899 00e0 FFF7FEFF 		bl	AD5940_HFOSC32MHzCtrl
 7900              	.LVL846:
 7901 00e4 99E7     		b	.L523
 7902              	.L534:
2464:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */  
 7903              		.loc 1 2464 5 view .LVU2330
2464:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCKEY,KEY_OSCCON); /* Write Key */  
 7904              		.loc 1 2464 16 is_stmt 0 view .LVU2331
 7905 00e6 45F00105 		orr	r5, r5, #1
 7906              	.LVL847:
2465:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_ALLON_OSCCON, reg_osccon); /* Enable LFOSC */
 7907              		.loc 1 2465 5 is_stmt 1 view .LVU2332
 7908 00ea 4CF61431 		movw	r1, #51988
 7909 00ee 40F60C20 		movw	r0, #2572
 7910 00f2 FFF7FEFF 		bl	AD5940_WriteReg
 7911              	.LVL848:
2466:ad5940lib/ad5940.c ****     while((AD5940_ReadReg(REG_ALLON_OSCCON)&BITM_ALLON_OSCCON_LFOSCOK) == 0); /* Wait for clock rea
 7912              		.loc 1 2466 5 view .LVU2333
 7913 00f6 2946     		mov	r1, r5
 7914 00f8 4FF42160 		mov	r0, #2576
 7915 00fc FFF7FEFF 		bl	AD5940_WriteReg
 7916              	.LVL849:
2467:ad5940lib/ad5940.c ****   }
 7917              		.loc 1 2467 5 view .LVU2334
 7918              	.L527:
2467:ad5940lib/ad5940.c ****   }
 7919              		.loc 1 2467 77 discriminator 1 view .LVU2335
2467:ad5940lib/ad5940.c ****   }
 7920              		.loc 1 2467 10 discriminator 1 view .LVU2336
2467:ad5940lib/ad5940.c ****   }
 7921              		.loc 1 2467 12 is_stmt 0 discriminator 1 view .LVU2337
 7922 0100 4FF42160 		mov	r0, #2576
 7923 0104 FFF7FEFF 		bl	AD5940_ReadReg
 7924              	.LVL850:
2467:ad5940lib/ad5940.c ****   }
 7925              		.loc 1 2467 10 discriminator 1 view .LVU2338
 7926 0108 10F4807F 		tst	r0, #256
 7927 010c F8D0     		beq	.L527
 7928 010e 87E7     		b	.L526
 7929              		.cfi_endproc
 7930              	.LFE87:
 7932              		.section	.text.AD5940_INTCCfg,"ax",%progbits
 7933              		.align	1
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 226


 7934              		.global	AD5940_INTCCfg
 7935              		.syntax unified
 7936              		.thumb
 7937              		.thumb_func
 7938              		.fpu fpv5-d16
 7940              	AD5940_INTCCfg:
 7941              	.LVL851:
 7942              	.LFB89:
2580:ad5940lib/ad5940.c ****   uint32_t tempreg;
 7943              		.loc 1 2580 1 is_stmt 1 view -0
 7944              		.cfi_startproc
 7945              		@ args = 0, pretend = 0, frame = 0
 7946              		@ frame_needed = 0, uses_anonymous_args = 0
2580:ad5940lib/ad5940.c ****   uint32_t tempreg;
 7947              		.loc 1 2580 1 is_stmt 0 view .LVU2340
 7948 0000 70B5     		push	{r4, r5, r6, lr}
 7949              	.LCFI129:
 7950              		.cfi_def_cfa_offset 16
 7951              		.cfi_offset 4, -16
 7952              		.cfi_offset 5, -12
 7953              		.cfi_offset 6, -8
 7954              		.cfi_offset 14, -4
 7955 0002 0D46     		mov	r5, r1
 7956 0004 1646     		mov	r6, r2
2581:ad5940lib/ad5940.c ****   uint32_t regaddr = REG_INTC_INTCSEL0;
 7957              		.loc 1 2581 3 is_stmt 1 view .LVU2341
2582:ad5940lib/ad5940.c ****   
 7958              		.loc 1 2582 3 view .LVU2342
 7959              	.LVL852:
2584:ad5940lib/ad5940.c ****     regaddr = REG_INTC_INTCSEL1;
 7960              		.loc 1 2584 3 view .LVU2343
2584:ad5940lib/ad5940.c ****     regaddr = REG_INTC_INTCSEL1;
 7961              		.loc 1 2584 5 is_stmt 0 view .LVU2344
 7962 0006 0128     		cmp	r0, #1
 7963 0008 0DD0     		beq	.L540
2582:ad5940lib/ad5940.c ****   
 7964              		.loc 1 2582 12 view .LVU2345
 7965 000a 43F20804 		movw	r4, #12296
 7966              	.L537:
 7967              	.LVL853:
2587:ad5940lib/ad5940.c ****   if(State == bTRUE)
 7968              		.loc 1 2587 3 is_stmt 1 view .LVU2346
2587:ad5940lib/ad5940.c ****   if(State == bTRUE)
 7969              		.loc 1 2587 13 is_stmt 0 view .LVU2347
 7970 000e A4B2     		uxth	r4, r4
 7971              	.LVL854:
2587:ad5940lib/ad5940.c ****   if(State == bTRUE)
 7972              		.loc 1 2587 13 view .LVU2348
 7973 0010 2046     		mov	r0, r4
 7974              	.LVL855:
2587:ad5940lib/ad5940.c ****   if(State == bTRUE)
 7975              		.loc 1 2587 13 view .LVU2349
 7976 0012 FFF7FEFF 		bl	AD5940_ReadReg
 7977              	.LVL856:
2588:ad5940lib/ad5940.c ****     tempreg |= AFEIntSrc;    /* Enable this interrupt */
 7978              		.loc 1 2588 3 is_stmt 1 view .LVU2350
2588:ad5940lib/ad5940.c ****     tempreg |= AFEIntSrc;    /* Enable this interrupt */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 227


 7979              		.loc 1 2588 5 is_stmt 0 view .LVU2351
 7980 0016 012E     		cmp	r6, #1
 7981 0018 08D0     		beq	.L542
2591:ad5940lib/ad5940.c ****   AD5940_WriteReg(regaddr,tempreg);
 7982              		.loc 1 2591 5 is_stmt 1 view .LVU2352
2591:ad5940lib/ad5940.c ****   AD5940_WriteReg(regaddr,tempreg);
 7983              		.loc 1 2591 13 is_stmt 0 view .LVU2353
 7984 001a 20EA0501 		bic	r1, r0, r5
 7985              	.LVL857:
 7986              	.L539:
2592:ad5940lib/ad5940.c **** }
 7987              		.loc 1 2592 3 is_stmt 1 view .LVU2354
 7988 001e 2046     		mov	r0, r4
 7989 0020 FFF7FEFF 		bl	AD5940_WriteReg
 7990              	.LVL858:
2593:ad5940lib/ad5940.c **** 
 7991              		.loc 1 2593 1 is_stmt 0 view .LVU2355
 7992 0024 70BD     		pop	{r4, r5, r6, pc}
 7993              	.LVL859:
 7994              	.L540:
2585:ad5940lib/ad5940.c ****   
 7995              		.loc 1 2585 13 view .LVU2356
 7996 0026 43F20C04 		movw	r4, #12300
 7997 002a F0E7     		b	.L537
 7998              	.LVL860:
 7999              	.L542:
2589:ad5940lib/ad5940.c ****   else
 8000              		.loc 1 2589 5 is_stmt 1 view .LVU2357
2589:ad5940lib/ad5940.c ****   else
 8001              		.loc 1 2589 13 is_stmt 0 view .LVU2358
 8002 002c 40EA0501 		orr	r1, r0, r5
 8003              	.LVL861:
2589:ad5940lib/ad5940.c ****   else
 8004              		.loc 1 2589 13 view .LVU2359
 8005 0030 F5E7     		b	.L539
 8006              		.cfi_endproc
 8007              	.LFE89:
 8009              		.section	.text.AD5940_INTCGetCfg,"ax",%progbits
 8010              		.align	1
 8011              		.global	AD5940_INTCGetCfg
 8012              		.syntax unified
 8013              		.thumb
 8014              		.thumb_func
 8015              		.fpu fpv5-d16
 8017              	AD5940_INTCGetCfg:
 8018              	.LVL862:
 8019              	.LFB90:
2602:ad5940lib/ad5940.c ****   uint32_t tempreg;
 8020              		.loc 1 2602 1 is_stmt 1 view -0
 8021              		.cfi_startproc
 8022              		@ args = 0, pretend = 0, frame = 0
 8023              		@ frame_needed = 0, uses_anonymous_args = 0
2602:ad5940lib/ad5940.c ****   uint32_t tempreg;
 8024              		.loc 1 2602 1 is_stmt 0 view .LVU2361
 8025 0000 08B5     		push	{r3, lr}
 8026              	.LCFI130:
 8027              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 228


 8028              		.cfi_offset 3, -8
 8029              		.cfi_offset 14, -4
2603:ad5940lib/ad5940.c ****   if(AfeIntcSel == AFEINTC_0)
 8030              		.loc 1 2603 3 is_stmt 1 view .LVU2362
2604:ad5940lib/ad5940.c ****     tempreg = AD5940_ReadReg(REG_INTC_INTCSEL0);
 8031              		.loc 1 2604 3 view .LVU2363
2604:ad5940lib/ad5940.c ****     tempreg = AD5940_ReadReg(REG_INTC_INTCSEL0);
 8032              		.loc 1 2604 5 is_stmt 0 view .LVU2364
 8033 0002 20B9     		cbnz	r0, .L544
2605:ad5940lib/ad5940.c ****   else
 8034              		.loc 1 2605 5 is_stmt 1 view .LVU2365
2605:ad5940lib/ad5940.c ****   else
 8035              		.loc 1 2605 15 is_stmt 0 view .LVU2366
 8036 0004 43F20800 		movw	r0, #12296
 8037              	.LVL863:
2605:ad5940lib/ad5940.c ****   else
 8038              		.loc 1 2605 15 view .LVU2367
 8039 0008 FFF7FEFF 		bl	AD5940_ReadReg
 8040              	.LVL864:
 8041              	.L543:
2609:ad5940lib/ad5940.c **** 
 8042              		.loc 1 2609 1 view .LVU2368
 8043 000c 08BD     		pop	{r3, pc}
 8044              	.LVL865:
 8045              	.L544:
2607:ad5940lib/ad5940.c ****   return tempreg;
 8046              		.loc 1 2607 5 is_stmt 1 view .LVU2369
2607:ad5940lib/ad5940.c ****   return tempreg;
 8047              		.loc 1 2607 15 is_stmt 0 view .LVU2370
 8048 000e 43F20C00 		movw	r0, #12300
 8049              	.LVL866:
2607:ad5940lib/ad5940.c ****   return tempreg;
 8050              		.loc 1 2607 15 view .LVU2371
 8051 0012 FFF7FEFF 		bl	AD5940_ReadReg
 8052              	.LVL867:
2608:ad5940lib/ad5940.c **** }
 8053              		.loc 1 2608 3 is_stmt 1 view .LVU2372
2608:ad5940lib/ad5940.c **** }
 8054              		.loc 1 2608 10 is_stmt 0 view .LVU2373
 8055 0016 F9E7     		b	.L543
 8056              		.cfi_endproc
 8057              	.LFE90:
 8059              		.section	.text.AD5940_INTCClrFlag,"ax",%progbits
 8060              		.align	1
 8061              		.global	AD5940_INTCClrFlag
 8062              		.syntax unified
 8063              		.thumb
 8064              		.thumb_func
 8065              		.fpu fpv5-d16
 8067              	AD5940_INTCClrFlag:
 8068              	.LVL868:
 8069              	.LFB91:
2617:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_INTC_INTCCLR,AfeIntSrcSel);
 8070              		.loc 1 2617 1 is_stmt 1 view -0
 8071              		.cfi_startproc
 8072              		@ args = 0, pretend = 0, frame = 0
 8073              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 229


2617:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_INTC_INTCCLR,AfeIntSrcSel);
 8074              		.loc 1 2617 1 is_stmt 0 view .LVU2375
 8075 0000 08B5     		push	{r3, lr}
 8076              	.LCFI131:
 8077              		.cfi_def_cfa_offset 8
 8078              		.cfi_offset 3, -8
 8079              		.cfi_offset 14, -4
 8080 0002 0146     		mov	r1, r0
2618:ad5940lib/ad5940.c **** }
 8081              		.loc 1 2618 3 is_stmt 1 view .LVU2376
 8082 0004 43F20400 		movw	r0, #12292
 8083              	.LVL869:
2618:ad5940lib/ad5940.c **** }
 8084              		.loc 1 2618 3 is_stmt 0 view .LVU2377
 8085 0008 FFF7FEFF 		bl	AD5940_WriteReg
 8086              	.LVL870:
2619:ad5940lib/ad5940.c **** 
 8087              		.loc 1 2619 1 view .LVU2378
 8088 000c 08BD     		pop	{r3, pc}
 8089              		.cfi_endproc
 8090              	.LFE91:
 8092              		.section	.text.AD5940_INTCTestFlag,"ax",%progbits
 8093              		.align	1
 8094              		.global	AD5940_INTCTestFlag
 8095              		.syntax unified
 8096              		.thumb
 8097              		.thumb_func
 8098              		.fpu fpv5-d16
 8100              	AD5940_INTCTestFlag:
 8101              	.LVL871:
 8102              	.LFB92:
2630:ad5940lib/ad5940.c ****   uint32_t tempreg;
 8103              		.loc 1 2630 1 is_stmt 1 view -0
 8104              		.cfi_startproc
 8105              		@ args = 0, pretend = 0, frame = 0
 8106              		@ frame_needed = 0, uses_anonymous_args = 0
2630:ad5940lib/ad5940.c ****   uint32_t tempreg;
 8107              		.loc 1 2630 1 is_stmt 0 view .LVU2380
 8108 0000 10B5     		push	{r4, lr}
 8109              	.LCFI132:
 8110              		.cfi_def_cfa_offset 8
 8111              		.cfi_offset 4, -8
 8112              		.cfi_offset 14, -4
 8113 0002 0C46     		mov	r4, r1
2631:ad5940lib/ad5940.c ****   uint32_t regaddr = (AfeIntcSel == AFEINTC_0)? REG_INTC_INTCFLAG0: REG_INTC_INTCFLAG1;
 8114              		.loc 1 2631 3 is_stmt 1 view .LVU2381
2632:ad5940lib/ad5940.c ****   
 8115              		.loc 1 2632 3 view .LVU2382
2632:ad5940lib/ad5940.c ****   
 8116              		.loc 1 2632 67 is_stmt 0 view .LVU2383
 8117 0004 38B9     		cbnz	r0, .L552
 8118 0006 43F21000 		movw	r0, #12304
 8119              	.LVL872:
 8120              	.L550:
2634:ad5940lib/ad5940.c ****   if(tempreg & AfeIntSrcSel)
 8121              		.loc 1 2634 3 is_stmt 1 discriminator 4 view .LVU2384
2634:ad5940lib/ad5940.c ****   if(tempreg & AfeIntSrcSel)
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 230


 8122              		.loc 1 2634 13 is_stmt 0 discriminator 4 view .LVU2385
 8123 000a FFF7FEFF 		bl	AD5940_ReadReg
 8124              	.LVL873:
2635:ad5940lib/ad5940.c ****     return bTRUE;
 8125              		.loc 1 2635 3 is_stmt 1 discriminator 4 view .LVU2386
2635:ad5940lib/ad5940.c ****     return bTRUE;
 8126              		.loc 1 2635 5 is_stmt 0 discriminator 4 view .LVU2387
 8127 000e 2042     		tst	r0, r4
 8128 0010 04D0     		beq	.L553
2636:ad5940lib/ad5940.c ****   else
 8129              		.loc 1 2636 12 view .LVU2388
 8130 0012 0120     		movs	r0, #1
 8131              	.LVL874:
 8132              	.L551:
2639:ad5940lib/ad5940.c **** 
 8133              		.loc 1 2639 1 view .LVU2389
 8134 0014 10BD     		pop	{r4, pc}
 8135              	.LVL875:
 8136              	.L552:
2632:ad5940lib/ad5940.c ****   
 8137              		.loc 1 2632 67 view .LVU2390
 8138 0016 43F21400 		movw	r0, #12308
 8139              	.LVL876:
2632:ad5940lib/ad5940.c ****   
 8140              		.loc 1 2632 67 view .LVU2391
 8141 001a F6E7     		b	.L550
 8142              	.LVL877:
 8143              	.L553:
2638:ad5940lib/ad5940.c **** }
 8144              		.loc 1 2638 12 view .LVU2392
 8145 001c 0020     		movs	r0, #0
 8146              	.LVL878:
2638:ad5940lib/ad5940.c **** }
 8147              		.loc 1 2638 12 view .LVU2393
 8148 001e F9E7     		b	.L551
 8149              		.cfi_endproc
 8150              	.LFE92:
 8152              		.section	.text.__AD5940_TakeMeasurement,"ax",%progbits
 8153              		.align	1
 8154              		.syntax unified
 8155              		.thumb
 8156              		.thumb_func
 8157              		.fpu fpv5-d16
 8159              	__AD5940_TakeMeasurement:
 8160              	.LVL879:
 8161              	.LFB114:
2960:ad5940lib/ad5940.c **** 
2961:ad5940lib/ad5940.c **** /**
2962:ad5940lib/ad5940.c ****  * @brief Turn on ADC to sample one SINC2 data.
2963:ad5940lib/ad5940.c ****  * @return return ADCCode.
2964:ad5940lib/ad5940.c **** */
2965:ad5940lib/ad5940.c **** static uint32_t __AD5940_TakeMeasurement(int32_t *time_out)
2966:ad5940lib/ad5940.c **** {
 8162              		.loc 1 2966 1 is_stmt 1 view -0
 8163              		.cfi_startproc
 8164              		@ args = 0, pretend = 0, frame = 0
 8165              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 231


 8166              		.loc 1 2966 1 is_stmt 0 view .LVU2395
 8167 0000 10B5     		push	{r4, lr}
 8168              	.LCFI133:
 8169              		.cfi_def_cfa_offset 8
 8170              		.cfi_offset 4, -8
 8171              		.cfi_offset 14, -4
 8172 0002 0446     		mov	r4, r0
2967:ad5940lib/ad5940.c ****   uint32_t ADCCode = 0;
 8173              		.loc 1 2967 3 is_stmt 1 view .LVU2396
 8174              	.LVL880:
2968:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_SINC2RDY);
 8175              		.loc 1 2968 3 view .LVU2397
 8176 0004 0420     		movs	r0, #4
 8177              	.LVL881:
 8178              		.loc 1 2968 3 is_stmt 0 view .LVU2398
 8179 0006 FFF7FEFF 		bl	AD5940_INTCClrFlag
 8180              	.LVL882:
2969:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_SINC2NOTCH, bTRUE);/* Start conversion */
 8181              		.loc 1 2969 3 is_stmt 1 view .LVU2399
 8182 000a 0121     		movs	r1, #1
 8183 000c 1048     		ldr	r0, .L564
 8184 000e FFF7FEFF 		bl	AD5940_AFECtrlS
 8185              	.LVL883:
 8186 0012 0DE0     		b	.L559
 8187              	.L562:
2970:ad5940lib/ad5940.c ****   do
2971:ad5940lib/ad5940.c ****   {
2972:ad5940lib/ad5940.c ****     AD5940_Delay10us(1);  /* Delay 10us */
2973:ad5940lib/ad5940.c ****     if(AD5940_INTCTestFlag(AFEINTC_1,AFEINTSRC_SINC2RDY))
2974:ad5940lib/ad5940.c ****     {
2975:ad5940lib/ad5940.c ****         ADCCode = AD5940_ReadAfeResult(AFERESULT_SINC2);
 8188              		.loc 1 2975 9 view .LVU2400
 8189              		.loc 1 2975 19 is_stmt 0 view .LVU2401
 8190 0014 0120     		movs	r0, #1
 8191 0016 FFF7FEFF 		bl	AD5940_ReadAfeResult
 8192              	.LVL884:
 8193 001a 0446     		mov	r4, r0
 8194              	.LVL885:
2976:ad5940lib/ad5940.c ****         break;
 8195              		.loc 1 2976 9 is_stmt 1 view .LVU2402
 8196              	.L557:
2977:ad5940lib/ad5940.c ****     }
2978:ad5940lib/ad5940.c ****     if(*time_out != -1)
2979:ad5940lib/ad5940.c ****       (*time_out)--;	
2980:ad5940lib/ad5940.c ****   }while(*time_out != 0);
2981:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_SINC2NOTCH, bFALSE);/* Stop conversion */
 8197              		.loc 1 2981 3 view .LVU2403
 8198 001c 0021     		movs	r1, #0
 8199 001e 0C48     		ldr	r0, .L564
 8200 0020 FFF7FEFF 		bl	AD5940_AFECtrlS
 8201              	.LVL886:
2982:ad5940lib/ad5940.c ****   return ADCCode;
 8202              		.loc 1 2982 3 view .LVU2404
2983:ad5940lib/ad5940.c **** }
 8203              		.loc 1 2983 1 is_stmt 0 view .LVU2405
 8204 0024 2046     		mov	r0, r4
 8205 0026 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 232


 8206              	.LVL887:
 8207              	.L563:
2979:ad5940lib/ad5940.c ****   }while(*time_out != 0);
 8208              		.loc 1 2979 7 is_stmt 1 view .LVU2406
2979:ad5940lib/ad5940.c ****   }while(*time_out != 0);
 8209              		.loc 1 2979 18 is_stmt 0 view .LVU2407
 8210 0028 013B     		subs	r3, r3, #1
 8211 002a 2360     		str	r3, [r4]
 8212              	.L558:
2980:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_SINC2NOTCH, bFALSE);/* Stop conversion */
 8213              		.loc 1 2980 9 is_stmt 1 view .LVU2408
2980:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_SINC2NOTCH, bFALSE);/* Stop conversion */
 8214              		.loc 1 2980 10 is_stmt 0 view .LVU2409
 8215 002c 2368     		ldr	r3, [r4]
2980:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_SINC2NOTCH, bFALSE);/* Stop conversion */
 8216              		.loc 1 2980 3 view .LVU2410
 8217 002e 6BB1     		cbz	r3, .L561
 8218              	.L559:
2970:ad5940lib/ad5940.c ****   {
 8219              		.loc 1 2970 3 is_stmt 1 view .LVU2411
2972:ad5940lib/ad5940.c ****     if(AD5940_INTCTestFlag(AFEINTC_1,AFEINTSRC_SINC2RDY))
 8220              		.loc 1 2972 5 view .LVU2412
 8221 0030 0120     		movs	r0, #1
 8222 0032 FFF7FEFF 		bl	AD5940_Delay10us
 8223              	.LVL888:
2973:ad5940lib/ad5940.c ****     {
 8224              		.loc 1 2973 5 view .LVU2413
2973:ad5940lib/ad5940.c ****     {
 8225              		.loc 1 2973 8 is_stmt 0 view .LVU2414
 8226 0036 0421     		movs	r1, #4
 8227 0038 0120     		movs	r0, #1
 8228 003a FFF7FEFF 		bl	AD5940_INTCTestFlag
 8229              	.LVL889:
2973:ad5940lib/ad5940.c ****     {
 8230              		.loc 1 2973 7 view .LVU2415
 8231 003e 0028     		cmp	r0, #0
 8232 0040 E8D1     		bne	.L562
2978:ad5940lib/ad5940.c ****       (*time_out)--;	
 8233              		.loc 1 2978 5 is_stmt 1 view .LVU2416
2978:ad5940lib/ad5940.c ****       (*time_out)--;	
 8234              		.loc 1 2978 8 is_stmt 0 view .LVU2417
 8235 0042 2368     		ldr	r3, [r4]
2978:ad5940lib/ad5940.c ****       (*time_out)--;	
 8236              		.loc 1 2978 7 view .LVU2418
 8237 0044 B3F1FF3F 		cmp	r3, #-1
 8238 0048 EED1     		bne	.L563
 8239 004a EFE7     		b	.L558
 8240              	.L561:
2967:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_SINC2RDY);
 8241              		.loc 1 2967 12 view .LVU2419
 8242 004c 0024     		movs	r4, #0
 8243              	.LVL890:
2967:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_SINC2RDY);
 8244              		.loc 1 2967 12 view .LVU2420
 8245 004e E5E7     		b	.L557
 8246              	.L565:
 8247              		.align	2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 233


 8248              	.L564:
 8249 0050 00010100 		.word	65792
 8250              		.cfi_endproc
 8251              	.LFE114:
 8253              		.section	.text.AD5940_INTCGetFlag,"ax",%progbits
 8254              		.align	1
 8255              		.global	AD5940_INTCGetFlag
 8256              		.syntax unified
 8257              		.thumb
 8258              		.thumb_func
 8259              		.fpu fpv5-d16
 8261              	AD5940_INTCGetFlag:
 8262              	.LVL891:
 8263              	.LFB93:
2649:ad5940lib/ad5940.c ****   uint32_t tempreg;
 8264              		.loc 1 2649 1 is_stmt 1 view -0
 8265              		.cfi_startproc
 8266              		@ args = 0, pretend = 0, frame = 0
 8267              		@ frame_needed = 0, uses_anonymous_args = 0
2649:ad5940lib/ad5940.c ****   uint32_t tempreg;
 8268              		.loc 1 2649 1 is_stmt 0 view .LVU2422
 8269 0000 08B5     		push	{r3, lr}
 8270              	.LCFI134:
 8271              		.cfi_def_cfa_offset 8
 8272              		.cfi_offset 3, -8
 8273              		.cfi_offset 14, -4
2650:ad5940lib/ad5940.c ****   uint32_t regaddr = (AfeIntcSel == AFEINTC_0)? REG_INTC_INTCFLAG0: REG_INTC_INTCFLAG1;
 8274              		.loc 1 2650 3 is_stmt 1 view .LVU2423
2651:ad5940lib/ad5940.c ****   
 8275              		.loc 1 2651 3 view .LVU2424
2651:ad5940lib/ad5940.c ****   
 8276              		.loc 1 2651 67 is_stmt 0 view .LVU2425
 8277 0002 20B9     		cbnz	r0, .L568
 8278 0004 43F21000 		movw	r0, #12304
 8279              	.LVL892:
 8280              	.L567:
2653:ad5940lib/ad5940.c ****   return tempreg;
 8281              		.loc 1 2653 3 is_stmt 1 discriminator 4 view .LVU2426
2653:ad5940lib/ad5940.c ****   return tempreg;
 8282              		.loc 1 2653 13 is_stmt 0 discriminator 4 view .LVU2427
 8283 0008 FFF7FEFF 		bl	AD5940_ReadReg
 8284              	.LVL893:
2654:ad5940lib/ad5940.c **** }
 8285              		.loc 1 2654 3 is_stmt 1 discriminator 4 view .LVU2428
2655:ad5940lib/ad5940.c **** 
 8286              		.loc 1 2655 1 is_stmt 0 discriminator 4 view .LVU2429
 8287 000c 08BD     		pop	{r3, pc}
 8288              	.LVL894:
 8289              	.L568:
2651:ad5940lib/ad5940.c ****   
 8290              		.loc 1 2651 67 view .LVU2430
 8291 000e 43F21400 		movw	r0, #12308
 8292              	.LVL895:
2651:ad5940lib/ad5940.c ****   
 8293              		.loc 1 2651 67 view .LVU2431
 8294 0012 F9E7     		b	.L567
 8295              		.cfi_endproc
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 234


 8296              	.LFE93:
 8298              		.section	.text.AD5940_AGPIOFuncCfg,"ax",%progbits
 8299              		.align	1
 8300              		.global	AD5940_AGPIOFuncCfg
 8301              		.syntax unified
 8302              		.thumb
 8303              		.thumb_func
 8304              		.fpu fpv5-d16
 8306              	AD5940_AGPIOFuncCfg:
 8307              	.LVL896:
 8308              	.LFB95:
2693:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0CON,uiCfgSet);
 8309              		.loc 1 2693 1 is_stmt 1 view -0
 8310              		.cfi_startproc
 8311              		@ args = 0, pretend = 0, frame = 0
 8312              		@ frame_needed = 0, uses_anonymous_args = 0
2693:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0CON,uiCfgSet);
 8313              		.loc 1 2693 1 is_stmt 0 view .LVU2433
 8314 0000 08B5     		push	{r3, lr}
 8315              	.LCFI135:
 8316              		.cfi_def_cfa_offset 8
 8317              		.cfi_offset 3, -8
 8318              		.cfi_offset 14, -4
 8319 0002 0146     		mov	r1, r0
2694:ad5940lib/ad5940.c **** }
 8320              		.loc 1 2694 4 is_stmt 1 view .LVU2434
 8321 0004 0020     		movs	r0, #0
 8322              	.LVL897:
2694:ad5940lib/ad5940.c **** }
 8323              		.loc 1 2694 4 is_stmt 0 view .LVU2435
 8324 0006 FFF7FEFF 		bl	AD5940_WriteReg
 8325              	.LVL898:
2695:ad5940lib/ad5940.c **** 
 8326              		.loc 1 2695 1 view .LVU2436
 8327 000a 08BD     		pop	{r3, pc}
 8328              		.cfi_endproc
 8329              	.LFE95:
 8331              		.section	.text.AD5940_AGPIOOen,"ax",%progbits
 8332              		.align	1
 8333              		.global	AD5940_AGPIOOen
 8334              		.syntax unified
 8335              		.thumb
 8336              		.thumb_func
 8337              		.fpu fpv5-d16
 8339              	AD5940_AGPIOOen:
 8340              	.LVL899:
 8341              	.LFB96:
2703:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0OEN,uiPinSet);
 8342              		.loc 1 2703 1 is_stmt 1 view -0
 8343              		.cfi_startproc
 8344              		@ args = 0, pretend = 0, frame = 0
 8345              		@ frame_needed = 0, uses_anonymous_args = 0
2703:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0OEN,uiPinSet);
 8346              		.loc 1 2703 1 is_stmt 0 view .LVU2438
 8347 0000 08B5     		push	{r3, lr}
 8348              	.LCFI136:
 8349              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 235


 8350              		.cfi_offset 3, -8
 8351              		.cfi_offset 14, -4
 8352 0002 0146     		mov	r1, r0
2704:ad5940lib/ad5940.c **** }
 8353              		.loc 1 2704 4 is_stmt 1 view .LVU2439
 8354 0004 0420     		movs	r0, #4
 8355              	.LVL900:
2704:ad5940lib/ad5940.c **** }
 8356              		.loc 1 2704 4 is_stmt 0 view .LVU2440
 8357 0006 FFF7FEFF 		bl	AD5940_WriteReg
 8358              	.LVL901:
2705:ad5940lib/ad5940.c **** 
 8359              		.loc 1 2705 1 view .LVU2441
 8360 000a 08BD     		pop	{r3, pc}
 8361              		.cfi_endproc
 8362              	.LFE96:
 8364              		.section	.text.AD5940_AGPIOIen,"ax",%progbits
 8365              		.align	1
 8366              		.global	AD5940_AGPIOIen
 8367              		.syntax unified
 8368              		.thumb
 8369              		.thumb_func
 8370              		.fpu fpv5-d16
 8372              	AD5940_AGPIOIen:
 8373              	.LVL902:
 8374              	.LFB97:
2713:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0IEN,uiPinSet);
 8375              		.loc 1 2713 1 is_stmt 1 view -0
 8376              		.cfi_startproc
 8377              		@ args = 0, pretend = 0, frame = 0
 8378              		@ frame_needed = 0, uses_anonymous_args = 0
2713:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0IEN,uiPinSet);
 8379              		.loc 1 2713 1 is_stmt 0 view .LVU2443
 8380 0000 08B5     		push	{r3, lr}
 8381              	.LCFI137:
 8382              		.cfi_def_cfa_offset 8
 8383              		.cfi_offset 3, -8
 8384              		.cfi_offset 14, -4
 8385 0002 0146     		mov	r1, r0
2714:ad5940lib/ad5940.c **** }
 8386              		.loc 1 2714 4 is_stmt 1 view .LVU2444
 8387 0004 0C20     		movs	r0, #12
 8388              	.LVL903:
2714:ad5940lib/ad5940.c **** }
 8389              		.loc 1 2714 4 is_stmt 0 view .LVU2445
 8390 0006 FFF7FEFF 		bl	AD5940_WriteReg
 8391              	.LVL904:
2715:ad5940lib/ad5940.c **** 
 8392              		.loc 1 2715 1 view .LVU2446
 8393 000a 08BD     		pop	{r3, pc}
 8394              		.cfi_endproc
 8395              	.LFE97:
 8397              		.section	.text.AD5940_AGPIOIn,"ax",%progbits
 8398              		.align	1
 8399              		.global	AD5940_AGPIOIn
 8400              		.syntax unified
 8401              		.thumb
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 236


 8402              		.thumb_func
 8403              		.fpu fpv5-d16
 8405              	AD5940_AGPIOIn:
 8406              	.LFB98:
2722:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AGPIO_GP0IN);
 8407              		.loc 1 2722 1 is_stmt 1 view -0
 8408              		.cfi_startproc
 8409              		@ args = 0, pretend = 0, frame = 0
 8410              		@ frame_needed = 0, uses_anonymous_args = 0
 8411 0000 08B5     		push	{r3, lr}
 8412              	.LCFI138:
 8413              		.cfi_def_cfa_offset 8
 8414              		.cfi_offset 3, -8
 8415              		.cfi_offset 14, -4
2723:ad5940lib/ad5940.c **** }
 8416              		.loc 1 2723 3 view .LVU2448
2723:ad5940lib/ad5940.c **** }
 8417              		.loc 1 2723 10 is_stmt 0 view .LVU2449
 8418 0002 1020     		movs	r0, #16
 8419 0004 FFF7FEFF 		bl	AD5940_ReadReg
 8420              	.LVL905:
2724:ad5940lib/ad5940.c **** 
 8421              		.loc 1 2724 1 view .LVU2450
 8422 0008 08BD     		pop	{r3, pc}
 8423              		.cfi_endproc
 8424              	.LFE98:
 8426              		.section	.text.AD5940_AGPIOPen,"ax",%progbits
 8427              		.align	1
 8428              		.global	AD5940_AGPIOPen
 8429              		.syntax unified
 8430              		.thumb
 8431              		.thumb_func
 8432              		.fpu fpv5-d16
 8434              	AD5940_AGPIOPen:
 8435              	.LVL906:
 8436              	.LFB99:
2732:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0PE,uiPinSet);
 8437              		.loc 1 2732 1 is_stmt 1 view -0
 8438              		.cfi_startproc
 8439              		@ args = 0, pretend = 0, frame = 0
 8440              		@ frame_needed = 0, uses_anonymous_args = 0
2732:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0PE,uiPinSet);
 8441              		.loc 1 2732 1 is_stmt 0 view .LVU2452
 8442 0000 08B5     		push	{r3, lr}
 8443              	.LCFI139:
 8444              		.cfi_def_cfa_offset 8
 8445              		.cfi_offset 3, -8
 8446              		.cfi_offset 14, -4
 8447 0002 0146     		mov	r1, r0
2733:ad5940lib/ad5940.c **** }
 8448              		.loc 1 2733 4 is_stmt 1 view .LVU2453
 8449 0004 0820     		movs	r0, #8
 8450              	.LVL907:
2733:ad5940lib/ad5940.c **** }
 8451              		.loc 1 2733 4 is_stmt 0 view .LVU2454
 8452 0006 FFF7FEFF 		bl	AD5940_WriteReg
 8453              	.LVL908:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 237


2734:ad5940lib/ad5940.c **** 
 8454              		.loc 1 2734 1 view .LVU2455
 8455 000a 08BD     		pop	{r3, pc}
 8456              		.cfi_endproc
 8457              	.LFE99:
 8459              		.section	.text.AD5940_AGPIOCfg,"ax",%progbits
 8460              		.align	1
 8461              		.global	AD5940_AGPIOCfg
 8462              		.syntax unified
 8463              		.thumb
 8464              		.thumb_func
 8465              		.fpu fpv5-d16
 8467              	AD5940_AGPIOCfg:
 8468              	.LVL909:
 8469              	.LFB94:
2672:ad5940lib/ad5940.c ****   AD5940_AGPIOFuncCfg(pAgpioCfg->FuncSet);
 8470              		.loc 1 2672 1 is_stmt 1 view -0
 8471              		.cfi_startproc
 8472              		@ args = 0, pretend = 0, frame = 0
 8473              		@ frame_needed = 0, uses_anonymous_args = 0
2672:ad5940lib/ad5940.c ****   AD5940_AGPIOFuncCfg(pAgpioCfg->FuncSet);
 8474              		.loc 1 2672 1 is_stmt 0 view .LVU2457
 8475 0000 10B5     		push	{r4, lr}
 8476              	.LCFI140:
 8477              		.cfi_def_cfa_offset 8
 8478              		.cfi_offset 4, -8
 8479              		.cfi_offset 14, -4
 8480 0002 0446     		mov	r4, r0
2673:ad5940lib/ad5940.c ****   AD5940_AGPIOOen(pAgpioCfg->OutputEnSet);
 8481              		.loc 1 2673 3 is_stmt 1 view .LVU2458
 8482 0004 0068     		ldr	r0, [r0]
 8483              	.LVL910:
2673:ad5940lib/ad5940.c ****   AD5940_AGPIOOen(pAgpioCfg->OutputEnSet);
 8484              		.loc 1 2673 3 is_stmt 0 view .LVU2459
 8485 0006 FFF7FEFF 		bl	AD5940_AGPIOFuncCfg
 8486              	.LVL911:
2674:ad5940lib/ad5940.c ****   AD5940_AGPIOIen(pAgpioCfg->InputEnSet);
 8487              		.loc 1 2674 3 is_stmt 1 view .LVU2460
 8488 000a 6068     		ldr	r0, [r4, #4]
 8489 000c FFF7FEFF 		bl	AD5940_AGPIOOen
 8490              	.LVL912:
2675:ad5940lib/ad5940.c ****   AD5940_AGPIOPen(pAgpioCfg->PullEnSet);
 8491              		.loc 1 2675 3 view .LVU2461
 8492 0010 A068     		ldr	r0, [r4, #8]
 8493 0012 FFF7FEFF 		bl	AD5940_AGPIOIen
 8494              	.LVL913:
2676:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AGPIO_GP0OUT, pAgpioCfg->OutVal);
 8495              		.loc 1 2676 3 view .LVU2462
 8496 0016 E068     		ldr	r0, [r4, #12]
 8497 0018 FFF7FEFF 		bl	AD5940_AGPIOPen
 8498              	.LVL914:
2677:ad5940lib/ad5940.c **** }
 8499              		.loc 1 2677 3 view .LVU2463
 8500 001c 2169     		ldr	r1, [r4, #16]
 8501 001e 1420     		movs	r0, #20
 8502 0020 FFF7FEFF 		bl	AD5940_WriteReg
 8503              	.LVL915:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 238


2678:ad5940lib/ad5940.c **** 
 8504              		.loc 1 2678 1 is_stmt 0 view .LVU2464
 8505 0024 10BD     		pop	{r4, pc}
2678:ad5940lib/ad5940.c **** 
 8506              		.loc 1 2678 1 view .LVU2465
 8507              		.cfi_endproc
 8508              	.LFE94:
 8510              		.section	.text.AD5940_AGPIOSet,"ax",%progbits
 8511              		.align	1
 8512              		.global	AD5940_AGPIOSet
 8513              		.syntax unified
 8514              		.thumb
 8515              		.thumb_func
 8516              		.fpu fpv5-d16
 8518              	AD5940_AGPIOSet:
 8519              	.LVL916:
 8520              	.LFB100:
2742:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0SET,uiPinSet);
 8521              		.loc 1 2742 1 is_stmt 1 view -0
 8522              		.cfi_startproc
 8523              		@ args = 0, pretend = 0, frame = 0
 8524              		@ frame_needed = 0, uses_anonymous_args = 0
2742:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0SET,uiPinSet);
 8525              		.loc 1 2742 1 is_stmt 0 view .LVU2467
 8526 0000 08B5     		push	{r3, lr}
 8527              	.LCFI141:
 8528              		.cfi_def_cfa_offset 8
 8529              		.cfi_offset 3, -8
 8530              		.cfi_offset 14, -4
 8531 0002 0146     		mov	r1, r0
2743:ad5940lib/ad5940.c **** }
 8532              		.loc 1 2743 4 is_stmt 1 view .LVU2468
 8533 0004 1820     		movs	r0, #24
 8534              	.LVL917:
2743:ad5940lib/ad5940.c **** }
 8535              		.loc 1 2743 4 is_stmt 0 view .LVU2469
 8536 0006 FFF7FEFF 		bl	AD5940_WriteReg
 8537              	.LVL918:
2744:ad5940lib/ad5940.c **** 
 8538              		.loc 1 2744 1 view .LVU2470
 8539 000a 08BD     		pop	{r3, pc}
 8540              		.cfi_endproc
 8541              	.LFE100:
 8543              		.section	.text.AD5940_AGPIOClr,"ax",%progbits
 8544              		.align	1
 8545              		.global	AD5940_AGPIOClr
 8546              		.syntax unified
 8547              		.thumb
 8548              		.thumb_func
 8549              		.fpu fpv5-d16
 8551              	AD5940_AGPIOClr:
 8552              	.LVL919:
 8553              	.LFB101:
2752:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0CLR,uiPinSet);
 8554              		.loc 1 2752 1 is_stmt 1 view -0
 8555              		.cfi_startproc
 8556              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 239


 8557              		@ frame_needed = 0, uses_anonymous_args = 0
2752:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0CLR,uiPinSet);
 8558              		.loc 1 2752 1 is_stmt 0 view .LVU2472
 8559 0000 08B5     		push	{r3, lr}
 8560              	.LCFI142:
 8561              		.cfi_def_cfa_offset 8
 8562              		.cfi_offset 3, -8
 8563              		.cfi_offset 14, -4
 8564 0002 0146     		mov	r1, r0
2753:ad5940lib/ad5940.c **** }
 8565              		.loc 1 2753 4 is_stmt 1 view .LVU2473
 8566 0004 1C20     		movs	r0, #28
 8567              	.LVL920:
2753:ad5940lib/ad5940.c **** }
 8568              		.loc 1 2753 4 is_stmt 0 view .LVU2474
 8569 0006 FFF7FEFF 		bl	AD5940_WriteReg
 8570              	.LVL921:
2754:ad5940lib/ad5940.c **** 
 8571              		.loc 1 2754 1 view .LVU2475
 8572 000a 08BD     		pop	{r3, pc}
 8573              		.cfi_endproc
 8574              	.LFE101:
 8576              		.section	.text.AD5940_AGPIOToggle,"ax",%progbits
 8577              		.align	1
 8578              		.global	AD5940_AGPIOToggle
 8579              		.syntax unified
 8580              		.thumb
 8581              		.thumb_func
 8582              		.fpu fpv5-d16
 8584              	AD5940_AGPIOToggle:
 8585              	.LVL922:
 8586              	.LFB102:
2762:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0TGL,uiPinSet);
 8587              		.loc 1 2762 1 is_stmt 1 view -0
 8588              		.cfi_startproc
 8589              		@ args = 0, pretend = 0, frame = 0
 8590              		@ frame_needed = 0, uses_anonymous_args = 0
2762:ad5940lib/ad5940.c ****    AD5940_WriteReg(REG_AGPIO_GP0TGL,uiPinSet);
 8591              		.loc 1 2762 1 is_stmt 0 view .LVU2477
 8592 0000 08B5     		push	{r3, lr}
 8593              	.LCFI143:
 8594              		.cfi_def_cfa_offset 8
 8595              		.cfi_offset 3, -8
 8596              		.cfi_offset 14, -4
 8597 0002 0146     		mov	r1, r0
2763:ad5940lib/ad5940.c **** }
 8598              		.loc 1 2763 4 is_stmt 1 view .LVU2478
 8599 0004 2020     		movs	r0, #32
 8600              	.LVL923:
2763:ad5940lib/ad5940.c **** }
 8601              		.loc 1 2763 4 is_stmt 0 view .LVU2479
 8602 0006 FFF7FEFF 		bl	AD5940_WriteReg
 8603              	.LVL924:
2764:ad5940lib/ad5940.c **** 
 8604              		.loc 1 2764 1 view .LVU2480
 8605 000a 08BD     		pop	{r3, pc}
 8606              		.cfi_endproc
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 240


 8607              	.LFE102:
 8609              		.section	.text.AD5940_LPModeEnS,"ax",%progbits
 8610              		.align	1
 8611              		.global	AD5940_LPModeEnS
 8612              		.syntax unified
 8613              		.thumb
 8614              		.thumb_func
 8615              		.fpu fpv5-d16
 8617              	AD5940_LPModeEnS:
 8618              	.LVL925:
 8619              	.LFB103:
2781:ad5940lib/ad5940.c ****   if(LPModeEn == bTRUE)
 8620              		.loc 1 2781 1 is_stmt 1 view -0
 8621              		.cfi_startproc
 8622              		@ args = 0, pretend = 0, frame = 0
 8623              		@ frame_needed = 0, uses_anonymous_args = 0
2781:ad5940lib/ad5940.c ****   if(LPModeEn == bTRUE)
 8624              		.loc 1 2781 1 is_stmt 0 view .LVU2482
 8625 0000 08B5     		push	{r3, lr}
 8626              	.LCFI144:
 8627              		.cfi_def_cfa_offset 8
 8628              		.cfi_offset 3, -8
 8629              		.cfi_offset 14, -4
2782:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPMODEKEY, KEY_LPMODEKEY);  /* Enter LP mode by right key. */
 8630              		.loc 1 2782 3 is_stmt 1 view .LVU2483
2782:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_LPMODEKEY, KEY_LPMODEKEY);  /* Enter LP mode by right key. */
 8631              		.loc 1 2782 5 is_stmt 0 view .LVU2484
 8632 0002 0128     		cmp	r0, #1
 8633 0004 06D0     		beq	.L592
2785:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 8634              		.loc 1 2785 5 is_stmt 1 view .LVU2485
 8635 0006 0021     		movs	r1, #0
 8636 0008 42F20C10 		movw	r0, #8460
 8637              	.LVL926:
2785:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 8638              		.loc 1 2785 5 is_stmt 0 view .LVU2486
 8639 000c FFF7FEFF 		bl	AD5940_WriteReg
 8640              	.LVL927:
 8641              	.L590:
2786:ad5940lib/ad5940.c **** }
 8642              		.loc 1 2786 3 is_stmt 1 view .LVU2487
2787:ad5940lib/ad5940.c **** 
 8643              		.loc 1 2787 1 is_stmt 0 view .LVU2488
 8644 0010 0020     		movs	r0, #0
 8645 0012 08BD     		pop	{r3, pc}
 8646              	.LVL928:
 8647              	.L592:
2783:ad5940lib/ad5940.c ****   else
 8648              		.loc 1 2783 5 is_stmt 1 view .LVU2489
 8649 0014 0249     		ldr	r1, .L593
 8650 0016 42F20C10 		movw	r0, #8460
 8651              	.LVL929:
2783:ad5940lib/ad5940.c ****   else
 8652              		.loc 1 2783 5 is_stmt 0 view .LVU2490
 8653 001a FFF7FEFF 		bl	AD5940_WriteReg
 8654              	.LVL930:
 8655 001e F7E7     		b	.L590
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 241


 8656              	.L594:
 8657              		.align	2
 8658              	.L593:
 8659 0020 D6590C00 		.word	809430
 8660              		.cfi_endproc
 8661              	.LFE103:
 8663              		.section	.text.AD5940_LPModeClkS,"ax",%progbits
 8664              		.align	1
 8665              		.global	AD5940_LPModeClkS
 8666              		.syntax unified
 8667              		.thumb
 8668              		.thumb_func
 8669              		.fpu fpv5-d16
 8671              	AD5940_LPModeClkS:
 8672              	.LVL931:
 8673              	.LFB104:
2798:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPMODECLKSEL, LPModeClk);
 8674              		.loc 1 2798 1 is_stmt 1 view -0
 8675              		.cfi_startproc
 8676              		@ args = 0, pretend = 0, frame = 0
 8677              		@ frame_needed = 0, uses_anonymous_args = 0
2798:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_LPMODECLKSEL, LPModeClk);
 8678              		.loc 1 2798 1 is_stmt 0 view .LVU2492
 8679 0000 08B5     		push	{r3, lr}
 8680              	.LCFI145:
 8681              		.cfi_def_cfa_offset 8
 8682              		.cfi_offset 3, -8
 8683              		.cfi_offset 14, -4
 8684 0002 0146     		mov	r1, r0
2799:ad5940lib/ad5940.c **** }
 8685              		.loc 1 2799 3 is_stmt 1 view .LVU2493
 8686 0004 42F21010 		movw	r0, #8464
 8687              	.LVL932:
2799:ad5940lib/ad5940.c **** }
 8688              		.loc 1 2799 3 is_stmt 0 view .LVU2494
 8689 0008 FFF7FEFF 		bl	AD5940_WriteReg
 8690              	.LVL933:
2800:ad5940lib/ad5940.c **** 
 8691              		.loc 1 2800 1 view .LVU2495
 8692 000c 08BD     		pop	{r3, pc}
 8693              		.cfi_endproc
 8694              	.LFE104:
 8696              		.section	.text.AD5940_SleepKeyCtrlS,"ax",%progbits
 8697              		.align	1
 8698              		.global	AD5940_SleepKeyCtrlS
 8699              		.syntax unified
 8700              		.thumb
 8701              		.thumb_func
 8702              		.fpu fpv5-d16
 8704              	AD5940_SleepKeyCtrlS:
 8705              	.LVL934:
 8706              	.LFB105:
2815:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQSLPLOCK, SlpKey);
 8707              		.loc 1 2815 1 is_stmt 1 view -0
 8708              		.cfi_startproc
 8709              		@ args = 0, pretend = 0, frame = 0
 8710              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 242


2815:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQSLPLOCK, SlpKey);
 8711              		.loc 1 2815 1 is_stmt 0 view .LVU2497
 8712 0000 08B5     		push	{r3, lr}
 8713              	.LCFI146:
 8714              		.cfi_def_cfa_offset 8
 8715              		.cfi_offset 3, -8
 8716              		.cfi_offset 14, -4
 8717 0002 0146     		mov	r1, r0
2816:ad5940lib/ad5940.c **** }
 8718              		.loc 1 2816 3 is_stmt 1 view .LVU2498
 8719 0004 42F21810 		movw	r0, #8472
 8720              	.LVL935:
2816:ad5940lib/ad5940.c **** }
 8721              		.loc 1 2816 3 is_stmt 0 view .LVU2499
 8722 0008 FFF7FEFF 		bl	AD5940_WriteReg
 8723              	.LVL936:
2817:ad5940lib/ad5940.c **** 
 8724              		.loc 1 2817 1 view .LVU2500
 8725 000c 08BD     		pop	{r3, pc}
 8726              		.cfi_endproc
 8727              	.LFE105:
 8729              		.section	.text.AD5940_EnterSleepS,"ax",%progbits
 8730              		.align	1
 8731              		.global	AD5940_EnterSleepS
 8732              		.syntax unified
 8733              		.thumb
 8734              		.thumb_func
 8735              		.fpu fpv5-d16
 8737              	AD5940_EnterSleepS:
 8738              	.LFB106:
2825:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQTRGSLP, 0);
 8739              		.loc 1 2825 1 is_stmt 1 view -0
 8740              		.cfi_startproc
 8741              		@ args = 0, pretend = 0, frame = 0
 8742              		@ frame_needed = 0, uses_anonymous_args = 0
 8743 0000 08B5     		push	{r3, lr}
 8744              	.LCFI147:
 8745              		.cfi_def_cfa_offset 8
 8746              		.cfi_offset 3, -8
 8747              		.cfi_offset 14, -4
2826:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_SEQTRGSLP, 1);
 8748              		.loc 1 2826 3 view .LVU2502
 8749 0002 0021     		movs	r1, #0
 8750 0004 42F21C10 		movw	r0, #8476
 8751 0008 FFF7FEFF 		bl	AD5940_WriteReg
 8752              	.LVL937:
2827:ad5940lib/ad5940.c **** }
 8753              		.loc 1 2827 3 view .LVU2503
 8754 000c 0121     		movs	r1, #1
 8755 000e 42F21C10 		movw	r0, #8476
 8756 0012 FFF7FEFF 		bl	AD5940_WriteReg
 8757              	.LVL938:
2828:ad5940lib/ad5940.c **** 
 8758              		.loc 1 2828 1 is_stmt 0 view .LVU2504
 8759 0016 08BD     		pop	{r3, pc}
 8760              		.cfi_endproc
 8761              	.LFE106:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 243


 8763              		.section	.text.AD5940_ShutDownS,"ax",%progbits
 8764              		.align	1
 8765              		.global	AD5940_ShutDownS
 8766              		.syntax unified
 8767              		.thumb
 8768              		.thumb_func
 8769              		.fpu fpv5-d16
 8771              	AD5940_ShutDownS:
 8772              	.LFB107:
2837:ad5940lib/ad5940.c ****   /* Turn off LPloop related blocks which are not controlled automatically by hibernate operation *
 8773              		.loc 1 2837 1 is_stmt 1 view -0
 8774              		.cfi_startproc
 8775              		@ args = 0, pretend = 0, frame = 80
 8776              		@ frame_needed = 0, uses_anonymous_args = 0
 8777 0000 00B5     		push	{lr}
 8778              	.LCFI148:
 8779              		.cfi_def_cfa_offset 4
 8780              		.cfi_offset 14, -4
 8781 0002 95B0     		sub	sp, sp, #84
 8782              	.LCFI149:
 8783              		.cfi_def_cfa_offset 88
2839:ad5940lib/ad5940.c ****   LPLoopCfg_Type lp_loop;
 8784              		.loc 1 2839 3 view .LVU2506
2840:ad5940lib/ad5940.c ****   /* Turn off LP-loop manually because it's not affected by sleep/hibernate mode */
 8785              		.loc 1 2840 3 view .LVU2507
2842:ad5940lib/ad5940.c ****   AD5940_StructInit(&lp_loop, sizeof(lp_loop));
 8786              		.loc 1 2842 3 view .LVU2508
 8787 0004 0D21     		movs	r1, #13
 8788 0006 10A8     		add	r0, sp, #64
 8789 0008 FFF7FEFF 		bl	AD5940_StructInit
 8790              	.LVL939:
2843:ad5940lib/ad5940.c ****   AD5940_REFCfgS(&aferef_cfg);
 8791              		.loc 1 2843 3 view .LVU2509
 8792 000c 3C21     		movs	r1, #60
 8793 000e 01A8     		add	r0, sp, #4
 8794 0010 FFF7FEFF 		bl	AD5940_StructInit
 8795              	.LVL940:
2844:ad5940lib/ad5940.c ****   AD5940_LPLoopCfgS(&lp_loop);
 8796              		.loc 1 2844 3 view .LVU2510
 8797 0014 10A8     		add	r0, sp, #64
 8798 0016 FFF7FEFF 		bl	AD5940_REFCfgS
 8799              	.LVL941:
2845:ad5940lib/ad5940.c ****   AD5940_SleepKeyCtrlS(SLPKEY_UNLOCK);  /* Unlock the key */
 8800              		.loc 1 2845 3 view .LVU2511
 8801 001a 01A8     		add	r0, sp, #4
 8802 001c FFF7FEFF 		bl	AD5940_LPLoopCfgS
 8803              	.LVL942:
2846:ad5940lib/ad5940.c ****   AD5940_EnterSleepS();  /* Enter Hibernate */
 8804              		.loc 1 2846 3 view .LVU2512
 8805 0020 0348     		ldr	r0, .L603
 8806 0022 FFF7FEFF 		bl	AD5940_SleepKeyCtrlS
 8807              	.LVL943:
2847:ad5940lib/ad5940.c **** }
 8808              		.loc 1 2847 3 view .LVU2513
 8809 0026 FFF7FEFF 		bl	AD5940_EnterSleepS
 8810              	.LVL944:
2848:ad5940lib/ad5940.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 244


 8811              		.loc 1 2848 1 is_stmt 0 view .LVU2514
 8812 002a 15B0     		add	sp, sp, #84
 8813              	.LCFI150:
 8814              		.cfi_def_cfa_offset 4
 8815              		@ sp needed
 8816 002c 5DF804FB 		ldr	pc, [sp], #4
 8817              	.L604:
 8818              		.align	2
 8819              	.L603:
 8820 0030 E5470A00 		.word	673765
 8821              		.cfi_endproc
 8822              	.LFE107:
 8824              		.section	.text.AD5940_WakeUp,"ax",%progbits
 8825              		.align	1
 8826              		.global	AD5940_WakeUp
 8827              		.syntax unified
 8828              		.thumb
 8829              		.thumb_func
 8830              		.fpu fpv5-d16
 8832              	AD5940_WakeUp:
 8833              	.LVL945:
 8834              	.LFB108:
2857:ad5940lib/ad5940.c ****   uint32_t count = 0;
 8835              		.loc 1 2857 1 is_stmt 1 view -0
 8836              		.cfi_startproc
 8837              		@ args = 0, pretend = 0, frame = 0
 8838              		@ frame_needed = 0, uses_anonymous_args = 0
2857:ad5940lib/ad5940.c ****   uint32_t count = 0;
 8839              		.loc 1 2857 1 is_stmt 0 view .LVU2516
 8840 0000 38B5     		push	{r3, r4, r5, lr}
 8841              	.LCFI151:
 8842              		.cfi_def_cfa_offset 16
 8843              		.cfi_offset 3, -16
 8844              		.cfi_offset 4, -12
 8845              		.cfi_offset 5, -8
 8846              		.cfi_offset 14, -4
 8847 0002 0546     		mov	r5, r0
2858:ad5940lib/ad5940.c ****   while(1)
 8848              		.loc 1 2858 3 is_stmt 1 view .LVU2517
 8849              	.LVL946:
2858:ad5940lib/ad5940.c ****   while(1)
 8850              		.loc 1 2858 12 is_stmt 0 view .LVU2518
 8851 0004 0024     		movs	r4, #0
 8852              	.LVL947:
 8853              	.L607:
2859:ad5940lib/ad5940.c ****   {
 8854              		.loc 1 2859 3 is_stmt 1 view .LVU2519
2861:ad5940lib/ad5940.c ****     if(AD5940_ReadReg(REG_AFECON_ADIID) == AD5940_ADIID)
 8855              		.loc 1 2861 5 view .LVU2520
2861:ad5940lib/ad5940.c ****     if(AD5940_ReadReg(REG_AFECON_ADIID) == AD5940_ADIID)
 8856              		.loc 1 2861 10 is_stmt 0 view .LVU2521
 8857 0006 0134     		adds	r4, r4, #1
 8858              	.LVL948:
2862:ad5940lib/ad5940.c ****       break;    /* Succeed */
 8859              		.loc 1 2862 5 is_stmt 1 view .LVU2522
2862:ad5940lib/ad5940.c ****       break;    /* Succeed */
 8860              		.loc 1 2862 8 is_stmt 0 view .LVU2523
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 245


 8861 0008 4FF48060 		mov	r0, #1024
 8862 000c FFF7FEFF 		bl	AD5940_ReadReg
 8863              	.LVL949:
2862:ad5940lib/ad5940.c ****       break;    /* Succeed */
 8864              		.loc 1 2862 7 view .LVU2524
 8865 0010 44F24413 		movw	r3, #16708
 8866 0014 9842     		cmp	r0, r3
 8867 0016 03D0     		beq	.L605
2864:ad5940lib/ad5940.c ****       continue; /* Always try to wakeup AFE */
 8868              		.loc 1 2864 5 is_stmt 1 view .LVU2525
2864:ad5940lib/ad5940.c ****       continue; /* Always try to wakeup AFE */
 8869              		.loc 1 2864 7 is_stmt 0 view .LVU2526
 8870 0018 002D     		cmp	r5, #0
 8871 001a F4DD     		ble	.L607
2867:ad5940lib/ad5940.c ****       break;    /* Failed */
 8872              		.loc 1 2867 5 is_stmt 1 view .LVU2527
2867:ad5940lib/ad5940.c ****       break;    /* Failed */
 8873              		.loc 1 2867 7 is_stmt 0 view .LVU2528
 8874 001c A542     		cmp	r5, r4
 8875 001e F2D2     		bcs	.L607
 8876              	.L605:
2871:ad5940lib/ad5940.c **** 
 8877              		.loc 1 2871 1 view .LVU2529
 8878 0020 2046     		mov	r0, r4
 8879 0022 38BD     		pop	{r3, r4, r5, pc}
2871:ad5940lib/ad5940.c **** 
 8880              		.loc 1 2871 1 view .LVU2530
 8881              		.cfi_endproc
 8882              	.LFE108:
 8884              		.section	.text.AD5940_GetADIID,"ax",%progbits
 8885              		.align	1
 8886              		.global	AD5940_GetADIID
 8887              		.syntax unified
 8888              		.thumb
 8889              		.thumb_func
 8890              		.fpu fpv5-d16
 8892              	AD5940_GetADIID:
 8893              	.LFB109:
2878:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AFECON_ADIID);
 8894              		.loc 1 2878 1 is_stmt 1 view -0
 8895              		.cfi_startproc
 8896              		@ args = 0, pretend = 0, frame = 0
 8897              		@ frame_needed = 0, uses_anonymous_args = 0
 8898 0000 08B5     		push	{r3, lr}
 8899              	.LCFI152:
 8900              		.cfi_def_cfa_offset 8
 8901              		.cfi_offset 3, -8
 8902              		.cfi_offset 14, -4
2879:ad5940lib/ad5940.c **** }
 8903              		.loc 1 2879 3 view .LVU2532
2879:ad5940lib/ad5940.c **** }
 8904              		.loc 1 2879 10 is_stmt 0 view .LVU2533
 8905 0002 4FF48060 		mov	r0, #1024
 8906 0006 FFF7FEFF 		bl	AD5940_ReadReg
 8907              	.LVL950:
2880:ad5940lib/ad5940.c **** 
 8908              		.loc 1 2880 1 view .LVU2534
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 246


 8909 000a 08BD     		pop	{r3, pc}
 8910              		.cfi_endproc
 8911              	.LFE109:
 8913              		.section	.text.AD5940_GetChipID,"ax",%progbits
 8914              		.align	1
 8915              		.global	AD5940_GetChipID
 8916              		.syntax unified
 8917              		.thumb
 8918              		.thumb_func
 8919              		.fpu fpv5-d16
 8921              	AD5940_GetChipID:
 8922              	.LFB110:
2887:ad5940lib/ad5940.c ****   return AD5940_ReadReg(REG_AFECON_CHIPID);
 8923              		.loc 1 2887 1 is_stmt 1 view -0
 8924              		.cfi_startproc
 8925              		@ args = 0, pretend = 0, frame = 0
 8926              		@ frame_needed = 0, uses_anonymous_args = 0
 8927 0000 08B5     		push	{r3, lr}
 8928              	.LCFI153:
 8929              		.cfi_def_cfa_offset 8
 8930              		.cfi_offset 3, -8
 8931              		.cfi_offset 14, -4
2888:ad5940lib/ad5940.c **** }
 8932              		.loc 1 2888 3 view .LVU2536
2888:ad5940lib/ad5940.c **** }
 8933              		.loc 1 2888 10 is_stmt 0 view .LVU2537
 8934 0002 40F20440 		movw	r0, #1028
 8935 0006 FFF7FEFF 		bl	AD5940_ReadReg
 8936              	.LVL951:
2889:ad5940lib/ad5940.c **** /**
 8937              		.loc 1 2889 1 view .LVU2538
 8938 000a 08BD     		pop	{r3, pc}
 8939              		.cfi_endproc
 8940              	.LFE110:
 8942              		.section	.text.AD5940_SoftRst,"ax",%progbits
 8943              		.align	1
 8944              		.global	AD5940_SoftRst
 8945              		.syntax unified
 8946              		.thumb
 8947              		.thumb_func
 8948              		.fpu fpv5-d16
 8950              	AD5940_SoftRst:
 8951              	.LFB111:
2898:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFECON_SWRSTCON, AD5940_SWRST);
 8952              		.loc 1 2898 1 is_stmt 1 view -0
 8953              		.cfi_startproc
 8954              		@ args = 0, pretend = 0, frame = 0
 8955              		@ frame_needed = 0, uses_anonymous_args = 0
 8956 0000 08B5     		push	{r3, lr}
 8957              	.LCFI154:
 8958              		.cfi_def_cfa_offset 8
 8959              		.cfi_offset 3, -8
 8960              		.cfi_offset 14, -4
2899:ad5940lib/ad5940.c ****   AD5940_Delay10us(20); /* AD5940 need some time to exit reset status. 200us looks good. */
 8961              		.loc 1 2899 3 view .LVU2540
 8962 0002 4AF25811 		movw	r1, #41304
 8963 0006 40F22440 		movw	r0, #1060
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 247


 8964 000a FFF7FEFF 		bl	AD5940_WriteReg
 8965              	.LVL952:
2900:ad5940lib/ad5940.c ****   /* We can check RSTSTA register to make sure software reset happened. */
 8966              		.loc 1 2900 3 view .LVU2541
 8967 000e 1420     		movs	r0, #20
 8968 0010 FFF7FEFF 		bl	AD5940_Delay10us
 8969              	.LVL953:
2902:ad5940lib/ad5940.c **** }
 8970              		.loc 1 2902 3 view .LVU2542
2903:ad5940lib/ad5940.c **** 
 8971              		.loc 1 2903 1 is_stmt 0 view .LVU2543
 8972 0014 0020     		movs	r0, #0
 8973 0016 08BD     		pop	{r3, pc}
 8974              		.cfi_endproc
 8975              	.LFE111:
 8977              		.section	.text.AD5940_HWReset,"ax",%progbits
 8978              		.align	1
 8979              		.global	AD5940_HWReset
 8980              		.syntax unified
 8981              		.thumb
 8982              		.thumb_func
 8983              		.fpu fpv5-d16
 8985              	AD5940_HWReset:
 8986              	.LFB112:
2911:ad5940lib/ad5940.c **** #ifndef CHIPSEL_M355
 8987              		.loc 1 2911 1 is_stmt 1 view -0
 8988              		.cfi_startproc
 8989              		@ args = 0, pretend = 0, frame = 0
 8990              		@ frame_needed = 0, uses_anonymous_args = 0
 8991 0000 08B5     		push	{r3, lr}
 8992              	.LCFI155:
 8993              		.cfi_def_cfa_offset 8
 8994              		.cfi_offset 3, -8
 8995              		.cfi_offset 14, -4
2913:ad5940lib/ad5940.c ****   AD5940_Delay10us(200); /* Delay some time */
 8996              		.loc 1 2913 3 view .LVU2545
 8997 0002 FFF7FEFF 		bl	AD5940_RstClr
 8998              	.LVL954:
2914:ad5940lib/ad5940.c ****   AD5940_RstSet();
 8999              		.loc 1 2914 3 view .LVU2546
 9000 0006 C820     		movs	r0, #200
 9001 0008 FFF7FEFF 		bl	AD5940_Delay10us
 9002              	.LVL955:
2915:ad5940lib/ad5940.c ****   AD5940_Delay10us(500); /* AD5940 need some time to exit reset status. 200us looks good. */
 9003              		.loc 1 2915 3 view .LVU2547
 9004 000c FFF7FEFF 		bl	AD5940_RstSet
 9005              	.LVL956:
2916:ad5940lib/ad5940.c **** #else
 9006              		.loc 1 2916 3 view .LVU2548
 9007 0010 4FF4FA70 		mov	r0, #500
 9008 0014 FFF7FEFF 		bl	AD5940_Delay10us
 9009              	.LVL957:
2920:ad5940lib/ad5940.c **** 
 9010              		.loc 1 2920 1 is_stmt 0 view .LVU2549
 9011 0018 08BD     		pop	{r3, pc}
 9012              		.cfi_endproc
 9013              	.LFE112:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 248


 9015              		.section	.text.AD5940_ADCPGACal,"ax",%progbits
 9016              		.align	1
 9017              		.global	AD5940_ADCPGACal
 9018              		.syntax unified
 9019              		.thumb
 9020              		.thumb_func
 9021              		.fpu fpv5-d16
 9023              	AD5940_ADCPGACal:
 9024              	.LVL958:
 9025              	.LFB115:
2984:ad5940lib/ad5940.c **** 
2985:ad5940lib/ad5940.c **** /**
2986:ad5940lib/ad5940.c ****   @brief Calibrate ADC PGA
2987:ad5940lib/ad5940.c ****   @param pADCPGACal: PGA calibration parameters include filter setup and PGA gain.
2988:ad5940lib/ad5940.c ****   @return AD5940ERR_OK.
2989:ad5940lib/ad5940.c **** **/
2990:ad5940lib/ad5940.c **** AD5940Err AD5940_ADCPGACal(ADCPGACal_Type *pADCPGACal)
2991:ad5940lib/ad5940.c **** {
 9026              		.loc 1 2991 1 is_stmt 1 view -0
 9027              		.cfi_startproc
 9028              		@ args = 0, pretend = 0, frame = 152
 9029              		@ frame_needed = 0, uses_anonymous_args = 0
2992:ad5940lib/ad5940.c ****   const float kFactor = 1.835f/1.82f;
 9030              		.loc 1 2992 3 view .LVU2551
2993:ad5940lib/ad5940.c ****   ADCBaseCfg_Type adc_base;
 9031              		.loc 1 2993 3 view .LVU2552
2994:ad5940lib/ad5940.c **** 
2995:ad5940lib/ad5940.c ****   int32_t time_out;
 9032              		.loc 1 2995 3 view .LVU2553
2996:ad5940lib/ad5940.c ****   uint32_t INTCCfg;
 9033              		.loc 1 2996 3 view .LVU2554
2997:ad5940lib/ad5940.c ****   int32_t ADCCode;
 9034              		.loc 1 2997 3 view .LVU2555
2998:ad5940lib/ad5940.c ****   BoolFlag bADCClk32MHzMode;
 9035              		.loc 1 2998 3 view .LVU2556
2999:ad5940lib/ad5940.c **** 
3000:ad5940lib/ad5940.c ****   uint32_t regaddr_gain, regaddr_offset;
 9036              		.loc 1 3000 3 view .LVU2557
3001:ad5940lib/ad5940.c ****   
3002:ad5940lib/ad5940.c ****   if(pADCPGACal == NULL) return AD5940ERR_NULLP;
 9037              		.loc 1 3002 3 view .LVU2558
 9038              		.loc 1 3002 5 is_stmt 0 view .LVU2559
 9039 0000 0028     		cmp	r0, #0
 9040 0002 00F03581 		beq	.L629
2991:ad5940lib/ad5940.c ****   const float kFactor = 1.835f/1.82f;
 9041              		.loc 1 2991 1 view .LVU2560
 9042 0006 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9043              	.LCFI156:
 9044              		.cfi_def_cfa_offset 32
 9045              		.cfi_offset 4, -32
 9046              		.cfi_offset 5, -28
 9047              		.cfi_offset 6, -24
 9048              		.cfi_offset 7, -20
 9049              		.cfi_offset 8, -16
 9050              		.cfi_offset 9, -12
 9051              		.cfi_offset 10, -8
 9052              		.cfi_offset 14, -4
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 249


 9053 000a A6B0     		sub	sp, sp, #152
 9054              	.LCFI157:
 9055              		.cfi_def_cfa_offset 184
 9056 000c 0446     		mov	r4, r0
3003:ad5940lib/ad5940.c ****   if(pADCPGACal->ADCPga > ADCPGA_9) return AD5940ERR_PARA;  /* Parameter Error */
 9057              		.loc 1 3003 3 is_stmt 1 view .LVU2561
 9058              		.loc 1 3003 16 is_stmt 0 view .LVU2562
 9059 000e 8269     		ldr	r2, [r0, #24]
 9060              		.loc 1 3003 5 view .LVU2563
 9061 0010 042A     		cmp	r2, #4
 9062 0012 00F23081 		bhi	.L630
3004:ad5940lib/ad5940.c ****   
3005:ad5940lib/ad5940.c ****   if(pADCPGACal->AdcClkFreq > (32000000*0.8))
 9063              		.loc 1 3005 3 is_stmt 1 view .LVU2564
 9064              	.LVL959:
3006:ad5940lib/ad5940.c ****     bADCClk32MHzMode = bTRUE; 
3007:ad5940lib/ad5940.c **** 
3008:ad5940lib/ad5940.c ****   /**
3009:ad5940lib/ad5940.c ****    *  Determine Gain calibration method according to different gain value...
3010:ad5940lib/ad5940.c ****    *  and calibration register 
3011:ad5940lib/ad5940.c ****    * */
3012:ad5940lib/ad5940.c ****   static const struct _cal_registers
 9065              		.loc 1 3012 3 view .LVU2565
3013:ad5940lib/ad5940.c ****   {
3014:ad5940lib/ad5940.c ****     uint16_t gain_reg;
3015:ad5940lib/ad5940.c ****     uint16_t offset_reg;
3016:ad5940lib/ad5940.c ****   }cal_registers[] = {
3017:ad5940lib/ad5940.c ****     {REG_AFE_ADCGAINGN1,REG_AFE_ADCOFFSETGN1},
3018:ad5940lib/ad5940.c ****     {REG_AFE_ADCGAINGN1P5,REG_AFE_ADCOFFSETGN1P5},
3019:ad5940lib/ad5940.c ****     {REG_AFE_ADCGAINGN2,REG_AFE_ADCOFFSETGN2},
3020:ad5940lib/ad5940.c ****     {REG_AFE_ADCGAINGN4,REG_AFE_ADCOFFSETGN4},
3021:ad5940lib/ad5940.c ****     {REG_AFE_ADCGAINGN9,REG_AFE_ADCOFFSETGN9},
3022:ad5940lib/ad5940.c ****   };
3023:ad5940lib/ad5940.c ****   regaddr_gain = cal_registers[pADCPGACal->ADCPga].gain_reg;
 9066              		.loc 1 3023 3 view .LVU2566
 9067              		.loc 1 3023 51 is_stmt 0 view .LVU2567
 9068 0016 994B     		ldr	r3, .L642
 9069 0018 33F82280 		ldrh	r8, [r3, r2, lsl #2]
 9070              	.LVL960:
3024:ad5940lib/ad5940.c ****   regaddr_offset = cal_registers[pADCPGACal->ADCPga].offset_reg;
 9071              		.loc 1 3024 3 is_stmt 1 view .LVU2568
 9072              		.loc 1 3024 53 is_stmt 0 view .LVU2569
 9073 001c 03EB8203 		add	r3, r3, r2, lsl #2
 9074 0020 B3F80290 		ldrh	r9, [r3, #2]
 9075              	.LVL961:
3025:ad5940lib/ad5940.c **** 
3026:ad5940lib/ad5940.c ****   /* Do initialization */
3027:ad5940lib/ad5940.c ****   __AD5940_ReferenceON();
 9076              		.loc 1 3027 3 is_stmt 1 view .LVU2570
 9077 0024 FFF7FEFF 		bl	__AD5940_ReferenceON
 9078              	.LVL962:
3028:ad5940lib/ad5940.c ****   ADCFilterCfg_Type adc_filter;
 9079              		.loc 1 3028 3 view .LVU2571
3029:ad5940lib/ad5940.c ****   /* Initialize ADC filters ADCRawData-->SINC3-->SINC2+NOTCH. Use SIN2 data for calibration-->Lower
3030:ad5940lib/ad5940.c ****   adc_filter.ADCSinc3Osr = pADCPGACal->ADCSinc3Osr;
 9080              		.loc 1 3030 3 view .LVU2572
 9081              		.loc 1 3030 38 is_stmt 0 view .LVU2573
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 250


 9082 0028 2369     		ldr	r3, [r4, #16]
 9083              		.loc 1 3030 26 view .LVU2574
 9084 002a 1D93     		str	r3, [sp, #116]
3031:ad5940lib/ad5940.c ****   adc_filter.ADCSinc2Osr = pADCPGACal->ADCSinc2Osr;  /* 800KSPS/4/1333 = 150SPS */
 9085              		.loc 1 3031 3 is_stmt 1 view .LVU2575
 9086              		.loc 1 3031 38 is_stmt 0 view .LVU2576
 9087 002c 6369     		ldr	r3, [r4, #20]
 9088              		.loc 1 3031 26 view .LVU2577
 9089 002e 1E93     		str	r3, [sp, #120]
3032:ad5940lib/ad5940.c ****   adc_filter.ADCAvgNum = ADCAVGNUM_2;         /* Don't care about it. Average function is only used
 9090              		.loc 1 3032 3 is_stmt 1 view .LVU2578
 9091              		.loc 1 3032 24 is_stmt 0 view .LVU2579
 9092 0030 0026     		movs	r6, #0
 9093 0032 1F96     		str	r6, [sp, #124]
3033:ad5940lib/ad5940.c ****   adc_filter.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;        /* If ADC clock is 32
 9094              		.loc 1 3033 3 is_stmt 1 view .LVU2580
 9095              		.loc 1 3033 22 is_stmt 0 view .LVU2581
 9096 0034 2096     		str	r6, [sp, #128]
3034:ad5940lib/ad5940.c ****   adc_filter.BpNotch = bTRUE;                 /* SINC2+Notch is one block, when bypass notch filter
 9097              		.loc 1 3034 3 is_stmt 1 view .LVU2582
 9098              		.loc 1 3034 22 is_stmt 0 view .LVU2583
 9099 0036 0125     		movs	r5, #1
 9100 0038 8DF88450 		strb	r5, [sp, #132]
3035:ad5940lib/ad5940.c ****   adc_filter.BpSinc3 = bFALSE;                /* We use SINC3 filter. */
 9101              		.loc 1 3035 3 is_stmt 1 view .LVU2584
 9102              		.loc 1 3035 22 is_stmt 0 view .LVU2585
 9103 003c 8DF88560 		strb	r6, [sp, #133]
3036:ad5940lib/ad5940.c ****   adc_filter.Sinc2NotchEnable = bTRUE;        /* Enable the SINC2+Notch block. You can also use fun
 9104              		.loc 1 3036 3 is_stmt 1 view .LVU2586
 9105              		.loc 1 3036 31 is_stmt 0 view .LVU2587
 9106 0040 8DF88650 		strb	r5, [sp, #134]
3037:ad5940lib/ad5940.c ****   AD5940_ADCFilterCfgS(&adc_filter);
 9107              		.loc 1 3037 3 is_stmt 1 view .LVU2588
 9108 0044 1DA8     		add	r0, sp, #116
 9109 0046 FFF7FEFF 		bl	AD5940_ADCFilterCfgS
 9110              	.LVL963:
3038:ad5940lib/ad5940.c ****   /* Turn ON reference and ADC power, and DAC reference. We use DAC 1.8V reference to calibrate ADC
3039:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE); /* Disable all */
 9111              		.loc 1 3039 3 view .LVU2589
 9112 004a 3146     		mov	r1, r6
 9113 004c 8C48     		ldr	r0, .L642+4
 9114 004e FFF7FEFF 		bl	AD5940_AFECtrlS
 9115              	.LVL964:
3040:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_HPREFPWR|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|AFECTRL_SINC2N
 9116              		.loc 1 3040 3 view .LVU2590
 9117 0052 2946     		mov	r1, r5
 9118 0054 8B48     		ldr	r0, .L642+8
 9119 0056 FFF7FEFF 		bl	AD5940_AFECtrlS
 9120              	.LVL965:
3041:ad5940lib/ad5940.c ****   AD5940_Delay10us(25);   /* Wait 250us for reference power up */
 9121              		.loc 1 3041 3 view .LVU2591
 9122 005a 1920     		movs	r0, #25
 9123 005c FFF7FEFF 		bl	AD5940_Delay10us
 9124              	.LVL966:
3042:ad5940lib/ad5940.c ****   /* INTC configure and open calibration lock */
3043:ad5940lib/ad5940.c ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 9125              		.loc 1 3043 3 view .LVU2592
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 251


 9126              		.loc 1 3043 13 is_stmt 0 view .LVU2593
 9127 0060 2846     		mov	r0, r5
 9128 0062 FFF7FEFF 		bl	AD5940_INTCGetCfg
 9129              	.LVL967:
 9130 0066 0746     		mov	r7, r0
 9131              	.LVL968:
3044:ad5940lib/ad5940.c ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 9132              		.loc 1 3044 3 is_stmt 1 view .LVU2594
 9133 0068 2A46     		mov	r2, r5
 9134 006a 0421     		movs	r1, #4
 9135 006c 2846     		mov	r0, r5
 9136              	.LVL969:
 9137              		.loc 1 3044 3 is_stmt 0 view .LVU2595
 9138 006e FFF7FEFF 		bl	AD5940_INTCCfg
 9139              	.LVL970:
3045:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, KEY_CALDATLOCK);  /* Unlock KEY */
 9140              		.loc 1 3045 3 is_stmt 1 view .LVU2596
 9141 0072 8549     		ldr	r1, .L642+12
 9142 0074 42F23020 		movw	r0, #8752
 9143 0078 FFF7FEFF 		bl	AD5940_WriteReg
 9144              	.LVL971:
3046:ad5940lib/ad5940.c **** 
3047:ad5940lib/ad5940.c ****   /* Do offset calibration. */
3048:ad5940lib/ad5940.c ****   if(pADCPGACal->PGACalType != PGACALTYPE_GAIN){  /* Need offset calibration */
 9145              		.loc 1 3048 3 view .LVU2597
 9146              		.loc 1 3048 16 is_stmt 0 view .LVU2598
 9147 007c E369     		ldr	r3, [r4, #28]
 9148              		.loc 1 3048 5 view .LVU2599
 9149 007e AB42     		cmp	r3, r5
 9150 0080 0FD1     		bne	.L637
 9151              	.L619:
3049:ad5940lib/ad5940.c ****     int32_t ExpectedCode = 0x8000;        /* Ideal ADC output */
3050:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, 0);   /* Reset offset register */
3051:ad5940lib/ad5940.c **** 
3052:ad5940lib/ad5940.c ****     adc_base.ADCMuxP = ADCMUXP_VSET1P1;
3053:ad5940lib/ad5940.c ****     adc_base.ADCMuxN = ADCMUXN_VSET1P1;   /* Short input with common voltage set to 1.11v */
3054:ad5940lib/ad5940.c ****     adc_base.ADCPga = pADCPGACal->ADCPga; /* Set correct Gain value. */
3055:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(&adc_base);
3056:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);                  /* Wait for sometime */
3057:ad5940lib/ad5940.c ****     ADCCode = 0;
3058:ad5940lib/ad5940.c ****     for(int i=0; i<8; i++)
3059:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
3060:ad5940lib/ad5940.c ****       time_out = pADCPGACal->TimeOut10us;   /* Reset time out counter */
3061:ad5940lib/ad5940.c ****       ADCCode += __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and the
3062:ad5940lib/ad5940.c ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;  /* Time out error. */
3063:ad5940lib/ad5940.c ****     }
3064:ad5940lib/ad5940.c ****     /* Calculate and write the result to registers before gain calibration */
3065:ad5940lib/ad5940.c ****     ADCCode = (ExpectedCode<<3) - ADCCode;  /* We will shift back 1bit below */
3066:ad5940lib/ad5940.c ****     /**
3067:ad5940lib/ad5940.c ****      * AD5940 use formular Output = gain*(input + offset) for calibration.
3068:ad5940lib/ad5940.c ****      * So, the measured results should be divided by gain to get value for offset register.
3069:ad5940lib/ad5940.c ****     */
3070:ad5940lib/ad5940.c ****     uint32_t gain = AD5940_ReadReg(regaddr_gain);
3071:ad5940lib/ad5940.c ****     ADCCode = (ADCCode*0x4000)/gain;
3072:ad5940lib/ad5940.c ****     ADCCode = ((ADCCode+1)>>1)&0x7fff;      /* Round 0.5 */
3073:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, ADCCode);
3074:ad5940lib/ad5940.c ****   }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 252


3075:ad5940lib/ad5940.c ****   
3076:ad5940lib/ad5940.c ****   /* Do gain calibration */
3077:ad5940lib/ad5940.c ****   if(pADCPGACal->PGACalType != PGACALTYPE_OFFSET)  /* Need gain calibration */
 9152              		.loc 1 3077 3 is_stmt 1 view .LVU2600
 9153              		.loc 1 3077 16 is_stmt 0 view .LVU2601
 9154 0082 E369     		ldr	r3, [r4, #28]
 9155              		.loc 1 3077 5 view .LVU2602
 9156 0084 002B     		cmp	r3, #0
 9157 0086 3AD1     		bne	.L638
 9158              	.L623:
3078:ad5940lib/ad5940.c ****   {
3079:ad5940lib/ad5940.c ****     int32_t ExpectedGainCode;
3080:ad5940lib/ad5940.c ****     static const float ideal_pga_gain[]={1,1.5,2,4,9};
3081:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_gain, 0x4000);  /* Reset gain register */
3082:ad5940lib/ad5940.c ****     if(pADCPGACal->ADCPga <= ADCPGA_2)
3083:ad5940lib/ad5940.c ****     {
3084:ad5940lib/ad5940.c ****       //gain1,1.5,2 could use reference directly
3085:ad5940lib/ad5940.c ****       adc_base.ADCMuxP = ADCMUXP_VREF1P8DAC;
3086:ad5940lib/ad5940.c ****       adc_base.ADCMuxN = ADCMUXN_VSET1P1;
3087:ad5940lib/ad5940.c ****       ExpectedGainCode = (int32_t)((pADCPGACal->VRef1p82 - pADCPGACal->VRef1p11)*ideal_pga_gain[pAD
3088:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
3089:ad5940lib/ad5940.c ****                                     + 0x8000;
3090:ad5940lib/ad5940.c ****     }
3091:ad5940lib/ad5940.c ****     else
3092:ad5940lib/ad5940.c ****     {
3093:ad5940lib/ad5940.c ****       //gain4,9 use DAC generated voltage
3094:ad5940lib/ad5940.c ****       adc_base.ADCMuxP = ADCMUXP_P_NODE;
3095:ad5940lib/ad5940.c ****       adc_base.ADCMuxN = ADCMUXN_N_NODE;
3096:ad5940lib/ad5940.c ****       /* Setup HSLOOP to generate voltage for GAIN4/9 calibration. */
3097:ad5940lib/ad5940.c ****       AD5940_AFECtrlS(AFECTRL_EXTBUFPWR|AFECTRL_INAMPPWR|AFECTRL_HSTIAPWR|AFECTRL_WG, bTRUE);
3098:ad5940lib/ad5940.c ****       HSLoopCfg_Type hsloop_cfg;
3099:ad5940lib/ad5940.c ****       hsloop_cfg.HsDacCfg.ExcitBufGain = EXCITBUFGAIN_2;
3100:ad5940lib/ad5940.c ****       hsloop_cfg.HsDacCfg.HsDacGain = HSDACGAIN_1;
3101:ad5940lib/ad5940.c ****       hsloop_cfg.HsDacCfg.HsDacUpdateRate = 7;
3102:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.DiodeClose = bFALSE;
3103:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaBias = HSTIABIAS_1P1;
3104:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaCtia = 31;
3105:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
3106:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
3107:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDe1Rload = HSTIADERLOAD_OPEN;
3108:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDe1Rtia = HSTIADERTIA_OPEN;
3109:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaRtiaSel = HSTIARTIA_200;
3110:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Dswitch = SWD_OPEN;
3111:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Pswitch = SWP_PL;
3112:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Nswitch = SWN_NL;
3113:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Tswitch = SWT_TRTIA;
3114:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.GainCalEn = bTRUE;
3115:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.OffsetCalEn = bTRUE;
3116:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.WgType = WGTYPE_MMR;
3117:ad5940lib/ad5940.c ****       uint32_t HSDACCode;
3118:ad5940lib/ad5940.c ****       if(pADCPGACal->ADCPga == ADCPGA_4)
3119:ad5940lib/ad5940.c ****         HSDACCode = 0x800 + 0x300;  /* 0x300--> 0x300/0x1000*0.8*BUFFERGAIN2 = 0.3V. */
3120:ad5940lib/ad5940.c ****       else if(pADCPGACal->ADCPga == ADCPGA_9)
3121:ad5940lib/ad5940.c ****         HSDACCode = 0x800 + 0x155;  /* 0x155--> 0x155/0x1000*0.8*BUFFERGAIN2 = 0.133V. */
3122:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.WgCode = HSDACCode;
3123:ad5940lib/ad5940.c ****       AD5940_HSLoopCfgS(&hsloop_cfg);
3124:ad5940lib/ad5940.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 253


3125:ad5940lib/ad5940.c ****       //measure expected code
3126:ad5940lib/ad5940.c ****       adc_base.ADCPga = ADCPGA_1P5;
3127:ad5940lib/ad5940.c ****       AD5940_ADCBaseCfgS(&adc_base);  
3128:ad5940lib/ad5940.c ****       AD5940_Delay10us(5);
3129:ad5940lib/ad5940.c ****       time_out = pADCPGACal->TimeOut10us;   /* Reset time out counter */
3130:ad5940lib/ad5940.c ****       ExpectedGainCode = 0x8000 + (int32_t)((__AD5940_TakeMeasurement(&time_out) - 0x8000)/1.5f\
3131:ad5940lib/ad5940.c ****                                             *ideal_pga_gain[pADCPGACal->ADCPga]);
3132:ad5940lib/ad5940.c ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
3133:ad5940lib/ad5940.c ****     }
3134:ad5940lib/ad5940.c ****     adc_base.ADCPga = pADCPGACal->ADCPga;    /* Set to gain under calibration */
3135:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(&adc_base);
3136:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);
3137:ad5940lib/ad5940.c ****     time_out = pADCPGACal->TimeOut10us;      /* Reset time out counter */
3138:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);
3139:ad5940lib/ad5940.c ****     if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
3140:ad5940lib/ad5940.c ****     /* Calculate and write the result to registers */
3141:ad5940lib/ad5940.c ****     ADCCode = (ExpectedGainCode - 0x8000)*0x4000/(ADCCode-0x8000);
3142:ad5940lib/ad5940.c ****     ADCCode &= 0x7fff;
3143:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_gain, ADCCode);
3144:ad5940lib/ad5940.c ****   }
3145:ad5940lib/ad5940.c **** 
3146:ad5940lib/ad5940.c ****   /* Restore INTC1 SINC2 configure */
3147:ad5940lib/ad5940.c ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 9159              		.loc 1 3147 3 is_stmt 1 view .LVU2603
 9160              		.loc 1 3147 5 is_stmt 0 view .LVU2604
 9161 0088 17F0040F 		tst	r7, #4
 9162 008c 00F0EA80 		beq	.L639
 9163              	.L628:
3148:ad5940lib/ad5940.c ****   else
3149:ad5940lib/ad5940.c ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bFALSE); /* Disable SINC2 Interrupt */
3150:ad5940lib/ad5940.c **** 
3151:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 9164              		.loc 1 3151 3 is_stmt 1 view .LVU2605
 9165 0090 0021     		movs	r1, #0
 9166 0092 42F23020 		movw	r0, #8752
 9167 0096 FFF7FEFF 		bl	AD5940_WriteReg
 9168              	.LVL972:
3152:ad5940lib/ad5940.c ****   /* Done */
3153:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 9169              		.loc 1 3153 3 view .LVU2606
 9170              		.loc 1 3153 10 is_stmt 0 view .LVU2607
 9171 009a 0020     		movs	r0, #0
 9172              	.LVL973:
 9173              	.L617:
3154:ad5940lib/ad5940.c **** 
3155:ad5940lib/ad5940.c **** ADCPGACALERROR_TIMEOUT:
3156:ad5940lib/ad5940.c ****   AD5940_ADCConvtCtrlS(bFALSE);  /* Stop conversion */
3157:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
3158:ad5940lib/ad5940.c ****   return AD5940ERR_TIMEOUT;
3159:ad5940lib/ad5940.c **** }
 9174              		.loc 1 3159 1 view .LVU2608
 9175 009c 26B0     		add	sp, sp, #152
 9176              	.LCFI158:
 9177              		.cfi_remember_state
 9178              		.cfi_def_cfa_offset 32
 9179              		@ sp needed
 9180 009e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 254


 9181              	.LVL974:
 9182              	.L637:
 9183              	.LCFI159:
 9184              		.cfi_restore_state
 9185              	.LBB14:
3049:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, 0);   /* Reset offset register */
 9186              		.loc 1 3049 5 is_stmt 1 view .LVU2609
3050:ad5940lib/ad5940.c **** 
 9187              		.loc 1 3050 5 view .LVU2610
 9188 00a2 3146     		mov	r1, r6
 9189 00a4 4846     		mov	r0, r9
 9190 00a6 FFF7FEFF 		bl	AD5940_WriteReg
 9191              	.LVL975:
3052:ad5940lib/ad5940.c ****     adc_base.ADCMuxN = ADCMUXN_VSET1P1;   /* Short input with common voltage set to 1.11v */
 9192              		.loc 1 3052 5 view .LVU2611
3052:ad5940lib/ad5940.c ****     adc_base.ADCMuxN = ADCMUXN_VSET1P1;   /* Short input with common voltage set to 1.11v */
 9193              		.loc 1 3052 22 is_stmt 0 view .LVU2612
 9194 00aa 0C23     		movs	r3, #12
 9195 00ac 2393     		str	r3, [sp, #140]
3053:ad5940lib/ad5940.c ****     adc_base.ADCPga = pADCPGACal->ADCPga; /* Set correct Gain value. */
 9196              		.loc 1 3053 5 is_stmt 1 view .LVU2613
3053:ad5940lib/ad5940.c ****     adc_base.ADCPga = pADCPGACal->ADCPga; /* Set correct Gain value. */
 9197              		.loc 1 3053 22 is_stmt 0 view .LVU2614
 9198 00ae 0823     		movs	r3, #8
 9199 00b0 2493     		str	r3, [sp, #144]
3054:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(&adc_base);
 9200              		.loc 1 3054 5 is_stmt 1 view .LVU2615
3054:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(&adc_base);
 9201              		.loc 1 3054 33 is_stmt 0 view .LVU2616
 9202 00b2 A369     		ldr	r3, [r4, #24]
3054:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(&adc_base);
 9203              		.loc 1 3054 21 view .LVU2617
 9204 00b4 2593     		str	r3, [sp, #148]
3055:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);                  /* Wait for sometime */
 9205              		.loc 1 3055 5 is_stmt 1 view .LVU2618
 9206 00b6 23A8     		add	r0, sp, #140
 9207 00b8 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 9208              	.LVL976:
3056:ad5940lib/ad5940.c ****     ADCCode = 0;
 9209              		.loc 1 3056 5 view .LVU2619
 9210 00bc 0520     		movs	r0, #5
 9211 00be FFF7FEFF 		bl	AD5940_Delay10us
 9212              	.LVL977:
3057:ad5940lib/ad5940.c ****     for(int i=0; i<8; i++)
 9213              		.loc 1 3057 5 view .LVU2620
3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9214              		.loc 1 3058 5 view .LVU2621
 9215              	.LBB15:
3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9216              		.loc 1 3058 9 view .LVU2622
3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9217              		.loc 1 3058 13 is_stmt 0 view .LVU2623
 9218 00c2 3546     		mov	r5, r6
 9219              	.LVL978:
 9220              	.L620:
3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9221              		.loc 1 3058 18 is_stmt 1 discriminator 1 view .LVU2624
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 255


3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9222              		.loc 1 3058 5 is_stmt 0 discriminator 1 view .LVU2625
 9223 00c4 072D     		cmp	r5, #7
 9224 00c6 0BDC     		bgt	.L640
3060:ad5940lib/ad5940.c ****       ADCCode += __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and the
 9225              		.loc 1 3060 7 is_stmt 1 view .LVU2626
3060:ad5940lib/ad5940.c ****       ADCCode += __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and the
 9226              		.loc 1 3060 28 is_stmt 0 view .LVU2627
 9227 00c8 236A     		ldr	r3, [r4, #32]
3060:ad5940lib/ad5940.c ****       ADCCode += __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and the
 9228              		.loc 1 3060 16 view .LVU2628
 9229 00ca 2293     		str	r3, [sp, #136]
3061:ad5940lib/ad5940.c ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;  /* Time out error. */
 9230              		.loc 1 3061 7 is_stmt 1 view .LVU2629
3061:ad5940lib/ad5940.c ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;  /* Time out error. */
 9231              		.loc 1 3061 18 is_stmt 0 view .LVU2630
 9232 00cc 22A8     		add	r0, sp, #136
 9233 00ce FFF7FEFF 		bl	__AD5940_TakeMeasurement
 9234              	.LVL979:
3061:ad5940lib/ad5940.c ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;  /* Time out error. */
 9235              		.loc 1 3061 15 view .LVU2631
 9236 00d2 0644     		add	r6, r6, r0
 9237              	.LVL980:
3062:ad5940lib/ad5940.c ****     }
 9238              		.loc 1 3062 7 is_stmt 1 view .LVU2632
3062:ad5940lib/ad5940.c ****     }
 9239              		.loc 1 3062 19 is_stmt 0 view .LVU2633
 9240 00d4 229B     		ldr	r3, [sp, #136]
3062:ad5940lib/ad5940.c ****     }
 9241              		.loc 1 3062 9 view .LVU2634
 9242 00d6 002B     		cmp	r3, #0
 9243 00d8 00F0B380 		beq	.L621
3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9244              		.loc 1 3058 23 is_stmt 1 discriminator 2 view .LVU2635
3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9245              		.loc 1 3058 24 is_stmt 0 discriminator 2 view .LVU2636
 9246 00dc 0135     		adds	r5, r5, #1
 9247              	.LVL981:
3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9248              		.loc 1 3058 24 discriminator 2 view .LVU2637
 9249 00de F1E7     		b	.L620
 9250              	.L640:
3058:ad5940lib/ad5940.c ****     { /* ADC offset calibration register has resolution of 0.25LSB. take full use of it. */
 9251              		.loc 1 3058 24 discriminator 2 view .LVU2638
 9252              	.LBE15:
3065:ad5940lib/ad5940.c ****     /**
 9253              		.loc 1 3065 5 is_stmt 1 view .LVU2639
3065:ad5940lib/ad5940.c ****     /**
 9254              		.loc 1 3065 13 is_stmt 0 view .LVU2640
 9255 00e0 C6F58026 		rsb	r6, r6, #262144
 9256              	.LVL982:
3070:ad5940lib/ad5940.c ****     ADCCode = (ADCCode*0x4000)/gain;
 9257              		.loc 1 3070 5 is_stmt 1 view .LVU2641
3070:ad5940lib/ad5940.c ****     ADCCode = (ADCCode*0x4000)/gain;
 9258              		.loc 1 3070 21 is_stmt 0 view .LVU2642
 9259 00e4 4046     		mov	r0, r8
 9260 00e6 FFF7FEFF 		bl	AD5940_ReadReg
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 256


 9261              	.LVL983:
3071:ad5940lib/ad5940.c ****     ADCCode = ((ADCCode+1)>>1)&0x7fff;      /* Round 0.5 */
 9262              		.loc 1 3071 5 is_stmt 1 view .LVU2643
3071:ad5940lib/ad5940.c ****     ADCCode = ((ADCCode+1)>>1)&0x7fff;      /* Round 0.5 */
 9263              		.loc 1 3071 23 is_stmt 0 view .LVU2644
 9264 00ea B603     		lsls	r6, r6, #14
 9265              	.LVL984:
3071:ad5940lib/ad5940.c ****     ADCCode = ((ADCCode+1)>>1)&0x7fff;      /* Round 0.5 */
 9266              		.loc 1 3071 31 view .LVU2645
 9267 00ec B6FBF0F6 		udiv	r6, r6, r0
 9268              	.LVL985:
3072:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 9269              		.loc 1 3072 5 is_stmt 1 view .LVU2646
3072:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 9270              		.loc 1 3072 24 is_stmt 0 view .LVU2647
 9271 00f0 711C     		adds	r1, r6, #1
 9272              	.LVL986:
3073:ad5940lib/ad5940.c ****   }
 9273              		.loc 1 3073 5 is_stmt 1 view .LVU2648
 9274 00f2 C1F34E01 		ubfx	r1, r1, #1, #15
 9275              	.LVL987:
3073:ad5940lib/ad5940.c ****   }
 9276              		.loc 1 3073 5 is_stmt 0 view .LVU2649
 9277 00f6 4846     		mov	r0, r9
 9278              	.LVL988:
3073:ad5940lib/ad5940.c ****   }
 9279              		.loc 1 3073 5 view .LVU2650
 9280 00f8 FFF7FEFF 		bl	AD5940_WriteReg
 9281              	.LVL989:
3073:ad5940lib/ad5940.c ****   }
 9282              		.loc 1 3073 5 view .LVU2651
 9283 00fc C1E7     		b	.L619
 9284              	.LVL990:
 9285              	.L638:
3073:ad5940lib/ad5940.c ****   }
 9286              		.loc 1 3073 5 view .LVU2652
 9287              	.LBE14:
 9288              	.LBB16:
3079:ad5940lib/ad5940.c ****     static const float ideal_pga_gain[]={1,1.5,2,4,9};
 9289              		.loc 1 3079 5 is_stmt 1 view .LVU2653
3080:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_gain, 0x4000);  /* Reset gain register */
 9290              		.loc 1 3080 5 view .LVU2654
3081:ad5940lib/ad5940.c ****     if(pADCPGACal->ADCPga <= ADCPGA_2)
 9291              		.loc 1 3081 5 view .LVU2655
 9292 00fe 4FF48041 		mov	r1, #16384
 9293 0102 4046     		mov	r0, r8
 9294 0104 FFF7FEFF 		bl	AD5940_WriteReg
 9295              	.LVL991:
3082:ad5940lib/ad5940.c ****     {
 9296              		.loc 1 3082 5 view .LVU2656
3082:ad5940lib/ad5940.c ****     {
 9297              		.loc 1 3082 18 is_stmt 0 view .LVU2657
 9298 0108 A269     		ldr	r2, [r4, #24]
3082:ad5940lib/ad5940.c ****     {
 9299              		.loc 1 3082 7 view .LVU2658
 9300 010a 022A     		cmp	r2, #2
 9301 010c 3DD8     		bhi	.L624
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 257


3085:ad5940lib/ad5940.c ****       adc_base.ADCMuxN = ADCMUXN_VSET1P1;
 9302              		.loc 1 3085 7 is_stmt 1 view .LVU2659
3085:ad5940lib/ad5940.c ****       adc_base.ADCMuxN = ADCMUXN_VSET1P1;
 9303              		.loc 1 3085 24 is_stmt 0 view .LVU2660
 9304 010e 1223     		movs	r3, #18
 9305 0110 2393     		str	r3, [sp, #140]
3086:ad5940lib/ad5940.c ****       ExpectedGainCode = (int32_t)((pADCPGACal->VRef1p82 - pADCPGACal->VRef1p11)*ideal_pga_gain[pAD
 9306              		.loc 1 3086 7 is_stmt 1 view .LVU2661
3086:ad5940lib/ad5940.c ****       ExpectedGainCode = (int32_t)((pADCPGACal->VRef1p82 - pADCPGACal->VRef1p11)*ideal_pga_gain[pAD
 9307              		.loc 1 3086 24 is_stmt 0 view .LVU2662
 9308 0112 0823     		movs	r3, #8
 9309 0114 2493     		str	r3, [sp, #144]
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9310              		.loc 1 3087 7 is_stmt 1 view .LVU2663
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9311              		.loc 1 3087 47 is_stmt 0 view .LVU2664
 9312 0116 D4ED026A 		vldr.32	s13, [r4, #8]
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9313              		.loc 1 3087 70 view .LVU2665
 9314 011a D4ED037A 		vldr.32	s15, [r4, #12]
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9315              		.loc 1 3087 58 view .LVU2666
 9316 011e 76EEE77A 		vsub.f32	s15, s13, s15
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9317              		.loc 1 3087 96 view .LVU2667
 9318 0122 5A4B     		ldr	r3, .L642+16
 9319 0124 03EB8203 		add	r3, r3, r2, lsl #2
 9320 0128 93ED007A 		vldr.32	s14, [r3]
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9321              		.loc 1 3087 81 view .LVU2668
 9322 012c 67EE877A 		vmul.f32	s15, s15, s14
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9323              		.loc 1 3087 116 view .LVU2669
 9324 0130 87EEA67A 		vdiv.f32	s14, s15, s13
3088:ad5940lib/ad5940.c ****                                     + 0x8000;
 9325              		.loc 1 3088 57 view .LVU2670
 9326 0134 DFED567A 		vldr.32	s15, .L642+20
 9327 0138 27EE277A 		vmul.f32	s14, s14, s15
3088:ad5940lib/ad5940.c ****                                     + 0x8000;
 9328              		.loc 1 3088 63 view .LVU2671
 9329 013c DFED556A 		vldr.32	s13, .L642+24
 9330 0140 C7EE267A 		vdiv.f32	s15, s14, s13
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9331              		.loc 1 3087 26 view .LVU2672
 9332 0144 FDEEE77A 		vcvt.s32.f32	s15, s15
 9333 0148 17EE905A 		vmov	r5, s15	@ int
3087:ad5940lib/ad5940.c ****                                     pADCPGACal->VRef1p82*32768/kFactor)\
 9334              		.loc 1 3087 24 view .LVU2673
 9335 014c 05F50045 		add	r5, r5, #32768
 9336              	.LVL992:
 9337              	.L625:
3134:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(&adc_base);
 9338              		.loc 1 3134 5 is_stmt 1 view .LVU2674
3134:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(&adc_base);
 9339              		.loc 1 3134 33 is_stmt 0 view .LVU2675
 9340 0150 A369     		ldr	r3, [r4, #24]
3134:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(&adc_base);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 258


 9341              		.loc 1 3134 21 view .LVU2676
 9342 0152 2593     		str	r3, [sp, #148]
3135:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);
 9343              		.loc 1 3135 5 is_stmt 1 view .LVU2677
 9344 0154 23A8     		add	r0, sp, #140
 9345 0156 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 9346              	.LVL993:
3136:ad5940lib/ad5940.c ****     time_out = pADCPGACal->TimeOut10us;      /* Reset time out counter */
 9347              		.loc 1 3136 5 view .LVU2678
 9348 015a 0520     		movs	r0, #5
 9349 015c FFF7FEFF 		bl	AD5940_Delay10us
 9350              	.LVL994:
3137:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);
 9351              		.loc 1 3137 5 view .LVU2679
3137:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);
 9352              		.loc 1 3137 26 is_stmt 0 view .LVU2680
 9353 0160 236A     		ldr	r3, [r4, #32]
3137:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);
 9354              		.loc 1 3137 14 view .LVU2681
 9355 0162 2293     		str	r3, [sp, #136]
3138:ad5940lib/ad5940.c ****     if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
 9356              		.loc 1 3138 5 is_stmt 1 view .LVU2682
3138:ad5940lib/ad5940.c ****     if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
 9357              		.loc 1 3138 15 is_stmt 0 view .LVU2683
 9358 0164 22A8     		add	r0, sp, #136
 9359 0166 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 9360              	.LVL995:
3139:ad5940lib/ad5940.c ****     /* Calculate and write the result to registers */
 9361              		.loc 1 3139 5 is_stmt 1 view .LVU2684
3139:ad5940lib/ad5940.c ****     /* Calculate and write the result to registers */
 9362              		.loc 1 3139 17 is_stmt 0 view .LVU2685
 9363 016a 229B     		ldr	r3, [sp, #136]
3139:ad5940lib/ad5940.c ****     /* Calculate and write the result to registers */
 9364              		.loc 1 3139 7 view .LVU2686
 9365 016c 002B     		cmp	r3, #0
 9366 016e 68D0     		beq	.L621
3141:ad5940lib/ad5940.c ****     ADCCode &= 0x7fff;
 9367              		.loc 1 3141 5 is_stmt 1 view .LVU2687
3141:ad5940lib/ad5940.c ****     ADCCode &= 0x7fff;
 9368              		.loc 1 3141 33 is_stmt 0 view .LVU2688
 9369 0170 A5F50041 		sub	r1, r5, #32768
3141:ad5940lib/ad5940.c ****     ADCCode &= 0x7fff;
 9370              		.loc 1 3141 42 view .LVU2689
 9371 0174 8903     		lsls	r1, r1, #14
3141:ad5940lib/ad5940.c ****     ADCCode &= 0x7fff;
 9372              		.loc 1 3141 58 view .LVU2690
 9373 0176 A0F50040 		sub	r0, r0, #32768
 9374              	.LVL996:
3141:ad5940lib/ad5940.c ****     ADCCode &= 0x7fff;
 9375              		.loc 1 3141 13 view .LVU2691
 9376 017a 91FBF0F1 		sdiv	r1, r1, r0
 9377              	.LVL997:
3142:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_gain, ADCCode);
 9378              		.loc 1 3142 5 is_stmt 1 view .LVU2692
3143:ad5940lib/ad5940.c ****   }
 9379              		.loc 1 3143 5 view .LVU2693
 9380 017e C1F30E01 		ubfx	r1, r1, #0, #15
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 259


 9381              	.LVL998:
3143:ad5940lib/ad5940.c ****   }
 9382              		.loc 1 3143 5 is_stmt 0 view .LVU2694
 9383 0182 4046     		mov	r0, r8
 9384 0184 FFF7FEFF 		bl	AD5940_WriteReg
 9385              	.LVL999:
3143:ad5940lib/ad5940.c ****   }
 9386              		.loc 1 3143 5 view .LVU2695
 9387 0188 7EE7     		b	.L623
 9388              	.LVL1000:
 9389              	.L624:
 9390              	.LBB17:
3094:ad5940lib/ad5940.c ****       adc_base.ADCMuxN = ADCMUXN_N_NODE;
 9391              		.loc 1 3094 7 is_stmt 1 view .LVU2696
3094:ad5940lib/ad5940.c ****       adc_base.ADCMuxN = ADCMUXN_N_NODE;
 9392              		.loc 1 3094 24 is_stmt 0 view .LVU2697
 9393 018a 2423     		movs	r3, #36
 9394 018c 2393     		str	r3, [sp, #140]
3095:ad5940lib/ad5940.c ****       /* Setup HSLOOP to generate voltage for GAIN4/9 calibration. */
 9395              		.loc 1 3095 7 is_stmt 1 view .LVU2698
3095:ad5940lib/ad5940.c ****       /* Setup HSLOOP to generate voltage for GAIN4/9 calibration. */
 9396              		.loc 1 3095 24 is_stmt 0 view .LVU2699
 9397 018e 1423     		movs	r3, #20
 9398 0190 2493     		str	r3, [sp, #144]
3097:ad5940lib/ad5940.c ****       HSLoopCfg_Type hsloop_cfg;
 9399              		.loc 1 3097 7 is_stmt 1 view .LVU2700
 9400 0192 0121     		movs	r1, #1
 9401 0194 4FF49C40 		mov	r0, #19968
 9402 0198 FFF7FEFF 		bl	AD5940_AFECtrlS
 9403              	.LVL1001:
3098:ad5940lib/ad5940.c ****       hsloop_cfg.HsDacCfg.ExcitBufGain = EXCITBUFGAIN_2;
 9404              		.loc 1 3098 7 view .LVU2701
3099:ad5940lib/ad5940.c ****       hsloop_cfg.HsDacCfg.HsDacGain = HSDACGAIN_1;
 9405              		.loc 1 3099 7 view .LVU2702
3099:ad5940lib/ad5940.c ****       hsloop_cfg.HsDacCfg.HsDacGain = HSDACGAIN_1;
 9406              		.loc 1 3099 40 is_stmt 0 view .LVU2703
 9407 019c 0023     		movs	r3, #0
 9408 019e 0593     		str	r3, [sp, #20]
3100:ad5940lib/ad5940.c ****       hsloop_cfg.HsDacCfg.HsDacUpdateRate = 7;
 9409              		.loc 1 3100 7 is_stmt 1 view .LVU2704
3100:ad5940lib/ad5940.c ****       hsloop_cfg.HsDacCfg.HsDacUpdateRate = 7;
 9410              		.loc 1 3100 37 is_stmt 0 view .LVU2705
 9411 01a0 0693     		str	r3, [sp, #24]
3101:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.DiodeClose = bFALSE;
 9412              		.loc 1 3101 7 is_stmt 1 view .LVU2706
3101:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.DiodeClose = bFALSE;
 9413              		.loc 1 3101 43 is_stmt 0 view .LVU2707
 9414 01a2 0722     		movs	r2, #7
 9415 01a4 0792     		str	r2, [sp, #28]
3102:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaBias = HSTIABIAS_1P1;
 9416              		.loc 1 3102 7 is_stmt 1 view .LVU2708
3102:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaBias = HSTIABIAS_1P1;
 9417              		.loc 1 3102 38 is_stmt 0 view .LVU2709
 9418 01a6 8DF86030 		strb	r3, [sp, #96]
3103:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaCtia = 31;
 9419              		.loc 1 3103 7 is_stmt 1 view .LVU2710
3103:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaCtia = 31;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 260


 9420              		.loc 1 3103 37 is_stmt 0 view .LVU2711
 9421 01aa 1593     		str	r3, [sp, #84]
3104:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
 9422              		.loc 1 3104 7 is_stmt 1 view .LVU2712
3104:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
 9423              		.loc 1 3104 37 is_stmt 0 view .LVU2713
 9424 01ac 1F22     		movs	r2, #31
 9425 01ae 1792     		str	r2, [sp, #92]
3105:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
 9426              		.loc 1 3105 7 is_stmt 1 view .LVU2714
3105:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
 9427              		.loc 1 3105 40 is_stmt 0 view .LVU2715
 9428 01b0 0521     		movs	r1, #5
 9429 01b2 1A91     		str	r1, [sp, #104]
3106:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDe1Rload = HSTIADERLOAD_OPEN;
 9430              		.loc 1 3106 7 is_stmt 1 view .LVU2716
3106:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDe1Rload = HSTIADERLOAD_OPEN;
 9431              		.loc 1 3106 39 is_stmt 0 view .LVU2717
 9432 01b4 0B22     		movs	r2, #11
 9433 01b6 1992     		str	r2, [sp, #100]
3107:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDe1Rtia = HSTIADERTIA_OPEN;
 9434              		.loc 1 3107 7 is_stmt 1 view .LVU2718
3107:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaDe1Rtia = HSTIADERTIA_OPEN;
 9435              		.loc 1 3107 41 is_stmt 0 view .LVU2719
 9436 01b8 1C91     		str	r1, [sp, #112]
3108:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaRtiaSel = HSTIARTIA_200;
 9437              		.loc 1 3108 7 is_stmt 1 view .LVU2720
3108:ad5940lib/ad5940.c ****       hsloop_cfg.HsTiaCfg.HstiaRtiaSel = HSTIARTIA_200;
 9438              		.loc 1 3108 40 is_stmt 0 view .LVU2721
 9439 01ba 1B92     		str	r2, [sp, #108]
3109:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Dswitch = SWD_OPEN;
 9440              		.loc 1 3109 7 is_stmt 1 view .LVU2722
3109:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Dswitch = SWD_OPEN;
 9441              		.loc 1 3109 40 is_stmt 0 view .LVU2723
 9442 01bc 1693     		str	r3, [sp, #88]
3110:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Pswitch = SWP_PL;
 9443              		.loc 1 3110 7 is_stmt 1 view .LVU2724
3110:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Pswitch = SWP_PL;
 9444              		.loc 1 3110 35 is_stmt 0 view .LVU2725
 9445 01be 0193     		str	r3, [sp, #4]
3111:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Nswitch = SWN_NL;
 9446              		.loc 1 3111 7 is_stmt 1 view .LVU2726
3111:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Nswitch = SWN_NL;
 9447              		.loc 1 3111 35 is_stmt 0 view .LVU2727
 9448 01c0 4FF40052 		mov	r2, #8192
 9449 01c4 0292     		str	r2, [sp, #8]
3112:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Tswitch = SWT_TRTIA;
 9450              		.loc 1 3112 7 is_stmt 1 view .LVU2728
3112:ad5940lib/ad5940.c ****       hsloop_cfg.SWMatCfg.Tswitch = SWT_TRTIA;
 9451              		.loc 1 3112 35 is_stmt 0 view .LVU2729
 9452 01c6 4FF48062 		mov	r2, #1024
 9453 01ca 0392     		str	r2, [sp, #12]
3113:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.GainCalEn = bTRUE;
 9454              		.loc 1 3113 7 is_stmt 1 view .LVU2730
3113:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.GainCalEn = bTRUE;
 9455              		.loc 1 3113 35 is_stmt 0 view .LVU2731
 9456 01cc 4FF48072 		mov	r2, #256
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 261


 9457 01d0 0492     		str	r2, [sp, #16]
3114:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.OffsetCalEn = bTRUE;
 9458              		.loc 1 3114 7 is_stmt 1 view .LVU2732
3114:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.OffsetCalEn = bTRUE;
 9459              		.loc 1 3114 34 is_stmt 0 view .LVU2733
 9460 01d2 0122     		movs	r2, #1
 9461 01d4 8DF82420 		strb	r2, [sp, #36]
3115:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.WgType = WGTYPE_MMR;
 9462              		.loc 1 3115 7 is_stmt 1 view .LVU2734
3115:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.WgType = WGTYPE_MMR;
 9463              		.loc 1 3115 36 is_stmt 0 view .LVU2735
 9464 01d8 8DF82520 		strb	r2, [sp, #37]
3116:ad5940lib/ad5940.c ****       uint32_t HSDACCode;
 9465              		.loc 1 3116 7 is_stmt 1 view .LVU2736
3116:ad5940lib/ad5940.c ****       uint32_t HSDACCode;
 9466              		.loc 1 3116 31 is_stmt 0 view .LVU2737
 9467 01dc 0893     		str	r3, [sp, #32]
3117:ad5940lib/ad5940.c ****       if(pADCPGACal->ADCPga == ADCPGA_4)
 9468              		.loc 1 3117 7 is_stmt 1 view .LVU2738
3118:ad5940lib/ad5940.c ****         HSDACCode = 0x800 + 0x300;  /* 0x300--> 0x300/0x1000*0.8*BUFFERGAIN2 = 0.3V. */
 9469              		.loc 1 3118 7 view .LVU2739
3118:ad5940lib/ad5940.c ****         HSDACCode = 0x800 + 0x300;  /* 0x300--> 0x300/0x1000*0.8*BUFFERGAIN2 = 0.3V. */
 9470              		.loc 1 3118 20 is_stmt 0 view .LVU2740
 9471 01de A369     		ldr	r3, [r4, #24]
3118:ad5940lib/ad5940.c ****         HSDACCode = 0x800 + 0x300;  /* 0x300--> 0x300/0x1000*0.8*BUFFERGAIN2 = 0.3V. */
 9472              		.loc 1 3118 9 view .LVU2741
 9473 01e0 032B     		cmp	r3, #3
 9474 01e2 39D0     		beq	.L631
3120:ad5940lib/ad5940.c ****         HSDACCode = 0x800 + 0x155;  /* 0x155--> 0x155/0x1000*0.8*BUFFERGAIN2 = 0.133V. */
 9475              		.loc 1 3120 12 is_stmt 1 view .LVU2742
3120:ad5940lib/ad5940.c ****         HSDACCode = 0x800 + 0x155;  /* 0x155--> 0x155/0x1000*0.8*BUFFERGAIN2 = 0.133V. */
 9476              		.loc 1 3120 14 is_stmt 0 view .LVU2743
 9477 01e4 042B     		cmp	r3, #4
 9478 01e6 3AD0     		beq	.L641
 9479              	.L626:
 9480              	.LVL1002:
3122:ad5940lib/ad5940.c ****       AD5940_HSLoopCfgS(&hsloop_cfg);
 9481              		.loc 1 3122 7 is_stmt 1 view .LVU2744
3122:ad5940lib/ad5940.c ****       AD5940_HSLoopCfgS(&hsloop_cfg);
 9482              		.loc 1 3122 31 is_stmt 0 view .LVU2745
 9483 01e8 CDF850A0 		str	r10, [sp, #80]
3123:ad5940lib/ad5940.c **** 
 9484              		.loc 1 3123 7 is_stmt 1 view .LVU2746
 9485 01ec 01A8     		add	r0, sp, #4
 9486 01ee FFF7FEFF 		bl	AD5940_HSLoopCfgS
 9487              	.LVL1003:
3126:ad5940lib/ad5940.c ****       AD5940_ADCBaseCfgS(&adc_base);  
 9488              		.loc 1 3126 7 view .LVU2747
3126:ad5940lib/ad5940.c ****       AD5940_ADCBaseCfgS(&adc_base);  
 9489              		.loc 1 3126 23 is_stmt 0 view .LVU2748
 9490 01f2 0123     		movs	r3, #1
 9491 01f4 2593     		str	r3, [sp, #148]
3127:ad5940lib/ad5940.c ****       AD5940_Delay10us(5);
 9492              		.loc 1 3127 7 is_stmt 1 view .LVU2749
 9493 01f6 23A8     		add	r0, sp, #140
 9494 01f8 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 9495              	.LVL1004:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 262


3128:ad5940lib/ad5940.c ****       time_out = pADCPGACal->TimeOut10us;   /* Reset time out counter */
 9496              		.loc 1 3128 7 view .LVU2750
 9497 01fc 0520     		movs	r0, #5
 9498 01fe FFF7FEFF 		bl	AD5940_Delay10us
 9499              	.LVL1005:
3129:ad5940lib/ad5940.c ****       ExpectedGainCode = 0x8000 + (int32_t)((__AD5940_TakeMeasurement(&time_out) - 0x8000)/1.5f\
 9500              		.loc 1 3129 7 view .LVU2751
3129:ad5940lib/ad5940.c ****       ExpectedGainCode = 0x8000 + (int32_t)((__AD5940_TakeMeasurement(&time_out) - 0x8000)/1.5f\
 9501              		.loc 1 3129 28 is_stmt 0 view .LVU2752
 9502 0202 236A     		ldr	r3, [r4, #32]
3129:ad5940lib/ad5940.c ****       ExpectedGainCode = 0x8000 + (int32_t)((__AD5940_TakeMeasurement(&time_out) - 0x8000)/1.5f\
 9503              		.loc 1 3129 16 view .LVU2753
 9504 0204 2293     		str	r3, [sp, #136]
3130:ad5940lib/ad5940.c ****                                             *ideal_pga_gain[pADCPGACal->ADCPga]);
 9505              		.loc 1 3130 7 is_stmt 1 view .LVU2754
3130:ad5940lib/ad5940.c ****                                             *ideal_pga_gain[pADCPGACal->ADCPga]);
 9506              		.loc 1 3130 46 is_stmt 0 view .LVU2755
 9507 0206 22A8     		add	r0, sp, #136
 9508 0208 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 9509              	.LVL1006:
3130:ad5940lib/ad5940.c ****                                             *ideal_pga_gain[pADCPGACal->ADCPga]);
 9510              		.loc 1 3130 82 view .LVU2756
 9511 020c A0F50040 		sub	r0, r0, #32768
3130:ad5940lib/ad5940.c ****                                             *ideal_pga_gain[pADCPGACal->ADCPga]);
 9512              		.loc 1 3130 91 view .LVU2757
 9513 0210 07EE900A 		vmov	s15, r0	@ int
 9514 0214 B8EE677A 		vcvt.f32.u32	s14, s15
 9515 0218 F7EE086A 		vmov.f32	s13, #1.5e+0
 9516 021c C7EE267A 		vdiv.f32	s15, s14, s13
3131:ad5940lib/ad5940.c ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
 9517              		.loc 1 3131 71 view .LVU2758
 9518 0220 A269     		ldr	r2, [r4, #24]
3131:ad5940lib/ad5940.c ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
 9519              		.loc 1 3131 60 view .LVU2759
 9520 0222 1A4B     		ldr	r3, .L642+16
 9521 0224 03EB8203 		add	r3, r3, r2, lsl #2
 9522 0228 93ED007A 		vldr.32	s14, [r3]
3131:ad5940lib/ad5940.c ****       if(time_out == 0) goto ADCPGACALERROR_TIMEOUT;
 9523              		.loc 1 3131 45 view .LVU2760
 9524 022c 67EE877A 		vmul.f32	s15, s15, s14
3130:ad5940lib/ad5940.c ****                                             *ideal_pga_gain[pADCPGACal->ADCPga]);
 9525              		.loc 1 3130 35 view .LVU2761
 9526 0230 FDEEE77A 		vcvt.s32.f32	s15, s15
 9527 0234 17EE905A 		vmov	r5, s15	@ int
3130:ad5940lib/ad5940.c ****                                             *ideal_pga_gain[pADCPGACal->ADCPga]);
 9528              		.loc 1 3130 24 view .LVU2762
 9529 0238 05F50045 		add	r5, r5, #32768
 9530              	.LVL1007:
3132:ad5940lib/ad5940.c ****     }
 9531              		.loc 1 3132 7 is_stmt 1 view .LVU2763
3132:ad5940lib/ad5940.c ****     }
 9532              		.loc 1 3132 19 is_stmt 0 view .LVU2764
 9533 023c 229B     		ldr	r3, [sp, #136]
3132:ad5940lib/ad5940.c ****     }
 9534              		.loc 1 3132 9 view .LVU2765
 9535 023e 002B     		cmp	r3, #0
 9536 0240 86D1     		bne	.L625
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 263


 9537              	.LVL1008:
 9538              	.L621:
3132:ad5940lib/ad5940.c ****     }
 9539              		.loc 1 3132 9 view .LVU2766
 9540              	.LBE17:
 9541              	.LBE16:
3156:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 9542              		.loc 1 3156 3 is_stmt 1 view .LVU2767
 9543 0242 0020     		movs	r0, #0
 9544 0244 FFF7FEFF 		bl	AD5940_ADCConvtCtrlS
 9545              	.LVL1009:
3157:ad5940lib/ad5940.c ****   return AD5940ERR_TIMEOUT;
 9546              		.loc 1 3157 3 view .LVU2768
 9547 0248 0021     		movs	r1, #0
 9548 024a 42F23020 		movw	r0, #8752
 9549 024e FFF7FEFF 		bl	AD5940_WriteReg
 9550              	.LVL1010:
3158:ad5940lib/ad5940.c **** }
 9551              		.loc 1 3158 3 view .LVU2769
3158:ad5940lib/ad5940.c **** }
 9552              		.loc 1 3158 10 is_stmt 0 view .LVU2770
 9553 0252 6FF00900 		mvn	r0, #9
 9554 0256 21E7     		b	.L617
 9555              	.L631:
 9556              	.LBB19:
 9557              	.LBB18:
3119:ad5940lib/ad5940.c ****       else if(pADCPGACal->ADCPga == ADCPGA_9)
 9558              		.loc 1 3119 19 view .LVU2771
 9559 0258 4FF4306A 		mov	r10, #2816
 9560 025c C4E7     		b	.L626
 9561              	.L641:
3121:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.WgCode = HSDACCode;
 9562              		.loc 1 3121 19 view .LVU2772
 9563 025e 40F6551A 		movw	r10, #2389
 9564 0262 C1E7     		b	.L626
 9565              	.L639:
3121:ad5940lib/ad5940.c ****       hsloop_cfg.WgCfg.WgCode = HSDACCode;
 9566              		.loc 1 3121 19 view .LVU2773
 9567              	.LBE18:
 9568              	.LBE19:
3149:ad5940lib/ad5940.c **** 
 9569              		.loc 1 3149 5 is_stmt 1 view .LVU2774
 9570 0264 0022     		movs	r2, #0
 9571 0266 0421     		movs	r1, #4
 9572 0268 0120     		movs	r0, #1
 9573 026a FFF7FEFF 		bl	AD5940_INTCCfg
 9574              	.LVL1011:
 9575 026e 0FE7     		b	.L628
 9576              	.LVL1012:
 9577              	.L629:
 9578              	.LCFI160:
 9579              		.cfi_def_cfa_offset 0
 9580              		.cfi_restore 4
 9581              		.cfi_restore 5
 9582              		.cfi_restore 6
 9583              		.cfi_restore 7
 9584              		.cfi_restore 8
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 264


 9585              		.cfi_restore 9
 9586              		.cfi_restore 10
 9587              		.cfi_restore 14
3002:ad5940lib/ad5940.c ****   if(pADCPGACal->ADCPga > ADCPGA_9) return AD5940ERR_PARA;  /* Parameter Error */
 9588              		.loc 1 3002 33 is_stmt 0 view .LVU2775
 9589 0270 6FF00200 		mvn	r0, #2
 9590              	.LVL1013:
 9591              		.loc 1 3159 1 view .LVU2776
 9592 0274 7047     		bx	lr
 9593              	.LVL1014:
 9594              	.L630:
 9595              	.LCFI161:
 9596              		.cfi_def_cfa_offset 184
 9597              		.cfi_offset 4, -32
 9598              		.cfi_offset 5, -28
 9599              		.cfi_offset 6, -24
 9600              		.cfi_offset 7, -20
 9601              		.cfi_offset 8, -16
 9602              		.cfi_offset 9, -12
 9603              		.cfi_offset 10, -8
 9604              		.cfi_offset 14, -4
3003:ad5940lib/ad5940.c ****   
 9605              		.loc 1 3003 44 view .LVU2777
 9606 0276 6FF00100 		mvn	r0, #1
 9607              	.LVL1015:
3003:ad5940lib/ad5940.c ****   
 9608              		.loc 1 3003 44 view .LVU2778
 9609 027a 0FE7     		b	.L617
 9610              	.L643:
 9611              		.align	2
 9612              	.L642:
 9613 027c 00000000 		.word	.LANCHOR2
 9614 0280 E0FF3900 		.word	3801056
 9615 0284 E0001100 		.word	1114336
 9616 0288 AFA587DE 		.word	-561535569
 9617 028c 00000000 		.word	.LANCHOR3
 9618 0290 00000047 		.word	1191182336
 9619 0294 110E813F 		.word	1065422353
 9620              		.cfi_endproc
 9621              	.LFE115:
 9623              		.section	.text.AD5940_LPTIAOffsetCal,"ax",%progbits
 9624              		.align	1
 9625              		.global	AD5940_LPTIAOffsetCal
 9626              		.syntax unified
 9627              		.thumb
 9628              		.thumb_func
 9629              		.fpu fpv5-d16
 9631              	AD5940_LPTIAOffsetCal:
 9632              	.LVL1016:
 9633              	.LFB116:
3160:ad5940lib/ad5940.c **** 
3161:ad5940lib/ad5940.c **** /**
3162:ad5940lib/ad5940.c ****  * @brief Calibrate LPTIA offset
3163:ad5940lib/ad5940.c ****  * @param pLPTIAOffsetCal Pointer to LPTIA offset calibration settings.
3164:ad5940lib/ad5940.c ****  * @return AD5940ERR_OK.
3165:ad5940lib/ad5940.c **** **/
3166:ad5940lib/ad5940.c **** AD5940Err AD5940_LPTIAOffsetCal(LPTIAOffsetCal_Type *pLPTIAOffsetCal)
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 265


3167:ad5940lib/ad5940.c **** {
 9634              		.loc 1 3167 1 is_stmt 1 view -0
 9635              		.cfi_startproc
 9636              		@ args = 0, pretend = 0, frame = 96
 9637              		@ frame_needed = 0, uses_anonymous_args = 0
 9638              		.loc 1 3167 1 is_stmt 0 view .LVU2780
 9639 0000 70B5     		push	{r4, r5, r6, lr}
 9640              	.LCFI162:
 9641              		.cfi_def_cfa_offset 16
 9642              		.cfi_offset 4, -16
 9643              		.cfi_offset 5, -12
 9644              		.cfi_offset 6, -8
 9645              		.cfi_offset 14, -4
 9646 0002 98B0     		sub	sp, sp, #96
 9647              	.LCFI163:
 9648              		.cfi_def_cfa_offset 112
3168:ad5940lib/ad5940.c ****   AD5940Err error = AD5940ERR_OK;
 9649              		.loc 1 3168 3 is_stmt 1 view .LVU2781
 9650              	.LVL1017:
3169:ad5940lib/ad5940.c ****   LPLoopCfg_Type lploop_cfg;
 9651              		.loc 1 3169 3 view .LVU2782
3170:ad5940lib/ad5940.c ****   ADCBaseCfg_Type adc_base;
 9652              		.loc 1 3170 3 view .LVU2783
3171:ad5940lib/ad5940.c ****   ADCFilterCfg_Type adc_filter;
 9653              		.loc 1 3171 3 view .LVU2784
3172:ad5940lib/ad5940.c **** 
3173:ad5940lib/ad5940.c ****   int32_t time_out;
 9654              		.loc 1 3173 3 view .LVU2785
3174:ad5940lib/ad5940.c ****   uint32_t INTCCfg;
 9655              		.loc 1 3174 3 view .LVU2786
3175:ad5940lib/ad5940.c ****   int32_t ADCCode;
 9656              		.loc 1 3175 3 view .LVU2787
3176:ad5940lib/ad5940.c ****   BoolFlag bADCClk32MHzMode;
 9657              		.loc 1 3176 3 view .LVU2788
3177:ad5940lib/ad5940.c ****   
3178:ad5940lib/ad5940.c ****   if(pLPTIAOffsetCal == NULL) return AD5940ERR_NULLP;  
 9658              		.loc 1 3178 3 view .LVU2789
 9659              		.loc 1 3178 5 is_stmt 0 view .LVU2790
 9660 0004 0028     		cmp	r0, #0
 9661 0006 00F0AC80 		beq	.L653
 9662 000a 0446     		mov	r4, r0
3179:ad5940lib/ad5940.c ****   if(pLPTIAOffsetCal->AdcClkFreq > (32000000*0.8))
 9663              		.loc 1 3179 3 is_stmt 1 view .LVU2791
 9664              	.LVL1018:
3180:ad5940lib/ad5940.c ****     bADCClk32MHzMode = bTRUE;
3181:ad5940lib/ad5940.c **** 
3182:ad5940lib/ad5940.c ****   /* Step0: Do initialization */
3183:ad5940lib/ad5940.c ****   /* Turn on AD5940 references in case it's disabled. */
3184:ad5940lib/ad5940.c ****   __AD5940_ReferenceON();
 9665              		.loc 1 3184 3 view .LVU2792
 9666 000c FFF7FEFF 		bl	__AD5940_ReferenceON
 9667              	.LVL1019:
3185:ad5940lib/ad5940.c ****   lploop_cfg.LpAmpCfg.LpAmpSel = pLPTIAOffsetCal->LpAmpSel;
 9668              		.loc 1 3185 3 view .LVU2793
 9669              		.loc 1 3185 49 is_stmt 0 view .LVU2794
 9670 0010 2368     		ldr	r3, [r4]
 9671              		.loc 1 3185 32 view .LVU2795
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 266


 9672 0012 1193     		str	r3, [sp, #68]
3186:ad5940lib/ad5940.c ****   lploop_cfg.LpAmpCfg.LpAmpPwrMod = pLPTIAOffsetCal->LpAmpPwrMod;  /* Power mode will affect amp of
 9673              		.loc 1 3186 3 is_stmt 1 view .LVU2796
 9674              		.loc 1 3186 52 is_stmt 0 view .LVU2797
 9675 0014 626A     		ldr	r2, [r4, #36]
 9676              		.loc 1 3186 35 view .LVU2798
 9677 0016 1592     		str	r2, [sp, #84]
3187:ad5940lib/ad5940.c ****   lploop_cfg.LpAmpCfg.LpPaPwrEn = bTRUE;
 9678              		.loc 1 3187 3 is_stmt 1 view .LVU2799
 9679              		.loc 1 3187 33 is_stmt 0 view .LVU2800
 9680 0018 0126     		movs	r6, #1
 9681 001a 8DF85C60 		strb	r6, [sp, #92]
3188:ad5940lib/ad5940.c ****   lploop_cfg.LpAmpCfg.LpTiaPwrEn = bTRUE;
 9682              		.loc 1 3188 3 is_stmt 1 view .LVU2801
 9683              		.loc 1 3188 34 is_stmt 0 view .LVU2802
 9684 001e 8DF85D60 		strb	r6, [sp, #93]
3189:ad5940lib/ad5940.c ****   lploop_cfg.LpAmpCfg.LpTiaRf = LPTIARF_OPEN;
 9685              		.loc 1 3189 3 is_stmt 1 view .LVU2803
 9686              		.loc 1 3189 31 is_stmt 0 view .LVU2804
 9687 0022 0025     		movs	r5, #0
 9688 0024 1295     		str	r5, [sp, #72]
3190:ad5940lib/ad5940.c ****   lploop_cfg.LpAmpCfg.LpTiaRload = LPTIARLOAD_100R;
 9689              		.loc 1 3190 3 is_stmt 1 view .LVU2805
 9690              		.loc 1 3190 34 is_stmt 0 view .LVU2806
 9691 0026 0422     		movs	r2, #4
 9692 0028 1392     		str	r2, [sp, #76]
3191:ad5940lib/ad5940.c ****   lploop_cfg.LpAmpCfg.LpTiaRtia = pLPTIAOffsetCal->LpTiaRtia;
 9693              		.loc 1 3191 3 is_stmt 1 view .LVU2807
 9694              		.loc 1 3191 50 is_stmt 0 view .LVU2808
 9695 002a E16A     		ldr	r1, [r4, #44]
 9696              		.loc 1 3191 33 view .LVU2809
 9697 002c 1491     		str	r1, [sp, #80]
3192:ad5940lib/ad5940.c ****   lploop_cfg.LpAmpCfg.LpTiaSW = pLPTIAOffsetCal->LpTiaSW;  /* Disconnect capacitors so it settles q
 9698              		.loc 1 3192 3 is_stmt 1 view .LVU2810
 9699              		.loc 1 3192 48 is_stmt 0 view .LVU2811
 9700 002e A16A     		ldr	r1, [r4, #40]
 9701              		.loc 1 3192 31 view .LVU2812
 9702 0030 1691     		str	r1, [sp, #88]
3193:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpdacSel = (pLPTIAOffsetCal->LpAmpSel == LPAMP0)?LPDAC0:LPDAC1;
 9703              		.loc 1 3193 3 is_stmt 1 view .LVU2813
 9704              		.loc 1 3193 78 is_stmt 0 view .LVU2814
 9705 0032 5B1B     		subs	r3, r3, r5
 9706 0034 18BF     		it	ne
 9707 0036 0123     		movne	r3, #1
 9708              		.loc 1 3193 32 view .LVU2815
 9709 0038 0993     		str	r3, [sp, #36]
3194:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.DacData12Bit = pLPTIAOffsetCal->DacData12Bit;
 9710              		.loc 1 3194 3 is_stmt 1 view .LVU2816
 9711              		.loc 1 3194 53 is_stmt 0 view .LVU2817
 9712 003a A369     		ldr	r3, [r4, #24]
 9713              		.loc 1 3194 36 view .LVU2818
 9714 003c ADF83E30 		strh	r3, [sp, #62]	@ movhi
3195:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.DacData6Bit = pLPTIAOffsetCal->DacData6Bit;  
 9715              		.loc 1 3195 3 is_stmt 1 view .LVU2819
 9716              		.loc 1 3195 52 is_stmt 0 view .LVU2820
 9717 0040 E369     		ldr	r3, [r4, #28]
 9718              		.loc 1 3195 35 view .LVU2821
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 267


 9719 0042 ADF84030 		strh	r3, [sp, #64]	@ movhi
3196:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.DataRst = bFALSE;
 9720              		.loc 1 3196 3 is_stmt 1 view .LVU2822
 9721              		.loc 1 3196 31 is_stmt 0 view .LVU2823
 9722 0046 8DF83C50 		strb	r5, [sp, #60]
3197:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacRef = LPDACREF_2P5;
 9723              		.loc 1 3197 3 is_stmt 1 view .LVU2824
 9724              		.loc 1 3197 32 is_stmt 0 view .LVU2825
 9725 004a 0E95     		str	r5, [sp, #56]
3198:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacSrc = LPDACSRC_MMR;
 9726              		.loc 1 3198 3 is_stmt 1 view .LVU2826
 9727              		.loc 1 3198 32 is_stmt 0 view .LVU2827
 9728 004c 0A95     		str	r5, [sp, #40]
3199:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacVzeroMux = pLPTIAOffsetCal->LpDacVzeroMux;
 9729              		.loc 1 3199 3 is_stmt 1 view .LVU2828
 9730              		.loc 1 3199 54 is_stmt 0 view .LVU2829
 9731 004e 236A     		ldr	r3, [r4, #32]
 9732              		.loc 1 3199 37 view .LVU2830
 9733 0050 0B93     		str	r3, [sp, #44]
3200:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacSW = LPDACSW_VZERO2LPTIA;
 9734              		.loc 1 3200 3 is_stmt 1 view .LVU2831
 9735              		.loc 1 3200 31 is_stmt 0 view .LVU2832
 9736 0052 0D92     		str	r2, [sp, #52]
3201:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacVbiasMux = LPDACVBIAS_12BIT;
 9737              		.loc 1 3201 3 is_stmt 1 view .LVU2833
 9738              		.loc 1 3201 37 is_stmt 0 view .LVU2834
 9739 0054 0C95     		str	r5, [sp, #48]
3202:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.PowerEn = bTRUE;
 9740              		.loc 1 3202 3 is_stmt 1 view .LVU2835
 9741              		.loc 1 3202 31 is_stmt 0 view .LVU2836
 9742 0056 8DF83D60 		strb	r6, [sp, #61]
3203:ad5940lib/ad5940.c ****   AD5940_LPLoopCfgS(&lploop_cfg);
 9743              		.loc 1 3203 3 is_stmt 1 view .LVU2837
 9744 005a 09A8     		add	r0, sp, #36
 9745 005c FFF7FEFF 		bl	AD5940_LPLoopCfgS
 9746              	.LVL1020:
3204:ad5940lib/ad5940.c **** 
3205:ad5940lib/ad5940.c ****   /* Initialize ADC filters ADCRawData-->SINC3-->SINC2+NOTCH. Use SIN2 data for calibration-->Lower
3206:ad5940lib/ad5940.c ****   adc_filter.ADCSinc3Osr = pLPTIAOffsetCal->ADCSinc3Osr;
 9747              		.loc 1 3206 3 view .LVU2838
 9748              		.loc 1 3206 43 is_stmt 0 view .LVU2839
 9749 0060 E368     		ldr	r3, [r4, #12]
 9750              		.loc 1 3206 26 view .LVU2840
 9751 0062 0193     		str	r3, [sp, #4]
3207:ad5940lib/ad5940.c ****   adc_filter.ADCSinc2Osr = pLPTIAOffsetCal->ADCSinc2Osr;  /* 800KSPS/4/1333 = 150SPS */
 9752              		.loc 1 3207 3 is_stmt 1 view .LVU2841
 9753              		.loc 1 3207 43 is_stmt 0 view .LVU2842
 9754 0064 2369     		ldr	r3, [r4, #16]
 9755              		.loc 1 3207 26 view .LVU2843
 9756 0066 0293     		str	r3, [sp, #8]
3208:ad5940lib/ad5940.c ****   adc_filter.ADCAvgNum = ADCAVGNUM_2;               /* Don't care about it. Average function is onl
 9757              		.loc 1 3208 3 is_stmt 1 view .LVU2844
 9758              		.loc 1 3208 24 is_stmt 0 view .LVU2845
 9759 0068 0395     		str	r5, [sp, #12]
3209:ad5940lib/ad5940.c ****   adc_filter.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;        /* If ADC clock is 32
 9760              		.loc 1 3209 3 is_stmt 1 view .LVU2846
 9761              		.loc 1 3209 22 is_stmt 0 view .LVU2847
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 268


 9762 006a 0495     		str	r5, [sp, #16]
3210:ad5940lib/ad5940.c ****   adc_filter.BpNotch = bTRUE;                       /* SINC2+Notch is one block, when bypass notch 
 9763              		.loc 1 3210 3 is_stmt 1 view .LVU2848
 9764              		.loc 1 3210 22 is_stmt 0 view .LVU2849
 9765 006c 8DF81460 		strb	r6, [sp, #20]
3211:ad5940lib/ad5940.c ****   adc_filter.BpSinc3 = bFALSE;                      /* We use SINC3 filter. */
 9766              		.loc 1 3211 3 is_stmt 1 view .LVU2850
 9767              		.loc 1 3211 22 is_stmt 0 view .LVU2851
 9768 0070 8DF81550 		strb	r5, [sp, #21]
3212:ad5940lib/ad5940.c ****   adc_filter.Sinc2NotchEnable = bTRUE;              /* Enable the SINC2+Notch block. You can also u
 9769              		.loc 1 3212 3 is_stmt 1 view .LVU2852
 9770              		.loc 1 3212 31 is_stmt 0 view .LVU2853
 9771 0074 8DF81660 		strb	r6, [sp, #22]
3213:ad5940lib/ad5940.c ****   AD5940_ADCFilterCfgS(&adc_filter);
 9772              		.loc 1 3213 3 is_stmt 1 view .LVU2854
 9773 0078 01A8     		add	r0, sp, #4
 9774 007a FFF7FEFF 		bl	AD5940_ADCFilterCfgS
 9775              	.LVL1021:
3214:ad5940lib/ad5940.c ****   /* Initialize ADC MUx and PGA */
3215:ad5940lib/ad5940.c ****   if(pLPTIAOffsetCal->LpAmpSel == LPAMP0)
 9776              		.loc 1 3215 3 view .LVU2855
 9777              		.loc 1 3215 21 is_stmt 0 view .LVU2856
 9778 007e 2368     		ldr	r3, [r4]
 9779              		.loc 1 3215 5 view .LVU2857
 9780 0080 002B     		cmp	r3, #0
 9781 0082 4BD1     		bne	.L646
3216:ad5940lib/ad5940.c ****   {
3217:ad5940lib/ad5940.c ****     adc_base.ADCMuxP = ADCMUXP_LPTIA0_P;      
 9782              		.loc 1 3217 5 is_stmt 1 view .LVU2858
 9783              		.loc 1 3217 22 is_stmt 0 view .LVU2859
 9784 0084 2123     		movs	r3, #33
 9785 0086 0693     		str	r3, [sp, #24]
3218:ad5940lib/ad5940.c ****     adc_base.ADCMuxN = ADCMUXN_LPTIA0_N;
 9786              		.loc 1 3218 5 is_stmt 1 view .LVU2860
 9787              		.loc 1 3218 22 is_stmt 0 view .LVU2861
 9788 0088 0223     		movs	r3, #2
 9789 008a 0793     		str	r3, [sp, #28]
 9790              	.L647:
3219:ad5940lib/ad5940.c ****   }
3220:ad5940lib/ad5940.c ****   else
3221:ad5940lib/ad5940.c ****   {
3222:ad5940lib/ad5940.c ****     adc_base.ADCMuxP = ADCMUXP_LPTIA1_P;      
3223:ad5940lib/ad5940.c ****     adc_base.ADCMuxN = ADCMUXN_LPTIA1_N;
3224:ad5940lib/ad5940.c ****   }
3225:ad5940lib/ad5940.c ****   adc_base.ADCPga = pLPTIAOffsetCal->ADCPga;                 /* Set correct Gain value. */
 9791              		.loc 1 3225 3 is_stmt 1 view .LVU2862
 9792              		.loc 1 3225 36 is_stmt 0 view .LVU2863
 9793 008c 6369     		ldr	r3, [r4, #20]
 9794              		.loc 1 3225 19 view .LVU2864
 9795 008e 0893     		str	r3, [sp, #32]
3226:ad5940lib/ad5940.c ****   AD5940_ADCBaseCfgS(&adc_base);
 9796              		.loc 1 3226 3 is_stmt 1 view .LVU2865
 9797 0090 06A8     		add	r0, sp, #24
 9798 0092 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 9799              	.LVL1022:
3227:ad5940lib/ad5940.c ****   /* Turn ON ADC and its reference. And SINC2. */
3228:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE); /* Disable all firstly, we only enable things we use */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 269


 9800              		.loc 1 3228 3 view .LVU2866
 9801 0096 0021     		movs	r1, #0
 9802 0098 3348     		ldr	r0, .L659
 9803 009a FFF7FEFF 		bl	AD5940_AFECtrlS
 9804              	.LVL1023:
3229:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_HPREFPWR|AFECTRL_SINC2NOTCH, bTRUE);
 9805              		.loc 1 3229 3 view .LVU2867
 9806 009e 0121     		movs	r1, #1
 9807 00a0 3248     		ldr	r0, .L659+4
 9808 00a2 FFF7FEFF 		bl	AD5940_AFECtrlS
 9809              	.LVL1024:
3230:ad5940lib/ad5940.c ****   AD5940_Delay10us(25);                     /* Wait 250us for reference power up */
 9810              		.loc 1 3230 3 view .LVU2868
 9811 00a6 1920     		movs	r0, #25
 9812 00a8 FFF7FEFF 		bl	AD5940_Delay10us
 9813              	.LVL1025:
3231:ad5940lib/ad5940.c ****   /* INTC configure and open calibration lock */
3232:ad5940lib/ad5940.c ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 9814              		.loc 1 3232 3 view .LVU2869
 9815              		.loc 1 3232 13 is_stmt 0 view .LVU2870
 9816 00ac 0120     		movs	r0, #1
 9817 00ae FFF7FEFF 		bl	AD5940_INTCGetCfg
 9818              	.LVL1026:
 9819 00b2 0546     		mov	r5, r0
 9820              	.LVL1027:
3233:ad5940lib/ad5940.c ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 9821              		.loc 1 3233 3 is_stmt 1 view .LVU2871
 9822 00b4 0122     		movs	r2, #1
 9823 00b6 0421     		movs	r1, #4
 9824 00b8 1046     		mov	r0, r2
 9825              	.LVL1028:
 9826              		.loc 1 3233 3 is_stmt 0 view .LVU2872
 9827 00ba FFF7FEFF 		bl	AD5940_INTCCfg
 9828              	.LVL1029:
3234:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, KEY_CALDATLOCK);  /* Unlock KEY */
 9829              		.loc 1 3234 3 is_stmt 1 view .LVU2873
 9830 00be 2C49     		ldr	r1, .L659+8
 9831 00c0 42F23020 		movw	r0, #8752
 9832 00c4 FFF7FEFF 		bl	AD5940_WriteReg
 9833              	.LVL1030:
 9834              	.LBB20:
3235:ad5940lib/ad5940.c **** 
3236:ad5940lib/ad5940.c ****   /* Do offset calibration. */
3237:ad5940lib/ad5940.c ****   {
3238:ad5940lib/ad5940.c ****     int32_t ExpectedCode = 0x8000;        /* Ideal ADC output */
 9835              		.loc 1 3238 5 view .LVU2874
3239:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_ADCOFFSETLPTIA0, 0);   /* Reset offset register */
 9836              		.loc 1 3239 5 view .LVU2875
 9837 00c8 0021     		movs	r1, #0
 9838 00ca 42F28820 		movw	r0, #8840
 9839 00ce FFF7FEFF 		bl	AD5940_WriteReg
 9840              	.LVL1031:
3240:ad5940lib/ad5940.c **** 
3241:ad5940lib/ad5940.c ****     if(pLPTIAOffsetCal->SettleTime10us > 0)
 9841              		.loc 1 3241 5 view .LVU2876
 9842              		.loc 1 3241 23 is_stmt 0 view .LVU2877
 9843 00d2 206B     		ldr	r0, [r4, #48]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 270


 9844              		.loc 1 3241 7 view .LVU2878
 9845 00d4 0028     		cmp	r0, #0
 9846 00d6 26DC     		bgt	.L657
 9847              	.L648:
3242:ad5940lib/ad5940.c ****       AD5940_Delay10us(pLPTIAOffsetCal->SettleTime10us);  /* Delay 10us */
3243:ad5940lib/ad5940.c ****     time_out = pLPTIAOffsetCal->TimeOut10us;   /* Reset time out counter */
 9848              		.loc 1 3243 5 is_stmt 1 view .LVU2879
 9849              		.loc 1 3243 31 is_stmt 0 view .LVU2880
 9850 00d8 636B     		ldr	r3, [r4, #52]
 9851              		.loc 1 3243 14 view .LVU2881
 9852 00da 0093     		str	r3, [sp]
3244:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 9853              		.loc 1 3244 5 is_stmt 1 view .LVU2882
 9854              		.loc 1 3244 15 is_stmt 0 view .LVU2883
 9855 00dc 6846     		mov	r0, sp
 9856 00de FFF7FEFF 		bl	__AD5940_TakeMeasurement
 9857              	.LVL1032:
3245:ad5940lib/ad5940.c ****     if(time_out == 0)
 9858              		.loc 1 3245 5 is_stmt 1 view .LVU2884
 9859              		.loc 1 3245 17 is_stmt 0 view .LVU2885
 9860 00e2 009B     		ldr	r3, [sp]
 9861              		.loc 1 3245 7 view .LVU2886
 9862 00e4 6BB3     		cbz	r3, .L654
3246:ad5940lib/ad5940.c ****     {
3247:ad5940lib/ad5940.c ****       error = AD5940ERR_TIMEOUT;
3248:ad5940lib/ad5940.c ****       goto LPTIAOFFSETCALERROR;
3249:ad5940lib/ad5940.c ****     }  /* Time out error. */
3250:ad5940lib/ad5940.c ****     /* Calculate and write the result to registers before gain calibration */
3251:ad5940lib/ad5940.c ****     ADCCode = ((ExpectedCode - ADCCode)<<3);  /* We will shift back 1bit below */
 9863              		.loc 1 3251 5 is_stmt 1 view .LVU2887
 9864              		.loc 1 3251 30 is_stmt 0 view .LVU2888
 9865 00e6 C0F50041 		rsb	r1, r0, #32768
 9866              		.loc 1 3251 13 view .LVU2889
 9867 00ea C900     		lsls	r1, r1, #3
 9868              	.LVL1033:
3252:ad5940lib/ad5940.c ****     ADCCode = ((ADCCode+1)>>1); /* Round 0.5 */
 9869              		.loc 1 3252 5 is_stmt 1 view .LVU2890
 9870              		.loc 1 3252 13 is_stmt 0 view .LVU2891
 9871 00ec 4910     		asrs	r1, r1, #1
 9872              	.LVL1034:
3253:ad5940lib/ad5940.c ****     if((ADCCode > 0x3fff) ||
 9873              		.loc 1 3253 5 is_stmt 1 view .LVU2892
 9874              		.loc 1 3253 27 is_stmt 0 view .LVU2893
 9875 00ee 01F58043 		add	r3, r1, #16384
 9876              		.loc 1 3253 7 view .LVU2894
 9877 00f2 B3F5004F 		cmp	r3, #32768
 9878 00f6 31D2     		bcs	.L655
3254:ad5940lib/ad5940.c ****         (ADCCode < -0x4000))    /* The register used for offset calibration is limited to -0x4000 t
3255:ad5940lib/ad5940.c ****     {
3256:ad5940lib/ad5940.c ****       error = AD5940ERR_CALOR;
3257:ad5940lib/ad5940.c ****       goto LPTIAOFFSETCALERROR;
3258:ad5940lib/ad5940.c ****     }
3259:ad5940lib/ad5940.c ****     ADCCode &= 0x7fff;
 9879              		.loc 1 3259 5 is_stmt 1 view .LVU2895
 9880              		.loc 1 3259 13 is_stmt 0 view .LVU2896
 9881 00f8 C1F30E01 		ubfx	r1, r1, #0, #15
 9882              	.LVL1035:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 271


3260:ad5940lib/ad5940.c ****     if(pLPTIAOffsetCal->LpAmpSel == LPAMP0)
 9883              		.loc 1 3260 5 is_stmt 1 view .LVU2897
 9884              		.loc 1 3260 23 is_stmt 0 view .LVU2898
 9885 00fc 2368     		ldr	r3, [r4]
 9886              		.loc 1 3260 7 view .LVU2899
 9887 00fe ABB9     		cbnz	r3, .L650
3261:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_AFE_ADCOFFSETLPTIA0, ADCCode);
 9888              		.loc 1 3261 7 is_stmt 1 view .LVU2900
 9889 0100 42F28820 		movw	r0, #8840
 9890 0104 FFF7FEFF 		bl	AD5940_WriteReg
 9891              	.LVL1036:
 9892              	.L651:
 9893              		.loc 1 3261 7 is_stmt 0 view .LVU2901
 9894              	.LBE20:
3262:ad5940lib/ad5940.c ****     else
3263:ad5940lib/ad5940.c ****       AD5940_WriteReg(REG_AFE_ADCOFFSETLPTIA1, ADCCode);
3264:ad5940lib/ad5940.c ****   }
3265:ad5940lib/ad5940.c ****   /* Restore INTC1 SINC2 configure */
3266:ad5940lib/ad5940.c ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 9895              		.loc 1 3266 3 is_stmt 1 view .LVU2902
 9896              		.loc 1 3266 5 is_stmt 0 view .LVU2903
 9897 0108 15F0040F 		tst	r5, #4
 9898 010c 13D0     		beq	.L658
 9899              	.L652:
3267:ad5940lib/ad5940.c ****   else
3268:ad5940lib/ad5940.c ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bFALSE); /* Disable SINC2 Interrupt */
3269:ad5940lib/ad5940.c ****   
3270:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 9900              		.loc 1 3270 3 is_stmt 1 view .LVU2904
 9901 010e 0021     		movs	r1, #0
 9902 0110 42F23020 		movw	r0, #8752
 9903 0114 FFF7FEFF 		bl	AD5940_WriteReg
 9904              	.LVL1037:
3271:ad5940lib/ad5940.c ****   /* Done */
3272:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 9905              		.loc 1 3272 3 view .LVU2905
 9906              		.loc 1 3272 10 is_stmt 0 view .LVU2906
 9907 0118 0024     		movs	r4, #0
 9908              	.LVL1038:
 9909              		.loc 1 3272 10 view .LVU2907
 9910 011a 1CE0     		b	.L644
 9911              	.LVL1039:
 9912              	.L646:
3222:ad5940lib/ad5940.c ****     adc_base.ADCMuxN = ADCMUXN_LPTIA1_N;
 9913              		.loc 1 3222 5 is_stmt 1 view .LVU2908
3222:ad5940lib/ad5940.c ****     adc_base.ADCMuxN = ADCMUXN_LPTIA1_N;
 9914              		.loc 1 3222 22 is_stmt 0 view .LVU2909
 9915 011c 2223     		movs	r3, #34
 9916 011e 0693     		str	r3, [sp, #24]
3223:ad5940lib/ad5940.c ****   }
 9917              		.loc 1 3223 5 is_stmt 1 view .LVU2910
3223:ad5940lib/ad5940.c ****   }
 9918              		.loc 1 3223 22 is_stmt 0 view .LVU2911
 9919 0120 0323     		movs	r3, #3
 9920 0122 0793     		str	r3, [sp, #28]
 9921 0124 B2E7     		b	.L647
 9922              	.LVL1040:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 272


 9923              	.L657:
 9924              	.LBB21:
3242:ad5940lib/ad5940.c ****     time_out = pLPTIAOffsetCal->TimeOut10us;   /* Reset time out counter */
 9925              		.loc 1 3242 7 is_stmt 1 view .LVU2912
 9926 0126 FFF7FEFF 		bl	AD5940_Delay10us
 9927              	.LVL1041:
 9928 012a D5E7     		b	.L648
 9929              	.LVL1042:
 9930              	.L650:
3263:ad5940lib/ad5940.c ****   }
 9931              		.loc 1 3263 7 view .LVU2913
 9932 012c 4FF40B50 		mov	r0, #8896
 9933 0130 FFF7FEFF 		bl	AD5940_WriteReg
 9934              	.LVL1043:
3263:ad5940lib/ad5940.c ****   }
 9935              		.loc 1 3263 7 is_stmt 0 view .LVU2914
 9936 0134 E8E7     		b	.L651
 9937              	.L658:
3263:ad5940lib/ad5940.c ****   }
 9938              		.loc 1 3263 7 view .LVU2915
 9939              	.LBE21:
3268:ad5940lib/ad5940.c ****   
 9940              		.loc 1 3268 5 is_stmt 1 view .LVU2916
 9941 0136 0022     		movs	r2, #0
 9942 0138 0421     		movs	r1, #4
 9943 013a 0120     		movs	r0, #1
 9944 013c FFF7FEFF 		bl	AD5940_INTCCfg
 9945              	.LVL1044:
 9946 0140 E5E7     		b	.L652
 9947              	.LVL1045:
 9948              	.L654:
 9949              	.LBB22:
3247:ad5940lib/ad5940.c ****       goto LPTIAOFFSETCALERROR;
 9950              		.loc 1 3247 13 is_stmt 0 view .LVU2917
 9951 0142 6FF00904 		mvn	r4, #9
 9952              	.LVL1046:
 9953              	.L649:
3247:ad5940lib/ad5940.c ****       goto LPTIAOFFSETCALERROR;
 9954              		.loc 1 3247 13 view .LVU2918
 9955              	.LBE22:
3273:ad5940lib/ad5940.c **** 
3274:ad5940lib/ad5940.c **** LPTIAOFFSETCALERROR:
3275:ad5940lib/ad5940.c ****   AD5940_ADCConvtCtrlS(bFALSE);  /* Stop conversion */
 9956              		.loc 1 3275 3 is_stmt 1 view .LVU2919
 9957 0146 0020     		movs	r0, #0
 9958 0148 FFF7FEFF 		bl	AD5940_ADCConvtCtrlS
 9959              	.LVL1047:
3276:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 9960              		.loc 1 3276 3 view .LVU2920
 9961 014c 0021     		movs	r1, #0
 9962 014e 42F23020 		movw	r0, #8752
 9963 0152 FFF7FEFF 		bl	AD5940_WriteReg
 9964              	.LVL1048:
3277:ad5940lib/ad5940.c ****   return error;
 9965              		.loc 1 3277 3 view .LVU2921
 9966              	.L644:
3278:ad5940lib/ad5940.c **** }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 273


 9967              		.loc 1 3278 1 is_stmt 0 view .LVU2922
 9968 0156 2046     		mov	r0, r4
 9969 0158 18B0     		add	sp, sp, #96
 9970              	.LCFI164:
 9971              		.cfi_remember_state
 9972              		.cfi_def_cfa_offset 16
 9973              		@ sp needed
 9974 015a 70BD     		pop	{r4, r5, r6, pc}
 9975              	.LVL1049:
 9976              	.L655:
 9977              	.LCFI165:
 9978              		.cfi_restore_state
 9979              	.LBB23:
3256:ad5940lib/ad5940.c ****       goto LPTIAOFFSETCALERROR;
 9980              		.loc 1 3256 13 view .LVU2923
 9981 015c 6FF00A04 		mvn	r4, #10
 9982              	.LVL1050:
3256:ad5940lib/ad5940.c ****       goto LPTIAOFFSETCALERROR;
 9983              		.loc 1 3256 13 view .LVU2924
 9984 0160 F1E7     		b	.L649
 9985              	.LVL1051:
 9986              	.L653:
3256:ad5940lib/ad5940.c ****       goto LPTIAOFFSETCALERROR;
 9987              		.loc 1 3256 13 view .LVU2925
 9988              	.LBE23:
3178:ad5940lib/ad5940.c ****   if(pLPTIAOffsetCal->AdcClkFreq > (32000000*0.8))
 9989              		.loc 1 3178 38 view .LVU2926
 9990 0162 6FF00204 		mvn	r4, #2
 9991 0166 F6E7     		b	.L644
 9992              	.L660:
 9993              		.align	2
 9994              	.L659:
 9995 0168 E0FF3900 		.word	3801056
 9996 016c A0000100 		.word	65696
 9997 0170 AFA587DE 		.word	-561535569
 9998              		.cfi_endproc
 9999              	.LFE116:
 10001              		.section	.text.AD5940_HSTIAOffsetCal,"ax",%progbits
 10002              		.align	1
 10003              		.global	AD5940_HSTIAOffsetCal
 10004              		.syntax unified
 10005              		.thumb
 10006              		.thumb_func
 10007              		.fpu fpv5-d16
 10009              	AD5940_HSTIAOffsetCal:
 10010              	.LVL1052:
 10011              	.LFB117:
3279:ad5940lib/ad5940.c **** 
3280:ad5940lib/ad5940.c **** /**
3281:ad5940lib/ad5940.c ****  * @brief Calibrate HSTIA offset-ongoing.
3282:ad5940lib/ad5940.c ****  * @param pHSTIAOffsetCal: pointer to configuration.
3283:ad5940lib/ad5940.c ****  * @return AD5940ERR_OK.
3284:ad5940lib/ad5940.c **** **/
3285:ad5940lib/ad5940.c **** AD5940Err AD5940_HSTIAOffsetCal(LPTIAOffsetCal_Type *pHSTIAOffsetCal)
3286:ad5940lib/ad5940.c **** {
 10012              		.loc 1 3286 1 is_stmt 1 view -0
 10013              		.cfi_startproc
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 274


 10014              		@ args = 0, pretend = 0, frame = 0
 10015              		@ frame_needed = 0, uses_anonymous_args = 0
 10016              		@ link register save eliminated.
3287:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 10017              		.loc 1 3287 3 view .LVU2928
3288:ad5940lib/ad5940.c **** }
 10018              		.loc 1 3288 1 is_stmt 0 view .LVU2929
 10019 0000 0020     		movs	r0, #0
 10020              	.LVL1053:
 10021              		.loc 1 3288 1 view .LVU2930
 10022 0002 7047     		bx	lr
 10023              		.cfi_endproc
 10024              	.LFE117:
 10026              		.section	.text.AD5940_HSRtiaCal,"ax",%progbits
 10027              		.align	1
 10028              		.global	AD5940_HSRtiaCal
 10029              		.syntax unified
 10030              		.thumb
 10031              		.thumb_func
 10032              		.fpu fpv5-d16
 10034              	AD5940_HSRtiaCal:
 10035              	.LVL1054:
 10036              	.LFB118:
3289:ad5940lib/ad5940.c **** 
3290:ad5940lib/ad5940.c **** /**
3291:ad5940lib/ad5940.c ****  * @brief Measure HSTIA internal RTIA impedance.
3292:ad5940lib/ad5940.c ****  * @param pCalCfg: pointer to calibration structure.
3293:ad5940lib/ad5940.c ****  * @param pResult:  Pointer to a variable that used to store result. 
3294:ad5940lib/ad5940.c ****  *                  If bPolarResult in structure is set, then use type fImpPol_Type otherwise use f
3295:ad5940lib/ad5940.c ****  * @return AD5940ERR_OK if succeed.
3296:ad5940lib/ad5940.c **** **/
3297:ad5940lib/ad5940.c **** AD5940Err AD5940_HSRtiaCal(HSRTIACal_Type *pCalCfg, void *pResult)
3298:ad5940lib/ad5940.c **** {
 10037              		.loc 1 3298 1 is_stmt 1 view -0
 10038              		.cfi_startproc
 10039              		@ args = 0, pretend = 0, frame = 264
 10040              		@ frame_needed = 0, uses_anonymous_args = 0
 10041              		.loc 1 3298 1 is_stmt 0 view .LVU2932
 10042 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 10043              	.LCFI166:
 10044              		.cfi_def_cfa_offset 36
 10045              		.cfi_offset 4, -36
 10046              		.cfi_offset 5, -32
 10047              		.cfi_offset 6, -28
 10048              		.cfi_offset 7, -24
 10049              		.cfi_offset 8, -20
 10050              		.cfi_offset 9, -16
 10051              		.cfi_offset 10, -12
 10052              		.cfi_offset 11, -8
 10053              		.cfi_offset 14, -4
 10054 0004 C3B0     		sub	sp, sp, #268
 10055              	.LCFI167:
 10056              		.cfi_def_cfa_offset 304
 10057 0006 0646     		mov	r6, r0
 10058 0008 8846     		mov	r8, r1
3299:ad5940lib/ad5940.c ****   AFERefCfg_Type aferef_cfg;
 10059              		.loc 1 3299 3 is_stmt 1 view .LVU2933
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 275


3300:ad5940lib/ad5940.c ****   HSLoopCfg_Type hs_loop;
 10060              		.loc 1 3300 3 view .LVU2934
3301:ad5940lib/ad5940.c ****   DSPCfg_Type dsp_cfg;
 10061              		.loc 1 3301 3 view .LVU2935
3302:ad5940lib/ad5940.c ****   uint32_t INTCCfg;
 10062              		.loc 1 3302 3 view .LVU2936
3303:ad5940lib/ad5940.c ****   
3304:ad5940lib/ad5940.c ****   BoolFlag bADCClk32MHzMode = bFALSE;
 10063              		.loc 1 3304 3 view .LVU2937
 10064              	.LVL1055:
3305:ad5940lib/ad5940.c ****   uint32_t ExcitBuffGain = EXCITBUFGAIN_2;
 10065              		.loc 1 3305 3 view .LVU2938
3306:ad5940lib/ad5940.c ****   uint32_t HsDacGain = HSDACGAIN_1;
 10066              		.loc 1 3306 3 view .LVU2939
3307:ad5940lib/ad5940.c **** 
3308:ad5940lib/ad5940.c ****   float ExcitVolt; /* Excitation voltage, unit is mV */
 10067              		.loc 1 3308 3 view .LVU2940
3309:ad5940lib/ad5940.c ****   uint32_t RtiaVal;
 10068              		.loc 1 3309 3 view .LVU2941
3310:ad5940lib/ad5940.c ****   uint32_t const HpRtiaTable[]={200,1000,5000,10000,20000,40000,80000,160000,0};
 10069              		.loc 1 3310 3 view .LVU2942
 10070              		.loc 1 3310 18 is_stmt 0 view .LVU2943
 10071 000a 09AC     		add	r4, sp, #36
 10072 000c C84D     		ldr	r5, .L697+8
 10073 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10074              	.LVL1056:
 10075              		.loc 1 3310 18 view .LVU2944
 10076 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10077 0012 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10078 0014 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10079 0016 2B68     		ldr	r3, [r5]
 10080 0018 2360     		str	r3, [r4]
3311:ad5940lib/ad5940.c ****   uint32_t WgAmpWord;
 10081              		.loc 1 3311 3 is_stmt 1 view .LVU2945
3312:ad5940lib/ad5940.c **** 
3313:ad5940lib/ad5940.c ****   iImpCar_Type DftRcal, DftRtia;
 10082              		.loc 1 3313 3 view .LVU2946
3314:ad5940lib/ad5940.c **** 
3315:ad5940lib/ad5940.c ****   if(pCalCfg == NULL) return AD5940ERR_NULLP;
 10083              		.loc 1 3315 3 view .LVU2947
 10084              		.loc 1 3315 5 is_stmt 0 view .LVU2948
 10085 001a 002E     		cmp	r6, #0
 10086 001c 00F0DF81 		beq	.L681
 10087 0020 3746     		mov	r7, r6
3316:ad5940lib/ad5940.c ****   if(pCalCfg->fRcal == 0)
 10088              		.loc 1 3316 3 is_stmt 1 view .LVU2949
 10089              		.loc 1 3316 13 is_stmt 0 view .LVU2950
 10090 0022 96ED017A 		vldr.32	s14, [r6, #4]
 10091              		.loc 1 3316 5 view .LVU2951
 10092 0026 B5EE407A 		vcmp.f32	s14, #0
 10093 002a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10094 002e 00F0D981 		beq	.L682
3317:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
3318:ad5940lib/ad5940.c ****   if(pCalCfg->HsTiaCfg.HstiaRtiaSel > HSTIARTIA_160K)
 10095              		.loc 1 3318 3 is_stmt 1 view .LVU2952
 10096              		.loc 1 3318 23 is_stmt 0 view .LVU2953
 10097 0032 7369     		ldr	r3, [r6, #20]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 276


 10098              		.loc 1 3318 5 view .LVU2954
 10099 0034 072B     		cmp	r3, #7
 10100 0036 00F2D881 		bhi	.L683
3319:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
3320:ad5940lib/ad5940.c ****   if(pCalCfg->HsTiaCfg.HstiaRtiaSel == HSTIARTIA_OPEN)
 10101              		.loc 1 3320 3 is_stmt 1 view .LVU2955
 10102              		.loc 1 3320 5 is_stmt 0 view .LVU2956
 10103 003a 082B     		cmp	r3, #8
 10104 003c 00F0D881 		beq	.L684
3321:ad5940lib/ad5940.c ****     return AD5940ERR_PARA; /* Do not support calibrating DE0-RTIA */
3322:ad5940lib/ad5940.c ****   if(pResult == NULL)
 10105              		.loc 1 3322 3 is_stmt 1 view .LVU2957
 10106              		.loc 1 3322 5 is_stmt 0 view .LVU2958
 10107 0040 B8F1000F 		cmp	r8, #0
 10108 0044 00F0D781 		beq	.L685
3323:ad5940lib/ad5940.c ****       return AD5940ERR_NULLP;
3324:ad5940lib/ad5940.c **** 
3325:ad5940lib/ad5940.c ****   if(pCalCfg->AdcClkFreq > (32000000*0.8))
 10109              		.loc 1 3325 3 is_stmt 1 view .LVU2959
 10110              		.loc 1 3325 13 is_stmt 0 view .LVU2960
 10111 0048 D6ED036A 		vldr.32	s13, [r6, #12]
 10112              		.loc 1 3325 5 view .LVU2961
 10113 004c DFEDB97A 		vldr.32	s15, .L697+12
 10114 0050 F4EEE76A 		vcmpe.f32	s13, s15
 10115 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10116 0058 00F34681 		bgt	.L686
3304:ad5940lib/ad5940.c ****   uint32_t ExcitBuffGain = EXCITBUFGAIN_2;
 10117              		.loc 1 3304 12 view .LVU2962
 10118 005c 4FF00009 		mov	r9, #0
 10119              	.L664:
 10120              	.LVL1057:
3326:ad5940lib/ad5940.c ****     bADCClk32MHzMode = bTRUE; 
3327:ad5940lib/ad5940.c **** 
3328:ad5940lib/ad5940.c ****   /* Calculate the excitation voltage we should use based on RCAL/Rtia */
3329:ad5940lib/ad5940.c ****   RtiaVal = HpRtiaTable[pCalCfg->HsTiaCfg.HstiaRtiaSel];
 10121              		.loc 1 3329 3 is_stmt 1 view .LVU2963
 10122              		.loc 1 3329 11 is_stmt 0 view .LVU2964
 10123 0060 42AA     		add	r2, sp, #264
 10124 0062 02EB8303 		add	r3, r2, r3, lsl #2
 10125 0066 13ED395A 		vldr.32	s10, [r3, #-228]	@ int
 10126              	.LVL1058:
3330:ad5940lib/ad5940.c ****   /*
3331:ad5940lib/ad5940.c ****     DAC output voltage calculation
3332:ad5940lib/ad5940.c ****     Note: RCAL value should be similar to RTIA so the accuracy is best.
3333:ad5940lib/ad5940.c ****     HSTIA output voltage should be limited to 0.2V to AVDD-0.2V, with 1.1V bias. We use 80% of this
3334:ad5940lib/ad5940.c ****     Because the bias voltage is fixed to 1.1V, so for AC signal maximum amplitude is 1.1V-0.2V = 0.
3335:ad5940lib/ad5940.c ****     Formula is:    ExcitVolt(in mVpp) = (1800mVpp*80% / RTIA) * RCAL
3336:ad5940lib/ad5940.c ****     ADC input range is +-1.5V which is enough for calibration.
3337:ad5940lib/ad5940.c ****     
3338:ad5940lib/ad5940.c ****   */
3339:ad5940lib/ad5940.c ****   ExcitVolt = 1800*0.8*pCalCfg->fRcal/RtiaVal;
 10127              		.loc 1 3339 3 is_stmt 1 view .LVU2965
 10128              		.loc 1 3339 31 is_stmt 0 view .LVU2966
 10129 006a B7EEC77A 		vcvt.f64.f32	d7, s14
 10130              		.loc 1 3339 23 view .LVU2967
 10131 006e 9FEDAE6B 		vldr.64	d6, .L697
 10132 0072 27EE067B 		vmul.f64	d7, d7, d6
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 277


 10133              		.loc 1 3339 38 view .LVU2968
 10134 0076 B8EE455B 		vcvt.f64.u32	d5, s10
 10135              	.LVL1059:
 10136              		.loc 1 3339 38 view .LVU2969
 10137 007a 87EE056B 		vdiv.f64	d6, d7, d5
 10138              		.loc 1 3339 13 view .LVU2970
 10139 007e B7EEC66B 		vcvt.f32.f64	s12, d6
 10140              	.LVL1060:
3340:ad5940lib/ad5940.c **** 
3341:ad5940lib/ad5940.c ****   if(ExcitVolt <= 800*0.05) /* Voltage is so small that we can enable the attenuator of DAC(1/5) an
 10141              		.loc 1 3341 3 is_stmt 1 view .LVU2971
 10142              		.loc 1 3341 5 is_stmt 0 view .LVU2972
 10143 0082 DFEDAD7A 		vldr.32	s15, .L697+16
 10144 0086 B4EEE76A 		vcmpe.f32	s12, s15
 10145 008a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10146 008e 00F22E81 		bhi	.L692
3342:ad5940lib/ad5940.c ****   {
3343:ad5940lib/ad5940.c ****     ExcitBuffGain = EXCITBUFGAIN_0P25;
 10147              		.loc 1 3343 5 is_stmt 1 view .LVU2973
 10148              	.LVL1061:
3344:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_0P2;
 10149              		.loc 1 3344 5 view .LVU2974
3345:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*0.05 = 40mVpp */
3346:ad5940lib/ad5940.c ****     WgAmpWord = ((uint32_t)(ExcitVolt/40*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB erro
 10150              		.loc 1 3346 5 view .LVU2975
 10151              		.loc 1 3346 38 is_stmt 0 view .LVU2976
 10152 0092 B0EE677A 		vmov.f32	s14, s15
 10153 0096 C6EE077A 		vdiv.f32	s15, s12, s14
 10154              		.loc 1 3346 41 view .LVU2977
 10155 009a 9FEDAE7A 		vldr.32	s14, .L697+44
 10156 009e 67EE877A 		vmul.f32	s15, s15, s14
 10157              		.loc 1 3346 46 view .LVU2978
 10158 00a2 77EEA77A 		vadd.f32	s15, s15, s15
 10159              		.loc 1 3346 18 view .LVU2979
 10160 00a6 FCEEE77A 		vcvt.u32.f32	s15, s15
 10161 00aa 17EE905A 		vmov	r5, s15	@ int
 10162              		.loc 1 3346 49 view .LVU2980
 10163 00ae 0135     		adds	r5, r5, #1
 10164              		.loc 1 3346 15 view .LVU2981
 10165 00b0 6D08     		lsrs	r5, r5, #1
 10166              	.LVL1062:
3344:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_0P2;
 10167              		.loc 1 3344 15 view .LVU2982
 10168 00b2 4FF0010A 		mov	r10, #1
3343:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_0P2;
 10169              		.loc 1 3343 19 view .LVU2983
 10170 00b6 CDF804A0 		str	r10, [sp, #4]
 10171              	.LVL1063:
 10172              	.L667:
3347:ad5940lib/ad5940.c ****   }
3348:ad5940lib/ad5940.c ****   else if(ExcitVolt <= 800*0.25) /* Enable Excitation buffer attenuator */
3349:ad5940lib/ad5940.c ****   {
3350:ad5940lib/ad5940.c ****     ExcitBuffGain = EXCITBUFGAIN_0P25;
3351:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_1;
3352:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*0.25 = 200mVpp */
3353:ad5940lib/ad5940.c ****     WgAmpWord = ((uint32_t)(ExcitVolt/200*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB err
3354:ad5940lib/ad5940.c ****   }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 278


3355:ad5940lib/ad5940.c ****   else if(ExcitVolt <= 800*0.4) /* Enable DAC attenuator */
3356:ad5940lib/ad5940.c ****   {
3357:ad5940lib/ad5940.c ****     ExcitBuffGain = EXCITBUFGAIN_2;
3358:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_0P2;
3359:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*0.4 = 320mV */
3360:ad5940lib/ad5940.c ****     WgAmpWord = ((uint32_t)(ExcitVolt/320*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB err
3361:ad5940lib/ad5940.c ****   }
3362:ad5940lib/ad5940.c ****   else /* No attenuator is needed. This is the best condition which means RTIA is close to RCAL */
3363:ad5940lib/ad5940.c ****   {
3364:ad5940lib/ad5940.c ****     ExcitBuffGain = EXCITBUFGAIN_2;
3365:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_1;
3366:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*2=1600mVpp */
3367:ad5940lib/ad5940.c ****     WgAmpWord = ((uint32_t)(ExcitVolt/1600*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB er
3368:ad5940lib/ad5940.c ****   }
3369:ad5940lib/ad5940.c **** 
3370:ad5940lib/ad5940.c ****   if(WgAmpWord > 0x7ff)
 10173              		.loc 1 3370 3 is_stmt 1 view .LVU2984
 10174              		.loc 1 3370 5 is_stmt 0 view .LVU2985
 10175 00ba B5F5006F 		cmp	r5, #2048
 10176 00be 01D3     		bcc	.L672
3371:ad5940lib/ad5940.c ****   WgAmpWord = 0x7ff;
 10177              		.loc 1 3371 13 view .LVU2986
 10178 00c0 40F2FF75 		movw	r5, #2047
 10179              	.LVL1064:
 10180              	.L672:
3372:ad5940lib/ad5940.c ****   
3373:ad5940lib/ad5940.c ****   /*INTC configuration */
3374:ad5940lib/ad5940.c ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 10181              		.loc 1 3374 3 is_stmt 1 view .LVU2987
 10182              		.loc 1 3374 13 is_stmt 0 view .LVU2988
 10183 00c4 0120     		movs	r0, #1
 10184 00c6 FFF7FEFF 		bl	AD5940_INTCGetCfg
 10185              	.LVL1065:
 10186              		.loc 1 3374 13 view .LVU2989
 10187 00ca 8346     		mov	fp, r0
 10188              	.LVL1066:
3375:ad5940lib/ad5940.c ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_DFTRDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 10189              		.loc 1 3375 3 is_stmt 1 view .LVU2990
 10190 00cc 0122     		movs	r2, #1
 10191 00ce 0221     		movs	r1, #2
 10192 00d0 1046     		mov	r0, r2
 10193              	.LVL1067:
 10194              		.loc 1 3375 3 is_stmt 0 view .LVU2991
 10195 00d2 FFF7FEFF 		bl	AD5940_INTCCfg
 10196              	.LVL1068:
3376:ad5940lib/ad5940.c ****   
3377:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE);  /* Init all to disable state */
 10197              		.loc 1 3377 3 is_stmt 1 view .LVU2992
 10198 00d6 0021     		movs	r1, #0
 10199 00d8 9848     		ldr	r0, .L697+20
 10200 00da FFF7FEFF 		bl	AD5940_AFECtrlS
 10201              	.LVL1069:
3378:ad5940lib/ad5940.c ****   /* Configure reference system */
3379:ad5940lib/ad5940.c ****   aferef_cfg.HpBandgapEn = bTRUE;
 10202              		.loc 1 3379 3 view .LVU2993
 10203              		.loc 1 3379 26 is_stmt 0 view .LVU2994
 10204 00de 0126     		movs	r6, #1
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 279


 10205              	.LVL1070:
 10206              		.loc 1 3379 26 view .LVU2995
 10207 00e0 8DF8F860 		strb	r6, [sp, #248]
3380:ad5940lib/ad5940.c ****   aferef_cfg.Hp1V1BuffEn = bTRUE;
 10208              		.loc 1 3380 3 is_stmt 1 view .LVU2996
 10209              		.loc 1 3380 26 is_stmt 0 view .LVU2997
 10210 00e4 8DF8FA60 		strb	r6, [sp, #250]
3381:ad5940lib/ad5940.c ****   aferef_cfg.Hp1V8BuffEn = bTRUE;
 10211              		.loc 1 3381 3 is_stmt 1 view .LVU2998
 10212              		.loc 1 3381 26 is_stmt 0 view .LVU2999
 10213 00e8 8DF8F960 		strb	r6, [sp, #249]
3382:ad5940lib/ad5940.c ****   aferef_cfg.Disc1V1Cap = bFALSE;
 10214              		.loc 1 3382 3 is_stmt 1 view .LVU3000
 10215              		.loc 1 3382 25 is_stmt 0 view .LVU3001
 10216 00ec 0024     		movs	r4, #0
 10217 00ee 8DF80441 		strb	r4, [sp, #260]
3383:ad5940lib/ad5940.c ****   aferef_cfg.Disc1V8Cap = bFALSE;
 10218              		.loc 1 3383 3 is_stmt 1 view .LVU3002
 10219              		.loc 1 3383 25 is_stmt 0 view .LVU3003
 10220 00f2 8DF80341 		strb	r4, [sp, #259]
3384:ad5940lib/ad5940.c ****   aferef_cfg.Hp1V8ThemBuff = bFALSE;
 10221              		.loc 1 3384 3 is_stmt 1 view .LVU3004
 10222              		.loc 1 3384 28 is_stmt 0 view .LVU3005
 10223 00f6 8DF80141 		strb	r4, [sp, #257]
3385:ad5940lib/ad5940.c ****   aferef_cfg.Hp1V8Ilimit = bFALSE;
 10224              		.loc 1 3385 3 is_stmt 1 view .LVU3006
 10225              		.loc 1 3385 26 is_stmt 0 view .LVU3007
 10226 00fa 8DF80241 		strb	r4, [sp, #258]
3386:ad5940lib/ad5940.c ****   aferef_cfg.Lp1V1BuffEn = bFALSE;
 10227              		.loc 1 3386 3 is_stmt 1 view .LVU3008
 10228              		.loc 1 3386 26 is_stmt 0 view .LVU3009
 10229 00fe 8DF8FC40 		strb	r4, [sp, #252]
3387:ad5940lib/ad5940.c ****   aferef_cfg.Lp1V8BuffEn = bFALSE;
 10230              		.loc 1 3387 3 is_stmt 1 view .LVU3010
 10231              		.loc 1 3387 26 is_stmt 0 view .LVU3011
 10232 0102 8DF8FB40 		strb	r4, [sp, #251]
3388:ad5940lib/ad5940.c ****   aferef_cfg.LpBandgapEn = bFALSE;
 10233              		.loc 1 3388 3 is_stmt 1 view .LVU3012
 10234              		.loc 1 3388 26 is_stmt 0 view .LVU3013
 10235 0106 8DF8FD40 		strb	r4, [sp, #253]
3389:ad5940lib/ad5940.c ****   aferef_cfg.LpRefBufEn = bFALSE;
 10236              		.loc 1 3389 3 is_stmt 1 view .LVU3014
 10237              		.loc 1 3389 25 is_stmt 0 view .LVU3015
 10238 010a 8DF8FE40 		strb	r4, [sp, #254]
3390:ad5940lib/ad5940.c ****   aferef_cfg.LpRefBoostEn = bFALSE;
 10239              		.loc 1 3390 3 is_stmt 1 view .LVU3016
 10240              		.loc 1 3390 27 is_stmt 0 view .LVU3017
 10241 010e 8DF8FF40 		strb	r4, [sp, #255]
3391:ad5940lib/ad5940.c ****   AD5940_REFCfgS(&aferef_cfg);	
 10242              		.loc 1 3391 3 is_stmt 1 view .LVU3018
 10243 0112 3EA8     		add	r0, sp, #248
 10244 0114 FFF7FEFF 		bl	AD5940_REFCfgS
 10245              	.LVL1071:
3392:ad5940lib/ad5940.c ****   /* Configure HP Loop */
3393:ad5940lib/ad5940.c ****   hs_loop.HsDacCfg.ExcitBufGain = ExcitBuffGain;
 10246              		.loc 1 3393 3 view .LVU3019
 10247              		.loc 1 3393 33 is_stmt 0 view .LVU3020
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 280


 10248 0118 019B     		ldr	r3, [sp, #4]
 10249 011a 2693     		str	r3, [sp, #152]
3394:ad5940lib/ad5940.c ****   hs_loop.HsDacCfg.HsDacGain = HsDacGain;
 10250              		.loc 1 3394 3 is_stmt 1 view .LVU3021
 10251              		.loc 1 3394 30 is_stmt 0 view .LVU3022
 10252 011c CDF89CA0 		str	r10, [sp, #156]
3395:ad5940lib/ad5940.c ****   hs_loop.HsDacCfg.HsDacUpdateRate = 7; /* Set it to highest update rate */
 10253              		.loc 1 3395 3 is_stmt 1 view .LVU3023
 10254              		.loc 1 3395 36 is_stmt 0 view .LVU3024
 10255 0120 0723     		movs	r3, #7
 10256 0122 2893     		str	r3, [sp, #160]
3396:ad5940lib/ad5940.c ****   memcpy(&hs_loop.HsTiaCfg, &pCalCfg->HsTiaCfg, sizeof(pCalCfg->HsTiaCfg));
 10257              		.loc 1 3396 3 is_stmt 1 view .LVU3025
 10258              		.loc 1 3396 29 is_stmt 0 view .LVU3026
 10259 0124 BE46     		mov	lr, r7
 10260              		.loc 1 3396 3 view .LVU3027
 10261 0126 0DF1D80C 		add	ip, sp, #216
 10262 012a 5EF8100F 		ldr	r0, [lr, #16]!	@ unaligned
 10263 012e DEF80410 		ldr	r1, [lr, #4]	@ unaligned
 10264 0132 DEF80820 		ldr	r2, [lr, #8]	@ unaligned
 10265 0136 DEF80C30 		ldr	r3, [lr, #12]	@ unaligned
 10266 013a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 10267 013e DEF81000 		ldr	r0, [lr, #16]	@ unaligned
 10268 0142 DEF81410 		ldr	r1, [lr, #20]	@ unaligned
 10269 0146 DEF81820 		ldr	r2, [lr, #24]	@ unaligned
 10270 014a DEF81C30 		ldr	r3, [lr, #28]	@ unaligned
 10271 014e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
3397:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Dswitch = SWD_RCAL0;
 10272              		.loc 1 3397 3 is_stmt 1 view .LVU3028
 10273              		.loc 1 3397 28 is_stmt 0 view .LVU3029
 10274 0152 2296     		str	r6, [sp, #136]
3398:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Pswitch = SWP_RCAL0;
 10275              		.loc 1 3398 3 is_stmt 1 view .LVU3030
 10276              		.loc 1 3398 28 is_stmt 0 view .LVU3031
 10277 0154 2396     		str	r6, [sp, #140]
3399:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Nswitch = SWN_RCAL1;
 10278              		.loc 1 3399 3 is_stmt 1 view .LVU3032
 10279              		.loc 1 3399 28 is_stmt 0 view .LVU3033
 10280 0156 4FF40073 		mov	r3, #512
 10281 015a 2493     		str	r3, [sp, #144]
3400:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Tswitch = SWT_RCAL1|SWT_TRTIA;
 10282              		.loc 1 3400 3 is_stmt 1 view .LVU3034
 10283              		.loc 1 3400 28 is_stmt 0 view .LVU3035
 10284 015c 4FF41063 		mov	r3, #2304
 10285 0160 2593     		str	r3, [sp, #148]
3401:ad5940lib/ad5940.c ****   hs_loop.WgCfg.WgType = WGTYPE_SIN;
 10286              		.loc 1 3401 3 is_stmt 1 view .LVU3036
 10287              		.loc 1 3401 24 is_stmt 0 view .LVU3037
 10288 0162 0223     		movs	r3, #2
 10289 0164 2993     		str	r3, [sp, #164]
3402:ad5940lib/ad5940.c ****   hs_loop.WgCfg.GainCalEn = bTRUE;
 10290              		.loc 1 3402 3 is_stmt 1 view .LVU3038
 10291              		.loc 1 3402 27 is_stmt 0 view .LVU3039
 10292 0166 8DF8A860 		strb	r6, [sp, #168]
3403:ad5940lib/ad5940.c ****   hs_loop.WgCfg.OffsetCalEn = bTRUE;
 10293              		.loc 1 3403 3 is_stmt 1 view .LVU3040
 10294              		.loc 1 3403 29 is_stmt 0 view .LVU3041
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 281


 10295 016a 8DF8A960 		strb	r6, [sp, #169]
3404:ad5940lib/ad5940.c ****   hs_loop.WgCfg.SinCfg.SinFreqWord = AD5940_WGFreqWordCal(pCalCfg->fFreq, pCalCfg->SysClkFreq);
 10296              		.loc 1 3404 3 is_stmt 1 view .LVU3042
 10297              		.loc 1 3404 38 is_stmt 0 view .LVU3043
 10298 016e D7ED020A 		vldr.32	s1, [r7, #8]
 10299 0172 97ED000A 		vldr.32	s0, [r7]
 10300 0176 FFF7FEFF 		bl	AD5940_WGFreqWordCal
 10301              	.LVL1072:
 10302              		.loc 1 3404 36 view .LVU3044
 10303 017a 3190     		str	r0, [sp, #196]
3405:ad5940lib/ad5940.c ****   hs_loop.WgCfg.SinCfg.SinAmplitudeWord = WgAmpWord;
 10304              		.loc 1 3405 3 is_stmt 1 view .LVU3045
 10305              		.loc 1 3405 41 is_stmt 0 view .LVU3046
 10306 017c 3295     		str	r5, [sp, #200]
3406:ad5940lib/ad5940.c ****   hs_loop.WgCfg.SinCfg.SinOffsetWord = 0;
 10307              		.loc 1 3406 3 is_stmt 1 view .LVU3047
 10308              		.loc 1 3406 38 is_stmt 0 view .LVU3048
 10309 017e 3394     		str	r4, [sp, #204]
3407:ad5940lib/ad5940.c ****   hs_loop.WgCfg.SinCfg.SinPhaseWord = 0;
 10310              		.loc 1 3407 3 is_stmt 1 view .LVU3049
 10311              		.loc 1 3407 37 is_stmt 0 view .LVU3050
 10312 0180 3494     		str	r4, [sp, #208]
3408:ad5940lib/ad5940.c ****   AD5940_HSLoopCfgS(&hs_loop);
 10313              		.loc 1 3408 3 is_stmt 1 view .LVU3051
 10314 0182 22A8     		add	r0, sp, #136
 10315 0184 FFF7FEFF 		bl	AD5940_HSLoopCfgS
 10316              	.LVL1073:
3409:ad5940lib/ad5940.c ****   /* Configure DSP */
3410:ad5940lib/ad5940.c ****   dsp_cfg.ADCBaseCfg.ADCMuxN = ADCMUXN_N_NODE;
 10317              		.loc 1 3410 3 view .LVU3052
 10318              		.loc 1 3410 30 is_stmt 0 view .LVU3053
 10319 0188 1423     		movs	r3, #20
 10320 018a 1393     		str	r3, [sp, #76]
3411:ad5940lib/ad5940.c ****   dsp_cfg.ADCBaseCfg.ADCMuxP = ADCMUXP_P_NODE;
 10321              		.loc 1 3411 3 is_stmt 1 view .LVU3054
 10322              		.loc 1 3411 30 is_stmt 0 view .LVU3055
 10323 018c 2423     		movs	r3, #36
 10324 018e 1293     		str	r3, [sp, #72]
3412:ad5940lib/ad5940.c ****   dsp_cfg.ADCBaseCfg.ADCPga = ADCPGA_1P5;
 10325              		.loc 1 3412 3 is_stmt 1 view .LVU3056
 10326              		.loc 1 3412 29 is_stmt 0 view .LVU3057
 10327 0190 1496     		str	r6, [sp, #80]
3413:ad5940lib/ad5940.c ****   AD5940_StructInit(&dsp_cfg.ADCDigCompCfg, sizeof(dsp_cfg.ADCDigCompCfg));
 10328              		.loc 1 3413 3 is_stmt 1 view .LVU3058
 10329 0192 0821     		movs	r1, #8
 10330 0194 1AA8     		add	r0, sp, #104
 10331 0196 FFF7FEFF 		bl	AD5940_StructInit
 10332              	.LVL1074:
3414:ad5940lib/ad5940.c ****   dsp_cfg.ADCFilterCfg.ADCAvgNum = ADCAVGNUM_16;  /* Don't care because it's disabled */
 10333              		.loc 1 3414 3 view .LVU3059
 10334              		.loc 1 3414 34 is_stmt 0 view .LVU3060
 10335 019a 0323     		movs	r3, #3
 10336 019c 1793     		str	r3, [sp, #92]
3415:ad5940lib/ad5940.c ****   dsp_cfg.ADCFilterCfg.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;
 10337              		.loc 1 3415 3 is_stmt 1 view .LVU3061
 10338              		.loc 1 3415 65 is_stmt 0 view .LVU3062
 10339 019e 89EA0603 		eor	r3, r9, r6
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 282


 10340              		.loc 1 3415 32 view .LVU3063
 10341 01a2 1893     		str	r3, [sp, #96]
3416:ad5940lib/ad5940.c ****   dsp_cfg.ADCFilterCfg.ADCSinc2Osr = pCalCfg->ADCSinc2Osr;
 10342              		.loc 1 3416 3 is_stmt 1 view .LVU3064
 10343              		.loc 1 3416 45 is_stmt 0 view .LVU3065
 10344 01a4 7B6B     		ldr	r3, [r7, #52]
 10345              		.loc 1 3416 36 view .LVU3066
 10346 01a6 1693     		str	r3, [sp, #88]
3417:ad5940lib/ad5940.c ****   dsp_cfg.ADCFilterCfg.ADCSinc3Osr = pCalCfg->ADCSinc3Osr;
 10347              		.loc 1 3417 3 is_stmt 1 view .LVU3067
 10348              		.loc 1 3417 45 is_stmt 0 view .LVU3068
 10349 01a8 3B6B     		ldr	r3, [r7, #48]
 10350              		.loc 1 3417 36 view .LVU3069
 10351 01aa 1593     		str	r3, [sp, #84]
3418:ad5940lib/ad5940.c ****   dsp_cfg.ADCFilterCfg.BpNotch = bTRUE;
 10352              		.loc 1 3418 3 is_stmt 1 view .LVU3070
 10353              		.loc 1 3418 32 is_stmt 0 view .LVU3071
 10354 01ac 8DF86460 		strb	r6, [sp, #100]
3419:ad5940lib/ad5940.c ****   dsp_cfg.ADCFilterCfg.BpSinc3 = bFALSE;
 10355              		.loc 1 3419 3 is_stmt 1 view .LVU3072
 10356              		.loc 1 3419 32 is_stmt 0 view .LVU3073
 10357 01b0 8DF86540 		strb	r4, [sp, #101]
3420:ad5940lib/ad5940.c ****   dsp_cfg.ADCFilterCfg.Sinc2NotchEnable = bTRUE;
 10358              		.loc 1 3420 3 is_stmt 1 view .LVU3074
 10359              		.loc 1 3420 41 is_stmt 0 view .LVU3075
 10360 01b4 8DF86660 		strb	r6, [sp, #102]
3421:ad5940lib/ad5940.c ****   
3422:ad5940lib/ad5940.c ****   memcpy(&dsp_cfg.DftCfg, &pCalCfg->DftCfg, sizeof(pCalCfg->DftCfg));
 10361              		.loc 1 3422 3 is_stmt 1 view .LVU3076
 10362              		.loc 1 3422 27 is_stmt 0 view .LVU3077
 10363 01b8 3A46     		mov	r2, r7
 10364              		.loc 1 3422 3 view .LVU3078
 10365 01ba 1CAB     		add	r3, sp, #112
 10366 01bc 52F8380F 		ldr	r0, [r2, #56]!	@ unaligned
 10367 01c0 5168     		ldr	r1, [r2, #4]	@ unaligned
 10368 01c2 9268     		ldr	r2, [r2, #8]	@ unaligned
 10369 01c4 07C3     		stmia	r3!, {r0, r1, r2}
3423:ad5940lib/ad5940.c ****   memset(&dsp_cfg.StatCfg, 0, sizeof(dsp_cfg.StatCfg));
 10370              		.loc 1 3423 3 is_stmt 1 view .LVU3079
 10371 01c6 1F94     		str	r4, [sp, #124]
 10372 01c8 2094     		str	r4, [sp, #128]
 10373 01ca 2194     		str	r4, [sp, #132]
3424:ad5940lib/ad5940.c ****   AD5940_DSPCfgS(&dsp_cfg);
 10374              		.loc 1 3424 3 view .LVU3080
 10375 01cc 12A8     		add	r0, sp, #72
 10376 01ce FFF7FEFF 		bl	AD5940_DSPCfgS
 10377              	.LVL1075:
3425:ad5940lib/ad5940.c **** 
3426:ad5940lib/ad5940.c ****   /* Enable all of them. They are automatically turned off during hibernate mode to save power */
3427:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR|AFECTRL_EXTBUFPWR|\
 10378              		.loc 1 3427 3 view .LVU3081
 10379 01d2 3146     		mov	r1, r6
 10380 01d4 5A48     		ldr	r0, .L697+24
 10381 01d6 FFF7FEFF 		bl	AD5940_AFECtrlS
 10382              	.LVL1076:
3428:ad5940lib/ad5940.c ****                 /*AFECTRL_WG|*/AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|\
3429:ad5940lib/ad5940.c ****                 AFECTRL_SINC2NOTCH, bTRUE);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 283


3430:ad5940lib/ad5940.c ****   
3431:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_WG|AFECTRL_ADCPWR, bTRUE);  /* Enable Waveform generator, ADC power */
 10383              		.loc 1 3431 3 view .LVU3082
 10384 01da 3146     		mov	r1, r6
 10385 01dc 4FF48140 		mov	r0, #16512
 10386 01e0 FFF7FEFF 		bl	AD5940_AFECtrlS
 10387              	.LVL1077:
3432:ad5940lib/ad5940.c ****   //wait for sometime.
3433:ad5940lib/ad5940.c ****   AD5940_Delay10us(25);
 10388              		.loc 1 3433 3 view .LVU3083
 10389 01e4 1920     		movs	r0, #25
 10390 01e6 FFF7FEFF 		bl	AD5940_Delay10us
 10391              	.LVL1078:
3434:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);  /* Start ADC convert and DFT */
 10392              		.loc 1 3434 3 view .LVU3084
 10393 01ea 3146     		mov	r1, r6
 10394 01ec 4FF40140 		mov	r0, #33024
 10395 01f0 FFF7FEFF 		bl	AD5940_AFECtrlS
 10396              	.LVL1079:
3435:ad5940lib/ad5940.c ****   /* Wait until DFT ready */
3436:ad5940lib/ad5940.c ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_DFTRDY) == bFALSE);  
 10397              		.loc 1 3436 3 view .LVU3085
 10398              	.L673:
 10399              		.loc 1 3436 68 discriminator 1 view .LVU3086
 10400              		.loc 1 3436 8 discriminator 1 view .LVU3087
 10401              		.loc 1 3436 9 is_stmt 0 discriminator 1 view .LVU3088
 10402 01f4 0221     		movs	r1, #2
 10403 01f6 0120     		movs	r0, #1
 10404 01f8 FFF7FEFF 		bl	AD5940_INTCTestFlag
 10405              	.LVL1080:
 10406              		.loc 1 3436 8 discriminator 1 view .LVU3089
 10407 01fc 0028     		cmp	r0, #0
 10408 01fe F9D0     		beq	.L673
3437:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC conve
 10409              		.loc 1 3437 3 is_stmt 1 view .LVU3090
 10410 0200 0021     		movs	r1, #0
 10411 0202 4CF28010 		movw	r0, #49536
 10412 0206 FFF7FEFF 		bl	AD5940_AFECtrlS
 10413              	.LVL1081:
3438:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 10414              		.loc 1 3438 3 view .LVU3091
 10415 020a 0220     		movs	r0, #2
 10416 020c FFF7FEFF 		bl	AD5940_INTCClrFlag
 10417              	.LVL1082:
3439:ad5940lib/ad5940.c ****   
3440:ad5940lib/ad5940.c ****   DftRcal.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
 10418              		.loc 1 3440 3 view .LVU3092
 10419              		.loc 1 3440 18 is_stmt 0 view .LVU3093
 10420 0210 0320     		movs	r0, #3
 10421 0212 FFF7FEFF 		bl	AD5940_ReadAfeResult
 10422              	.LVL1083:
 10423              		.loc 1 3440 16 view .LVU3094
 10424 0216 0790     		str	r0, [sp, #28]
3441:ad5940lib/ad5940.c ****   DftRcal.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 10425              		.loc 1 3441 3 is_stmt 1 view .LVU3095
 10426              		.loc 1 3441 19 is_stmt 0 view .LVU3096
 10427 0218 0420     		movs	r0, #4
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 284


 10428 021a FFF7FEFF 		bl	AD5940_ReadAfeResult
 10429              	.LVL1084:
 10430              		.loc 1 3441 17 view .LVU3097
 10431 021e 0890     		str	r0, [sp, #32]
3442:ad5940lib/ad5940.c **** 
3443:ad5940lib/ad5940.c ****   AD5940_ADCMuxCfgS(ADCMUXP_HSTIA_P, ADCMUXN_HSTIA_N);
 10432              		.loc 1 3443 3 is_stmt 1 view .LVU3098
 10433 0220 0121     		movs	r1, #1
 10434 0222 0846     		mov	r0, r1
 10435 0224 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 10436              	.LVL1085:
3444:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_WG|AFECTRL_ADCPWR, bTRUE);  /* Enable Waveform generator, ADC power */
 10437              		.loc 1 3444 3 view .LVU3099
 10438 0228 0121     		movs	r1, #1
 10439 022a 4FF48140 		mov	r0, #16512
 10440 022e FFF7FEFF 		bl	AD5940_AFECtrlS
 10441              	.LVL1086:
3445:ad5940lib/ad5940.c ****   //wait for sometime.
3446:ad5940lib/ad5940.c ****   AD5940_Delay10us(25);
 10442              		.loc 1 3446 3 view .LVU3100
 10443 0232 1920     		movs	r0, #25
 10444 0234 FFF7FEFF 		bl	AD5940_Delay10us
 10445              	.LVL1087:
3447:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);  /* Start ADC convert and DFT */
 10446              		.loc 1 3447 3 view .LVU3101
 10447 0238 0121     		movs	r1, #1
 10448 023a 4FF40140 		mov	r0, #33024
 10449 023e FFF7FEFF 		bl	AD5940_AFECtrlS
 10450              	.LVL1088:
3448:ad5940lib/ad5940.c ****   /* Wait until DFT ready */
3449:ad5940lib/ad5940.c ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_DFTRDY) == bFALSE);  
 10451              		.loc 1 3449 3 view .LVU3102
 10452              	.L674:
 10453              		.loc 1 3449 68 discriminator 1 view .LVU3103
 10454              		.loc 1 3449 8 discriminator 1 view .LVU3104
 10455              		.loc 1 3449 9 is_stmt 0 discriminator 1 view .LVU3105
 10456 0242 0221     		movs	r1, #2
 10457 0244 0120     		movs	r0, #1
 10458 0246 FFF7FEFF 		bl	AD5940_INTCTestFlag
 10459              	.LVL1089:
 10460              		.loc 1 3449 8 discriminator 1 view .LVU3106
 10461 024a 0028     		cmp	r0, #0
 10462 024c F9D0     		beq	.L674
3450:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC conve
 10463              		.loc 1 3450 3 is_stmt 1 view .LVU3107
 10464 024e 0021     		movs	r1, #0
 10465 0250 4CF28010 		movw	r0, #49536
 10466 0254 FFF7FEFF 		bl	AD5940_AFECtrlS
 10467              	.LVL1090:
3451:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 10468              		.loc 1 3451 3 view .LVU3108
 10469 0258 0220     		movs	r0, #2
 10470 025a FFF7FEFF 		bl	AD5940_INTCClrFlag
 10471              	.LVL1091:
3452:ad5940lib/ad5940.c **** 
3453:ad5940lib/ad5940.c ****   DftRtia.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
 10472              		.loc 1 3453 3 view .LVU3109
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 285


 10473              		.loc 1 3453 18 is_stmt 0 view .LVU3110
 10474 025e 0320     		movs	r0, #3
 10475 0260 FFF7FEFF 		bl	AD5940_ReadAfeResult
 10476              	.LVL1092:
 10477              		.loc 1 3453 16 view .LVU3111
 10478 0264 0590     		str	r0, [sp, #20]
3454:ad5940lib/ad5940.c ****   DftRtia.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 10479              		.loc 1 3454 3 is_stmt 1 view .LVU3112
 10480              		.loc 1 3454 19 is_stmt 0 view .LVU3113
 10481 0266 0420     		movs	r0, #4
 10482 0268 FFF7FEFF 		bl	AD5940_ReadAfeResult
 10483              	.LVL1093:
 10484              		.loc 1 3454 17 view .LVU3114
 10485 026c 0690     		str	r0, [sp, #24]
3455:ad5940lib/ad5940.c ****   
3456:ad5940lib/ad5940.c ****   if(DftRcal.Real&(1L<<17))
 10486              		.loc 1 3456 3 is_stmt 1 view .LVU3115
 10487              		.loc 1 3456 13 is_stmt 0 view .LVU3116
 10488 026e 079B     		ldr	r3, [sp, #28]
 10489              		.loc 1 3456 5 view .LVU3117
 10490 0270 13F4003F 		tst	r3, #131072
 10491 0274 02D0     		beq	.L675
3457:ad5940lib/ad5940.c ****     DftRcal.Real |= 0xfffc0000;
 10492              		.loc 1 3457 5 is_stmt 1 view .LVU3118
 10493              		.loc 1 3457 18 is_stmt 0 view .LVU3119
 10494 0276 334A     		ldr	r2, .L697+28
 10495 0278 1A43     		orrs	r2, r2, r3
 10496 027a 0792     		str	r2, [sp, #28]
 10497              	.L675:
3458:ad5940lib/ad5940.c ****   if(DftRcal.Image&(1L<<17))
 10498              		.loc 1 3458 3 is_stmt 1 view .LVU3120
 10499              		.loc 1 3458 13 is_stmt 0 view .LVU3121
 10500 027c 089B     		ldr	r3, [sp, #32]
 10501              		.loc 1 3458 5 view .LVU3122
 10502 027e 13F4003F 		tst	r3, #131072
 10503 0282 02D0     		beq	.L676
3459:ad5940lib/ad5940.c ****     DftRcal.Image |= 0xfffc0000;
 10504              		.loc 1 3459 5 is_stmt 1 view .LVU3123
 10505              		.loc 1 3459 19 is_stmt 0 view .LVU3124
 10506 0284 2F4A     		ldr	r2, .L697+28
 10507 0286 1A43     		orrs	r2, r2, r3
 10508 0288 0892     		str	r2, [sp, #32]
 10509              	.L676:
3460:ad5940lib/ad5940.c ****   if(DftRtia.Real&(1L<<17))
 10510              		.loc 1 3460 3 is_stmt 1 view .LVU3125
 10511              		.loc 1 3460 13 is_stmt 0 view .LVU3126
 10512 028a 059B     		ldr	r3, [sp, #20]
 10513              		.loc 1 3460 5 view .LVU3127
 10514 028c 13F4003F 		tst	r3, #131072
 10515 0290 02D0     		beq	.L677
3461:ad5940lib/ad5940.c ****     DftRtia.Real |= 0xfffc0000;
 10516              		.loc 1 3461 5 is_stmt 1 view .LVU3128
 10517              		.loc 1 3461 18 is_stmt 0 view .LVU3129
 10518 0292 2C4A     		ldr	r2, .L697+28
 10519 0294 1A43     		orrs	r2, r2, r3
 10520 0296 0592     		str	r2, [sp, #20]
 10521              	.L677:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 286


3462:ad5940lib/ad5940.c ****   if(DftRtia.Image&(1L<<17))
 10522              		.loc 1 3462 3 is_stmt 1 view .LVU3130
 10523              		.loc 1 3462 5 is_stmt 0 view .LVU3131
 10524 0298 10F4003F 		tst	r0, #131072
 10525 029c 02D0     		beq	.L678
3463:ad5940lib/ad5940.c ****     DftRtia.Image |= 0xfffc0000;
 10526              		.loc 1 3463 5 is_stmt 1 view .LVU3132
 10527              		.loc 1 3463 19 is_stmt 0 view .LVU3133
 10528 029e 294B     		ldr	r3, .L697+28
 10529 02a0 0343     		orrs	r3, r3, r0
 10530 02a2 0693     		str	r3, [sp, #24]
 10531              	.L678:
3464:ad5940lib/ad5940.c ****   /* 
3465:ad5940lib/ad5940.c ****     ADC MUX is set to HSTIA_P and HSTIA_N.
3466:ad5940lib/ad5940.c ****     While the current flow through RCAL and then into RTIA, the current direction should be from HS
3467:ad5940lib/ad5940.c ****     measure the voltage across RCAL by MUXSELP_P_NODE and MUXSELN_N_NODE.
3468:ad5940lib/ad5940.c ****     So here, we add a negative sign to results
3469:ad5940lib/ad5940.c ****   */
3470:ad5940lib/ad5940.c ****   DftRtia.Image = -DftRtia.Image;
 10532              		.loc 1 3470 3 is_stmt 1 view .LVU3134
3471:ad5940lib/ad5940.c ****   DftRtia.Real = -DftRtia.Real; /* Current is measured by MUX HSTIA_P-HSTIA_N. It should be  */
 10533              		.loc 1 3471 3 view .LVU3135
 10534              		.loc 1 3471 26 is_stmt 0 view .LVU3136
 10535 02a4 059B     		ldr	r3, [sp, #20]
 10536              		.loc 1 3471 18 view .LVU3137
 10537 02a6 5B42     		rsbs	r3, r3, #0
 10538              		.loc 1 3471 16 view .LVU3138
 10539 02a8 0593     		str	r3, [sp, #20]
3472:ad5940lib/ad5940.c ****    /*
3473:ad5940lib/ad5940.c ****       The impedance engine inside of AD594x give us Real part and Imaginary part of DFT. Due to tec
3474:ad5940lib/ad5940.c ****       part in register is the opposite number. So we add a negative sign on the Imaginary part of r
3475:ad5940lib/ad5940.c ****    */
3476:ad5940lib/ad5940.c ****   DftRtia.Image = -DftRtia.Image;
 10540              		.loc 1 3476 3 is_stmt 1 view .LVU3139
3477:ad5940lib/ad5940.c ****   DftRcal.Image = -DftRcal.Image;
 10541              		.loc 1 3477 3 view .LVU3140
 10542              		.loc 1 3477 27 is_stmt 0 view .LVU3141
 10543 02aa 089B     		ldr	r3, [sp, #32]
 10544              		.loc 1 3477 19 view .LVU3142
 10545 02ac 5B42     		rsbs	r3, r3, #0
 10546              		.loc 1 3477 17 view .LVU3143
 10547 02ae 0893     		str	r3, [sp, #32]
3478:ad5940lib/ad5940.c **** 
3479:ad5940lib/ad5940.c ****   fImpCar_Type temp;
 10548              		.loc 1 3479 3 is_stmt 1 view .LVU3144
3480:ad5940lib/ad5940.c ****   temp = AD5940_ComplexDivInt(&DftRtia, &DftRcal);
 10549              		.loc 1 3480 3 view .LVU3145
 10550              		.loc 1 3480 10 is_stmt 0 view .LVU3146
 10551 02b0 07A9     		add	r1, sp, #28
 10552 02b2 05A8     		add	r0, sp, #20
 10553 02b4 FFF7FEFF 		bl	AD5940_ComplexDivInt
 10554              	.LVL1094:
3481:ad5940lib/ad5940.c ****   temp.Real *= pCalCfg->fRcal;
 10555              		.loc 1 3481 3 is_stmt 1 view .LVU3147
 10556              		.loc 1 3481 23 is_stmt 0 view .LVU3148
 10557 02b8 D7ED017A 		vldr.32	s15, [r7, #4]
 10558              		.loc 1 3481 13 view .LVU3149
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 287


 10559 02bc 20EE270A 		vmul.f32	s0, s0, s15
 10560 02c0 8DED030A 		vstr.32	s0, [sp, #12]
3482:ad5940lib/ad5940.c ****   temp.Image *= pCalCfg->fRcal;
 10561              		.loc 1 3482 3 is_stmt 1 view .LVU3150
 10562              		.loc 1 3482 14 is_stmt 0 view .LVU3151
 10563 02c4 60EEA70A 		vmul.f32	s1, s1, s15
 10564 02c8 CDED040A 		vstr.32	s1, [sp, #16]
3483:ad5940lib/ad5940.c ****   if(pCalCfg->bPolarResult == bFALSE)
 10565              		.loc 1 3483 3 is_stmt 1 view .LVU3152
 10566              		.loc 1 3483 13 is_stmt 0 view .LVU3153
 10567 02cc 7B6C     		ldr	r3, [r7, #68]
 10568              		.loc 1 3483 5 view .LVU3154
 10569 02ce 002B     		cmp	r3, #0
 10570 02d0 73D1     		bne	.L679
3484:ad5940lib/ad5940.c ****   {
3485:ad5940lib/ad5940.c ****     *(fImpCar_Type*)pResult = temp;
 10571              		.loc 1 3485 5 is_stmt 1 view .LVU3155
 10572              		.loc 1 3485 29 is_stmt 0 view .LVU3156
 10573 02d2 0499     		ldr	r1, [sp, #16]
 10574 02d4 0398     		ldr	r0, [sp, #12]
 10575 02d6 88E80300 		stm	r8, {r0, r1}
 10576              	.L680:
3486:ad5940lib/ad5940.c ****   }
3487:ad5940lib/ad5940.c ****   else
3488:ad5940lib/ad5940.c ****   {
3489:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Magnitude = AD5940_ComplexMag(&temp);
3490:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&temp);
3491:ad5940lib/ad5940.c ****   }
3492:ad5940lib/ad5940.c ****   
3493:ad5940lib/ad5940.c ****   /* Restore INTC1 DFT configure */
3494:ad5940lib/ad5940.c ****   if(INTCCfg&AFEINTSRC_DFTRDY);
 10577              		.loc 1 3494 3 is_stmt 1 view .LVU3157
 10578              		.loc 1 3494 5 is_stmt 0 view .LVU3158
 10579 02da 1BF0020F 		tst	fp, #2
 10580 02de 77D0     		beq	.L696
3495:ad5940lib/ad5940.c ****   else
3496:ad5940lib/ad5940.c ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_DFTRDY, bFALSE); /* Disable DFT Interrupt */
3497:ad5940lib/ad5940.c **** 
3498:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 10581              		.loc 1 3498 10 view .LVU3159
 10582 02e0 0020     		movs	r0, #0
 10583              	.LVL1095:
 10584              	.L662:
3499:ad5940lib/ad5940.c **** }
 10585              		.loc 1 3499 1 view .LVU3160
 10586 02e2 43B0     		add	sp, sp, #268
 10587              	.LCFI168:
 10588              		.cfi_remember_state
 10589              		.cfi_def_cfa_offset 36
 10590              		@ sp needed
 10591 02e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10592              	.LVL1096:
 10593              	.L686:
 10594              	.LCFI169:
 10595              		.cfi_restore_state
3326:ad5940lib/ad5940.c **** 
 10596              		.loc 1 3326 22 view .LVU3161
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 288


 10597 02e8 4FF00109 		mov	r9, #1
 10598 02ec B8E6     		b	.L664
 10599              	.LVL1097:
 10600              	.L692:
3348:ad5940lib/ad5940.c ****   {
 10601              		.loc 1 3348 8 is_stmt 1 view .LVU3162
3348:ad5940lib/ad5940.c ****   {
 10602              		.loc 1 3348 10 is_stmt 0 view .LVU3163
 10603 02ee DFED167A 		vldr.32	s15, .L697+32
 10604 02f2 B4EEE76A 		vcmpe.f32	s12, s15
 10605 02f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10606 02fa 2DD8     		bhi	.L693
3350:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_1;
 10607              		.loc 1 3350 5 is_stmt 1 view .LVU3164
 10608              	.LVL1098:
3351:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*0.25 = 200mVpp */
 10609              		.loc 1 3351 5 view .LVU3165
3353:ad5940lib/ad5940.c ****   }
 10610              		.loc 1 3353 5 view .LVU3166
3353:ad5940lib/ad5940.c ****   }
 10611              		.loc 1 3353 38 is_stmt 0 view .LVU3167
 10612 02fc B0EE677A 		vmov.f32	s14, s15
 10613 0300 C6EE077A 		vdiv.f32	s15, s12, s14
3353:ad5940lib/ad5940.c ****   }
 10614              		.loc 1 3353 42 view .LVU3168
 10615 0304 9FED137A 		vldr.32	s14, .L697+44
 10616 0308 67EE877A 		vmul.f32	s15, s15, s14
3353:ad5940lib/ad5940.c ****   }
 10617              		.loc 1 3353 47 view .LVU3169
 10618 030c 77EEA77A 		vadd.f32	s15, s15, s15
3353:ad5940lib/ad5940.c ****   }
 10619              		.loc 1 3353 18 view .LVU3170
 10620 0310 FCEEE77A 		vcvt.u32.f32	s15, s15
 10621 0314 17EE905A 		vmov	r5, s15	@ int
3353:ad5940lib/ad5940.c ****   }
 10622              		.loc 1 3353 50 view .LVU3171
 10623 0318 0135     		adds	r5, r5, #1
3353:ad5940lib/ad5940.c ****   }
 10624              		.loc 1 3353 15 view .LVU3172
 10625 031a 6D08     		lsrs	r5, r5, #1
 10626              	.LVL1099:
3351:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*0.25 = 200mVpp */
 10627              		.loc 1 3351 15 view .LVU3173
 10628 031c 4FF0000A 		mov	r10, #0
3350:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_1;
 10629              		.loc 1 3350 19 view .LVU3174
 10630 0320 0123     		movs	r3, #1
 10631              	.LVL1100:
3350:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_1;
 10632              		.loc 1 3350 19 view .LVU3175
 10633 0322 0193     		str	r3, [sp, #4]
 10634 0324 C9E6     		b	.L667
 10635              	.L698:
 10636 0326 00BF     		.align	3
 10637              	.L697:
 10638 0328 00000000 		.word	0
 10639 032c 00809640 		.word	1083604992
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 289


 10640 0330 C4000000 		.word	.LANCHOR0+196
 10641 0334 0050C34B 		.word	1271091200
 10642 0338 00002042 		.word	1109393408
 10643 033c E0FF3900 		.word	3801056
 10644 0340 400E1100 		.word	1117760
 10645 0344 0000FCFF 		.word	-262144
 10646 0348 00004843 		.word	1128792064
 10647 034c 0000A043 		.word	1134559232
 10648 0350 0000C844 		.word	1153957888
 10649 0354 00E0FF44 		.word	1157619712
 10650              	.LVL1101:
 10651              	.L693:
3355:ad5940lib/ad5940.c ****   {
 10652              		.loc 1 3355 8 is_stmt 1 view .LVU3176
3355:ad5940lib/ad5940.c ****   {
 10653              		.loc 1 3355 10 is_stmt 0 view .LVU3177
 10654 0358 5FED047A 		vldr.32	s15, .L697+36
 10655 035c B4EEE76A 		vcmpe.f32	s12, s15
 10656 0360 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10657 0364 14D8     		bhi	.L694
3357:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_0P2;
 10658              		.loc 1 3357 5 is_stmt 1 view .LVU3178
3358:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*0.4 = 320mV */
 10659              		.loc 1 3358 5 view .LVU3179
 10660              	.LVL1102:
3360:ad5940lib/ad5940.c ****   }
 10661              		.loc 1 3360 5 view .LVU3180
3360:ad5940lib/ad5940.c ****   }
 10662              		.loc 1 3360 38 is_stmt 0 view .LVU3181
 10663 0366 B0EE677A 		vmov.f32	s14, s15
 10664 036a C6EE077A 		vdiv.f32	s15, s12, s14
3360:ad5940lib/ad5940.c ****   }
 10665              		.loc 1 3360 42 view .LVU3182
 10666 036e 1FED077A 		vldr.32	s14, .L697+44
 10667 0372 67EE877A 		vmul.f32	s15, s15, s14
3360:ad5940lib/ad5940.c ****   }
 10668              		.loc 1 3360 47 view .LVU3183
 10669 0376 77EEA77A 		vadd.f32	s15, s15, s15
3360:ad5940lib/ad5940.c ****   }
 10670              		.loc 1 3360 18 view .LVU3184
 10671 037a FCEEE77A 		vcvt.u32.f32	s15, s15
 10672 037e 17EE905A 		vmov	r5, s15	@ int
3360:ad5940lib/ad5940.c ****   }
 10673              		.loc 1 3360 50 view .LVU3185
 10674 0382 0135     		adds	r5, r5, #1
3360:ad5940lib/ad5940.c ****   }
 10675              		.loc 1 3360 15 view .LVU3186
 10676 0384 6D08     		lsrs	r5, r5, #1
 10677              	.LVL1103:
3358:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*0.4 = 320mV */
 10678              		.loc 1 3358 15 view .LVU3187
 10679 0386 4FF0010A 		mov	r10, #1
3357:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_0P2;
 10680              		.loc 1 3357 19 view .LVU3188
 10681 038a 0023     		movs	r3, #0
 10682              	.LVL1104:
3357:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_0P2;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 290


 10683              		.loc 1 3357 19 view .LVU3189
 10684 038c 0193     		str	r3, [sp, #4]
 10685 038e 94E6     		b	.L667
 10686              	.LVL1105:
 10687              	.L694:
3364:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_1;
 10688              		.loc 1 3364 5 is_stmt 1 view .LVU3190
3365:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*2=1600mVpp */
 10689              		.loc 1 3365 5 view .LVU3191
3367:ad5940lib/ad5940.c ****   }
 10690              		.loc 1 3367 5 view .LVU3192
3367:ad5940lib/ad5940.c ****   }
 10691              		.loc 1 3367 38 is_stmt 0 view .LVU3193
 10692 0390 1FED117A 		vldr.32	s14, .L697+40
 10693 0394 C6EE077A 		vdiv.f32	s15, s12, s14
3367:ad5940lib/ad5940.c ****   }
 10694              		.loc 1 3367 43 view .LVU3194
 10695 0398 1FED127A 		vldr.32	s14, .L697+44
 10696 039c 67EE877A 		vmul.f32	s15, s15, s14
3367:ad5940lib/ad5940.c ****   }
 10697              		.loc 1 3367 48 view .LVU3195
 10698 03a0 77EEA77A 		vadd.f32	s15, s15, s15
3367:ad5940lib/ad5940.c ****   }
 10699              		.loc 1 3367 18 view .LVU3196
 10700 03a4 FCEEE77A 		vcvt.u32.f32	s15, s15
 10701 03a8 17EE905A 		vmov	r5, s15	@ int
3367:ad5940lib/ad5940.c ****   }
 10702              		.loc 1 3367 51 view .LVU3197
 10703 03ac 0135     		adds	r5, r5, #1
3367:ad5940lib/ad5940.c ****   }
 10704              		.loc 1 3367 15 view .LVU3198
 10705 03ae 6D08     		lsrs	r5, r5, #1
 10706              	.LVL1106:
3365:ad5940lib/ad5940.c ****     /* Excitation buffer voltage full range is 800mVpp*2=1600mVpp */
 10707              		.loc 1 3365 15 view .LVU3199
 10708 03b0 4FF0000A 		mov	r10, #0
3364:ad5940lib/ad5940.c ****     HsDacGain = HSDACGAIN_1;
 10709              		.loc 1 3364 19 view .LVU3200
 10710 03b4 CDF804A0 		str	r10, [sp, #4]
 10711 03b8 7FE6     		b	.L667
 10712              	.LVL1107:
 10713              	.L679:
3489:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&temp);
 10714              		.loc 1 3489 5 is_stmt 1 view .LVU3201
3489:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&temp);
 10715              		.loc 1 3489 43 is_stmt 0 view .LVU3202
 10716 03ba 03A8     		add	r0, sp, #12
 10717 03bc FFF7FEFF 		bl	AD5940_ComplexMag
 10718              	.LVL1108:
3489:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&temp);
 10719              		.loc 1 3489 41 view .LVU3203
 10720 03c0 88ED000A 		vstr.32	s0, [r8]
3490:ad5940lib/ad5940.c ****   }
 10721              		.loc 1 3490 5 is_stmt 1 view .LVU3204
3490:ad5940lib/ad5940.c ****   }
 10722              		.loc 1 3490 39 is_stmt 0 view .LVU3205
 10723 03c4 03A8     		add	r0, sp, #12
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 291


 10724 03c6 FFF7FEFF 		bl	AD5940_ComplexPhase
 10725              	.LVL1109:
3490:ad5940lib/ad5940.c ****   }
 10726              		.loc 1 3490 37 view .LVU3206
 10727 03ca 88ED010A 		vstr.32	s0, [r8, #4]
 10728 03ce 84E7     		b	.L680
 10729              	.L696:
3496:ad5940lib/ad5940.c **** 
 10730              		.loc 1 3496 5 is_stmt 1 view .LVU3207
 10731 03d0 0022     		movs	r2, #0
 10732 03d2 0221     		movs	r1, #2
 10733 03d4 0120     		movs	r0, #1
 10734 03d6 FFF7FEFF 		bl	AD5940_INTCCfg
 10735              	.LVL1110:
3498:ad5940lib/ad5940.c **** }
 10736              		.loc 1 3498 10 is_stmt 0 view .LVU3208
 10737 03da 0020     		movs	r0, #0
 10738 03dc 81E7     		b	.L662
 10739              	.LVL1111:
 10740              	.L681:
3315:ad5940lib/ad5940.c ****   if(pCalCfg->fRcal == 0)
 10741              		.loc 1 3315 30 view .LVU3209
 10742 03de 6FF00200 		mvn	r0, #2
 10743 03e2 7EE7     		b	.L662
 10744              	.L682:
3317:ad5940lib/ad5940.c ****   if(pCalCfg->HsTiaCfg.HstiaRtiaSel > HSTIARTIA_160K)
 10745              		.loc 1 3317 12 view .LVU3210
 10746 03e4 6FF00100 		mvn	r0, #1
 10747 03e8 7BE7     		b	.L662
 10748              	.L683:
3319:ad5940lib/ad5940.c ****   if(pCalCfg->HsTiaCfg.HstiaRtiaSel == HSTIARTIA_OPEN)
 10749              		.loc 1 3319 12 view .LVU3211
 10750 03ea 6FF00100 		mvn	r0, #1
 10751 03ee 78E7     		b	.L662
 10752              	.L684:
3321:ad5940lib/ad5940.c ****   if(pResult == NULL)
 10753              		.loc 1 3321 12 view .LVU3212
 10754 03f0 6FF00100 		mvn	r0, #1
 10755 03f4 75E7     		b	.L662
 10756              	.L685:
3323:ad5940lib/ad5940.c **** 
 10757              		.loc 1 3323 14 view .LVU3213
 10758 03f6 6FF00200 		mvn	r0, #2
 10759 03fa 72E7     		b	.L662
 10760              		.cfi_endproc
 10761              	.LFE118:
 10763              		.section	.text.AD5940_LPRtiaCal,"ax",%progbits
 10764              		.align	1
 10765              		.global	AD5940_LPRtiaCal
 10766              		.syntax unified
 10767              		.thumb
 10768              		.thumb_func
 10769              		.fpu fpv5-d16
 10771              	AD5940_LPRtiaCal:
 10772              	.LVL1112:
 10773              	.LFB119:
3500:ad5940lib/ad5940.c **** 
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 292


3501:ad5940lib/ad5940.c **** /**
3502:ad5940lib/ad5940.c ****  * @brief Measure LPTIA internal RTIA impedance with HSTIA. This is the recommended method for LPTI
3503:ad5940lib/ad5940.c ****  * @param pCalCfg: pointer to calibration structure.
3504:ad5940lib/ad5940.c ****  * @param pResult:  Pointer to a variable that used to store result. 
3505:ad5940lib/ad5940.c ****  *                  If bPolarResult in structure is set, then use type fImpPol_Type otherwise use f
3506:ad5940lib/ad5940.c ****  * @return AD5940ERR_OK if succeed.
3507:ad5940lib/ad5940.c **** **/
3508:ad5940lib/ad5940.c **** AD5940Err AD5940_LPRtiaCal(LPRTIACal_Type *pCalCfg, void *pResult)
3509:ad5940lib/ad5940.c **** {
 10774              		.loc 1 3509 1 is_stmt 1 view -0
 10775              		.cfi_startproc
 10776              		@ args = 0, pretend = 0, frame = 400
 10777              		@ frame_needed = 0, uses_anonymous_args = 0
 10778              		.loc 1 3509 1 is_stmt 0 view .LVU3215
 10779 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 10780              	.LCFI170:
 10781              		.cfi_def_cfa_offset 36
 10782              		.cfi_offset 4, -36
 10783              		.cfi_offset 5, -32
 10784              		.cfi_offset 6, -28
 10785              		.cfi_offset 7, -24
 10786              		.cfi_offset 8, -20
 10787              		.cfi_offset 9, -16
 10788              		.cfi_offset 10, -12
 10789              		.cfi_offset 11, -8
 10790              		.cfi_offset 14, -4
 10791 0004 2DED028B 		vpush.64	{d8}
 10792              	.LCFI171:
 10793              		.cfi_def_cfa_offset 44
 10794              		.cfi_offset 80, -44
 10795              		.cfi_offset 81, -40
 10796 0008 E5B0     		sub	sp, sp, #404
 10797              	.LCFI172:
 10798              		.cfi_def_cfa_offset 448
 10799 000a 0446     		mov	r4, r0
 10800 000c 0E46     		mov	r6, r1
3510:ad5940lib/ad5940.c ****   HSLoopCfg_Type hs_loop;
 10801              		.loc 1 3510 3 is_stmt 1 view .LVU3216
3511:ad5940lib/ad5940.c ****   LPLoopCfg_Type lp_loop;
 10802              		.loc 1 3511 3 view .LVU3217
3512:ad5940lib/ad5940.c ****   DSPCfg_Type dsp_cfg;
 10803              		.loc 1 3512 3 view .LVU3218
3513:ad5940lib/ad5940.c ****   ADCBaseCfg_Type *pADCBaseCfg; 
 10804              		.loc 1 3513 3 view .LVU3219
3514:ad5940lib/ad5940.c ****   SWMatrixCfg_Type *pSWCfg;  
 10805              		.loc 1 3514 3 view .LVU3220
3515:ad5940lib/ad5940.c ****   uint32_t INTCCfg, reg_afecon;
 10806              		.loc 1 3515 3 view .LVU3221
3516:ad5940lib/ad5940.c ****   BoolFlag bADCClk32MHzMode = bFALSE;
 10807              		.loc 1 3516 3 view .LVU3222
 10808              	.LVL1113:
3517:ad5940lib/ad5940.c ****   BoolFlag bDCMode = bFALSE;                /* Indicate if frequency is 0, which means we calibrate
 10809              		.loc 1 3517 3 view .LVU3223
3518:ad5940lib/ad5940.c **** 
3519:ad5940lib/ad5940.c ****   float ExcitVolt; /* Excitation voltage, unit is mV */
 10810              		.loc 1 3519 3 view .LVU3224
3520:ad5940lib/ad5940.c ****   uint32_t RtiaVal;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 293


 10811              		.loc 1 3520 3 view .LVU3225
3521:ad5940lib/ad5940.c ****   /* RTIA value table when RLOAD set to 100Ohm */
3522:ad5940lib/ad5940.c ****   uint32_t const LpRtiaTable[]={0,110,1000,2000,3000,4000,6000,8000,10000,12000,16000,20000,24000,3
 10812              		.loc 1 3522 3 view .LVU3226
 10813              		.loc 1 3522 18 is_stmt 0 view .LVU3227
 10814 000e 6A4D     		ldr	r5, .L757+8
 10815 0010 6C22     		movs	r2, #108
 10816 0012 05F1E801 		add	r1, r5, #232
 10817              	.LVL1114:
 10818              		.loc 1 3522 18 view .LVU3228
 10819 0016 0EA8     		add	r0, sp, #56
 10820              	.LVL1115:
 10821              		.loc 1 3522 18 view .LVU3229
 10822 0018 FFF7FEFF 		bl	memcpy
 10823              	.LVL1116:
3523:ad5940lib/ad5940.c ****   float const ADCPGAGainTable[] = {1, 1.5, 2, 4, 9};
 10824              		.loc 1 3523 3 is_stmt 1 view .LVU3230
 10825              		.loc 1 3523 15 is_stmt 0 view .LVU3231
 10826 001c 09AF     		add	r7, sp, #36
 10827 001e 05F5AA75 		add	r5, r5, #340
 10828 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10829 0024 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 10830 0026 2B68     		ldr	r3, [r5]
 10831 0028 3B60     		str	r3, [r7]
3524:ad5940lib/ad5940.c ****   uint32_t WgAmpWord;
 10832              		.loc 1 3524 3 is_stmt 1 view .LVU3232
3525:ad5940lib/ad5940.c **** 
3526:ad5940lib/ad5940.c ****   uint32_t ADCPgaGainRtia, ADCPgaGainRcal;
 10833              		.loc 1 3526 3 view .LVU3233
3527:ad5940lib/ad5940.c ****   float GainRatio;
 10834              		.loc 1 3527 3 view .LVU3234
3528:ad5940lib/ad5940.c **** 
3529:ad5940lib/ad5940.c ****   iImpCar_Type DftRcal, DftRtia;
 10835              		.loc 1 3529 3 view .LVU3235
3530:ad5940lib/ad5940.c **** 
3531:ad5940lib/ad5940.c ****   if(pCalCfg == NULL)  return AD5940ERR_NULLP;  /* Parameters illegal */
 10836              		.loc 1 3531 3 view .LVU3236
 10837              		.loc 1 3531 5 is_stmt 0 view .LVU3237
 10838 002a 002C     		cmp	r4, #0
 10839 002c 00F00F83 		beq	.L729
3532:ad5940lib/ad5940.c ****   
3533:ad5940lib/ad5940.c ****   if(pCalCfg->fRcal == 0)
 10840              		.loc 1 3533 3 is_stmt 1 view .LVU3238
 10841              		.loc 1 3533 13 is_stmt 0 view .LVU3239
 10842 0030 94ED017A 		vldr.32	s14, [r4, #4]
 10843              		.loc 1 3533 5 view .LVU3240
 10844 0034 B5EE407A 		vcmp.f32	s14, #0
 10845 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10846 003c 00F00A83 		beq	.L730
3534:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
3535:ad5940lib/ad5940.c ****   if(pCalCfg->LpTiaRtia > LPTIARTIA_512K)
 10847              		.loc 1 3535 3 is_stmt 1 view .LVU3241
 10848              		.loc 1 3535 13 is_stmt 0 view .LVU3242
 10849 0040 A369     		ldr	r3, [r4, #24]
 10850              		.loc 1 3535 5 view .LVU3243
 10851 0042 1A2B     		cmp	r3, #26
 10852 0044 00F20983 		bhi	.L731
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 294


3536:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
3537:ad5940lib/ad5940.c ****   if(pCalCfg->LpTiaRtia == LPTIARTIA_OPEN)
 10853              		.loc 1 3537 3 is_stmt 1 view .LVU3244
 10854              		.loc 1 3537 5 is_stmt 0 view .LVU3245
 10855 0048 002B     		cmp	r3, #0
 10856 004a 00F00983 		beq	.L732
3538:ad5940lib/ad5940.c ****     return AD5940ERR_PARA; /* Not supported now. By setting RTIA to open and set corresponding swit
3539:ad5940lib/ad5940.c ****   if(pResult == NULL)
 10857              		.loc 1 3539 3 is_stmt 1 view .LVU3246
 10858              		.loc 1 3539 5 is_stmt 0 view .LVU3247
 10859 004e 002E     		cmp	r6, #0
 10860 0050 00F00983 		beq	.L733
3540:ad5940lib/ad5940.c ****       return AD5940ERR_NULLP;
3541:ad5940lib/ad5940.c **** 
3542:ad5940lib/ad5940.c ****   if(pCalCfg->AdcClkFreq > (32000000*0.8))
 10861              		.loc 1 3542 3 is_stmt 1 view .LVU3248
 10862              		.loc 1 3542 13 is_stmt 0 view .LVU3249
 10863 0054 D4ED036A 		vldr.32	s13, [r4, #12]
 10864              		.loc 1 3542 5 view .LVU3250
 10865 0058 DFED587A 		vldr.32	s15, .L757+12
 10866 005c F4EEE76A 		vcmpe.f32	s13, s15
 10867 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10868 0064 6EDC     		bgt	.L734
3516:ad5940lib/ad5940.c ****   BoolFlag bDCMode = bFALSE;                /* Indicate if frequency is 0, which means we calibrate
 10869              		.loc 1 3516 12 view .LVU3251
 10870 0066 0025     		movs	r5, #0
 10871              	.L701:
 10872              	.LVL1117:
3543:ad5940lib/ad5940.c ****     bADCClk32MHzMode = bTRUE;   /* Clock frequency is high. */
3544:ad5940lib/ad5940.c ****   if(pCalCfg->fFreq == 0.0f)    /* Frequency is zero means we calibrate RTIA at DC. */
 10873              		.loc 1 3544 3 is_stmt 1 view .LVU3252
 10874              		.loc 1 3544 13 is_stmt 0 view .LVU3253
 10875 0068 D4ED007A 		vldr.32	s15, [r4]
 10876              		.loc 1 3544 5 view .LVU3254
 10877 006c F5EE407A 		vcmp.f32	s15, #0
 10878 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10879 0074 68D0     		beq	.L735
3517:ad5940lib/ad5940.c **** 
 10880              		.loc 1 3517 12 view .LVU3255
 10881 0076 0022     		movs	r2, #0
 10882 0078 0092     		str	r2, [sp]
 10883              	.L702:
 10884              	.LVL1118:
3545:ad5940lib/ad5940.c ****     bDCMode = bTRUE;
3546:ad5940lib/ad5940.c ****   /* Init two pointers */
3547:ad5940lib/ad5940.c ****   pSWCfg = &hs_loop.SWMatCfg;
 10885              		.loc 1 3547 3 is_stmt 1 view .LVU3256
3548:ad5940lib/ad5940.c ****   pADCBaseCfg = &dsp_cfg.ADCBaseCfg;
 10886              		.loc 1 3548 3 view .LVU3257
3549:ad5940lib/ad5940.c ****   /* Calculate the excitation voltage we should use based on RCAL/Rtia */
3550:ad5940lib/ad5940.c ****   RtiaVal = LpRtiaTable[pCalCfg->LpTiaRtia];
 10887              		.loc 1 3550 3 view .LVU3258
 10888              		.loc 1 3550 11 is_stmt 0 view .LVU3259
 10889 007a 0EAA     		add	r2, sp, #56
 10890 007c 02EB8303 		add	r3, r2, r3, lsl #2
 10891 0080 D3ED006A 		vldr.32	s13, [r3]	@ int
 10892              	.LVL1119:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 295


3551:ad5940lib/ad5940.c ****   /*
3552:ad5940lib/ad5940.c ****    * DAC output voltage calculation
3553:ad5940lib/ad5940.c ****    * Note: RCAL value should be similar to RTIA so the accuracy is best.
3554:ad5940lib/ad5940.c ****    * LPTIA output voltage should be limited to 0.3V to AVDD-0.4V, with 1.3V bias. We use 80% of thi
3555:ad5940lib/ad5940.c ****    * That's 2.0Vpp*80%@2.7V AVDD
3556:ad5940lib/ad5940.c ****    * Formula is:    ExcitVolt(in mVpp) = (2000mVpp*80% / RTIA) * RCAL
3557:ad5940lib/ad5940.c ****    * ADC input range is +-1.5V which is enough for calibration.
3558:ad5940lib/ad5940.c ****    * Limitations:
3559:ad5940lib/ad5940.c ****    * Note: HSTIA output range is AVDD-0.4V to AGND+0.2V
3560:ad5940lib/ad5940.c ****    * HSTIA input common voltage range is 0.3V to AVDD-0.7V;
3561:ad5940lib/ad5940.c ****    * When AVDD is 2.7V, the input range is 0.3V to 2.0V; 
3562:ad5940lib/ad5940.c ****    * If we set Vbias to 1.3V, then maximum AC signal is 0.7Vp*2 = 1.4Vpp.
3563:ad5940lib/ad5940.c ****    * Maximum AC signal is further limited by HSTIA RTIA=200Ohm, when RCAL is 200Ohm(for ADuCM355). 
3564:ad5940lib/ad5940.c ****    * Maximum Vzero voltage is 1.9V when Rcal is 200Ohm and Switch On resistance is 50Ohm*2. Vzero_m
3565:ad5940lib/ad5940.c ****    * Maximum AC signal is (1.9-1.3)*2 = 1.2Vpp(for ADuCM355, RCAl=200Ohm).
3566:ad5940lib/ad5940.c ****   */
3567:ad5940lib/ad5940.c ****  /** @cond */
3568:ad5940lib/ad5940.c ****   #define MAXVOLT_P2P 1400  /* Maximum peak to peak voltage 1200mV for ADuCM355. */  
3569:ad5940lib/ad5940.c ****                             /* Maximum peak2peak voltage for AD5940 10kOhm RCAL is 1400mV */
3570:ad5940lib/ad5940.c ****   #define __MAXVOLT_AMP_CODE  (MAXVOLT_P2P*2047L/2200)
3571:ad5940lib/ad5940.c ****  /** @endcond */
3572:ad5940lib/ad5940.c ****   ExcitVolt = 2000*0.8*pCalCfg->fRcal/RtiaVal;
 10893              		.loc 1 3572 3 is_stmt 1 view .LVU3260
 10894              		.loc 1 3572 31 is_stmt 0 view .LVU3261
 10895 0084 B7EEC74A 		vcvt.f64.f32	d4, s14
 10896              		.loc 1 3572 23 view .LVU3262
 10897 0088 9FED495B 		vldr.64	d5, .L757
 10898 008c 24EE054B 		vmul.f64	d4, d4, d5
 10899              		.loc 1 3572 38 view .LVU3263
 10900 0090 B8EE663B 		vcvt.f64.u32	d3, s13
 10901 0094 84EE035B 		vdiv.f64	d5, d4, d3
 10902              		.loc 1 3572 13 view .LVU3264
 10903 0098 B7EEC55B 		vcvt.f32.f64	s10, d5
 10904              	.LVL1120:
3573:ad5940lib/ad5940.c ****   WgAmpWord = ((uint32_t)(ExcitVolt/2200*2047*2)+1)>>1; /* Assign value with rounding (0.5 LSB erro
 10905              		.loc 1 3573 3 is_stmt 1 view .LVU3265
 10906              		.loc 1 3573 36 is_stmt 0 view .LVU3266
 10907 009c 9FED486A 		vldr.32	s12, .L757+16
 10908 00a0 C5EE067A 		vdiv.f32	s15, s10, s12
 10909              		.loc 1 3573 41 view .LVU3267
 10910 00a4 9FED476A 		vldr.32	s12, .L757+20
 10911 00a8 67EE867A 		vmul.f32	s15, s15, s12
 10912              		.loc 1 3573 46 view .LVU3268
 10913 00ac 77EEA77A 		vadd.f32	s15, s15, s15
 10914              		.loc 1 3573 16 view .LVU3269
 10915 00b0 FCEEE77A 		vcvt.u32.f32	s15, s15
 10916              		.loc 1 3573 49 view .LVU3270
 10917 00b4 17EE903A 		vmov	r3, s15	@ int
 10918 00b8 0133     		adds	r3, r3, #1
 10919              		.loc 1 3573 13 view .LVU3271
 10920 00ba 4FEA5309 		lsr	r9, r3, #1
 10921              	.LVL1121:
3574:ad5940lib/ad5940.c ****   if(WgAmpWord > __MAXVOLT_AMP_CODE)
 10922              		.loc 1 3574 3 is_stmt 1 view .LVU3272
 10923              		.loc 1 3574 5 is_stmt 0 view .LVU3273
 10924 00be 40F21652 		movw	r2, #1302
 10925 00c2 B2EB530F 		cmp	r2, r3, lsr #1
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 296


 10926 00c6 00D2     		bcs	.L703
3575:ad5940lib/ad5940.c ****     WgAmpWord = __MAXVOLT_AMP_CODE;
 10927              		.loc 1 3575 15 view .LVU3274
 10928 00c8 9146     		mov	r9, r2
 10929              	.LVL1122:
 10930              	.L703:
 10931              	.LBB24:
3576:ad5940lib/ad5940.c ****   /**
3577:ad5940lib/ad5940.c ****    * Determine the best ADC PGA gain for both RCAL and RTIA voltage measurement.
3578:ad5940lib/ad5940.c ****   */
3579:ad5940lib/ad5940.c ****   {
3580:ad5940lib/ad5940.c ****     float RtiaVolt, RcalVolt, temp;
 10932              		.loc 1 3580 5 is_stmt 1 view .LVU3275
3581:ad5940lib/ad5940.c ****     ExcitVolt = WgAmpWord*2000.0f/2047; /* 2000mVpp -->ExcitVolt in Peak to Peak unit */
 10933              		.loc 1 3581 5 view .LVU3276
 10934              		.loc 1 3581 26 is_stmt 0 view .LVU3277
 10935 00ca 07EE909A 		vmov	s15, r9	@ int
 10936 00ce F8EE677A 		vcvt.f32.u32	s15, s15
 10937 00d2 9FED3D6A 		vldr.32	s12, .L757+24
 10938 00d6 67EE867A 		vmul.f32	s15, s15, s12
 10939              		.loc 1 3581 15 view .LVU3278
 10940 00da 9FED3A6A 		vldr.32	s12, .L757+20
 10941 00de C7EE865A 		vdiv.f32	s11, s15, s12
 10942              	.LVL1123:
3582:ad5940lib/ad5940.c ****     RtiaVolt = ExcitVolt/(pCalCfg->fRcal + 100)*RtiaVal;
 10943              		.loc 1 3582 5 is_stmt 1 view .LVU3279
 10944              		.loc 1 3582 42 is_stmt 0 view .LVU3280
 10945 00e2 DFED3A7A 		vldr.32	s15, .L757+28
 10946 00e6 77EE277A 		vadd.f32	s15, s14, s15
 10947              		.loc 1 3582 25 view .LVU3281
 10948 00ea 85EEA76A 		vdiv.f32	s12, s11, s15
 10949              		.loc 1 3582 48 view .LVU3282
 10950 00ee F8EE667A 		vcvt.f32.u32	s15, s13
 10951              		.loc 1 3582 14 view .LVU3283
 10952 00f2 66EE276A 		vmul.f32	s13, s12, s15
 10953              	.LVL1124:
3583:ad5940lib/ad5940.c ****     RcalVolt = RtiaVolt/RtiaVal*pCalCfg->fRcal;
 10954              		.loc 1 3583 5 is_stmt 1 view .LVU3284
 10955              		.loc 1 3583 24 is_stmt 0 view .LVU3285
 10956 00f6 86EEA76A 		vdiv.f32	s12, s13, s15
 10957              		.loc 1 3583 14 view .LVU3286
 10958 00fa 27EE067A 		vmul.f32	s14, s14, s12
 10959              	.LVL1125:
3584:ad5940lib/ad5940.c ****     /* The input range of ADC is 1.5Vp, we calculate how much gain we need */
3585:ad5940lib/ad5940.c ****     temp = 3000.0f/RcalVolt;
 10960              		.loc 1 3585 5 is_stmt 1 view .LVU3287
 10961              		.loc 1 3585 10 is_stmt 0 view .LVU3288
 10962 00fe 9FED346A 		vldr.32	s12, .L757+32
 10963 0102 C6EE077A 		vdiv.f32	s15, s12, s14
 10964              	.LVL1126:
3586:ad5940lib/ad5940.c ****     if(temp >= 9.0f)  ADCPgaGainRcal = ADCPGA_9;
 10965              		.loc 1 3586 5 is_stmt 1 view .LVU3289
 10966              		.loc 1 3586 7 is_stmt 0 view .LVU3290
 10967 0106 B2EE027A 		vmov.f32	s14, #9.0e+0
 10968              	.LVL1127:
 10969              		.loc 1 3586 7 view .LVU3291
 10970 010a F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 297


 10971 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10972 0112 1CDA     		bge	.L737
3587:ad5940lib/ad5940.c ****     else if(temp >= 4.0f) ADCPgaGainRcal = ADCPGA_4;
 10973              		.loc 1 3587 10 is_stmt 1 view .LVU3292
 10974              		.loc 1 3587 12 is_stmt 0 view .LVU3293
 10975 0114 B1EE007A 		vmov.f32	s14, #4.0e+0
 10976 0118 F4EEC77A 		vcmpe.f32	s15, s14
 10977 011c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10978 0120 3DDA     		bge	.L738
3588:ad5940lib/ad5940.c ****     else if(temp >= 2.0f) ADCPgaGainRcal = ADCPGA_2;
 10979              		.loc 1 3588 10 is_stmt 1 view .LVU3294
 10980              		.loc 1 3588 12 is_stmt 0 view .LVU3295
 10981 0122 B0EE007A 		vmov.f32	s14, #2.0e+0
 10982 0126 F4EEC77A 		vcmpe.f32	s15, s14
 10983 012a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10984 012e 39DA     		bge	.L739
3589:ad5940lib/ad5940.c ****     else if(temp >= 1.5f) ADCPgaGainRcal = ADCPGA_1P5;
 10985              		.loc 1 3589 10 is_stmt 1 view .LVU3296
 10986              		.loc 1 3589 12 is_stmt 0 view .LVU3297
 10987 0130 B7EE087A 		vmov.f32	s14, #1.5e+0
 10988 0134 F4EEC77A 		vcmpe.f32	s15, s14
 10989 0138 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10990 013c 35DB     		blt	.L751
 10991              		.loc 1 3589 42 view .LVU3298
 10992 013e 4FF0010B 		mov	fp, #1
 10993 0142 06E0     		b	.L704
 10994              	.LVL1128:
 10995              	.L734:
 10996              		.loc 1 3589 42 view .LVU3299
 10997              	.LBE24:
3543:ad5940lib/ad5940.c ****   if(pCalCfg->fFreq == 0.0f)    /* Frequency is zero means we calibrate RTIA at DC. */
 10998              		.loc 1 3543 22 view .LVU3300
 10999 0144 0125     		movs	r5, #1
 11000 0146 8FE7     		b	.L701
 11001              	.LVL1129:
 11002              	.L735:
3545:ad5940lib/ad5940.c ****   /* Init two pointers */
 11003              		.loc 1 3545 13 view .LVU3301
 11004 0148 0122     		movs	r2, #1
 11005 014a 0092     		str	r2, [sp]
 11006 014c 95E7     		b	.L702
 11007              	.LVL1130:
 11008              	.L737:
 11009              	.LBB25:
3586:ad5940lib/ad5940.c ****     else if(temp >= 4.0f) ADCPgaGainRcal = ADCPGA_4;
 11010              		.loc 1 3586 38 view .LVU3302
 11011 014e 4FF0040B 		mov	fp, #4
 11012              	.L704:
 11013              	.LVL1131:
3590:ad5940lib/ad5940.c ****     else ADCPgaGainRcal = ADCPGA_1;
3591:ad5940lib/ad5940.c ****     temp = 3000.0f/RtiaVolt;
 11014              		.loc 1 3591 5 is_stmt 1 view .LVU3303
 11015              		.loc 1 3591 10 is_stmt 0 view .LVU3304
 11016 0152 9FED1F7A 		vldr.32	s14, .L757+32
 11017 0156 C7EE267A 		vdiv.f32	s15, s14, s13
 11018              	.LVL1132:
3592:ad5940lib/ad5940.c ****     if(temp >= 9.0f)  ADCPgaGainRtia = ADCPGA_9;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 298


 11019              		.loc 1 3592 5 is_stmt 1 view .LVU3305
 11020              		.loc 1 3592 7 is_stmt 0 view .LVU3306
 11021 015a B2EE027A 		vmov.f32	s14, #9.0e+0
 11022 015e F4EEC77A 		vcmpe.f32	s15, s14
 11023 0162 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11024 0166 35DA     		bge	.L741
3593:ad5940lib/ad5940.c ****     else if(temp >= 4.0f) ADCPgaGainRtia = ADCPGA_4;
 11025              		.loc 1 3593 10 is_stmt 1 view .LVU3307
 11026              		.loc 1 3593 12 is_stmt 0 view .LVU3308
 11027 0168 B1EE007A 		vmov.f32	s14, #4.0e+0
 11028 016c F4EEC77A 		vcmpe.f32	s15, s14
 11029 0170 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11030 0174 80F29781 		bge	.L742
3594:ad5940lib/ad5940.c ****     else if(temp >= 2.0f) ADCPgaGainRtia = ADCPGA_2;
 11031              		.loc 1 3594 10 is_stmt 1 view .LVU3309
 11032              		.loc 1 3594 12 is_stmt 0 view .LVU3310
 11033 0178 B0EE007A 		vmov.f32	s14, #2.0e+0
 11034 017c F4EEC77A 		vcmpe.f32	s15, s14
 11035 0180 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11036 0184 80F29281 		bge	.L743
3595:ad5940lib/ad5940.c ****     else if(temp >= 1.5f) ADCPgaGainRtia = ADCPGA_1P5;
 11037              		.loc 1 3595 10 is_stmt 1 view .LVU3311
 11038              		.loc 1 3595 12 is_stmt 0 view .LVU3312
 11039 0188 B7EE087A 		vmov.f32	s14, #1.5e+0
 11040 018c F4EEC77A 		vcmpe.f32	s15, s14
 11041 0190 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11042 0194 C0F28D81 		blt	.L752
 11043              		.loc 1 3595 42 view .LVU3313
 11044 0198 4FF0010A 		mov	r10, #1
 11045 019c 1CE0     		b	.L706
 11046              	.LVL1133:
 11047              	.L738:
3587:ad5940lib/ad5940.c ****     else if(temp >= 2.0f) ADCPgaGainRcal = ADCPGA_2;
 11048              		.loc 1 3587 42 view .LVU3314
 11049 019e 4FF0030B 		mov	fp, #3
 11050 01a2 D6E7     		b	.L704
 11051              	.L739:
3588:ad5940lib/ad5940.c ****     else if(temp >= 1.5f) ADCPgaGainRcal = ADCPGA_1P5;
 11052              		.loc 1 3588 42 view .LVU3315
 11053 01a4 4FF0020B 		mov	fp, #2
 11054 01a8 D3E7     		b	.L704
 11055              	.L751:
3590:ad5940lib/ad5940.c ****     temp = 3000.0f/RtiaVolt;
 11056              		.loc 1 3590 25 view .LVU3316
 11057 01aa 4FF0000B 		mov	fp, #0
 11058 01ae D0E7     		b	.L704
 11059              	.L758:
 11060              		.align	3
 11061              	.L757:
 11062 01b0 00000000 		.word	0
 11063 01b4 00009940 		.word	1083768832
 11064 01b8 00000000 		.word	.LANCHOR0
 11065 01bc 0050C34B 		.word	1271091200
 11066 01c0 00800945 		.word	1158250496
 11067 01c4 00E0FF44 		.word	1157619712
 11068 01c8 0000FA44 		.word	1157234688
 11069 01cc 0000C842 		.word	1120403456
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 299


 11070 01d0 00803B45 		.word	1161527296
 11071              	.LVL1134:
 11072              	.L741:
3592:ad5940lib/ad5940.c ****     else if(temp >= 4.0f) ADCPgaGainRtia = ADCPGA_4;
 11073              		.loc 1 3592 38 view .LVU3317
 11074 01d4 4FF0040A 		mov	r10, #4
 11075              	.L706:
 11076              	.LVL1135:
3596:ad5940lib/ad5940.c ****     else ADCPgaGainRtia = ADCPGA_1;
3597:ad5940lib/ad5940.c ****     GainRatio = ADCPGAGainTable[ADCPgaGainRtia]/ADCPGAGainTable[ADCPgaGainRcal];
 11077              		.loc 1 3597 5 is_stmt 1 view .LVU3318
 11078              		.loc 1 3597 32 is_stmt 0 view .LVU3319
 11079 01d8 09AB     		add	r3, sp, #36
 11080 01da 03EB8A03 		add	r3, r3, r10, lsl #2
 11081 01de 93ED007A 		vldr.32	s14, [r3]
 11082              		.loc 1 3597 64 view .LVU3320
 11083 01e2 09AB     		add	r3, sp, #36
 11084 01e4 03EB8B03 		add	r3, r3, fp, lsl #2
 11085 01e8 D3ED007A 		vldr.32	s15, [r3]
 11086              	.LVL1136:
 11087              		.loc 1 3597 15 view .LVU3321
 11088 01ec 87EE278A 		vdiv.f32	s16, s14, s15
 11089              	.LVL1137:
 11090              		.loc 1 3597 15 view .LVU3322
 11091              	.LBE25:
3598:ad5940lib/ad5940.c ****   }
3599:ad5940lib/ad5940.c ****   reg_afecon = AD5940_ReadReg(REG_AFE_AFECON);
 11092              		.loc 1 3599 3 is_stmt 1 view .LVU3323
 11093              		.loc 1 3599 16 is_stmt 0 view .LVU3324
 11094 01f0 4FF40050 		mov	r0, #8192
 11095 01f4 FFF7FEFF 		bl	AD5940_ReadReg
 11096              	.LVL1138:
 11097              		.loc 1 3599 16 view .LVU3325
 11098 01f8 0190     		str	r0, [sp, #4]
 11099              	.LVL1139:
3600:ad5940lib/ad5940.c ****   /* INTC configuration */
3601:ad5940lib/ad5940.c ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 11100              		.loc 1 3601 3 is_stmt 1 view .LVU3326
 11101              		.loc 1 3601 13 is_stmt 0 view .LVU3327
 11102 01fa 0120     		movs	r0, #1
 11103              	.LVL1140:
 11104              		.loc 1 3601 13 view .LVU3328
 11105 01fc FFF7FEFF 		bl	AD5940_INTCGetCfg
 11106              	.LVL1141:
 11107 0200 0746     		mov	r7, r0
 11108              	.LVL1142:
3602:ad5940lib/ad5940.c ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_DFTRDY|AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt 
 11109              		.loc 1 3602 3 is_stmt 1 view .LVU3329
 11110 0202 0122     		movs	r2, #1
 11111 0204 0621     		movs	r1, #6
 11112 0206 1046     		mov	r0, r2
 11113              	.LVL1143:
 11114              		.loc 1 3602 3 is_stmt 0 view .LVU3330
 11115 0208 FFF7FEFF 		bl	AD5940_INTCCfg
 11116              	.LVL1144:
3603:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_ALLINT);
 11117              		.loc 1 3603 3 is_stmt 1 view .LVU3331
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 300


 11118 020c 4FF0FF30 		mov	r0, #-1
 11119 0210 FFF7FEFF 		bl	AD5940_INTCClrFlag
 11120              	.LVL1145:
3604:ad5940lib/ad5940.c **** 
3605:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE);  /* Init all to disable state */
 11121              		.loc 1 3605 3 view .LVU3332
 11122 0214 0021     		movs	r1, #0
 11123 0216 B248     		ldr	r0, .L759
 11124 0218 FFF7FEFF 		bl	AD5940_AFECtrlS
 11125              	.LVL1146:
3606:ad5940lib/ad5940.c ****   /* Configure reference system */
3607:ad5940lib/ad5940.c **** 	__AD5940_ReferenceON();
 11126              		.loc 1 3607 2 view .LVU3333
 11127 021c FFF7FEFF 		bl	__AD5940_ReferenceON
 11128              	.LVL1147:
3608:ad5940lib/ad5940.c **** 	/* Configure DSP */
3609:ad5940lib/ad5940.c **** 	AD5940_StructInit(&dsp_cfg, sizeof(dsp_cfg));
 11129              		.loc 1 3609 2 view .LVU3334
 11130 0220 4021     		movs	r1, #64
 11131 0222 29A8     		add	r0, sp, #164
 11132              	.LVL1148:
 11133              		.loc 1 3609 2 is_stmt 0 view .LVU3335
 11134 0224 FFF7FEFF 		bl	AD5940_StructInit
 11135              	.LVL1149:
3610:ad5940lib/ad5940.c **** 	dsp_cfg.ADCFilterCfg.ADCAvgNum = ADCAVGNUM_16;  /* Don't care because it's disabled */
 11136              		.loc 1 3610 2 is_stmt 1 view .LVU3336
 11137              		.loc 1 3610 33 is_stmt 0 view .LVU3337
 11138 0228 0323     		movs	r3, #3
 11139 022a 2E93     		str	r3, [sp, #184]
3611:ad5940lib/ad5940.c **** 	dsp_cfg.ADCFilterCfg.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;
 11140              		.loc 1 3611 2 is_stmt 1 view .LVU3338
 11141              		.loc 1 3611 64 is_stmt 0 view .LVU3339
 11142 022c 85F00105 		eor	r5, r5, #1
 11143              	.LVL1150:
 11144              		.loc 1 3611 31 view .LVU3340
 11145 0230 2F95     		str	r5, [sp, #188]
3612:ad5940lib/ad5940.c **** 	dsp_cfg.ADCFilterCfg.ADCSinc2Osr = pCalCfg->ADCSinc2Osr;
 11146              		.loc 1 3612 2 is_stmt 1 view .LVU3341
 11147              		.loc 1 3612 44 is_stmt 0 view .LVU3342
 11148 0232 636A     		ldr	r3, [r4, #36]
 11149              		.loc 1 3612 35 view .LVU3343
 11150 0234 2D93     		str	r3, [sp, #180]
3613:ad5940lib/ad5940.c **** 	dsp_cfg.ADCFilterCfg.ADCSinc3Osr = pCalCfg->ADCSinc3Osr;
 11151              		.loc 1 3613 2 is_stmt 1 view .LVU3344
 11152              		.loc 1 3613 44 is_stmt 0 view .LVU3345
 11153 0236 236A     		ldr	r3, [r4, #32]
 11154              		.loc 1 3613 35 view .LVU3346
 11155 0238 2C93     		str	r3, [sp, #176]
3614:ad5940lib/ad5940.c **** 	dsp_cfg.ADCFilterCfg.BpNotch = bTRUE;
 11156              		.loc 1 3614 2 is_stmt 1 view .LVU3347
 11157              		.loc 1 3614 31 is_stmt 0 view .LVU3348
 11158 023a 0125     		movs	r5, #1
 11159 023c 8DF8C050 		strb	r5, [sp, #192]
3615:ad5940lib/ad5940.c **** 	dsp_cfg.ADCFilterCfg.BpSinc3 = bFALSE;
 11160              		.loc 1 3615 2 is_stmt 1 view .LVU3349
 11161              		.loc 1 3615 31 is_stmt 0 view .LVU3350
 11162 0240 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 301


 11163 0244 8DF8C180 		strb	r8, [sp, #193]
3616:ad5940lib/ad5940.c **** 	dsp_cfg.ADCFilterCfg.Sinc2NotchEnable = bTRUE;
 11164              		.loc 1 3616 2 is_stmt 1 view .LVU3351
 11165              		.loc 1 3616 40 is_stmt 0 view .LVU3352
 11166 0248 8DF8C250 		strb	r5, [sp, #194]
3617:ad5940lib/ad5940.c **** 	memcpy(&dsp_cfg.DftCfg, &pCalCfg->DftCfg, sizeof(pCalCfg->DftCfg));
 11167              		.loc 1 3617 2 is_stmt 1 view .LVU3353
 11168              		.loc 1 3617 26 is_stmt 0 view .LVU3354
 11169 024c 2246     		mov	r2, r4
 11170              		.loc 1 3617 2 view .LVU3355
 11171 024e 33AB     		add	r3, sp, #204
 11172 0250 52F8280F 		ldr	r0, [r2, #40]!	@ unaligned
 11173 0254 5168     		ldr	r1, [r2, #4]	@ unaligned
 11174 0256 9268     		ldr	r2, [r2, #8]	@ unaligned
 11175 0258 07C3     		stmia	r3!, {r0, r1, r2}
3618:ad5940lib/ad5940.c **** 	AD5940_DSPCfgS(&dsp_cfg);
 11176              		.loc 1 3618 2 is_stmt 1 view .LVU3356
 11177 025a 29A8     		add	r0, sp, #164
 11178              	.LVL1151:
 11179              		.loc 1 3618 2 is_stmt 0 view .LVU3357
 11180 025c FFF7FEFF 		bl	AD5940_DSPCfgS
 11181              	.LVL1152:
3619:ad5940lib/ad5940.c ****   /* Configure LP Loop */
3620:ad5940lib/ad5940.c ****   AD5940_StructInit(&lp_loop, sizeof(lp_loop));
 11182              		.loc 1 3620 3 is_stmt 1 view .LVU3358
 11183 0260 3C21     		movs	r1, #60
 11184 0262 39A8     		add	r0, sp, #228
 11185 0264 FFF7FEFF 		bl	AD5940_StructInit
 11186              	.LVL1153:
3621:ad5940lib/ad5940.c ****   /* Configure LP Amplifies(LPPA and LPTIA). We won't use LP-PA */
3622:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.LpdacSel = (pCalCfg->LpAmpSel  == LPAMP0)?LPDAC0:LPDAC1;
 11187              		.loc 1 3622 3 view .LVU3359
 11188              		.loc 1 3622 39 is_stmt 0 view .LVU3360
 11189 0268 2369     		ldr	r3, [r4, #16]
 11190              		.loc 1 3622 68 view .LVU3361
 11191 026a B3EB0802 		subs	r2, r3, r8
 11192 026e 18BF     		it	ne
 11193 0270 0122     		movne	r2, #1
 11194              		.loc 1 3622 29 view .LVU3362
 11195 0272 3992     		str	r2, [sp, #228]
3623:ad5940lib/ad5940.c **** 	lp_loop.LpDacCfg.DacData12Bit = 0x800;                 		/* Controlled by WG */
 11196              		.loc 1 3623 2 is_stmt 1 view .LVU3363
 11197              		.loc 1 3623 32 is_stmt 0 view .LVU3364
 11198 0274 4FF40062 		mov	r2, #2048
 11199 0278 ADF8FE20 		strh	r2, [sp, #254]	@ movhi
3624:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.DacData6Bit = 32;                    /* middle scale value */
 11200              		.loc 1 3624 3 is_stmt 1 view .LVU3365
 11201              		.loc 1 3624 32 is_stmt 0 view .LVU3366
 11202 027c 2022     		movs	r2, #32
 11203 027e ADF80021 		strh	r2, [sp, #256]	@ movhi
3625:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.DataRst =bFALSE;                    	/* Do not keep DATA registers at reset stat
 11204              		.loc 1 3625 3 is_stmt 1 view .LVU3367
 11205              		.loc 1 3625 28 is_stmt 0 view .LVU3368
 11206 0282 8DF8FC80 		strb	r8, [sp, #252]
3626:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.LpDacSW = LPDACSW_VBIAS2LPPA|LPDACSW_VZERO2HSTIA;
 11207              		.loc 1 3626 3 is_stmt 1 view .LVU3369
 11208              		.loc 1 3626 28 is_stmt 0 view .LVU3370
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 302


 11209 0286 1122     		movs	r2, #17
 11210 0288 3D92     		str	r2, [sp, #244]
3627:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.LpDacRef = LPDACREF_2P5;            	/* Select internal 2.5V reference */
 11211              		.loc 1 3627 3 is_stmt 1 view .LVU3371
 11212              		.loc 1 3627 29 is_stmt 0 view .LVU3372
 11213 028a CDF8F880 		str	r8, [sp, #248]
3628:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.LpDacSrc = LPDACSRC_WG;             	/* The LPDAC data comes from WG not MMR in 
 11214              		.loc 1 3628 3 is_stmt 1 view .LVU3373
 11215              		.loc 1 3628 29 is_stmt 0 view .LVU3374
 11216 028e 3A95     		str	r5, [sp, #232]
3629:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.LpDacVbiasMux = LPDACVBIAS_6BIT;    	/* Connect Vbias signal to 6Bit LPDAC outpu
 11217              		.loc 1 3629 3 is_stmt 1 view .LVU3375
 11218              		.loc 1 3629 34 is_stmt 0 view .LVU3376
 11219 0290 3C95     		str	r5, [sp, #240]
3630:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.LpDacVzeroMux = LPDACVZERO_12BIT;   	/* Connect Vzero signal to 12bit LPDAC outp
 11220              		.loc 1 3630 3 is_stmt 1 view .LVU3377
 11221              		.loc 1 3630 34 is_stmt 0 view .LVU3378
 11222 0292 3B95     		str	r5, [sp, #236]
3631:ad5940lib/ad5940.c ****   lp_loop.LpDacCfg.PowerEn = bTRUE;                    	/* Power up LPDAC */
 11223              		.loc 1 3631 3 is_stmt 1 view .LVU3379
 11224              		.loc 1 3631 28 is_stmt 0 view .LVU3380
 11225 0294 8DF8FD50 		strb	r5, [sp, #253]
3632:ad5940lib/ad5940.c **** 
3633:ad5940lib/ad5940.c ****   lp_loop.LpAmpCfg.LpAmpSel = pCalCfg->LpAmpSel;
 11226              		.loc 1 3633 3 is_stmt 1 view .LVU3381
 11227              		.loc 1 3633 29 is_stmt 0 view .LVU3382
 11228 0298 4193     		str	r3, [sp, #260]
3634:ad5940lib/ad5940.c ****   lp_loop.LpAmpCfg.LpAmpPwrMod = pCalCfg->LpAmpPwrMod;  /* Set low power amplifiers to normal power
 11229              		.loc 1 3634 3 is_stmt 1 view .LVU3383
 11230              		.loc 1 3634 41 is_stmt 0 view .LVU3384
 11231 029a E369     		ldr	r3, [r4, #28]
 11232              		.loc 1 3634 32 view .LVU3385
 11233 029c 4593     		str	r3, [sp, #276]
3635:ad5940lib/ad5940.c ****   lp_loop.LpAmpCfg.LpPaPwrEn = bTRUE;                  	/* Enable LP PA(potential-stat amplifier) p
 11234              		.loc 1 3635 3 is_stmt 1 view .LVU3386
 11235              		.loc 1 3635 30 is_stmt 0 view .LVU3387
 11236 029e 8DF81C51 		strb	r5, [sp, #284]
3636:ad5940lib/ad5940.c ****   lp_loop.LpAmpCfg.LpTiaPwrEn = bTRUE;                	/* Enable LPTIA*/
 11237              		.loc 1 3636 3 is_stmt 1 view .LVU3388
 11238              		.loc 1 3636 31 is_stmt 0 view .LVU3389
 11239 02a2 8DF81D51 		strb	r5, [sp, #285]
3637:ad5940lib/ad5940.c ****   lp_loop.LpAmpCfg.LpTiaRload = LPTIARLOAD_100R;
 11240              		.loc 1 3637 3 is_stmt 1 view .LVU3390
 11241              		.loc 1 3637 31 is_stmt 0 view .LVU3391
 11242 02a6 0423     		movs	r3, #4
 11243 02a8 4393     		str	r3, [sp, #268]
3638:ad5940lib/ad5940.c ****   lp_loop.LpAmpCfg.LpTiaRtia = pCalCfg->LpTiaRtia;
 11244              		.loc 1 3638 3 is_stmt 1 view .LVU3392
 11245              		.loc 1 3638 39 is_stmt 0 view .LVU3393
 11246 02aa A369     		ldr	r3, [r4, #24]
 11247              		.loc 1 3638 30 view .LVU3394
 11248 02ac 4493     		str	r3, [sp, #272]
3639:ad5940lib/ad5940.c ****   lp_loop.LpAmpCfg.LpTiaRf = LPTIARF_OPEN;
 11249              		.loc 1 3639 3 is_stmt 1 view .LVU3395
 11250              		.loc 1 3639 28 is_stmt 0 view .LVU3396
 11251 02ae CDF80881 		str	r8, [sp, #264]
3640:ad5940lib/ad5940.c ****   lp_loop.LpAmpCfg.LpTiaSW = LPTIASW(6)|LPTIASW(8)|(pCalCfg->bWithCtia==bTRUE?LPTIASW(5)/*|LPTIASW(
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 303


 11252              		.loc 1 3640 3 is_stmt 1 view .LVU3397
 11253              		.loc 1 3640 60 is_stmt 0 view .LVU3398
 11254 02b2 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 11255              		.loc 1 3640 51 view .LVU3399
 11256 02b4 AB42     		cmp	r3, r5
 11257 02b6 00F0FF80 		beq	.L754
 11258 02ba 4FF4A073 		mov	r3, #320
 11259              	.L708:
 11260              		.loc 1 3640 28 discriminator 4 view .LVU3400
 11261 02be 4693     		str	r3, [sp, #280]
3641:ad5940lib/ad5940.c ****   AD5940_LPLoopCfgS(&lp_loop);
 11262              		.loc 1 3641 3 is_stmt 1 discriminator 4 view .LVU3401
 11263 02c0 39A8     		add	r0, sp, #228
 11264 02c2 FFF7FEFF 		bl	AD5940_LPLoopCfgS
 11265              	.LVL1154:
3642:ad5940lib/ad5940.c ****   /* Configure HS Loop */
3643:ad5940lib/ad5940.c ****   AD5940_StructInit(&hs_loop, sizeof(hs_loop));
 11266              		.loc 1 3643 3 discriminator 4 view .LVU3402
 11267 02c6 7021     		movs	r1, #112
 11268 02c8 48A8     		add	r0, sp, #288
 11269              	.LVL1155:
 11270              		.loc 1 3643 3 is_stmt 0 discriminator 4 view .LVU3403
 11271 02ca FFF7FEFF 		bl	AD5940_StructInit
 11272              	.LVL1156:
3644:ad5940lib/ad5940.c ****   /* Take care of HSTIA, we need to disconnect internal RTIA because it connects to Tswitch directl
3645:ad5940lib/ad5940.c **** 	hs_loop.HsTiaCfg.DiodeClose = bFALSE;
 11273              		.loc 1 3645 2 is_stmt 1 discriminator 4 view .LVU3404
 11274              		.loc 1 3645 30 is_stmt 0 discriminator 4 view .LVU3405
 11275 02ce 0023     		movs	r3, #0
 11276 02d0 8DF87C31 		strb	r3, [sp, #380]
3646:ad5940lib/ad5940.c ****   hs_loop.HsTiaCfg.HstiaBias = (pCalCfg->LpAmpSel  == LPAMP0)?HSTIABIAS_VZERO0:HSTIABIAS_VZERO1;
 11277              		.loc 1 3646 3 is_stmt 1 discriminator 4 view .LVU3406
 11278              		.loc 1 3646 40 is_stmt 0 discriminator 4 view .LVU3407
 11279 02d4 2369     		ldr	r3, [r4, #16]
 11280              		.loc 1 3646 79 discriminator 4 view .LVU3408
 11281 02d6 002B     		cmp	r3, #0
 11282 02d8 40F0F180 		bne	.L746
 11283              		.loc 1 3646 79 view .LVU3409
 11284 02dc 0123     		movs	r3, #1
 11285              	.L709:
 11286              		.loc 1 3646 30 discriminator 4 view .LVU3410
 11287 02de 5C93     		str	r3, [sp, #368]
3647:ad5940lib/ad5940.c ****   hs_loop.HsTiaCfg.HstiaCtia = 31;
 11288              		.loc 1 3647 3 is_stmt 1 discriminator 4 view .LVU3411
 11289              		.loc 1 3647 30 is_stmt 0 discriminator 4 view .LVU3412
 11290 02e0 1F23     		movs	r3, #31
 11291 02e2 5E93     		str	r3, [sp, #376]
3648:ad5940lib/ad5940.c ****   hs_loop.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
 11292              		.loc 1 3648 3 is_stmt 1 discriminator 4 view .LVU3413
 11293              		.loc 1 3648 33 is_stmt 0 discriminator 4 view .LVU3414
 11294 02e4 0522     		movs	r2, #5
 11295 02e6 6192     		str	r2, [sp, #388]
3649:ad5940lib/ad5940.c ****   hs_loop.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
 11296              		.loc 1 3649 3 is_stmt 1 discriminator 4 view .LVU3415
 11297              		.loc 1 3649 32 is_stmt 0 discriminator 4 view .LVU3416
 11298 02e8 0B23     		movs	r3, #11
 11299 02ea 6093     		str	r3, [sp, #384]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 304


3650:ad5940lib/ad5940.c ****   hs_loop.HsTiaCfg.HstiaDe1Rload = HSTIADERLOAD_OPEN;
 11300              		.loc 1 3650 3 is_stmt 1 discriminator 4 view .LVU3417
 11301              		.loc 1 3650 34 is_stmt 0 discriminator 4 view .LVU3418
 11302 02ec 6392     		str	r2, [sp, #396]
3651:ad5940lib/ad5940.c ****   hs_loop.HsTiaCfg.HstiaDe1Rtia = HSTIADERTIA_OPEN;
 11303              		.loc 1 3651 3 is_stmt 1 discriminator 4 view .LVU3419
 11304              		.loc 1 3651 33 is_stmt 0 discriminator 4 view .LVU3420
 11305 02ee 6293     		str	r3, [sp, #392]
3652:ad5940lib/ad5940.c ****   hs_loop.HsTiaCfg.HstiaRtiaSel = HSTIARTIA_200;
 11306              		.loc 1 3652 3 is_stmt 1 discriminator 4 view .LVU3421
 11307              		.loc 1 3652 33 is_stmt 0 discriminator 4 view .LVU3422
 11308 02f0 0023     		movs	r3, #0
 11309 02f2 5D93     		str	r3, [sp, #372]
3653:ad5940lib/ad5940.c ****   /* Configure HSDAC */
3654:ad5940lib/ad5940.c **** 	hs_loop.HsDacCfg.ExcitBufGain = 0;
 11310              		.loc 1 3654 2 is_stmt 1 discriminator 4 view .LVU3423
 11311              		.loc 1 3654 32 is_stmt 0 discriminator 4 view .LVU3424
 11312 02f4 4C93     		str	r3, [sp, #304]
3655:ad5940lib/ad5940.c ****   hs_loop.HsDacCfg.HsDacGain = 0;  					/* Don't care */
 11313              		.loc 1 3655 3 is_stmt 1 discriminator 4 view .LVU3425
 11314              		.loc 1 3655 30 is_stmt 0 discriminator 4 view .LVU3426
 11315 02f6 4D93     		str	r3, [sp, #308]
3656:ad5940lib/ad5940.c ****   hs_loop.HsDacCfg.HsDacUpdateRate = 255;  	/* Lowest for LPDAC */
 11316              		.loc 1 3656 3 is_stmt 1 discriminator 4 view .LVU3427
 11317              		.loc 1 3656 36 is_stmt 0 discriminator 4 view .LVU3428
 11318 02f8 FF23     		movs	r3, #255
 11319 02fa 4E93     		str	r3, [sp, #312]
3657:ad5940lib/ad5940.c **** 
3658:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Dswitch = SWD_RCAL0|((pCalCfg->LpAmpSel  == LPAMP0)?SWD_SE0:SWD_SE1);
 11320              		.loc 1 3658 3 is_stmt 1 discriminator 4 view .LVU3429
 11321              		.loc 1 3658 49 is_stmt 0 discriminator 4 view .LVU3430
 11322 02fc 2369     		ldr	r3, [r4, #16]
 11323              		.loc 1 3658 39 discriminator 4 view .LVU3431
 11324 02fe 002B     		cmp	r3, #0
 11325 0300 40F0DF80 		bne	.L747
 11326              		.loc 1 3658 39 view .LVU3432
 11327 0304 4123     		movs	r3, #65
 11328              	.L710:
 11329              		.loc 1 3658 28 discriminator 4 view .LVU3433
 11330 0306 4893     		str	r3, [sp, #288]
3659:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Pswitch = SWP_RCAL0;
 11331              		.loc 1 3659 3 is_stmt 1 discriminator 4 view .LVU3434
 11332              		.loc 1 3659 28 is_stmt 0 discriminator 4 view .LVU3435
 11333 0308 0123     		movs	r3, #1
 11334 030a 4993     		str	r3, [sp, #292]
3660:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Nswitch = SWN_RCAL1;
 11335              		.loc 1 3660 3 is_stmt 1 discriminator 4 view .LVU3436
 11336              		.loc 1 3660 28 is_stmt 0 discriminator 4 view .LVU3437
 11337 030c 4FF40073 		mov	r3, #512
 11338 0310 4A93     		str	r3, [sp, #296]
3661:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Tswitch = SWT_TRTIA|SWT_RCAL1;
 11339              		.loc 1 3661 3 is_stmt 1 discriminator 4 view .LVU3438
 11340              		.loc 1 3661 28 is_stmt 0 discriminator 4 view .LVU3439
 11341 0312 4FF41063 		mov	r3, #2304
 11342 0316 4B93     		str	r3, [sp, #300]
3662:ad5940lib/ad5940.c ****   if(bDCMode)
 11343              		.loc 1 3662 3 is_stmt 1 discriminator 4 view .LVU3440
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 305


 11344              		.loc 1 3662 5 is_stmt 0 discriminator 4 view .LVU3441
 11345 0318 009B     		ldr	r3, [sp]
 11346 031a 002B     		cmp	r3, #0
 11347 031c 00F0E280 		beq	.L711
 11348              	.LBB26:
3663:ad5940lib/ad5940.c ****   {
3664:ad5940lib/ad5940.c ****     int32_t time_out = -1;    /* Always wait. */
 11349              		.loc 1 3664 5 is_stmt 1 view .LVU3442
 11350              		.loc 1 3664 13 is_stmt 0 view .LVU3443
 11351 0320 4FF0FF33 		mov	r3, #-1
 11352 0324 0293     		str	r3, [sp, #8]
3665:ad5940lib/ad5940.c ****     int32_t offset_rcal, offset_rtia;  
 11353              		.loc 1 3665 5 is_stmt 1 view .LVU3444
3666:ad5940lib/ad5940.c ****     /* Configure WG */
3667:ad5940lib/ad5940.c ****     hs_loop.WgCfg.WgType = WGTYPE_MMR;
 11354              		.loc 1 3667 5 view .LVU3445
 11355              		.loc 1 3667 26 is_stmt 0 view .LVU3446
 11356 0326 0023     		movs	r3, #0
 11357 0328 4F93     		str	r3, [sp, #316]
3668:ad5940lib/ad5940.c ****     hs_loop.WgCfg.WgCode = WgAmpWord;       /* Amplitude word is exactly the maximum DC voltage we 
 11358              		.loc 1 3668 5 is_stmt 1 view .LVU3447
 11359              		.loc 1 3668 26 is_stmt 0 view .LVU3448
 11360 032a CDF86C91 		str	r9, [sp, #364]
3669:ad5940lib/ad5940.c ****     hs_loop.WgCfg.GainCalEn = bFALSE;		    /* We don't have calibration value for LPDAC, so we don'
 11361              		.loc 1 3669 5 is_stmt 1 view .LVU3449
 11362              		.loc 1 3669 29 is_stmt 0 view .LVU3450
 11363 032e 8DF84031 		strb	r3, [sp, #320]
3670:ad5940lib/ad5940.c ****     hs_loop.WgCfg.OffsetCalEn = bFALSE;
 11364              		.loc 1 3670 5 is_stmt 1 view .LVU3451
 11365              		.loc 1 3670 31 is_stmt 0 view .LVU3452
 11366 0332 8DF84131 		strb	r3, [sp, #321]
3671:ad5940lib/ad5940.c ****     AD5940_HSLoopCfgS(&hs_loop);
 11367              		.loc 1 3671 5 is_stmt 1 view .LVU3453
 11368 0336 48A8     		add	r0, sp, #288
 11369              	.LVL1157:
 11370              		.loc 1 3671 5 is_stmt 0 view .LVU3454
 11371 0338 FFF7FEFF 		bl	AD5940_HSLoopCfgS
 11372              	.LVL1158:
3672:ad5940lib/ad5940.c ****     AD5940_WGDACCodeS(WgAmpWord + 0x800);
 11373              		.loc 1 3672 5 is_stmt 1 view .LVU3455
 11374 033c 09F50060 		add	r0, r9, #2048
 11375 0340 FFF7FEFF 		bl	AD5940_WGDACCodeS
 11376              	.LVL1159:
3673:ad5940lib/ad5940.c **** 		AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR|AFECTRL_WG|AFECTRL_ADCPWR, bTRUE); /* Apply vol
 11377              		.loc 1 3673 3 view .LVU3456
 11378 0344 0121     		movs	r1, #1
 11379 0346 4FF49940 		mov	r0, #19584
 11380 034a FFF7FEFF 		bl	AD5940_AFECtrlS
 11381              	.LVL1160:
3674:ad5940lib/ad5940.c ****     /* Do offset measurement */
3675:ad5940lib/ad5940.c ****     pSWCfg->Dswitch = SWD_RCAL0;//|SWD_SE0;   /* Disconnect SE0 for now to measure the offset volta
 11382              		.loc 1 3675 5 view .LVU3457
 11383              		.loc 1 3675 21 is_stmt 0 view .LVU3458
 11384 034e 0123     		movs	r3, #1
 11385 0350 4893     		str	r3, [sp, #288]
3676:ad5940lib/ad5940.c ****     pSWCfg->Pswitch = SWP_RCAL0;
 11386              		.loc 1 3676 5 is_stmt 1 view .LVU3459
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 306


 11387              		.loc 1 3676 21 is_stmt 0 view .LVU3460
 11388 0352 4993     		str	r3, [sp, #292]
3677:ad5940lib/ad5940.c ****     pSWCfg->Nswitch = SWN_RCAL1;
 11389              		.loc 1 3677 5 is_stmt 1 view .LVU3461
 11390              		.loc 1 3677 21 is_stmt 0 view .LVU3462
 11391 0354 4FF40073 		mov	r3, #512
 11392 0358 4A93     		str	r3, [sp, #296]
3678:ad5940lib/ad5940.c ****     pSWCfg->Tswitch = SWT_TRTIA|SWT_RCAL1;
 11393              		.loc 1 3678 5 is_stmt 1 view .LVU3463
 11394              		.loc 1 3678 21 is_stmt 0 view .LVU3464
 11395 035a 4FF41063 		mov	r3, #2304
 11396 035e 4B93     		str	r3, [sp, #300]
3679:ad5940lib/ad5940.c ****     AD5940_SWMatrixCfgS(pSWCfg);    
 11397              		.loc 1 3679 5 is_stmt 1 view .LVU3465
 11398 0360 48A8     		add	r0, sp, #288
 11399              	.LVL1161:
 11400              		.loc 1 3679 5 is_stmt 0 view .LVU3466
 11401 0362 FFF7FEFF 		bl	AD5940_SWMatrixCfgS
 11402              	.LVL1162:
3680:ad5940lib/ad5940.c ****     AD5940_Delay10us(1000);   /* Wait some time here. */
 11403              		.loc 1 3680 5 is_stmt 1 view .LVU3467
 11404 0366 4FF47A70 		mov	r0, #1000
 11405 036a FFF7FEFF 		bl	AD5940_Delay10us
 11406              	.LVL1163:
3681:ad5940lib/ad5940.c ****     /* Measure RCAL channel voltage offset */
3682:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCMuxN = ADCMUXN_N_NODE;
 11407              		.loc 1 3682 5 view .LVU3468
 11408              		.loc 1 3682 26 is_stmt 0 view .LVU3469
 11409 036e 1423     		movs	r3, #20
 11410 0370 2A93     		str	r3, [sp, #168]
3683:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCMuxP = ADCMUXP_P_NODE;
 11411              		.loc 1 3683 5 is_stmt 1 view .LVU3470
 11412              		.loc 1 3683 26 is_stmt 0 view .LVU3471
 11413 0372 2423     		movs	r3, #36
 11414 0374 2993     		str	r3, [sp, #164]
3684:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCPga = ADCPgaGainRcal;
 11415              		.loc 1 3684 5 is_stmt 1 view .LVU3472
 11416              		.loc 1 3684 25 is_stmt 0 view .LVU3473
 11417 0376 CDF8ACB0 		str	fp, [sp, #172]
3685:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11418              		.loc 1 3685 5 is_stmt 1 view .LVU3474
 11419 037a 29A8     		add	r0, sp, #164
 11420              	.LVL1164:
 11421              		.loc 1 3685 5 is_stmt 0 view .LVU3475
 11422 037c FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 11423              	.LVL1165:
3686:ad5940lib/ad5940.c ****     AD5940_Delay10us(50);   /* Wait some time here. */
 11424              		.loc 1 3686 5 is_stmt 1 view .LVU3476
 11425 0380 3220     		movs	r0, #50
 11426 0382 FFF7FEFF 		bl	AD5940_Delay10us
 11427              	.LVL1166:
3687:ad5940lib/ad5940.c ****     offset_rcal = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and th
 11428              		.loc 1 3687 5 view .LVU3477
 11429              		.loc 1 3687 19 is_stmt 0 view .LVU3478
 11430 0386 02A8     		add	r0, sp, #8
 11431 0388 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 11432              	.LVL1167:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 307


 11433 038c 8046     		mov	r8, r0
 11434              	.LVL1168:
3688:ad5940lib/ad5940.c ****     /* Measure RTIA channel voltage offset */
3689:ad5940lib/ad5940.c ****     if(pCalCfg->LpAmpSel == LPAMP0)
 11435              		.loc 1 3689 5 is_stmt 1 view .LVU3479
 11436              		.loc 1 3689 15 is_stmt 0 view .LVU3480
 11437 038e 2369     		ldr	r3, [r4, #16]
 11438              		.loc 1 3689 7 view .LVU3481
 11439 0390 002B     		cmp	r3, #0
 11440 0392 40F09880 		bne	.L712
3690:ad5940lib/ad5940.c ****     {
3691:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA0_N;
 11441              		.loc 1 3691 7 is_stmt 1 view .LVU3482
 11442              		.loc 1 3691 28 is_stmt 0 view .LVU3483
 11443 0396 0223     		movs	r3, #2
 11444 0398 2A93     		str	r3, [sp, #168]
3692:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA0_P;
 11445              		.loc 1 3692 7 is_stmt 1 view .LVU3484
 11446              		.loc 1 3692 28 is_stmt 0 view .LVU3485
 11447 039a 2123     		movs	r3, #33
 11448 039c 2993     		str	r3, [sp, #164]
 11449              	.L713:
3693:ad5940lib/ad5940.c ****     }else
3694:ad5940lib/ad5940.c ****     {
3695:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA1_N;
3696:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
3697:ad5940lib/ad5940.c ****     }
3698:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCPga = ADCPgaGainRtia;    
 11450              		.loc 1 3698 5 is_stmt 1 view .LVU3486
 11451              		.loc 1 3698 25 is_stmt 0 view .LVU3487
 11452 039e CDF8ACA0 		str	r10, [sp, #172]
3699:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11453              		.loc 1 3699 5 is_stmt 1 view .LVU3488
 11454 03a2 29A8     		add	r0, sp, #164
 11455              	.LVL1169:
 11456              		.loc 1 3699 5 is_stmt 0 view .LVU3489
 11457 03a4 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 11458              	.LVL1170:
3700:ad5940lib/ad5940.c ****     AD5940_Delay10us(50);   /* Wait some time here. */
 11459              		.loc 1 3700 5 is_stmt 1 view .LVU3490
 11460 03a8 3220     		movs	r0, #50
 11461 03aa FFF7FEFF 		bl	AD5940_Delay10us
 11462              	.LVL1171:
3701:ad5940lib/ad5940.c ****     offset_rtia = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and th
 11463              		.loc 1 3701 5 view .LVU3491
 11464              		.loc 1 3701 19 is_stmt 0 view .LVU3492
 11465 03ae 02A8     		add	r0, sp, #8
 11466 03b0 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 11467              	.LVL1172:
 11468 03b4 0546     		mov	r5, r0
 11469              	.LVL1173:
3702:ad5940lib/ad5940.c ****     /* Connect LPTIA loop, let current flow to RTIA. */
3703:ad5940lib/ad5940.c ****     pSWCfg->Dswitch = SWD_RCAL0|((pCalCfg->LpAmpSel == LPAMP0)?SWD_SE0:SWD_SE1);
 11470              		.loc 1 3703 5 is_stmt 1 view .LVU3493
 11471              		.loc 1 3703 42 is_stmt 0 view .LVU3494
 11472 03b6 2369     		ldr	r3, [r4, #16]
 11473              		.loc 1 3703 32 view .LVU3495
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 308


 11474 03b8 002B     		cmp	r3, #0
 11475 03ba 40F08980 		bne	.L748
 11476 03be 4123     		movs	r3, #65
 11477              	.L714:
 11478              		.loc 1 3703 21 discriminator 4 view .LVU3496
 11479 03c0 4893     		str	r3, [sp, #288]
3704:ad5940lib/ad5940.c ****     pSWCfg->Pswitch = SWP_RCAL0;
 11480              		.loc 1 3704 5 is_stmt 1 discriminator 4 view .LVU3497
 11481              		.loc 1 3704 21 is_stmt 0 discriminator 4 view .LVU3498
 11482 03c2 0123     		movs	r3, #1
 11483 03c4 4993     		str	r3, [sp, #292]
3705:ad5940lib/ad5940.c ****     pSWCfg->Nswitch = SWN_RCAL1;
 11484              		.loc 1 3705 5 is_stmt 1 discriminator 4 view .LVU3499
 11485              		.loc 1 3705 21 is_stmt 0 discriminator 4 view .LVU3500
 11486 03c6 4FF40073 		mov	r3, #512
 11487 03ca 4A93     		str	r3, [sp, #296]
3706:ad5940lib/ad5940.c ****     pSWCfg->Tswitch = SWT_TRTIA|SWT_RCAL1;
 11488              		.loc 1 3706 5 is_stmt 1 discriminator 4 view .LVU3501
 11489              		.loc 1 3706 21 is_stmt 0 discriminator 4 view .LVU3502
 11490 03cc 4FF41063 		mov	r3, #2304
 11491 03d0 4B93     		str	r3, [sp, #300]
3707:ad5940lib/ad5940.c ****     AD5940_SWMatrixCfgS(pSWCfg);
 11492              		.loc 1 3707 5 is_stmt 1 discriminator 4 view .LVU3503
 11493 03d2 48A8     		add	r0, sp, #288
 11494              	.LVL1174:
 11495              		.loc 1 3707 5 is_stmt 0 discriminator 4 view .LVU3504
 11496 03d4 FFF7FEFF 		bl	AD5940_SWMatrixCfgS
 11497              	.LVL1175:
3708:ad5940lib/ad5940.c ****     AD5940_Delay10us(1000);   /* Wait some time here. */
 11498              		.loc 1 3708 5 is_stmt 1 discriminator 4 view .LVU3505
 11499 03d8 4FF47A70 		mov	r0, #1000
 11500 03dc FFF7FEFF 		bl	AD5940_Delay10us
 11501              	.LVL1176:
3709:ad5940lib/ad5940.c **** 		/* Measure RCAL */
3710:ad5940lib/ad5940.c ****     pADCBaseCfg = &dsp_cfg.ADCBaseCfg;
 11502              		.loc 1 3710 5 discriminator 4 view .LVU3506
3711:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCMuxN = ADCMUXN_N_NODE;
 11503              		.loc 1 3711 5 discriminator 4 view .LVU3507
 11504              		.loc 1 3711 26 is_stmt 0 discriminator 4 view .LVU3508
 11505 03e0 1423     		movs	r3, #20
 11506 03e2 2A93     		str	r3, [sp, #168]
3712:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCMuxP = ADCMUXP_P_NODE;
 11507              		.loc 1 3712 5 is_stmt 1 discriminator 4 view .LVU3509
 11508              		.loc 1 3712 26 is_stmt 0 discriminator 4 view .LVU3510
 11509 03e4 2423     		movs	r3, #36
 11510 03e6 2993     		str	r3, [sp, #164]
3713:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCPga = ADCPgaGainRcal;
 11511              		.loc 1 3713 5 is_stmt 1 discriminator 4 view .LVU3511
 11512              		.loc 1 3713 25 is_stmt 0 discriminator 4 view .LVU3512
 11513 03e8 CDF8ACB0 		str	fp, [sp, #172]
3714:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11514              		.loc 1 3714 5 is_stmt 1 discriminator 4 view .LVU3513
 11515 03ec 29A8     		add	r0, sp, #164
 11516              	.LVL1177:
 11517              		.loc 1 3714 5 is_stmt 0 discriminator 4 view .LVU3514
 11518 03ee FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 11519              	.LVL1178:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 309


3715:ad5940lib/ad5940.c ****     AD5940_Delay10us(50);   /* Wait some time here. */
 11520              		.loc 1 3715 5 is_stmt 1 discriminator 4 view .LVU3515
 11521 03f2 3220     		movs	r0, #50
 11522 03f4 FFF7FEFF 		bl	AD5940_Delay10us
 11523              	.LVL1179:
3716:ad5940lib/ad5940.c ****     DftRcal.Real = (int32_t)__AD5940_TakeMeasurement(&time_out)- offset_rcal;
 11524              		.loc 1 3716 5 discriminator 4 view .LVU3516
 11525              		.loc 1 3716 29 is_stmt 0 discriminator 4 view .LVU3517
 11526 03f8 02A8     		add	r0, sp, #8
 11527 03fa FFF7FEFF 		bl	__AD5940_TakeMeasurement
 11528              	.LVL1180:
 11529              		.loc 1 3716 64 discriminator 4 view .LVU3518
 11530 03fe A0EB0800 		sub	r0, r0, r8
 11531              		.loc 1 3716 18 discriminator 4 view .LVU3519
 11532 0402 0790     		str	r0, [sp, #28]
3717:ad5940lib/ad5940.c ****     DftRcal.Image = 0;
 11533              		.loc 1 3717 5 is_stmt 1 discriminator 4 view .LVU3520
 11534              		.loc 1 3717 19 is_stmt 0 discriminator 4 view .LVU3521
 11535 0404 0023     		movs	r3, #0
 11536 0406 0893     		str	r3, [sp, #32]
3718:ad5940lib/ad5940.c **** 		/* Measure RTIA */    
3719:ad5940lib/ad5940.c ****     if(pCalCfg->LpAmpSel == LPAMP0)
 11537              		.loc 1 3719 5 is_stmt 1 discriminator 4 view .LVU3522
 11538              		.loc 1 3719 15 is_stmt 0 discriminator 4 view .LVU3523
 11539 0408 2369     		ldr	r3, [r4, #16]
 11540              		.loc 1 3719 7 discriminator 4 view .LVU3524
 11541 040a 002B     		cmp	r3, #0
 11542 040c 62D1     		bne	.L715
3720:ad5940lib/ad5940.c ****     {
3721:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA0_N;
 11543              		.loc 1 3721 7 is_stmt 1 view .LVU3525
 11544              		.loc 1 3721 28 is_stmt 0 view .LVU3526
 11545 040e 0223     		movs	r3, #2
 11546 0410 2A93     		str	r3, [sp, #168]
3722:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA0_P;
 11547              		.loc 1 3722 7 is_stmt 1 view .LVU3527
 11548              		.loc 1 3722 28 is_stmt 0 view .LVU3528
 11549 0412 2123     		movs	r3, #33
 11550 0414 2993     		str	r3, [sp, #164]
 11551              	.L716:
3723:ad5940lib/ad5940.c ****     }else
3724:ad5940lib/ad5940.c ****     {
3725:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA1_N;
3726:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
3727:ad5940lib/ad5940.c ****     }
3728:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCPga = ADCPgaGainRtia;
 11552              		.loc 1 3728 5 is_stmt 1 view .LVU3529
 11553              		.loc 1 3728 25 is_stmt 0 view .LVU3530
 11554 0416 CDF8ACA0 		str	r10, [sp, #172]
3729:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11555              		.loc 1 3729 5 is_stmt 1 view .LVU3531
 11556 041a 29A8     		add	r0, sp, #164
 11557              	.LVL1181:
 11558              		.loc 1 3729 5 is_stmt 0 view .LVU3532
 11559 041c FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 11560              	.LVL1182:
3730:ad5940lib/ad5940.c ****     AD5940_Delay10us(50);   /* Wait some time here. */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 310


 11561              		.loc 1 3730 5 is_stmt 1 view .LVU3533
 11562 0420 3220     		movs	r0, #50
 11563 0422 FFF7FEFF 		bl	AD5940_Delay10us
 11564              	.LVL1183:
3731:ad5940lib/ad5940.c ****     DftRtia.Real = (int32_t)__AD5940_TakeMeasurement(&time_out)- offset_rtia;
 11565              		.loc 1 3731 5 view .LVU3534
 11566              		.loc 1 3731 29 is_stmt 0 view .LVU3535
 11567 0426 02A8     		add	r0, sp, #8
 11568 0428 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 11569              	.LVL1184:
 11570              		.loc 1 3731 64 view .LVU3536
 11571 042c 401B     		subs	r0, r0, r5
 11572              		.loc 1 3731 18 view .LVU3537
 11573 042e 0590     		str	r0, [sp, #20]
3732:ad5940lib/ad5940.c ****     DftRtia.Image = 0;
 11574              		.loc 1 3732 5 is_stmt 1 view .LVU3538
 11575              		.loc 1 3732 19 is_stmt 0 view .LVU3539
 11576 0430 0023     		movs	r3, #0
 11577 0432 0693     		str	r3, [sp, #24]
 11578              	.LVL1185:
 11579              	.L717:
 11580              		.loc 1 3732 19 view .LVU3540
 11581              	.LBE26:
3733:ad5940lib/ad5940.c ****   }
3734:ad5940lib/ad5940.c ****   else
3735:ad5940lib/ad5940.c ****   {
3736:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinAmplitudeWord = WgAmpWord;
3737:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinFreqWord = AD5940_WGFreqWordCal(pCalCfg->fFreq, pCalCfg->SysClkFreq);
3738:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinOffsetWord = 0;
3739:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinPhaseWord = 0;
3740:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.WgCode = 0;
3741:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.WgType = WGTYPE_SIN;
3742:ad5940lib/ad5940.c ****     hs_loop.WgCfg.GainCalEn = bFALSE;      /* disable it */
3743:ad5940lib/ad5940.c ****     hs_loop.WgCfg.OffsetCalEn = bFALSE;
3744:ad5940lib/ad5940.c ****     AD5940_HSLoopCfgS(&hs_loop);
3745:ad5940lib/ad5940.c ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
3746:ad5940lib/ad5940.c **** 
3747:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR, bTRUE);
3748:ad5940lib/ad5940.c ****     AD5940_Delay10us(100);      /* Wait for loop stable. */
3749:ad5940lib/ad5940.c ****     pADCBaseCfg = &dsp_cfg.ADCBaseCfg;
3750:ad5940lib/ad5940.c **** 		/* DFT on RCAL */
3751:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCMuxN = ADCMUXN_N_NODE;
3752:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCMuxP = ADCMUXP_P_NODE;
3753:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCPga = ADCPgaGainRcal;
3754:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
3755:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);
3756:ad5940lib/ad5940.c ****     AD5940_Delay10us(25);
3757:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);
3758:ad5940lib/ad5940.c ****     /* Wait until DFT ready */
3759:ad5940lib/ad5940.c ****     while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_DFTRDY) == bFALSE);  
3760:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
3761:ad5940lib/ad5940.c ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
3762:ad5940lib/ad5940.c ****     DftRcal.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
3763:ad5940lib/ad5940.c ****     DftRcal.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
3764:ad5940lib/ad5940.c **** 		/* DFT on RTIA */  
3765:ad5940lib/ad5940.c ****     if(pCalCfg->LpAmpSel == LPAMP0)
3766:ad5940lib/ad5940.c ****     {
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 311


3767:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA0_N;
3768:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA0_P;
3769:ad5940lib/ad5940.c ****     }else
3770:ad5940lib/ad5940.c ****     {
3771:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxN = ADCMUXN_LPTIA1_N;
3772:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
3773:ad5940lib/ad5940.c ****     }
3774:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCPga = ADCPgaGainRtia;
3775:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
3776:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);
3777:ad5940lib/ad5940.c ****     AD5940_Delay10us(25);
3778:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);
3779:ad5940lib/ad5940.c ****     /* Wait until DFT ready */
3780:ad5940lib/ad5940.c ****     while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_DFTRDY) == bFALSE);  
3781:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
3782:ad5940lib/ad5940.c ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
3783:ad5940lib/ad5940.c ****     DftRtia.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
3784:ad5940lib/ad5940.c ****     DftRtia.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
3785:ad5940lib/ad5940.c ****     if(DftRcal.Real&(1L<<17))
3786:ad5940lib/ad5940.c ****       DftRcal.Real |= 0xfffc0000;
3787:ad5940lib/ad5940.c ****     if(DftRcal.Image&(1L<<17))
3788:ad5940lib/ad5940.c ****       DftRcal.Image |= 0xfffc0000;
3789:ad5940lib/ad5940.c ****     if(DftRtia.Real&(1L<<17))
3790:ad5940lib/ad5940.c ****       DftRtia.Real |= 0xfffc0000;
3791:ad5940lib/ad5940.c ****     if(DftRtia.Image&(1L<<17))
3792:ad5940lib/ad5940.c ****       DftRtia.Image |= 0xfffc0000;
3793:ad5940lib/ad5940.c ****   }
3794:ad5940lib/ad5940.c ****   /*
3795:ad5940lib/ad5940.c ****       The impedance engine inside of AD594x give us Real part and Imaginary part of DFT. Due to tec
3796:ad5940lib/ad5940.c ****       part in register is the opposite number. So we add a negative sign on the Imaginary part of r
3797:ad5940lib/ad5940.c ****   */
3798:ad5940lib/ad5940.c ****   DftRtia.Image = -DftRtia.Image;
 11582              		.loc 1 3798 3 is_stmt 1 view .LVU3541
 11583              		.loc 1 3798 27 is_stmt 0 view .LVU3542
 11584 0434 069B     		ldr	r3, [sp, #24]
 11585              		.loc 1 3798 19 view .LVU3543
 11586 0436 5B42     		rsbs	r3, r3, #0
 11587              		.loc 1 3798 17 view .LVU3544
 11588 0438 0693     		str	r3, [sp, #24]
3799:ad5940lib/ad5940.c ****   DftRcal.Image = -DftRcal.Image;
 11589              		.loc 1 3799 3 is_stmt 1 view .LVU3545
 11590              		.loc 1 3799 27 is_stmt 0 view .LVU3546
 11591 043a 089B     		ldr	r3, [sp, #32]
 11592              		.loc 1 3799 19 view .LVU3547
 11593 043c 5B42     		rsbs	r3, r3, #0
 11594              		.loc 1 3799 17 view .LVU3548
 11595 043e 0893     		str	r3, [sp, #32]
3800:ad5940lib/ad5940.c **** 
3801:ad5940lib/ad5940.c ****   fImpCar_Type res;
 11596              		.loc 1 3801 3 is_stmt 1 view .LVU3549
3802:ad5940lib/ad5940.c ****   /* RTIA = (DftRtia.Real, DftRtia.Image)/(DftRcal.Real, DftRcal.Image)*fRcal */
3803:ad5940lib/ad5940.c ****   res = AD5940_ComplexDivInt(&DftRtia, &DftRcal);
 11597              		.loc 1 3803 3 view .LVU3550
 11598              		.loc 1 3803 9 is_stmt 0 view .LVU3551
 11599 0440 07A9     		add	r1, sp, #28
 11600 0442 05A8     		add	r0, sp, #20
 11601 0444 FFF7FEFF 		bl	AD5940_ComplexDivInt
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 312


 11602              	.LVL1186:
3804:ad5940lib/ad5940.c ****   res.Real *= pCalCfg->fRcal/GainRatio;
 11603              		.loc 1 3804 3 is_stmt 1 view .LVU3552
 11604              		.loc 1 3804 22 is_stmt 0 view .LVU3553
 11605 0448 94ED017A 		vldr.32	s14, [r4, #4]
 11606              		.loc 1 3804 29 view .LVU3554
 11607 044c C7EE087A 		vdiv.f32	s15, s14, s16
 11608              		.loc 1 3804 12 view .LVU3555
 11609 0450 27EE800A 		vmul.f32	s0, s15, s0
 11610 0454 8DED030A 		vstr.32	s0, [sp, #12]
3805:ad5940lib/ad5940.c ****   res.Image *= pCalCfg->fRcal/GainRatio;
 11611              		.loc 1 3805 3 is_stmt 1 view .LVU3556
 11612              		.loc 1 3805 13 is_stmt 0 view .LVU3557
 11613 0458 60EEA70A 		vmul.f32	s1, s1, s15
 11614 045c CDED040A 		vstr.32	s1, [sp, #16]
3806:ad5940lib/ad5940.c ****   if(pCalCfg->bPolarResult == bFALSE)
 11615              		.loc 1 3806 3 is_stmt 1 view .LVU3558
 11616              		.loc 1 3806 13 is_stmt 0 view .LVU3559
 11617 0460 636B     		ldr	r3, [r4, #52]
 11618              		.loc 1 3806 5 view .LVU3560
 11619 0462 002B     		cmp	r3, #0
 11620 0464 40F0DC80 		bne	.L725
3807:ad5940lib/ad5940.c ****   {
3808:ad5940lib/ad5940.c ****     ((fImpCar_Type*)pResult)->Real = res.Real;
 11621              		.loc 1 3808 5 is_stmt 1 view .LVU3561
 11622              		.loc 1 3808 36 is_stmt 0 view .LVU3562
 11623 0468 86ED000A 		vstr.32	s0, [r6]
3809:ad5940lib/ad5940.c ****     ((fImpCar_Type*)pResult)->Image = res.Image;
 11624              		.loc 1 3809 5 is_stmt 1 view .LVU3563
 11625              		.loc 1 3809 37 is_stmt 0 view .LVU3564
 11626 046c C6ED010A 		vstr.32	s1, [r6, #4]
 11627              	.L726:
3810:ad5940lib/ad5940.c ****   }
3811:ad5940lib/ad5940.c ****   else
3812:ad5940lib/ad5940.c ****   {
3813:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Magnitude = AD5940_ComplexMag(&res);
3814:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&res);
3815:ad5940lib/ad5940.c ****   }
3816:ad5940lib/ad5940.c ****     
3817:ad5940lib/ad5940.c ****   /* Restore INTC1 DFT configure */
3818:ad5940lib/ad5940.c ****   if(INTCCfg&AFEINTSRC_DFTRDY);
 11628              		.loc 1 3818 3 is_stmt 1 view .LVU3565
 11629              		.loc 1 3818 5 is_stmt 0 view .LVU3566
 11630 0470 17F0020F 		tst	r7, #2
 11631 0474 00F0DF80 		beq	.L755
 11632              	.L727:
3819:ad5940lib/ad5940.c ****   else
3820:ad5940lib/ad5940.c ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_DFTRDY, bFALSE);    /* Disable DFT Interrupt */
3821:ad5940lib/ad5940.c ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 11633              		.loc 1 3821 3 is_stmt 1 view .LVU3567
 11634              		.loc 1 3821 5 is_stmt 0 view .LVU3568
 11635 0478 17F0040F 		tst	r7, #4
 11636 047c 00F0E180 		beq	.L756
 11637              	.L728:
3822:ad5940lib/ad5940.c ****   else
3823:ad5940lib/ad5940.c ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bFALSE);  /* Disable SINC2 Interrupt */
3824:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_AFECON, reg_afecon);              /* Restore AFECON register */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 313


 11638              		.loc 1 3824 3 is_stmt 1 view .LVU3569
 11639 0480 0199     		ldr	r1, [sp, #4]
 11640 0482 4FF40050 		mov	r0, #8192
 11641 0486 FFF7FEFF 		bl	AD5940_WriteReg
 11642              	.LVL1187:
3825:ad5940lib/ad5940.c ****   /* Open all switches in switch-matrix */
3826:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Dswitch = SWD_OPEN;
 11643              		.loc 1 3826 3 view .LVU3570
 11644              		.loc 1 3826 28 is_stmt 0 view .LVU3571
 11645 048a 0024     		movs	r4, #0
 11646              	.LVL1188:
 11647              		.loc 1 3826 28 view .LVU3572
 11648 048c 4894     		str	r4, [sp, #288]
3827:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Pswitch = SWP_OPEN;
 11649              		.loc 1 3827 3 is_stmt 1 view .LVU3573
 11650              		.loc 1 3827 28 is_stmt 0 view .LVU3574
 11651 048e 4994     		str	r4, [sp, #292]
3828:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Nswitch = SWN_OPEN;
 11652              		.loc 1 3828 3 is_stmt 1 view .LVU3575
 11653              		.loc 1 3828 28 is_stmt 0 view .LVU3576
 11654 0490 4A94     		str	r4, [sp, #296]
3829:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Tswitch = SWT_OPEN;
 11655              		.loc 1 3829 3 is_stmt 1 view .LVU3577
 11656              		.loc 1 3829 28 is_stmt 0 view .LVU3578
 11657 0492 4B94     		str	r4, [sp, #300]
3830:ad5940lib/ad5940.c ****   AD5940_SWMatrixCfgS(&hs_loop.SWMatCfg);
 11658              		.loc 1 3830 3 is_stmt 1 view .LVU3579
 11659 0494 48A8     		add	r0, sp, #288
 11660              	.LVL1189:
 11661              		.loc 1 3830 3 is_stmt 0 view .LVU3580
 11662 0496 FFF7FEFF 		bl	AD5940_SWMatrixCfgS
 11663              	.LVL1190:
3831:ad5940lib/ad5940.c ****   
3832:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 11664              		.loc 1 3832 3 is_stmt 1 view .LVU3581
 11665              		.loc 1 3832 10 is_stmt 0 view .LVU3582
 11666 049a 2046     		mov	r0, r4
 11667              	.LVL1191:
 11668              	.L699:
3833:ad5940lib/ad5940.c **** }
 11669              		.loc 1 3833 1 view .LVU3583
 11670 049c 65B0     		add	sp, sp, #404
 11671              	.LCFI173:
 11672              		.cfi_remember_state
 11673              		.cfi_def_cfa_offset 44
 11674              		@ sp needed
 11675 049e BDEC028B 		vldm	sp!, {d8}
 11676              	.LCFI174:
 11677              		.cfi_restore 80
 11678              		.cfi_restore 81
 11679              		.cfi_def_cfa_offset 36
 11680 04a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11681              	.LVL1192:
 11682              	.L742:
 11683              	.LCFI175:
 11684              		.cfi_restore_state
 11685              	.LBB27:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 314


3593:ad5940lib/ad5940.c ****     else if(temp >= 2.0f) ADCPgaGainRtia = ADCPGA_2;
 11686              		.loc 1 3593 42 view .LVU3584
 11687 04a6 4FF0030A 		mov	r10, #3
 11688 04aa 95E6     		b	.L706
 11689              	.L743:
3594:ad5940lib/ad5940.c ****     else if(temp >= 1.5f) ADCPgaGainRtia = ADCPGA_1P5;
 11690              		.loc 1 3594 42 view .LVU3585
 11691 04ac 4FF0020A 		mov	r10, #2
 11692 04b0 92E6     		b	.L706
 11693              	.L752:
3596:ad5940lib/ad5940.c ****     GainRatio = ADCPGAGainTable[ADCPgaGainRtia]/ADCPGAGainTable[ADCPgaGainRcal];
 11694              		.loc 1 3596 25 view .LVU3586
 11695 04b2 4FF0000A 		mov	r10, #0
 11696 04b6 8FE6     		b	.L706
 11697              	.LVL1193:
 11698              	.L754:
3596:ad5940lib/ad5940.c ****     GainRatio = ADCPGAGainTable[ADCPgaGainRtia]/ADCPGAGainTable[ADCPgaGainRcal];
 11699              		.loc 1 3596 25 view .LVU3587
 11700              	.LBE27:
3640:ad5940lib/ad5940.c ****   AD5940_LPLoopCfgS(&lp_loop);
 11701              		.loc 1 3640 51 view .LVU3588
 11702 04b8 4FF4B073 		mov	r3, #352
 11703 04bc FFE6     		b	.L708
 11704              	.L746:
3646:ad5940lib/ad5940.c ****   hs_loop.HsTiaCfg.HstiaCtia = 31;
 11705              		.loc 1 3646 79 view .LVU3589
 11706 04be 0223     		movs	r3, #2
 11707 04c0 0DE7     		b	.L709
 11708              	.L747:
3658:ad5940lib/ad5940.c ****   hs_loop.SWMatCfg.Pswitch = SWP_RCAL0;
 11709              		.loc 1 3658 39 view .LVU3590
 11710 04c2 8123     		movs	r3, #129
 11711 04c4 1FE7     		b	.L710
 11712              	.LVL1194:
 11713              	.L712:
 11714              	.LBB28:
3695:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 11715              		.loc 1 3695 7 is_stmt 1 view .LVU3591
3695:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 11716              		.loc 1 3695 28 is_stmt 0 view .LVU3592
 11717 04c6 0323     		movs	r3, #3
 11718 04c8 2A93     		str	r3, [sp, #168]
3696:ad5940lib/ad5940.c ****     }
 11719              		.loc 1 3696 7 is_stmt 1 view .LVU3593
3696:ad5940lib/ad5940.c ****     }
 11720              		.loc 1 3696 28 is_stmt 0 view .LVU3594
 11721 04ca 2223     		movs	r3, #34
 11722 04cc 2993     		str	r3, [sp, #164]
 11723 04ce 66E7     		b	.L713
 11724              	.LVL1195:
 11725              	.L748:
3703:ad5940lib/ad5940.c ****     pSWCfg->Pswitch = SWP_RCAL0;
 11726              		.loc 1 3703 32 view .LVU3595
 11727 04d0 8123     		movs	r3, #129
 11728 04d2 75E7     		b	.L714
 11729              	.LVL1196:
 11730              	.L715:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 315


3725:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 11731              		.loc 1 3725 7 is_stmt 1 view .LVU3596
3725:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 11732              		.loc 1 3725 28 is_stmt 0 view .LVU3597
 11733 04d4 0323     		movs	r3, #3
 11734 04d6 2A93     		str	r3, [sp, #168]
3726:ad5940lib/ad5940.c ****     }
 11735              		.loc 1 3726 7 is_stmt 1 view .LVU3598
3726:ad5940lib/ad5940.c ****     }
 11736              		.loc 1 3726 28 is_stmt 0 view .LVU3599
 11737 04d8 2223     		movs	r3, #34
 11738 04da 2993     		str	r3, [sp, #164]
 11739 04dc 9BE7     		b	.L716
 11740              	.L760:
 11741 04de 00BF     		.align	2
 11742              	.L759:
 11743 04e0 E0FF3900 		.word	3801056
 11744              	.LVL1197:
 11745              	.L711:
3726:ad5940lib/ad5940.c ****     }
 11746              		.loc 1 3726 28 view .LVU3600
 11747              	.LBE28:
3736:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinFreqWord = AD5940_WGFreqWordCal(pCalCfg->fFreq, pCalCfg->SysClkFreq);
 11748              		.loc 1 3736 3 is_stmt 1 view .LVU3601
3736:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinFreqWord = AD5940_WGFreqWordCal(pCalCfg->fFreq, pCalCfg->SysClkFreq);
 11749              		.loc 1 3736 41 is_stmt 0 view .LVU3602
 11750 04e4 CDF86091 		str	r9, [sp, #352]
3737:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinOffsetWord = 0;
 11751              		.loc 1 3737 3 is_stmt 1 view .LVU3603
3737:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinOffsetWord = 0;
 11752              		.loc 1 3737 38 is_stmt 0 view .LVU3604
 11753 04e8 D4ED020A 		vldr.32	s1, [r4, #8]
 11754 04ec 94ED000A 		vldr.32	s0, [r4]
 11755 04f0 FFF7FEFF 		bl	AD5940_WGFreqWordCal
 11756              	.LVL1198:
3737:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinOffsetWord = 0;
 11757              		.loc 1 3737 36 view .LVU3605
 11758 04f4 5790     		str	r0, [sp, #348]
3738:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinPhaseWord = 0;
 11759              		.loc 1 3738 3 is_stmt 1 view .LVU3606
3738:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.SinCfg.SinPhaseWord = 0;
 11760              		.loc 1 3738 38 is_stmt 0 view .LVU3607
 11761 04f6 0023     		movs	r3, #0
 11762 04f8 5993     		str	r3, [sp, #356]
3739:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.WgCode = 0;
 11763              		.loc 1 3739 3 is_stmt 1 view .LVU3608
3739:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.WgCode = 0;
 11764              		.loc 1 3739 37 is_stmt 0 view .LVU3609
 11765 04fa 5A93     		str	r3, [sp, #360]
3740:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.WgType = WGTYPE_SIN;
 11766              		.loc 1 3740 3 is_stmt 1 view .LVU3610
3740:ad5940lib/ad5940.c **** 		hs_loop.WgCfg.WgType = WGTYPE_SIN;
 11767              		.loc 1 3740 24 is_stmt 0 view .LVU3611
 11768 04fc 5B93     		str	r3, [sp, #364]
3741:ad5940lib/ad5940.c ****     hs_loop.WgCfg.GainCalEn = bFALSE;      /* disable it */
 11769              		.loc 1 3741 3 is_stmt 1 view .LVU3612
3741:ad5940lib/ad5940.c ****     hs_loop.WgCfg.GainCalEn = bFALSE;      /* disable it */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 316


 11770              		.loc 1 3741 24 is_stmt 0 view .LVU3613
 11771 04fe 0225     		movs	r5, #2
 11772 0500 4F95     		str	r5, [sp, #316]
3742:ad5940lib/ad5940.c ****     hs_loop.WgCfg.OffsetCalEn = bFALSE;
 11773              		.loc 1 3742 5 is_stmt 1 view .LVU3614
3742:ad5940lib/ad5940.c ****     hs_loop.WgCfg.OffsetCalEn = bFALSE;
 11774              		.loc 1 3742 29 is_stmt 0 view .LVU3615
 11775 0502 8DF84031 		strb	r3, [sp, #320]
3743:ad5940lib/ad5940.c ****     AD5940_HSLoopCfgS(&hs_loop);
 11776              		.loc 1 3743 5 is_stmt 1 view .LVU3616
3743:ad5940lib/ad5940.c ****     AD5940_HSLoopCfgS(&hs_loop);
 11777              		.loc 1 3743 31 is_stmt 0 view .LVU3617
 11778 0506 8DF84131 		strb	r3, [sp, #321]
3744:ad5940lib/ad5940.c ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 11779              		.loc 1 3744 5 is_stmt 1 view .LVU3618
 11780 050a 48A8     		add	r0, sp, #288
 11781              	.LVL1199:
3744:ad5940lib/ad5940.c ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 11782              		.loc 1 3744 5 is_stmt 0 view .LVU3619
 11783 050c FFF7FEFF 		bl	AD5940_HSLoopCfgS
 11784              	.LVL1200:
3745:ad5940lib/ad5940.c **** 
 11785              		.loc 1 3745 5 is_stmt 1 view .LVU3620
 11786 0510 2846     		mov	r0, r5
 11787 0512 FFF7FEFF 		bl	AD5940_INTCClrFlag
 11788              	.LVL1201:
3747:ad5940lib/ad5940.c ****     AD5940_Delay10us(100);      /* Wait for loop stable. */
 11789              		.loc 1 3747 5 view .LVU3621
 11790 0516 0121     		movs	r1, #1
 11791 0518 4FF44060 		mov	r0, #3072
 11792 051c FFF7FEFF 		bl	AD5940_AFECtrlS
 11793              	.LVL1202:
3748:ad5940lib/ad5940.c ****     pADCBaseCfg = &dsp_cfg.ADCBaseCfg;
 11794              		.loc 1 3748 5 view .LVU3622
 11795 0520 6420     		movs	r0, #100
 11796 0522 FFF7FEFF 		bl	AD5940_Delay10us
 11797              	.LVL1203:
3749:ad5940lib/ad5940.c **** 		/* DFT on RCAL */
 11798              		.loc 1 3749 5 view .LVU3623
3751:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCMuxP = ADCMUXP_P_NODE;
 11799              		.loc 1 3751 5 view .LVU3624
3751:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCMuxP = ADCMUXP_P_NODE;
 11800              		.loc 1 3751 26 is_stmt 0 view .LVU3625
 11801 0526 1423     		movs	r3, #20
 11802 0528 2A93     		str	r3, [sp, #168]
3752:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCPga = ADCPgaGainRcal;
 11803              		.loc 1 3752 5 is_stmt 1 view .LVU3626
3752:ad5940lib/ad5940.c ****     pADCBaseCfg->ADCPga = ADCPgaGainRcal;
 11804              		.loc 1 3752 26 is_stmt 0 view .LVU3627
 11805 052a 2423     		movs	r3, #36
 11806 052c 2993     		str	r3, [sp, #164]
3753:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11807              		.loc 1 3753 5 is_stmt 1 view .LVU3628
3753:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11808              		.loc 1 3753 25 is_stmt 0 view .LVU3629
 11809 052e CDF8ACB0 		str	fp, [sp, #172]
3754:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 317


 11810              		.loc 1 3754 5 is_stmt 1 view .LVU3630
 11811 0532 29A8     		add	r0, sp, #164
 11812              	.LVL1204:
3754:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);
 11813              		.loc 1 3754 5 is_stmt 0 view .LVU3631
 11814 0534 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 11815              	.LVL1205:
3755:ad5940lib/ad5940.c ****     AD5940_Delay10us(25);
 11816              		.loc 1 3755 5 is_stmt 1 view .LVU3632
 11817 0538 0121     		movs	r1, #1
 11818 053a 4FF48140 		mov	r0, #16512
 11819 053e FFF7FEFF 		bl	AD5940_AFECtrlS
 11820              	.LVL1206:
3756:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);
 11821              		.loc 1 3756 5 view .LVU3633
 11822 0542 1920     		movs	r0, #25
 11823 0544 FFF7FEFF 		bl	AD5940_Delay10us
 11824              	.LVL1207:
3757:ad5940lib/ad5940.c ****     /* Wait until DFT ready */
 11825              		.loc 1 3757 5 view .LVU3634
 11826 0548 0121     		movs	r1, #1
 11827 054a 4FF40140 		mov	r0, #33024
 11828 054e FFF7FEFF 		bl	AD5940_AFECtrlS
 11829              	.LVL1208:
3759:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11830              		.loc 1 3759 5 view .LVU3635
 11831              	.L718:
3759:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11832              		.loc 1 3759 70 discriminator 1 view .LVU3636
3759:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11833              		.loc 1 3759 10 discriminator 1 view .LVU3637
3759:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11834              		.loc 1 3759 11 is_stmt 0 discriminator 1 view .LVU3638
 11835 0552 0221     		movs	r1, #2
 11836 0554 0120     		movs	r0, #1
 11837 0556 FFF7FEFF 		bl	AD5940_INTCTestFlag
 11838              	.LVL1209:
3759:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11839              		.loc 1 3759 10 discriminator 1 view .LVU3639
 11840 055a 0028     		cmp	r0, #0
 11841 055c F9D0     		beq	.L718
3760:ad5940lib/ad5940.c ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 11842              		.loc 1 3760 5 is_stmt 1 view .LVU3640
 11843 055e 0021     		movs	r1, #0
 11844 0560 4CF28010 		movw	r0, #49536
 11845 0564 FFF7FEFF 		bl	AD5940_AFECtrlS
 11846              	.LVL1210:
3761:ad5940lib/ad5940.c ****     DftRcal.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
 11847              		.loc 1 3761 5 view .LVU3641
 11848 0568 0220     		movs	r0, #2
 11849 056a FFF7FEFF 		bl	AD5940_INTCClrFlag
 11850              	.LVL1211:
3762:ad5940lib/ad5940.c ****     DftRcal.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 11851              		.loc 1 3762 5 view .LVU3642
3762:ad5940lib/ad5940.c ****     DftRcal.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 11852              		.loc 1 3762 20 is_stmt 0 view .LVU3643
 11853 056e 0320     		movs	r0, #3
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 318


 11854 0570 FFF7FEFF 		bl	AD5940_ReadAfeResult
 11855              	.LVL1212:
3762:ad5940lib/ad5940.c ****     DftRcal.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 11856              		.loc 1 3762 18 view .LVU3644
 11857 0574 0790     		str	r0, [sp, #28]
3763:ad5940lib/ad5940.c **** 		/* DFT on RTIA */  
 11858              		.loc 1 3763 5 is_stmt 1 view .LVU3645
3763:ad5940lib/ad5940.c **** 		/* DFT on RTIA */  
 11859              		.loc 1 3763 21 is_stmt 0 view .LVU3646
 11860 0576 0420     		movs	r0, #4
 11861 0578 FFF7FEFF 		bl	AD5940_ReadAfeResult
 11862              	.LVL1213:
3763:ad5940lib/ad5940.c **** 		/* DFT on RTIA */  
 11863              		.loc 1 3763 19 view .LVU3647
 11864 057c 0890     		str	r0, [sp, #32]
3765:ad5940lib/ad5940.c ****     {
 11865              		.loc 1 3765 5 is_stmt 1 view .LVU3648
3765:ad5940lib/ad5940.c ****     {
 11866              		.loc 1 3765 15 is_stmt 0 view .LVU3649
 11867 057e 2369     		ldr	r3, [r4, #16]
3765:ad5940lib/ad5940.c ****     {
 11868              		.loc 1 3765 7 view .LVU3650
 11869 0580 002B     		cmp	r3, #0
 11870 0582 48D1     		bne	.L719
3767:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA0_P;
 11871              		.loc 1 3767 7 is_stmt 1 view .LVU3651
3767:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA0_P;
 11872              		.loc 1 3767 28 is_stmt 0 view .LVU3652
 11873 0584 0223     		movs	r3, #2
 11874 0586 2A93     		str	r3, [sp, #168]
3768:ad5940lib/ad5940.c ****     }else
 11875              		.loc 1 3768 7 is_stmt 1 view .LVU3653
3768:ad5940lib/ad5940.c ****     }else
 11876              		.loc 1 3768 28 is_stmt 0 view .LVU3654
 11877 0588 2123     		movs	r3, #33
 11878 058a 2993     		str	r3, [sp, #164]
 11879              	.L720:
3774:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11880              		.loc 1 3774 5 is_stmt 1 view .LVU3655
3774:ad5940lib/ad5940.c ****     AD5940_ADCBaseCfgS(pADCBaseCfg);
 11881              		.loc 1 3774 25 is_stmt 0 view .LVU3656
 11882 058c CDF8ACA0 		str	r10, [sp, #172]
3775:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);
 11883              		.loc 1 3775 5 is_stmt 1 view .LVU3657
 11884 0590 29A8     		add	r0, sp, #164
 11885              	.LVL1214:
3775:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);
 11886              		.loc 1 3775 5 is_stmt 0 view .LVU3658
 11887 0592 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 11888              	.LVL1215:
3776:ad5940lib/ad5940.c ****     AD5940_Delay10us(25);
 11889              		.loc 1 3776 5 is_stmt 1 view .LVU3659
 11890 0596 0121     		movs	r1, #1
 11891 0598 4FF48140 		mov	r0, #16512
 11892 059c FFF7FEFF 		bl	AD5940_AFECtrlS
 11893              	.LVL1216:
3777:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 319


 11894              		.loc 1 3777 5 view .LVU3660
 11895 05a0 1920     		movs	r0, #25
 11896 05a2 FFF7FEFF 		bl	AD5940_Delay10us
 11897              	.LVL1217:
3778:ad5940lib/ad5940.c ****     /* Wait until DFT ready */
 11898              		.loc 1 3778 5 view .LVU3661
 11899 05a6 0121     		movs	r1, #1
 11900 05a8 4FF40140 		mov	r0, #33024
 11901 05ac FFF7FEFF 		bl	AD5940_AFECtrlS
 11902              	.LVL1218:
3780:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11903              		.loc 1 3780 5 view .LVU3662
 11904              	.L721:
3780:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11905              		.loc 1 3780 70 discriminator 1 view .LVU3663
3780:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11906              		.loc 1 3780 10 discriminator 1 view .LVU3664
3780:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11907              		.loc 1 3780 11 is_stmt 0 discriminator 1 view .LVU3665
 11908 05b0 0221     		movs	r1, #2
 11909 05b2 0120     		movs	r0, #1
 11910 05b4 FFF7FEFF 		bl	AD5940_INTCTestFlag
 11911              	.LVL1219:
3780:ad5940lib/ad5940.c ****     AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC con
 11912              		.loc 1 3780 10 discriminator 1 view .LVU3666
 11913 05b8 0028     		cmp	r0, #0
 11914 05ba F9D0     		beq	.L721
3781:ad5940lib/ad5940.c ****     AD5940_INTCClrFlag(AFEINTSRC_DFTRDY);
 11915              		.loc 1 3781 5 is_stmt 1 view .LVU3667
 11916 05bc 0021     		movs	r1, #0
 11917 05be 4CF28010 		movw	r0, #49536
 11918 05c2 FFF7FEFF 		bl	AD5940_AFECtrlS
 11919              	.LVL1220:
3782:ad5940lib/ad5940.c ****     DftRtia.Real = AD5940_ReadAfeResult(AFERESULT_DFTREAL);
 11920              		.loc 1 3782 5 view .LVU3668
 11921 05c6 0220     		movs	r0, #2
 11922 05c8 FFF7FEFF 		bl	AD5940_INTCClrFlag
 11923              	.LVL1221:
3783:ad5940lib/ad5940.c ****     DftRtia.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 11924              		.loc 1 3783 5 view .LVU3669
3783:ad5940lib/ad5940.c ****     DftRtia.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 11925              		.loc 1 3783 20 is_stmt 0 view .LVU3670
 11926 05cc 0320     		movs	r0, #3
 11927 05ce FFF7FEFF 		bl	AD5940_ReadAfeResult
 11928              	.LVL1222:
3783:ad5940lib/ad5940.c ****     DftRtia.Image = AD5940_ReadAfeResult(AFERESULT_DFTIMAGE);
 11929              		.loc 1 3783 18 view .LVU3671
 11930 05d2 0590     		str	r0, [sp, #20]
3784:ad5940lib/ad5940.c ****     if(DftRcal.Real&(1L<<17))
 11931              		.loc 1 3784 5 is_stmt 1 view .LVU3672
3784:ad5940lib/ad5940.c ****     if(DftRcal.Real&(1L<<17))
 11932              		.loc 1 3784 21 is_stmt 0 view .LVU3673
 11933 05d4 0420     		movs	r0, #4
 11934 05d6 FFF7FEFF 		bl	AD5940_ReadAfeResult
 11935              	.LVL1223:
3784:ad5940lib/ad5940.c ****     if(DftRcal.Real&(1L<<17))
 11936              		.loc 1 3784 19 view .LVU3674
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 320


 11937 05da 0690     		str	r0, [sp, #24]
3785:ad5940lib/ad5940.c ****       DftRcal.Real |= 0xfffc0000;
 11938              		.loc 1 3785 5 is_stmt 1 view .LVU3675
3785:ad5940lib/ad5940.c ****       DftRcal.Real |= 0xfffc0000;
 11939              		.loc 1 3785 15 is_stmt 0 view .LVU3676
 11940 05dc 079B     		ldr	r3, [sp, #28]
3785:ad5940lib/ad5940.c ****       DftRcal.Real |= 0xfffc0000;
 11941              		.loc 1 3785 7 view .LVU3677
 11942 05de 13F4003F 		tst	r3, #131072
 11943 05e2 02D0     		beq	.L722
3786:ad5940lib/ad5940.c ****     if(DftRcal.Image&(1L<<17))
 11944              		.loc 1 3786 7 is_stmt 1 view .LVU3678
3786:ad5940lib/ad5940.c ****     if(DftRcal.Image&(1L<<17))
 11945              		.loc 1 3786 20 is_stmt 0 view .LVU3679
 11946 05e4 214A     		ldr	r2, .L761
 11947 05e6 1A43     		orrs	r2, r2, r3
 11948 05e8 0792     		str	r2, [sp, #28]
 11949              	.L722:
3787:ad5940lib/ad5940.c ****       DftRcal.Image |= 0xfffc0000;
 11950              		.loc 1 3787 5 is_stmt 1 view .LVU3680
3787:ad5940lib/ad5940.c ****       DftRcal.Image |= 0xfffc0000;
 11951              		.loc 1 3787 15 is_stmt 0 view .LVU3681
 11952 05ea 089B     		ldr	r3, [sp, #32]
3787:ad5940lib/ad5940.c ****       DftRcal.Image |= 0xfffc0000;
 11953              		.loc 1 3787 7 view .LVU3682
 11954 05ec 13F4003F 		tst	r3, #131072
 11955 05f0 02D0     		beq	.L723
3788:ad5940lib/ad5940.c ****     if(DftRtia.Real&(1L<<17))
 11956              		.loc 1 3788 7 is_stmt 1 view .LVU3683
3788:ad5940lib/ad5940.c ****     if(DftRtia.Real&(1L<<17))
 11957              		.loc 1 3788 21 is_stmt 0 view .LVU3684
 11958 05f2 1E4A     		ldr	r2, .L761
 11959 05f4 1A43     		orrs	r2, r2, r3
 11960 05f6 0892     		str	r2, [sp, #32]
 11961              	.L723:
3789:ad5940lib/ad5940.c ****       DftRtia.Real |= 0xfffc0000;
 11962              		.loc 1 3789 5 is_stmt 1 view .LVU3685
3789:ad5940lib/ad5940.c ****       DftRtia.Real |= 0xfffc0000;
 11963              		.loc 1 3789 15 is_stmt 0 view .LVU3686
 11964 05f8 059B     		ldr	r3, [sp, #20]
3789:ad5940lib/ad5940.c ****       DftRtia.Real |= 0xfffc0000;
 11965              		.loc 1 3789 7 view .LVU3687
 11966 05fa 13F4003F 		tst	r3, #131072
 11967 05fe 02D0     		beq	.L724
3790:ad5940lib/ad5940.c ****     if(DftRtia.Image&(1L<<17))
 11968              		.loc 1 3790 7 is_stmt 1 view .LVU3688
3790:ad5940lib/ad5940.c ****     if(DftRtia.Image&(1L<<17))
 11969              		.loc 1 3790 20 is_stmt 0 view .LVU3689
 11970 0600 1A4A     		ldr	r2, .L761
 11971 0602 1A43     		orrs	r2, r2, r3
 11972 0604 0592     		str	r2, [sp, #20]
 11973              	.L724:
3791:ad5940lib/ad5940.c ****       DftRtia.Image |= 0xfffc0000;
 11974              		.loc 1 3791 5 is_stmt 1 view .LVU3690
3791:ad5940lib/ad5940.c ****       DftRtia.Image |= 0xfffc0000;
 11975              		.loc 1 3791 7 is_stmt 0 view .LVU3691
 11976 0606 10F4003F 		tst	r0, #131072
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 321


 11977 060a 3FF413AF 		beq	.L717
3792:ad5940lib/ad5940.c ****   }
 11978              		.loc 1 3792 7 is_stmt 1 view .LVU3692
3792:ad5940lib/ad5940.c ****   }
 11979              		.loc 1 3792 21 is_stmt 0 view .LVU3693
 11980 060e 174B     		ldr	r3, .L761
 11981 0610 0343     		orrs	r3, r3, r0
 11982 0612 0693     		str	r3, [sp, #24]
 11983 0614 0EE7     		b	.L717
 11984              	.L719:
3771:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 11985              		.loc 1 3771 7 is_stmt 1 view .LVU3694
3771:ad5940lib/ad5940.c ****       pADCBaseCfg->ADCMuxP = ADCMUXP_LPTIA1_P;
 11986              		.loc 1 3771 28 is_stmt 0 view .LVU3695
 11987 0616 0323     		movs	r3, #3
 11988 0618 2A93     		str	r3, [sp, #168]
3772:ad5940lib/ad5940.c ****     }
 11989              		.loc 1 3772 7 is_stmt 1 view .LVU3696
3772:ad5940lib/ad5940.c ****     }
 11990              		.loc 1 3772 28 is_stmt 0 view .LVU3697
 11991 061a 2223     		movs	r3, #34
 11992 061c 2993     		str	r3, [sp, #164]
 11993 061e B5E7     		b	.L720
 11994              	.L725:
3813:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&res);
 11995              		.loc 1 3813 5 is_stmt 1 view .LVU3698
3813:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&res);
 11996              		.loc 1 3813 43 is_stmt 0 view .LVU3699
 11997 0620 03A8     		add	r0, sp, #12
 11998 0622 FFF7FEFF 		bl	AD5940_ComplexMag
 11999              	.LVL1224:
3813:ad5940lib/ad5940.c ****     ((fImpPol_Type*)pResult)->Phase = AD5940_ComplexPhase(&res);
 12000              		.loc 1 3813 41 view .LVU3700
 12001 0626 86ED000A 		vstr.32	s0, [r6]
3814:ad5940lib/ad5940.c ****   }
 12002              		.loc 1 3814 5 is_stmt 1 view .LVU3701
3814:ad5940lib/ad5940.c ****   }
 12003              		.loc 1 3814 39 is_stmt 0 view .LVU3702
 12004 062a 03A8     		add	r0, sp, #12
 12005 062c FFF7FEFF 		bl	AD5940_ComplexPhase
 12006              	.LVL1225:
3814:ad5940lib/ad5940.c ****   }
 12007              		.loc 1 3814 37 view .LVU3703
 12008 0630 86ED010A 		vstr.32	s0, [r6, #4]
 12009 0634 1CE7     		b	.L726
 12010              	.L755:
3820:ad5940lib/ad5940.c ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 12011              		.loc 1 3820 5 is_stmt 1 view .LVU3704
 12012 0636 0022     		movs	r2, #0
 12013 0638 0221     		movs	r1, #2
 12014 063a 0120     		movs	r0, #1
 12015 063c FFF7FEFF 		bl	AD5940_INTCCfg
 12016              	.LVL1226:
 12017 0640 1AE7     		b	.L727
 12018              	.L756:
3823:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_AFECON, reg_afecon);              /* Restore AFECON register */
 12019              		.loc 1 3823 5 view .LVU3705
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 322


 12020 0642 0022     		movs	r2, #0
 12021 0644 0421     		movs	r1, #4
 12022 0646 0120     		movs	r0, #1
 12023 0648 FFF7FEFF 		bl	AD5940_INTCCfg
 12024              	.LVL1227:
 12025 064c 18E7     		b	.L728
 12026              	.LVL1228:
 12027              	.L729:
3531:ad5940lib/ad5940.c ****   
 12028              		.loc 1 3531 31 is_stmt 0 view .LVU3706
 12029 064e 6FF00200 		mvn	r0, #2
 12030 0652 23E7     		b	.L699
 12031              	.L730:
3534:ad5940lib/ad5940.c ****   if(pCalCfg->LpTiaRtia > LPTIARTIA_512K)
 12032              		.loc 1 3534 12 view .LVU3707
 12033 0654 6FF00100 		mvn	r0, #1
 12034 0658 20E7     		b	.L699
 12035              	.L731:
3536:ad5940lib/ad5940.c ****   if(pCalCfg->LpTiaRtia == LPTIARTIA_OPEN)
 12036              		.loc 1 3536 12 view .LVU3708
 12037 065a 6FF00100 		mvn	r0, #1
 12038 065e 1DE7     		b	.L699
 12039              	.L732:
3538:ad5940lib/ad5940.c ****   if(pResult == NULL)
 12040              		.loc 1 3538 12 view .LVU3709
 12041 0660 6FF00100 		mvn	r0, #1
 12042 0664 1AE7     		b	.L699
 12043              	.L733:
3540:ad5940lib/ad5940.c **** 
 12044              		.loc 1 3540 14 view .LVU3710
 12045 0666 6FF00200 		mvn	r0, #2
 12046 066a 17E7     		b	.L699
 12047              	.L762:
 12048              		.align	2
 12049              	.L761:
 12050 066c 0000FCFF 		.word	-262144
 12051              		.cfi_endproc
 12052              	.LFE119:
 12054              		.section	.rodata.AD5940_HSDACCal.str1.4,"aMS",%progbits,1
 12055              		.align	2
 12056              	.LC17:
 12057 0000 566F6C74 		.ascii	"Voltage before cal: %f \012\000"
 12057      61676520 
 12057      6265666F 
 12057      72652063 
 12057      616C3A20 
 12058 0019 000000   		.align	2
 12059              	.LC18:
 12060 001c 566F6C74 		.ascii	"Voltage after cal: %f \012\000"
 12060      61676520 
 12060      61667465 
 12060      72206361 
 12060      6C3A2025 
 12061              		.section	.text.AD5940_HSDACCal,"ax",%progbits
 12062              		.align	1
 12063              		.global	AD5940_HSDACCal
 12064              		.syntax unified
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 323


 12065              		.thumb
 12066              		.thumb_func
 12067              		.fpu fpv5-d16
 12069              	AD5940_HSDACCal:
 12070              	.LVL1229:
 12071              	.LFB120:
3834:ad5940lib/ad5940.c **** 
3835:ad5940lib/ad5940.c **** /**
3836:ad5940lib/ad5940.c ****  * @brief calibrate HSDAC output voltage using ADC.
3837:ad5940lib/ad5940.c ****  * @note It acutally calibrates voltage output of excitation buffer.
3838:ad5940lib/ad5940.c ****  * @param pCalCfg: pointer to configuration structure
3839:ad5940lib/ad5940.c ****  * @return return AD5940ERR_OK if succeeded.
3840:ad5940lib/ad5940.c **** */
3841:ad5940lib/ad5940.c **** AD5940Err AD5940_HSDACCal(HSDACCal_Type *pCalCfg)
3842:ad5940lib/ad5940.c **** {
 12072              		.loc 1 3842 1 is_stmt 1 view -0
 12073              		.cfi_startproc
 12074              		@ args = 0, pretend = 0, frame = 208
 12075              		@ frame_needed = 0, uses_anonymous_args = 0
3843:ad5940lib/ad5940.c ****   ADCBaseCfg_Type adc_base;
 12076              		.loc 1 3843 3 view .LVU3712
3844:ad5940lib/ad5940.c ****   ADCFilterCfg_Type adc_filter;
 12077              		.loc 1 3844 3 view .LVU3713
3845:ad5940lib/ad5940.c ****   HSLoopCfg_Type hsloop_cfg;
 12078              		.loc 1 3845 3 view .LVU3714
3846:ad5940lib/ad5940.c ****   LPLoopCfg_Type lploop_cfg;
 12079              		.loc 1 3846 3 view .LVU3715
3847:ad5940lib/ad5940.c ****   
3848:ad5940lib/ad5940.c ****   /* LSB_Numerator and LSB_Denometer are used to calculate 
3849:ad5940lib/ad5940.c ****   the codes to write to calibration registers depending on
3850:ad5940lib/ad5940.c ****   which calibration register is used
3851:ad5940lib/ad5940.c ****   There are LSB_Numerator ADC LSBs in
3852:ad5940lib/ad5940.c ****   LSB_Denominator DAC Calibration LSBs*/
3853:ad5940lib/ad5940.c ****   int32_t LSB_Numerator;
 12080              		.loc 1 3853 3 view .LVU3716
3854:ad5940lib/ad5940.c ****   int32_t LEB_Denominator;
 12081              		.loc 1 3854 3 view .LVU3717
3855:ad5940lib/ad5940.c ****   int32_t time_out;
 12082              		.loc 1 3855 3 view .LVU3718
3856:ad5940lib/ad5940.c ****   int32_t ADCCode;
 12083              		.loc 1 3856 3 view .LVU3719
3857:ad5940lib/ad5940.c ****   uint32_t HSDACCode = 0x800;     /* Mid scale DAC */
 12084              		.loc 1 3857 3 view .LVU3720
3858:ad5940lib/ad5940.c ****   
3859:ad5940lib/ad5940.c ****   uint32_t regaddr_offset;
 12085              		.loc 1 3859 3 view .LVU3721
3860:ad5940lib/ad5940.c ****   uint32_t ADCPGA_Sel;
 12086              		.loc 1 3860 3 view .LVU3722
3861:ad5940lib/ad5940.c ****   BoolFlag bHPMode;
 12087              		.loc 1 3861 3 view .LVU3723
3862:ad5940lib/ad5940.c **** 
3863:ad5940lib/ad5940.c ****   if(pCalCfg == NULL) return AD5940ERR_NULLP;
 12088              		.loc 1 3863 3 view .LVU3724
 12089              		.loc 1 3863 5 is_stmt 0 view .LVU3725
 12090 0000 0028     		cmp	r0, #0
 12091 0002 00F01981 		beq	.L774
3842:ad5940lib/ad5940.c ****   ADCBaseCfg_Type adc_base;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 324


 12092              		.loc 1 3842 1 view .LVU3726
 12093 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 12094              	.LCFI176:
 12095              		.cfi_def_cfa_offset 36
 12096              		.cfi_offset 4, -36
 12097              		.cfi_offset 5, -32
 12098              		.cfi_offset 6, -28
 12099              		.cfi_offset 7, -24
 12100              		.cfi_offset 8, -20
 12101              		.cfi_offset 9, -16
 12102              		.cfi_offset 10, -12
 12103              		.cfi_offset 11, -8
 12104              		.cfi_offset 14, -4
 12105 000a B5B0     		sub	sp, sp, #212
 12106              	.LCFI177:
 12107              		.cfi_def_cfa_offset 248
 12108 000c 0546     		mov	r5, r0
3864:ad5940lib/ad5940.c ****   if(pCalCfg->ExcitBufGain > 1) return AD5940ERR_PARA;
 12109              		.loc 1 3864 3 is_stmt 1 view .LVU3727
 12110              		.loc 1 3864 13 is_stmt 0 view .LVU3728
 12111 000e 0669     		ldr	r6, [r0, #16]
 12112              		.loc 1 3864 5 view .LVU3729
 12113 0010 012E     		cmp	r6, #1
 12114 0012 00F21481 		bhi	.L775
3865:ad5940lib/ad5940.c ****   if(pCalCfg->HsDacGain > 1) return AD5940ERR_PARA;
 12115              		.loc 1 3865 3 is_stmt 1 view .LVU3730
 12116              		.loc 1 3865 13 is_stmt 0 view .LVU3731
 12117 0016 4369     		ldr	r3, [r0, #20]
 12118              		.loc 1 3865 5 view .LVU3732
 12119 0018 012B     		cmp	r3, #1
 12120 001a 00F21381 		bhi	.L776
3866:ad5940lib/ad5940.c **** 
3867:ad5940lib/ad5940.c ****   bHPMode = pCalCfg->AfePwrMode == AFEPWR_HP?bTRUE:bFALSE;
 12121              		.loc 1 3867 3 is_stmt 1 view .LVU3733
 12122              		.loc 1 3867 20 is_stmt 0 view .LVU3734
 12123 001e D0F80C90 		ldr	r9, [r0, #12]
 12124              	.LVL1230:
3868:ad5940lib/ad5940.c **** 
3869:ad5940lib/ad5940.c ****   switch(pCalCfg->ExcitBufGain)
 12125              		.loc 1 3869 3 is_stmt 1 view .LVU3735
 12126 0022 2EB1     		cbz	r6, .L765
 12127 0024 012E     		cmp	r6, #1
 12128 0026 00F0E480 		beq	.L766
 12129 002a 6FF00100 		mvn	r0, #1
 12130              	.LVL1231:
 12131              		.loc 1 3869 3 is_stmt 0 view .LVU3736
 12132 002e D5E0     		b	.L763
 12133              	.LVL1232:
 12134              	.L765:
3870:ad5940lib/ad5940.c ****   {
3871:ad5940lib/ad5940.c ****   case EXCITBUFGAIN_2:
3872:ad5940lib/ad5940.c ****     regaddr_offset = bHPMode?REG_AFE_DACOFFSETHP:REG_AFE_DACOFFSET;
 12135              		.loc 1 3872 5 is_stmt 1 view .LVU3737
 12136              		.loc 1 3872 49 is_stmt 0 view .LVU3738
 12137 0030 B9F1010F 		cmp	r9, #1
 12138 0034 00F0D580 		beq	.L786
 12139 0038 42F2682A 		movw	r10, #8808
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 325


 12140              	.L767:
 12141              	.LVL1233:
3873:ad5940lib/ad5940.c ****     if(pCalCfg->HsDacGain == HSDACGAIN_0P2)
 12142              		.loc 1 3873 5 is_stmt 1 discriminator 4 view .LVU3739
 12143              		.loc 1 3873 7 is_stmt 0 discriminator 4 view .LVU3740
 12144 003c 012B     		cmp	r3, #1
 12145 003e 00F0D380 		beq	.L787
3874:ad5940lib/ad5940.c ****     {
3875:ad5940lib/ad5940.c ****       LSB_Numerator = 40;
3876:ad5940lib/ad5940.c ****       LEB_Denominator = 14;
3877:ad5940lib/ad5940.c ****       ADCPGA_Sel = ADCPGA_4;
3878:ad5940lib/ad5940.c ****     }
3879:ad5940lib/ad5940.c ****     else
3880:ad5940lib/ad5940.c ****     {
3881:ad5940lib/ad5940.c ****       LSB_Numerator = 7;
3882:ad5940lib/ad5940.c ****       LEB_Denominator = 2;
 12146              		.loc 1 3882 23 view .LVU3741
 12147 0042 4FF00208 		mov	r8, #2
3881:ad5940lib/ad5940.c ****       LEB_Denominator = 2;
 12148              		.loc 1 3881 21 view .LVU3742
 12149 0046 0727     		movs	r7, #7
 12150              	.L768:
 12151              	.LVL1234:
3883:ad5940lib/ad5940.c ****       ADCPGA_Sel = ADCPGA_1;
3884:ad5940lib/ad5940.c ****     }
3885:ad5940lib/ad5940.c ****     break;
3886:ad5940lib/ad5940.c ****   case EXCITBUFGAIN_0P25:
3887:ad5940lib/ad5940.c ****     regaddr_offset = bHPMode?REG_AFE_DACOFFSETATTENHP:REG_AFE_DACOFFSETATTEN;
3888:ad5940lib/ad5940.c ****     if(pCalCfg->HsDacGain == HSDACGAIN_0P2)
3889:ad5940lib/ad5940.c ****     {
3890:ad5940lib/ad5940.c ****       LSB_Numerator = 5;
3891:ad5940lib/ad5940.c ****       LEB_Denominator = 14;
3892:ad5940lib/ad5940.c ****     }
3893:ad5940lib/ad5940.c ****     else
3894:ad5940lib/ad5940.c ****     {
3895:ad5940lib/ad5940.c ****       LSB_Numerator = 25;
3896:ad5940lib/ad5940.c ****       LEB_Denominator = 14;
3897:ad5940lib/ad5940.c ****     }
3898:ad5940lib/ad5940.c ****     ADCPGA_Sel = ADCPGA_4;
3899:ad5940lib/ad5940.c ****     break;
3900:ad5940lib/ad5940.c **** 	default:
3901:ad5940lib/ad5940.c **** 		return AD5940ERR_PARA;
3902:ad5940lib/ad5940.c ****   }
3903:ad5940lib/ad5940.c **** 
3904:ad5940lib/ad5940.c ****   /* Turn On References*/
3905:ad5940lib/ad5940.c ****   __AD5940_ReferenceON();
 12152              		.loc 1 3905 3 is_stmt 1 view .LVU3743
 12153 0048 FFF7FEFF 		bl	__AD5940_ReferenceON
 12154              	.LVL1235:
3906:ad5940lib/ad5940.c ****   /* Step0.0 Initialize ADC filters ADCRawData-->SINC3-->SINC2+NOTCH. Use SIN2 data for calibration
3907:ad5940lib/ad5940.c ****   adc_filter.ADCSinc3Osr = pCalCfg->ADCSinc3Osr;
 12155              		.loc 1 3907 3 view .LVU3744
 12156              		.loc 1 3907 35 is_stmt 0 view .LVU3745
 12157 004c AB69     		ldr	r3, [r5, #24]
 12158              		.loc 1 3907 26 view .LVU3746
 12159 004e 2C93     		str	r3, [sp, #176]
3908:ad5940lib/ad5940.c ****   adc_filter.ADCSinc2Osr = pCalCfg->ADCSinc2Osr;  /* 800KSPS/4/1333 = 150SPS */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 326


 12160              		.loc 1 3908 3 is_stmt 1 view .LVU3747
 12161              		.loc 1 3908 35 is_stmt 0 view .LVU3748
 12162 0050 EB69     		ldr	r3, [r5, #28]
 12163              		.loc 1 3908 26 view .LVU3749
 12164 0052 2D93     		str	r3, [sp, #180]
3909:ad5940lib/ad5940.c ****   adc_filter.ADCAvgNum = ADCAVGNUM_2;         /* Don't care about it. Average function is only used
 12165              		.loc 1 3909 3 is_stmt 1 view .LVU3750
 12166              		.loc 1 3909 24 is_stmt 0 view .LVU3751
 12167 0054 0024     		movs	r4, #0
 12168 0056 2E94     		str	r4, [sp, #184]
3910:ad5940lib/ad5940.c ****   adc_filter.ADCRate = bHPMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;        /* If ADC clock is 32MHz, then
 12169              		.loc 1 3910 3 is_stmt 1 view .LVU3752
 12170              		.loc 1 3910 46 is_stmt 0 view .LVU3753
 12171 0058 B9F10103 		subs	r3, r9, #1
 12172 005c 18BF     		it	ne
 12173 005e 0123     		movne	r3, #1
 12174              		.loc 1 3910 22 view .LVU3754
 12175 0060 2F93     		str	r3, [sp, #188]
3911:ad5940lib/ad5940.c ****   adc_filter.BpNotch = bTRUE;                 /* SINC2+Notch is one block, when bypass notch filter
 12176              		.loc 1 3911 3 is_stmt 1 view .LVU3755
 12177              		.loc 1 3911 22 is_stmt 0 view .LVU3756
 12178 0062 4FF0010B 		mov	fp, #1
 12179 0066 8DF8C0B0 		strb	fp, [sp, #192]
3912:ad5940lib/ad5940.c ****   adc_filter.BpSinc3 = bFALSE;                /* We use SINC3 filter. */
 12180              		.loc 1 3912 3 is_stmt 1 view .LVU3757
 12181              		.loc 1 3912 22 is_stmt 0 view .LVU3758
 12182 006a 8DF8C140 		strb	r4, [sp, #193]
3913:ad5940lib/ad5940.c ****   adc_filter.Sinc2NotchEnable = bTRUE;        /* Enable the SINC2+Notch block. You can also use fun
 12183              		.loc 1 3913 3 is_stmt 1 view .LVU3759
 12184              		.loc 1 3913 31 is_stmt 0 view .LVU3760
 12185 006e 8DF8C2B0 		strb	fp, [sp, #194]
3914:ad5940lib/ad5940.c ****   AD5940_ADCFilterCfgS(&adc_filter);
 12186              		.loc 1 3914 3 is_stmt 1 view .LVU3761
 12187 0072 2CA8     		add	r0, sp, #176
 12188 0074 FFF7FEFF 		bl	AD5940_ADCFilterCfgS
 12189              	.LVL1236:
3915:ad5940lib/ad5940.c ****   /* Step0.1 Initialize ADC basic function */
3916:ad5940lib/ad5940.c ****   adc_base.ADCMuxP = ADCMUXP_P_NODE;
 12190              		.loc 1 3916 3 view .LVU3762
 12191              		.loc 1 3916 20 is_stmt 0 view .LVU3763
 12192 0078 2423     		movs	r3, #36
 12193 007a 3193     		str	r3, [sp, #196]
3917:ad5940lib/ad5940.c ****   adc_base.ADCMuxN = ADCMUXN_N_NODE;
 12194              		.loc 1 3917 3 is_stmt 1 view .LVU3764
 12195              		.loc 1 3917 20 is_stmt 0 view .LVU3765
 12196 007c 1423     		movs	r3, #20
 12197 007e 3293     		str	r3, [sp, #200]
3918:ad5940lib/ad5940.c ****   adc_base.ADCPga = ADCPGA_Sel;
 12198              		.loc 1 3918 3 is_stmt 1 view .LVU3766
 12199              		.loc 1 3918 19 is_stmt 0 view .LVU3767
 12200 0080 3396     		str	r6, [sp, #204]
3919:ad5940lib/ad5940.c ****   AD5940_ADCBaseCfgS(&adc_base);
 12201              		.loc 1 3919 3 is_stmt 1 view .LVU3768
 12202 0082 31A8     		add	r0, sp, #196
 12203 0084 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 12204              	.LVL1237:
3920:ad5940lib/ad5940.c ****   
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 327


3921:ad5940lib/ad5940.c ****   /* Step0.2 Configure LPDAC to connect VZERO to HSTIA */
3922:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpdacSel = LPDAC0;
 12205              		.loc 1 3922 3 view .LVU3769
 12206              		.loc 1 3922 32 is_stmt 0 view .LVU3770
 12207 0088 0194     		str	r4, [sp, #4]
3923:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.DacData12Bit = 0x7C0;
 12208              		.loc 1 3923 3 is_stmt 1 view .LVU3771
 12209              		.loc 1 3923 36 is_stmt 0 view .LVU3772
 12210 008a 4FF4F863 		mov	r3, #1984
 12211 008e ADF81E30 		strh	r3, [sp, #30]	@ movhi
3924:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.DacData6Bit = 0x1F;  
 12212              		.loc 1 3924 3 is_stmt 1 view .LVU3773
 12213              		.loc 1 3924 35 is_stmt 0 view .LVU3774
 12214 0092 1F23     		movs	r3, #31
 12215 0094 ADF82030 		strh	r3, [sp, #32]	@ movhi
3925:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.DataRst = bFALSE;
 12216              		.loc 1 3925 3 is_stmt 1 view .LVU3775
 12217              		.loc 1 3925 31 is_stmt 0 view .LVU3776
 12218 0098 8DF81C40 		strb	r4, [sp, #28]
3926:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacRef = LPDACREF_2P5;
 12219              		.loc 1 3926 3 is_stmt 1 view .LVU3777
 12220              		.loc 1 3926 32 is_stmt 0 view .LVU3778
 12221 009c 0694     		str	r4, [sp, #24]
3927:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacSrc = LPDACSRC_MMR;
 12222              		.loc 1 3927 3 is_stmt 1 view .LVU3779
 12223              		.loc 1 3927 32 is_stmt 0 view .LVU3780
 12224 009e 0294     		str	r4, [sp, #8]
3928:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacVzeroMux = LPDACVZERO_6BIT;
 12225              		.loc 1 3928 3 is_stmt 1 view .LVU3781
 12226              		.loc 1 3928 37 is_stmt 0 view .LVU3782
 12227 00a0 0394     		str	r4, [sp, #12]
3929:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacVbiasMux = LPDACVBIAS_12BIT;
 12228              		.loc 1 3929 3 is_stmt 1 view .LVU3783
 12229              		.loc 1 3929 37 is_stmt 0 view .LVU3784
 12230 00a2 0494     		str	r4, [sp, #16]
3930:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.PowerEn = bTRUE;
 12231              		.loc 1 3930 3 is_stmt 1 view .LVU3785
 12232              		.loc 1 3930 31 is_stmt 0 view .LVU3786
 12233 00a4 8DF81DB0 		strb	fp, [sp, #29]
3931:ad5940lib/ad5940.c ****   lploop_cfg.LpDacCfg.LpDacSW = LPDACSW_VBIAS2LPPA|LPDACSW_VBIAS2PIN|LPDACSW_VZERO2HSTIA;
 12234              		.loc 1 3931 3 is_stmt 1 view .LVU3787
 12235              		.loc 1 3931 31 is_stmt 0 view .LVU3788
 12236 00a8 1923     		movs	r3, #25
 12237 00aa 0593     		str	r3, [sp, #20]
3932:ad5940lib/ad5940.c ****   AD5940_LPLoopCfgS(&lploop_cfg);
 12238              		.loc 1 3932 3 is_stmt 1 view .LVU3789
 12239 00ac 01A8     		add	r0, sp, #4
 12240 00ae FFF7FEFF 		bl	AD5940_LPLoopCfgS
 12241              	.LVL1238:
3933:ad5940lib/ad5940.c ****   
3934:ad5940lib/ad5940.c ****   /* Step0.3 Configure HSLOOP */
3935:ad5940lib/ad5940.c ****   hsloop_cfg.HsDacCfg.ExcitBufGain = pCalCfg->ExcitBufGain;
 12242              		.loc 1 3935 3 view .LVU3790
 12243              		.loc 1 3935 45 is_stmt 0 view .LVU3791
 12244 00b2 2B69     		ldr	r3, [r5, #16]
 12245              		.loc 1 3935 36 view .LVU3792
 12246 00b4 1493     		str	r3, [sp, #80]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 328


3936:ad5940lib/ad5940.c ****   hsloop_cfg.HsDacCfg.HsDacGain = pCalCfg->HsDacGain;
 12247              		.loc 1 3936 3 is_stmt 1 view .LVU3793
 12248              		.loc 1 3936 42 is_stmt 0 view .LVU3794
 12249 00b6 6B69     		ldr	r3, [r5, #20]
 12250              		.loc 1 3936 33 view .LVU3795
 12251 00b8 1593     		str	r3, [sp, #84]
3937:ad5940lib/ad5940.c ****   hsloop_cfg.HsDacCfg.HsDacUpdateRate = bHPMode?0x7:0x1B;
 12252              		.loc 1 3937 3 is_stmt 1 view .LVU3796
 12253              		.loc 1 3937 52 is_stmt 0 view .LVU3797
 12254 00ba D945     		cmp	r9, fp
 12255 00bc 00F0AD80 		beq	.L788
 12256              		.loc 1 3937 52 view .LVU3798
 12257 00c0 1B23     		movs	r3, #27
 12258              	.L770:
 12259              		.loc 1 3937 39 discriminator 4 view .LVU3799
 12260 00c2 1693     		str	r3, [sp, #88]
3938:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.DiodeClose = bFALSE;
 12261              		.loc 1 3938 3 is_stmt 1 discriminator 4 view .LVU3800
 12262              		.loc 1 3938 34 is_stmt 0 discriminator 4 view .LVU3801
 12263 00c4 4FF00009 		mov	r9, #0
 12264              	.LVL1239:
 12265              		.loc 1 3938 34 discriminator 4 view .LVU3802
 12266 00c8 8DF89C90 		strb	r9, [sp, #156]
3939:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.HstiaBias = HSTIABIAS_VZERO0;
 12267              		.loc 1 3939 3 is_stmt 1 discriminator 4 view .LVU3803
 12268              		.loc 1 3939 33 is_stmt 0 discriminator 4 view .LVU3804
 12269 00cc 0124     		movs	r4, #1
 12270 00ce 2494     		str	r4, [sp, #144]
3940:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.HstiaCtia = 8;
 12271              		.loc 1 3940 3 is_stmt 1 discriminator 4 view .LVU3805
 12272              		.loc 1 3940 33 is_stmt 0 discriminator 4 view .LVU3806
 12273 00d0 0823     		movs	r3, #8
 12274 00d2 2693     		str	r3, [sp, #152]
3941:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
 12275              		.loc 1 3941 3 is_stmt 1 discriminator 4 view .LVU3807
 12276              		.loc 1 3941 36 is_stmt 0 discriminator 4 view .LVU3808
 12277 00d4 0522     		movs	r2, #5
 12278 00d6 2992     		str	r2, [sp, #164]
3942:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
 12279              		.loc 1 3942 3 is_stmt 1 discriminator 4 view .LVU3809
 12280              		.loc 1 3942 35 is_stmt 0 discriminator 4 view .LVU3810
 12281 00d8 0B23     		movs	r3, #11
 12282 00da 2893     		str	r3, [sp, #160]
3943:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.HstiaDe1Rload = HSTIADERLOAD_OPEN;
 12283              		.loc 1 3943 3 is_stmt 1 discriminator 4 view .LVU3811
 12284              		.loc 1 3943 37 is_stmt 0 discriminator 4 view .LVU3812
 12285 00dc 2B92     		str	r2, [sp, #172]
3944:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.HstiaDe1Rtia = HSTIADERTIA_OPEN;
 12286              		.loc 1 3944 3 is_stmt 1 discriminator 4 view .LVU3813
 12287              		.loc 1 3944 36 is_stmt 0 discriminator 4 view .LVU3814
 12288 00de 2A93     		str	r3, [sp, #168]
3945:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.HstiaRtiaSel = HSTIARTIA_200;
 12289              		.loc 1 3945 3 is_stmt 1 discriminator 4 view .LVU3815
 12290              		.loc 1 3945 36 is_stmt 0 discriminator 4 view .LVU3816
 12291 00e0 CDF89490 		str	r9, [sp, #148]
3946:ad5940lib/ad5940.c ****   hsloop_cfg.SWMatCfg.Dswitch = SWD_RCAL0;
 12292              		.loc 1 3946 3 is_stmt 1 discriminator 4 view .LVU3817
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 329


 12293              		.loc 1 3946 31 is_stmt 0 discriminator 4 view .LVU3818
 12294 00e4 1094     		str	r4, [sp, #64]
3947:ad5940lib/ad5940.c ****   hsloop_cfg.SWMatCfg.Pswitch = SWP_RCAL0;
 12295              		.loc 1 3947 3 is_stmt 1 discriminator 4 view .LVU3819
 12296              		.loc 1 3947 31 is_stmt 0 discriminator 4 view .LVU3820
 12297 00e6 1194     		str	r4, [sp, #68]
3948:ad5940lib/ad5940.c ****   hsloop_cfg.SWMatCfg.Nswitch = SWN_RCAL1;
 12298              		.loc 1 3948 3 is_stmt 1 discriminator 4 view .LVU3821
 12299              		.loc 1 3948 31 is_stmt 0 discriminator 4 view .LVU3822
 12300 00e8 4FF40073 		mov	r3, #512
 12301 00ec 1293     		str	r3, [sp, #72]
3949:ad5940lib/ad5940.c ****   hsloop_cfg.SWMatCfg.Tswitch = SWT_TRTIA|SWT_RCAL1;
 12302              		.loc 1 3949 3 is_stmt 1 discriminator 4 view .LVU3823
 12303              		.loc 1 3949 31 is_stmt 0 discriminator 4 view .LVU3824
 12304 00ee 4FF41063 		mov	r3, #2304
 12305 00f2 1393     		str	r3, [sp, #76]
3950:ad5940lib/ad5940.c ****   hsloop_cfg.WgCfg.GainCalEn = bTRUE;
 12306              		.loc 1 3950 3 is_stmt 1 discriminator 4 view .LVU3825
 12307              		.loc 1 3950 30 is_stmt 0 discriminator 4 view .LVU3826
 12308 00f4 8DF86040 		strb	r4, [sp, #96]
3951:ad5940lib/ad5940.c ****   hsloop_cfg.WgCfg.OffsetCalEn = bTRUE;
 12309              		.loc 1 3951 3 is_stmt 1 discriminator 4 view .LVU3827
 12310              		.loc 1 3951 32 is_stmt 0 discriminator 4 view .LVU3828
 12311 00f8 8DF86140 		strb	r4, [sp, #97]
3952:ad5940lib/ad5940.c ****   hsloop_cfg.WgCfg.WgType = WGTYPE_MMR;
 12312              		.loc 1 3952 3 is_stmt 1 discriminator 4 view .LVU3829
 12313              		.loc 1 3952 27 is_stmt 0 discriminator 4 view .LVU3830
 12314 00fc CDF85C90 		str	r9, [sp, #92]
3953:ad5940lib/ad5940.c ****   hsloop_cfg.WgCfg.WgCode = HSDACCode;
 12315              		.loc 1 3953 3 is_stmt 1 discriminator 4 view .LVU3831
 12316              		.loc 1 3953 27 is_stmt 0 discriminator 4 view .LVU3832
 12317 0100 4FF40065 		mov	r5, #2048
 12318              	.LVL1240:
 12319              		.loc 1 3953 27 discriminator 4 view .LVU3833
 12320 0104 2395     		str	r5, [sp, #140]
3954:ad5940lib/ad5940.c ****   AD5940_HSLoopCfgS(&hsloop_cfg);
 12321              		.loc 1 3954 3 is_stmt 1 discriminator 4 view .LVU3834
 12322 0106 10A8     		add	r0, sp, #64
 12323 0108 FFF7FEFF 		bl	AD5940_HSLoopCfgS
 12324              	.LVL1241:
3955:ad5940lib/ad5940.c ****   /* Step0.4 Turn ON reference and ADC power, and DAC power and DAC reference. We use DAC 1.8V refe
3956:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE); /* Disable all */
 12325              		.loc 1 3956 3 discriminator 4 view .LVU3835
 12326 010c 4946     		mov	r1, r9
 12327 010e 4F48     		ldr	r0, .L792
 12328 0110 FFF7FEFF 		bl	AD5940_AFECtrlS
 12329              	.LVL1242:
3957:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_HPREFPWR|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|AFECTRL_SINC2N
 12330              		.loc 1 3957 3 discriminator 4 view .LVU3836
 12331 0114 2146     		mov	r1, r4
 12332 0116 4E48     		ldr	r0, .L792+4
 12333 0118 FFF7FEFF 		bl	AD5940_AFECtrlS
 12334              	.LVL1243:
3958:ad5940lib/ad5940.c ****     AFECTRL_EXTBUFPWR|AFECTRL_INAMPPWR|AFECTRL_HSTIAPWR|AFECTRL_WG, bTRUE);
3959:ad5940lib/ad5940.c ****   AD5940_Delay10us(25);   /* Wait 250us for reference power up */
 12335              		.loc 1 3959 3 discriminator 4 view .LVU3837
 12336 011c 1920     		movs	r0, #25
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 330


 12337 011e FFF7FEFF 		bl	AD5940_Delay10us
 12338              	.LVL1244:
3960:ad5940lib/ad5940.c ****   /* Step0.5 INTC configure and open calibration lock */
3961:ad5940lib/ad5940.c ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 12339              		.loc 1 3961 3 discriminator 4 view .LVU3838
 12340 0122 2246     		mov	r2, r4
 12341 0124 0421     		movs	r1, #4
 12342 0126 2046     		mov	r0, r4
 12343 0128 FFF7FEFF 		bl	AD5940_INTCCfg
 12344              	.LVL1245:
3962:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, KEY_CALDATLOCK);  /* Unlock KEY */
 12345              		.loc 1 3962 3 discriminator 4 view .LVU3839
 12346 012c 4949     		ldr	r1, .L792+8
 12347 012e 42F23020 		movw	r0, #8752
 12348 0132 FFF7FEFF 		bl	AD5940_WriteReg
 12349              	.LVL1246:
3963:ad5940lib/ad5940.c **** 	/* Reset Offset register before calibration */
3964:ad5940lib/ad5940.c **** 	AD5940_WriteReg(regaddr_offset, 0);
 12350              		.loc 1 3964 2 discriminator 4 view .LVU3840
 12351 0136 1FFA8AFA 		uxth	r10, r10
 12352              	.LVL1247:
 12353              		.loc 1 3964 2 is_stmt 0 discriminator 4 view .LVU3841
 12354 013a 4946     		mov	r1, r9
 12355 013c 5046     		mov	r0, r10
 12356 013e FFF7FEFF 		bl	AD5940_WriteReg
 12357              	.LVL1248:
3965:ad5940lib/ad5940.c **** 	/* Update HSDACDAT after resetting calibration register */
3966:ad5940lib/ad5940.c **** 	AD5940_WriteReg(REG_AFE_HSDACDAT, 0x800);
 12358              		.loc 1 3966 2 is_stmt 1 discriminator 4 view .LVU3842
 12359 0142 2946     		mov	r1, r5
 12360 0144 42F24800 		movw	r0, #8264
 12361 0148 FFF7FEFF 		bl	AD5940_WriteReg
 12362              	.LVL1249:
 12363              	.LBB29:
3967:ad5940lib/ad5940.c ****   /* Step1: Do offset calibration. */
3968:ad5940lib/ad5940.c ****   {
3969:ad5940lib/ad5940.c ****     int32_t ExpectedCode = 0x8000;        /* Ideal ADC output */
 12364              		.loc 1 3969 5 discriminator 4 view .LVU3843
3970:ad5940lib/ad5940.c ****     AD5940_Delay10us(10);
 12365              		.loc 1 3970 5 discriminator 4 view .LVU3844
 12366 014c 0A20     		movs	r0, #10
 12367 014e FFF7FEFF 		bl	AD5940_Delay10us
 12368              	.LVL1250:
3971:ad5940lib/ad5940.c ****     time_out = 1000;   /* Reset time out counter */
 12369              		.loc 1 3971 5 discriminator 4 view .LVU3845
 12370              		.loc 1 3971 14 is_stmt 0 discriminator 4 view .LVU3846
 12371 0152 4FF47A73 		mov	r3, #1000
 12372 0156 0093     		str	r3, [sp]
3972:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);
 12373              		.loc 1 3972 5 is_stmt 1 discriminator 4 view .LVU3847
 12374              		.loc 1 3972 15 is_stmt 0 discriminator 4 view .LVU3848
 12375 0158 6846     		mov	r0, sp
 12376 015a FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12377              	.LVL1251:
 12378 015e 0446     		mov	r4, r0
 12379              	.LVL1252:
3973:ad5940lib/ad5940.c **** #ifdef ADI_DEBUG
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 331


3974:ad5940lib/ad5940.c ****     ADI_Print("Voltage before cal: %f \n", AD5940_ADCCode2Volt(ADCCode, ADCPGA_Sel, 1.82));
 12380              		.loc 1 3974 5 is_stmt 1 discriminator 4 view .LVU3849
 12381              		.loc 1 3974 44 is_stmt 0 discriminator 4 view .LVU3850
 12382 0160 9FED3D0A 		vldr.32	s0, .L792+12
 12383 0164 3146     		mov	r1, r6
 12384 0166 FFF7FEFF 		bl	AD5940_ADCCode2Volt
 12385              	.LVL1253:
 12386              		.loc 1 3974 5 discriminator 4 view .LVU3851
 12387 016a B7EEC07A 		vcvt.f64.f32	d7, s0
 12388 016e 53EC172B 		vmov	r2, r3, d7
 12389 0172 3A48     		ldr	r0, .L792+16
 12390 0174 FFF7FEFF 		bl	printf
 12391              	.LVL1254:
3975:ad5940lib/ad5940.c **** #endif
3976:ad5940lib/ad5940.c **** 
3977:ad5940lib/ad5940.c ****     if(time_out == 0) goto DACCALERROR_TIMEOUT;  /* Time out error. */
 12392              		.loc 1 3977 5 is_stmt 1 discriminator 4 view .LVU3852
 12393              		.loc 1 3977 17 is_stmt 0 discriminator 4 view .LVU3853
 12394 0178 009B     		ldr	r3, [sp]
 12395              		.loc 1 3977 7 discriminator 4 view .LVU3854
 12396 017a 002B     		cmp	r3, #0
 12397 017c 4FD0     		beq	.L789
3978:ad5940lib/ad5940.c ****     ADCCode = ADCCode - ExpectedCode;
 12398              		.loc 1 3978 5 is_stmt 1 view .LVU3855
 12399              		.loc 1 3978 13 is_stmt 0 view .LVU3856
 12400 017e A4F50043 		sub	r3, r4, #32768
 12401              	.LVL1255:
3979:ad5940lib/ad5940.c ****     ADCCode = (((ADCCode)*LEB_Denominator)/LSB_Numerator); 
 12402              		.loc 1 3979 5 is_stmt 1 view .LVU3857
 12403              		.loc 1 3979 26 is_stmt 0 view .LVU3858
 12404 0182 03FB08F3 		mul	r3, r3, r8
 12405              	.LVL1256:
 12406              		.loc 1 3979 13 view .LVU3859
 12407 0186 93FBF7F3 		sdiv	r3, r3, r7
 12408              	.LVL1257:
3980:ad5940lib/ad5940.c ****     if(ADCCode>0)
 12409              		.loc 1 3980 5 is_stmt 1 view .LVU3860
 12410              		.loc 1 3980 7 is_stmt 0 view .LVU3861
 12411 018a 002B     		cmp	r3, #0
 12412 018c 52DD     		ble	.L772
3981:ad5940lib/ad5940.c ****       ADCCode = 0xFFF - ADCCode;
 12413              		.loc 1 3981 7 is_stmt 1 view .LVU3862
 12414              		.loc 1 3981 15 is_stmt 0 view .LVU3863
 12415 018e 40F6FF71 		movw	r1, #4095
 12416 0192 C91A     		subs	r1, r1, r3
 12417              	.LVL1258:
 12418              	.L773:
3982:ad5940lib/ad5940.c ****     else
3983:ad5940lib/ad5940.c ****       ADCCode = -ADCCode;
3984:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 12419              		.loc 1 3984 5 is_stmt 1 view .LVU3864
 12420 0194 5046     		mov	r0, r10
 12421 0196 FFF7FEFF 		bl	AD5940_WriteReg
 12422              	.LVL1259:
3985:ad5940lib/ad5940.c ****     AD5940_Delay10us(10);
 12423              		.loc 1 3985 5 view .LVU3865
 12424 019a 0A20     		movs	r0, #10
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 332


 12425 019c FFF7FEFF 		bl	AD5940_Delay10us
 12426              	.LVL1260:
3986:ad5940lib/ad5940.c ****     AD5940_WriteReg(REG_AFE_HSDACDAT, 0x800);
 12427              		.loc 1 3986 5 view .LVU3866
 12428 01a0 4FF40061 		mov	r1, #2048
 12429 01a4 42F24800 		movw	r0, #8264
 12430 01a8 FFF7FEFF 		bl	AD5940_WriteReg
 12431              	.LVL1261:
3987:ad5940lib/ad5940.c ****     AD5940_Delay10us(10);
 12432              		.loc 1 3987 5 view .LVU3867
 12433 01ac 0A20     		movs	r0, #10
 12434 01ae FFF7FEFF 		bl	AD5940_Delay10us
 12435              	.LVL1262:
3988:ad5940lib/ad5940.c **** #ifdef ADI_DEBUG
3989:ad5940lib/ad5940.c **** 		ADCCode = __AD5940_TakeMeasurement(&time_out);
 12436              		.loc 1 3989 3 view .LVU3868
 12437              		.loc 1 3989 13 is_stmt 0 view .LVU3869
 12438 01b2 6846     		mov	r0, sp
 12439 01b4 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12440              	.LVL1263:
3990:ad5940lib/ad5940.c **** 		ADI_Print("Voltage after cal: %f \n", AD5940_ADCCode2Volt(ADCCode, ADCPGA_Sel, 1.82));
 12441              		.loc 1 3990 3 is_stmt 1 view .LVU3870
 12442              		.loc 1 3990 41 is_stmt 0 view .LVU3871
 12443 01b8 9FED270A 		vldr.32	s0, .L792+12
 12444 01bc 3146     		mov	r1, r6
 12445 01be FFF7FEFF 		bl	AD5940_ADCCode2Volt
 12446              	.LVL1264:
 12447              		.loc 1 3990 3 view .LVU3872
 12448 01c2 B7EEC07A 		vcvt.f64.f32	d7, s0
 12449 01c6 53EC172B 		vmov	r2, r3, d7
 12450 01ca 2548     		ldr	r0, .L792+20
 12451 01cc FFF7FEFF 		bl	printf
 12452              	.LVL1265:
 12453              	.LBE29:
3991:ad5940lib/ad5940.c **** #endif
3992:ad5940lib/ad5940.c ****   }
3993:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 12454              		.loc 1 3993 3 is_stmt 1 view .LVU3873
 12455 01d0 0021     		movs	r1, #0
 12456 01d2 42F23020 		movw	r0, #8752
 12457 01d6 FFF7FEFF 		bl	AD5940_WriteReg
 12458              	.LVL1266:
3994:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 12459              		.loc 1 3994 3 view .LVU3874
 12460              		.loc 1 3994 10 is_stmt 0 view .LVU3875
 12461 01da 0020     		movs	r0, #0
 12462              	.LVL1267:
 12463              	.L763:
3995:ad5940lib/ad5940.c **** DACCALERROR_TIMEOUT:
3996:ad5940lib/ad5940.c ****   AD5940_ADCConvtCtrlS(bFALSE);  /* Stop conversion */
3997:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
3998:ad5940lib/ad5940.c ****   return AD5940ERR_TIMEOUT;
3999:ad5940lib/ad5940.c **** }
 12464              		.loc 1 3999 1 view .LVU3876
 12465 01dc 35B0     		add	sp, sp, #212
 12466              	.LCFI178:
 12467              		.cfi_remember_state
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 333


 12468              		.cfi_def_cfa_offset 36
 12469              		@ sp needed
 12470 01de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 12471              	.LVL1268:
 12472              	.L786:
 12473              	.LCFI179:
 12474              		.cfi_restore_state
3872:ad5940lib/ad5940.c ****     if(pCalCfg->HsDacGain == HSDACGAIN_0P2)
 12475              		.loc 1 3872 49 view .LVU3877
 12476 01e2 42F2BC2A 		movw	r10, #8892
 12477 01e6 29E7     		b	.L767
 12478              	.LVL1269:
 12479              	.L787:
3877:ad5940lib/ad5940.c ****     }
 12480              		.loc 1 3877 18 view .LVU3878
 12481 01e8 0326     		movs	r6, #3
3876:ad5940lib/ad5940.c ****       ADCPGA_Sel = ADCPGA_4;
 12482              		.loc 1 3876 23 view .LVU3879
 12483 01ea 4FF00E08 		mov	r8, #14
3875:ad5940lib/ad5940.c ****       LEB_Denominator = 14;
 12484              		.loc 1 3875 21 view .LVU3880
 12485 01ee 2827     		movs	r7, #40
 12486 01f0 2AE7     		b	.L768
 12487              	.LVL1270:
 12488              	.L766:
3887:ad5940lib/ad5940.c ****     if(pCalCfg->HsDacGain == HSDACGAIN_0P2)
 12489              		.loc 1 3887 5 is_stmt 1 view .LVU3881
3887:ad5940lib/ad5940.c ****     if(pCalCfg->HsDacGain == HSDACGAIN_0P2)
 12490              		.loc 1 3887 54 is_stmt 0 view .LVU3882
 12491 01f2 B9F1010F 		cmp	r9, #1
 12492 01f6 08D0     		beq	.L790
 12493 01f8 42F2642A 		movw	r10, #8804
 12494              	.L769:
 12495              	.LVL1271:
3888:ad5940lib/ad5940.c ****     {
 12496              		.loc 1 3888 5 is_stmt 1 discriminator 4 view .LVU3883
3888:ad5940lib/ad5940.c ****     {
 12497              		.loc 1 3888 7 is_stmt 0 discriminator 4 view .LVU3884
 12498 01fc 012B     		cmp	r3, #1
 12499 01fe 07D0     		beq	.L791
3898:ad5940lib/ad5940.c ****     break;
 12500              		.loc 1 3898 16 view .LVU3885
 12501 0200 0326     		movs	r6, #3
 12502 0202 4FF00E08 		mov	r8, #14
3895:ad5940lib/ad5940.c ****       LEB_Denominator = 14;
 12503              		.loc 1 3895 21 view .LVU3886
 12504 0206 1927     		movs	r7, #25
 12505 0208 1EE7     		b	.L768
 12506              	.LVL1272:
 12507              	.L790:
3887:ad5940lib/ad5940.c ****     if(pCalCfg->HsDacGain == HSDACGAIN_0P2)
 12508              		.loc 1 3887 54 view .LVU3887
 12509 020a 42F2B82A 		movw	r10, #8888
 12510 020e F5E7     		b	.L769
 12511              	.LVL1273:
 12512              	.L791:
3898:ad5940lib/ad5940.c ****     break;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 334


 12513              		.loc 1 3898 16 view .LVU3888
 12514 0210 0326     		movs	r6, #3
3888:ad5940lib/ad5940.c ****     {
 12515              		.loc 1 3888 7 view .LVU3889
 12516 0212 4FF00E08 		mov	r8, #14
3890:ad5940lib/ad5940.c ****       LEB_Denominator = 14;
 12517              		.loc 1 3890 21 view .LVU3890
 12518 0216 0527     		movs	r7, #5
 12519 0218 16E7     		b	.L768
 12520              	.LVL1274:
 12521              	.L788:
3937:ad5940lib/ad5940.c ****   hsloop_cfg.HsTiaCfg.DiodeClose = bFALSE;
 12522              		.loc 1 3937 52 view .LVU3891
 12523 021a 0723     		movs	r3, #7
 12524 021c 51E7     		b	.L770
 12525              	.LVL1275:
 12526              	.L789:
 12527              	.LBB30:
3977:ad5940lib/ad5940.c ****     ADCCode = ADCCode - ExpectedCode;
 12528              		.loc 1 3977 23 is_stmt 1 discriminator 1 view .LVU3892
 12529              	.LDL1:
 12530              	.LBE30:
3996:ad5940lib/ad5940.c ****   AD5940_WriteReg(REG_AFE_CALDATLOCK, 0);  /* Lock KEY */
 12531              		.loc 1 3996 3 discriminator 1 view .LVU3893
 12532 021e 4846     		mov	r0, r9
 12533 0220 FFF7FEFF 		bl	AD5940_ADCConvtCtrlS
 12534              	.LVL1276:
3997:ad5940lib/ad5940.c ****   return AD5940ERR_TIMEOUT;
 12535              		.loc 1 3997 3 discriminator 1 view .LVU3894
 12536 0224 4946     		mov	r1, r9
 12537 0226 42F23020 		movw	r0, #8752
 12538 022a FFF7FEFF 		bl	AD5940_WriteReg
 12539              	.LVL1277:
3998:ad5940lib/ad5940.c **** }
 12540              		.loc 1 3998 3 discriminator 1 view .LVU3895
3998:ad5940lib/ad5940.c **** }
 12541              		.loc 1 3998 10 is_stmt 0 discriminator 1 view .LVU3896
 12542 022e 6FF00900 		mvn	r0, #9
 12543 0232 D3E7     		b	.L763
 12544              	.LVL1278:
 12545              	.L772:
 12546              	.LBB31:
3983:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 12547              		.loc 1 3983 7 is_stmt 1 view .LVU3897
3983:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 12548              		.loc 1 3983 15 is_stmt 0 view .LVU3898
 12549 0234 5942     		rsbs	r1, r3, #0
 12550              	.LVL1279:
3983:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 12551              		.loc 1 3983 15 view .LVU3899
 12552 0236 ADE7     		b	.L773
 12553              	.LVL1280:
 12554              	.L774:
 12555              	.LCFI180:
 12556              		.cfi_def_cfa_offset 0
 12557              		.cfi_restore 4
 12558              		.cfi_restore 5
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 335


 12559              		.cfi_restore 6
 12560              		.cfi_restore 7
 12561              		.cfi_restore 8
 12562              		.cfi_restore 9
 12563              		.cfi_restore 10
 12564              		.cfi_restore 11
 12565              		.cfi_restore 14
3983:ad5940lib/ad5940.c ****     AD5940_WriteReg(regaddr_offset, ADCCode);
 12566              		.loc 1 3983 15 view .LVU3900
 12567              	.LBE31:
3863:ad5940lib/ad5940.c ****   if(pCalCfg->ExcitBufGain > 1) return AD5940ERR_PARA;
 12568              		.loc 1 3863 30 view .LVU3901
 12569 0238 6FF00200 		mvn	r0, #2
 12570              	.LVL1281:
 12571              		.loc 1 3999 1 view .LVU3902
 12572 023c 7047     		bx	lr
 12573              	.LVL1282:
 12574              	.L775:
 12575              	.LCFI181:
 12576              		.cfi_def_cfa_offset 248
 12577              		.cfi_offset 4, -36
 12578              		.cfi_offset 5, -32
 12579              		.cfi_offset 6, -28
 12580              		.cfi_offset 7, -24
 12581              		.cfi_offset 8, -20
 12582              		.cfi_offset 9, -16
 12583              		.cfi_offset 10, -12
 12584              		.cfi_offset 11, -8
 12585              		.cfi_offset 14, -4
3864:ad5940lib/ad5940.c ****   if(pCalCfg->HsDacGain > 1) return AD5940ERR_PARA;
 12586              		.loc 1 3864 40 view .LVU3903
 12587 023e 6FF00100 		mvn	r0, #1
 12588              	.LVL1283:
3864:ad5940lib/ad5940.c ****   if(pCalCfg->HsDacGain > 1) return AD5940ERR_PARA;
 12589              		.loc 1 3864 40 view .LVU3904
 12590 0242 CBE7     		b	.L763
 12591              	.LVL1284:
 12592              	.L776:
3865:ad5940lib/ad5940.c **** 
 12593              		.loc 1 3865 37 view .LVU3905
 12594 0244 6FF00100 		mvn	r0, #1
 12595              	.LVL1285:
3865:ad5940lib/ad5940.c **** 
 12596              		.loc 1 3865 37 view .LVU3906
 12597 0248 C8E7     		b	.L763
 12598              	.L793:
 12599 024a 00BF     		.align	2
 12600              	.L792:
 12601 024c E0FF3900 		.word	3801056
 12602 0250 E04E1100 		.word	1134304
 12603 0254 AFA587DE 		.word	-561535569
 12604 0258 C3F5E83F 		.word	1072231875
 12605 025c 00000000 		.word	.LC17
 12606 0260 1C000000 		.word	.LC18
 12607              		.cfi_endproc
 12608              	.LFE120:
 12610              		.section	.text.AD5940_LPDACCal,"ax",%progbits
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 336


 12611              		.align	1
 12612              		.global	AD5940_LPDACCal
 12613              		.syntax unified
 12614              		.thumb
 12615              		.thumb_func
 12616              		.fpu fpv5-d16
 12618              	AD5940_LPDACCal:
 12619              	.LVL1286:
 12620              	.LFB121:
4000:ad5940lib/ad5940.c **** 
4001:ad5940lib/ad5940.c **** /**
4002:ad5940lib/ad5940.c ****  * @brief Use ADC to measure LPDAC offset and gain factor.
4003:ad5940lib/ad5940.c ****  * @note Assume ADC is accurate enough or accurate than LPDAC at least.
4004:ad5940lib/ad5940.c ****  * @param pCalCfg: pointer to structure.
4005:ad5940lib/ad5940.c ****  * @param pResult: the pointer to save calibration result.
4006:ad5940lib/ad5940.c ****  * @return AD5940ERR_OK if succeed.
4007:ad5940lib/ad5940.c **** **/
4008:ad5940lib/ad5940.c **** AD5940Err AD5940_LPDACCal(LPDACCal_Type *pCalCfg, LPDACPara_Type *pResult)
4009:ad5940lib/ad5940.c **** {
 12621              		.loc 1 4009 1 is_stmt 1 view -0
 12622              		.cfi_startproc
 12623              		@ args = 0, pretend = 0, frame = 72
 12624              		@ frame_needed = 0, uses_anonymous_args = 0
4010:ad5940lib/ad5940.c ****   AD5940Err error = AD5940ERR_OK;
 12625              		.loc 1 4010 3 view .LVU3908
4011:ad5940lib/ad5940.c ****   LPDACCfg_Type LpDacCfg;
 12626              		.loc 1 4011 3 view .LVU3909
4012:ad5940lib/ad5940.c ****   ADCBaseCfg_Type adc_base;
 12627              		.loc 1 4012 3 view .LVU3910
4013:ad5940lib/ad5940.c ****   ADCFilterCfg_Type adc_filter;
 12628              		.loc 1 4013 3 view .LVU3911
4014:ad5940lib/ad5940.c **** 
4015:ad5940lib/ad5940.c ****   int32_t time_out;
 12629              		.loc 1 4015 3 view .LVU3912
4016:ad5940lib/ad5940.c ****   uint32_t INTCCfg;
 12630              		.loc 1 4016 3 view .LVU3913
4017:ad5940lib/ad5940.c ****   int32_t ADCCode, ADCCodeVref1p1;
 12631              		.loc 1 4017 3 view .LVU3914
4018:ad5940lib/ad5940.c ****   BoolFlag bADCClk32MHzMode;
 12632              		.loc 1 4018 3 view .LVU3915
4019:ad5940lib/ad5940.c ****   
4020:ad5940lib/ad5940.c ****   if(pCalCfg == NULL) return AD5940ERR_NULLP; 
 12633              		.loc 1 4020 3 view .LVU3916
 12634              		.loc 1 4020 5 is_stmt 0 view .LVU3917
 12635 0000 0028     		cmp	r0, #0
 12636 0002 00F07881 		beq	.L807
4009:ad5940lib/ad5940.c ****   AD5940Err error = AD5940ERR_OK;
 12637              		.loc 1 4009 1 view .LVU3918
 12638 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12639              	.LCFI182:
 12640              		.cfi_def_cfa_offset 24
 12641              		.cfi_offset 4, -24
 12642              		.cfi_offset 5, -20
 12643              		.cfi_offset 6, -16
 12644              		.cfi_offset 7, -12
 12645              		.cfi_offset 8, -8
 12646              		.cfi_offset 14, -4
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 337


 12647 000a 92B0     		sub	sp, sp, #72
 12648              	.LCFI183:
 12649              		.cfi_def_cfa_offset 96
 12650 000c 0D46     		mov	r5, r1
 12651 000e 0446     		mov	r4, r0
4021:ad5940lib/ad5940.c ****   if(pResult == NULL) return AD5940ERR_NULLP;  
 12652              		.loc 1 4021 3 is_stmt 1 view .LVU3919
 12653              		.loc 1 4021 5 is_stmt 0 view .LVU3920
 12654 0010 0029     		cmp	r1, #0
 12655 0012 00F07381 		beq	.L808
4022:ad5940lib/ad5940.c ****   if(pCalCfg->AdcClkFreq > (32000000*0.8))
 12656              		.loc 1 4022 3 is_stmt 1 view .LVU3921
 12657              	.LVL1287:
4023:ad5940lib/ad5940.c ****     bADCClk32MHzMode = bTRUE;
4024:ad5940lib/ad5940.c **** 
4025:ad5940lib/ad5940.c ****   /* Step0: Do initialization */
4026:ad5940lib/ad5940.c ****   /* Turn on AD5940 references in case it's disabled. */
4027:ad5940lib/ad5940.c ****   __AD5940_ReferenceON();
 12658              		.loc 1 4027 3 view .LVU3922
 12659 0016 FFF7FEFF 		bl	__AD5940_ReferenceON
 12660              	.LVL1288:
4028:ad5940lib/ad5940.c ****   LpDacCfg.LpdacSel = pCalCfg->LpdacSel;
 12661              		.loc 1 4028 3 view .LVU3923
 12662              		.loc 1 4028 30 is_stmt 0 view .LVU3924
 12663 001a 2368     		ldr	r3, [r4]
 12664              		.loc 1 4028 21 view .LVU3925
 12665 001c 0A93     		str	r3, [sp, #40]
4029:ad5940lib/ad5940.c ****   LpDacCfg.DacData12Bit = 0;
 12666              		.loc 1 4029 3 is_stmt 1 view .LVU3926
 12667              		.loc 1 4029 25 is_stmt 0 view .LVU3927
 12668 001e 0026     		movs	r6, #0
 12669 0020 ADF84260 		strh	r6, [sp, #66]	@ movhi
4030:ad5940lib/ad5940.c ****   LpDacCfg.DacData6Bit = 0;  
 12670              		.loc 1 4030 3 is_stmt 1 view .LVU3928
 12671              		.loc 1 4030 24 is_stmt 0 view .LVU3929
 12672 0024 ADF84460 		strh	r6, [sp, #68]	@ movhi
4031:ad5940lib/ad5940.c ****   LpDacCfg.DataRst = bFALSE;
 12673              		.loc 1 4031 3 is_stmt 1 view .LVU3930
 12674              		.loc 1 4031 20 is_stmt 0 view .LVU3931
 12675 0028 8DF84060 		strb	r6, [sp, #64]
4032:ad5940lib/ad5940.c ****   LpDacCfg.LpDacRef = LPDACREF_2P5;
 12676              		.loc 1 4032 3 is_stmt 1 view .LVU3932
 12677              		.loc 1 4032 21 is_stmt 0 view .LVU3933
 12678 002c 0F96     		str	r6, [sp, #60]
4033:ad5940lib/ad5940.c ****   LpDacCfg.LpDacSrc = LPDACSRC_MMR;
 12679              		.loc 1 4033 3 is_stmt 1 view .LVU3934
 12680              		.loc 1 4033 21 is_stmt 0 view .LVU3935
 12681 002e 0B96     		str	r6, [sp, #44]
4034:ad5940lib/ad5940.c ****   LpDacCfg.LpDacSW = LPDACSW_VBIAS2PIN|LPDACSW_VZERO2PIN;
 12682              		.loc 1 4034 3 is_stmt 1 view .LVU3936
 12683              		.loc 1 4034 20 is_stmt 0 view .LVU3937
 12684 0030 0A23     		movs	r3, #10
 12685 0032 0E93     		str	r3, [sp, #56]
4035:ad5940lib/ad5940.c ****   LpDacCfg.LpDacVbiasMux = LPDACVBIAS_12BIT;
 12686              		.loc 1 4035 3 is_stmt 1 view .LVU3938
 12687              		.loc 1 4035 26 is_stmt 0 view .LVU3939
 12688 0034 0D96     		str	r6, [sp, #52]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 338


4036:ad5940lib/ad5940.c ****   LpDacCfg.LpDacVzeroMux = LPDACVZERO_6BIT;
 12689              		.loc 1 4036 3 is_stmt 1 view .LVU3940
 12690              		.loc 1 4036 26 is_stmt 0 view .LVU3941
 12691 0036 0C96     		str	r6, [sp, #48]
4037:ad5940lib/ad5940.c ****   LpDacCfg.PowerEn = bTRUE;
 12692              		.loc 1 4037 3 is_stmt 1 view .LVU3942
 12693              		.loc 1 4037 20 is_stmt 0 view .LVU3943
 12694 0038 4FF00108 		mov	r8, #1
 12695 003c 8DF84180 		strb	r8, [sp, #65]
4038:ad5940lib/ad5940.c ****   AD5940_LPDACCfgS(&LpDacCfg);
 12696              		.loc 1 4038 3 is_stmt 1 view .LVU3944
 12697 0040 0AA8     		add	r0, sp, #40
 12698 0042 FFF7FEFF 		bl	AD5940_LPDACCfgS
 12699              	.LVL1289:
4039:ad5940lib/ad5940.c **** 
4040:ad5940lib/ad5940.c ****   /* Initialize ADC filters ADCRawData-->SINC3-->SINC2+NOTCH. Use SIN2 data for calibration-->Lower
4041:ad5940lib/ad5940.c ****   adc_filter.ADCSinc3Osr = pCalCfg->ADCSinc3Osr;
 12700              		.loc 1 4041 3 view .LVU3945
 12701              		.loc 1 4041 35 is_stmt 0 view .LVU3946
 12702 0046 2369     		ldr	r3, [r4, #16]
 12703              		.loc 1 4041 26 view .LVU3947
 12704 0048 0293     		str	r3, [sp, #8]
4042:ad5940lib/ad5940.c ****   adc_filter.ADCSinc2Osr = pCalCfg->ADCSinc2Osr;  /* 800KSPS/4/1333 = 150SPS */
 12705              		.loc 1 4042 3 is_stmt 1 view .LVU3948
 12706              		.loc 1 4042 35 is_stmt 0 view .LVU3949
 12707 004a 6369     		ldr	r3, [r4, #20]
 12708              		.loc 1 4042 26 view .LVU3950
 12709 004c 0393     		str	r3, [sp, #12]
4043:ad5940lib/ad5940.c ****   adc_filter.ADCAvgNum = ADCAVGNUM_2;               /* Don't care about it. Average function is onl
 12710              		.loc 1 4043 3 is_stmt 1 view .LVU3951
 12711              		.loc 1 4043 24 is_stmt 0 view .LVU3952
 12712 004e 0496     		str	r6, [sp, #16]
4044:ad5940lib/ad5940.c ****   adc_filter.ADCRate = bADCClk32MHzMode?ADCRATE_1P6MHZ:ADCRATE_800KHZ;        /* If ADC clock is 32
 12713              		.loc 1 4044 3 is_stmt 1 view .LVU3953
 12714              		.loc 1 4044 22 is_stmt 0 view .LVU3954
 12715 0050 0596     		str	r6, [sp, #20]
4045:ad5940lib/ad5940.c ****   adc_filter.BpNotch = bTRUE;                       /* SINC2+Notch is one block, when bypass notch 
 12716              		.loc 1 4045 3 is_stmt 1 view .LVU3955
 12717              		.loc 1 4045 22 is_stmt 0 view .LVU3956
 12718 0052 8DF81880 		strb	r8, [sp, #24]
4046:ad5940lib/ad5940.c ****   adc_filter.BpSinc3 = bFALSE;                      /* We use SINC3 filter. */
 12719              		.loc 1 4046 3 is_stmt 1 view .LVU3957
 12720              		.loc 1 4046 22 is_stmt 0 view .LVU3958
 12721 0056 8DF81960 		strb	r6, [sp, #25]
4047:ad5940lib/ad5940.c ****   adc_filter.Sinc2NotchEnable = bTRUE;              /* Enable the SINC2+Notch block. You can also u
 12722              		.loc 1 4047 3 is_stmt 1 view .LVU3959
 12723              		.loc 1 4047 31 is_stmt 0 view .LVU3960
 12724 005a 8DF81A80 		strb	r8, [sp, #26]
4048:ad5940lib/ad5940.c ****   AD5940_ADCFilterCfgS(&adc_filter);
 12725              		.loc 1 4048 3 is_stmt 1 view .LVU3961
 12726 005e 02A8     		add	r0, sp, #8
 12727 0060 FFF7FEFF 		bl	AD5940_ADCFilterCfgS
 12728              	.LVL1290:
4049:ad5940lib/ad5940.c ****   /* Initialize ADC MUx and PGA */
4050:ad5940lib/ad5940.c ****   adc_base.ADCMuxP = ADCMUXP_AGND;
 12729              		.loc 1 4050 3 view .LVU3962
 12730              		.loc 1 4050 20 is_stmt 0 view .LVU3963
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 339


 12731 0064 2323     		movs	r3, #35
 12732 0066 0793     		str	r3, [sp, #28]
4051:ad5940lib/ad5940.c ****   adc_base.ADCMuxN = ADCMUXN_VSET1P1;
 12733              		.loc 1 4051 3 is_stmt 1 view .LVU3964
 12734              		.loc 1 4051 20 is_stmt 0 view .LVU3965
 12735 0068 0823     		movs	r3, #8
 12736 006a 0893     		str	r3, [sp, #32]
4052:ad5940lib/ad5940.c ****   adc_base.ADCPga = ADCPGA_1;
 12737              		.loc 1 4052 3 is_stmt 1 view .LVU3966
 12738              		.loc 1 4052 19 is_stmt 0 view .LVU3967
 12739 006c 0996     		str	r6, [sp, #36]
4053:ad5940lib/ad5940.c ****   AD5940_ADCBaseCfgS(&adc_base);
 12740              		.loc 1 4053 3 is_stmt 1 view .LVU3968
 12741 006e 07A8     		add	r0, sp, #28
 12742 0070 FFF7FEFF 		bl	AD5940_ADCBaseCfgS
 12743              	.LVL1291:
4054:ad5940lib/ad5940.c ****   /* Turn ON ADC and its reference. And SINC2. */
4055:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE); /* Disable all firstly, we only enable things we use */
 12744              		.loc 1 4055 3 view .LVU3969
 12745 0074 3146     		mov	r1, r6
 12746 0076 A348     		ldr	r0, .L817
 12747 0078 FFF7FEFF 		bl	AD5940_AFECtrlS
 12748              	.LVL1292:
4056:ad5940lib/ad5940.c ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_HPREFPWR|AFECTRL_SINC2NOTCH, bTRUE);
 12749              		.loc 1 4056 3 view .LVU3970
 12750 007c 4146     		mov	r1, r8
 12751 007e A248     		ldr	r0, .L817+4
 12752 0080 FFF7FEFF 		bl	AD5940_AFECtrlS
 12753              	.LVL1293:
4057:ad5940lib/ad5940.c ****   AD5940_Delay10us(25);                     /* Wait 250us for reference power up */
 12754              		.loc 1 4057 3 view .LVU3971
 12755 0084 1920     		movs	r0, #25
 12756 0086 FFF7FEFF 		bl	AD5940_Delay10us
 12757              	.LVL1294:
4058:ad5940lib/ad5940.c ****   /* INTC configure and open calibration lock */
4059:ad5940lib/ad5940.c ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 12758              		.loc 1 4059 3 view .LVU3972
 12759              		.loc 1 4059 13 is_stmt 0 view .LVU3973
 12760 008a 4046     		mov	r0, r8
 12761 008c FFF7FEFF 		bl	AD5940_INTCGetCfg
 12762              	.LVL1295:
 12763 0090 0746     		mov	r7, r0
 12764              	.LVL1296:
4060:ad5940lib/ad5940.c ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bTRUE); /* Enable SINC2 Interrupt in INTC1 */
 12765              		.loc 1 4060 3 is_stmt 1 view .LVU3974
 12766 0092 4246     		mov	r2, r8
 12767 0094 0421     		movs	r1, #4
 12768 0096 4046     		mov	r0, r8
 12769              	.LVL1297:
 12770              		.loc 1 4060 3 is_stmt 0 view .LVU3975
 12771 0098 FFF7FEFF 		bl	AD5940_INTCCfg
 12772              	.LVL1298:
4061:ad5940lib/ad5940.c ****   /* Step1: Measure internal 1.1V reference. */
4062:ad5940lib/ad5940.c ****   {
4063:ad5940lib/ad5940.c ****     //AD5940_ADCMuxCfgS(ADCMUXP_AGND, ADCMUXN_VSET1P1);
4064:ad5940lib/ad5940.c ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 12773              		.loc 1 4064 5 is_stmt 1 view .LVU3976
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 340


 12774              		.loc 1 4064 23 is_stmt 0 view .LVU3977
 12775 009c E369     		ldr	r3, [r4, #28]
 12776              		.loc 1 4064 14 view .LVU3978
 12777 009e 0193     		str	r3, [sp, #4]
4065:ad5940lib/ad5940.c ****     ADCCodeVref1p1 = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and
 12778              		.loc 1 4065 5 is_stmt 1 view .LVU3979
 12779              		.loc 1 4065 22 is_stmt 0 view .LVU3980
 12780 00a0 01A8     		add	r0, sp, #4
 12781 00a2 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12782              	.LVL1299:
 12783 00a6 0646     		mov	r6, r0
 12784              	.LVL1300:
4066:ad5940lib/ad5940.c ****     if(time_out == 0)
 12785              		.loc 1 4066 5 is_stmt 1 view .LVU3981
 12786              		.loc 1 4066 17 is_stmt 0 view .LVU3982
 12787 00a8 019B     		ldr	r3, [sp, #4]
 12788              		.loc 1 4066 7 view .LVU3983
 12789 00aa 002B     		cmp	r3, #0
 12790 00ac 00F01D81 		beq	.L796
4067:ad5940lib/ad5940.c ****     {
4068:ad5940lib/ad5940.c ****       error = AD5940ERR_TIMEOUT;
4069:ad5940lib/ad5940.c ****       goto LPDACCALERROR;
4070:ad5940lib/ad5940.c ****     }  /* Time out error. */
4071:ad5940lib/ad5940.c ****     /* Equation1: ADCCodeVref1p1 = AGND - Vref1p1 */
4072:ad5940lib/ad5940.c ****   }
4073:ad5940lib/ad5940.c ****   /* Step2: Do offset measurement. */
4074:ad5940lib/ad5940.c ****   {
4075:ad5940lib/ad5940.c ****     /* Equation2': ADCCode = Vbias0/1 - Vref1p1 */
4076:ad5940lib/ad5940.c ****     AD5940_LPDACWriteS(0,0);  /* Set LPDAC output voltage to 0.2V(zero code) */
 12791              		.loc 1 4076 5 is_stmt 1 view .LVU3984
 12792 00b0 0021     		movs	r1, #0
 12793 00b2 0846     		mov	r0, r1
 12794              	.LVL1301:
 12795              		.loc 1 4076 5 is_stmt 0 view .LVU3985
 12796 00b4 FFF7FEFF 		bl	AD5940_LPDACWriteS
 12797              	.LVL1302:
4077:ad5940lib/ad5940.c ****     if(pCalCfg->SettleTime10us > 0)
 12798              		.loc 1 4077 5 is_stmt 1 view .LVU3986
 12799              		.loc 1 4077 15 is_stmt 0 view .LVU3987
 12800 00b8 A069     		ldr	r0, [r4, #24]
 12801              		.loc 1 4077 7 view .LVU3988
 12802 00ba 0028     		cmp	r0, #0
 12803 00bc 00F3F480 		bgt	.L814
 12804              	.L797:
4078:ad5940lib/ad5940.c ****       AD5940_Delay10us(pCalCfg->SettleTime10us);  /* Delay nx10us */
4079:ad5940lib/ad5940.c ****     if(pCalCfg->LpdacSel == LPDAC0)
 12805              		.loc 1 4079 5 is_stmt 1 view .LVU3989
 12806              		.loc 1 4079 15 is_stmt 0 view .LVU3990
 12807 00c0 2368     		ldr	r3, [r4]
 12808              		.loc 1 4079 7 view .LVU3991
 12809 00c2 002B     		cmp	r3, #0
 12810 00c4 40F0F380 		bne	.L798
4080:ad5940lib/ad5940.c ****       AD5940_ADCMuxCfgS(ADCMUXP_VBIAS0, ADCMUXN_VREF1P1); /* Vbias0 is routed to 12BIT LPDAC */
 12811              		.loc 1 4080 7 is_stmt 1 view .LVU3992
 12812 00c8 0821     		movs	r1, #8
 12813 00ca 1820     		movs	r0, #24
 12814 00cc FFF7FEFF 		bl	AD5940_ADCMuxCfgS
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 341


 12815              	.LVL1303:
 12816              	.L799:
4081:ad5940lib/ad5940.c ****     else
4082:ad5940lib/ad5940.c ****       AD5940_ADCMuxCfgS(ADCMUXP_VBIAS1, ADCMUXN_VREF1P1); /* Vbias1 is routed to 12BIT LPDAC */
4083:ad5940lib/ad5940.c **** 
4084:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
 12817              		.loc 1 4084 5 view .LVU3993
 12818 00d0 0520     		movs	r0, #5
 12819 00d2 FFF7FEFF 		bl	AD5940_Delay10us
 12820              	.LVL1304:
4085:ad5940lib/ad5940.c ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 12821              		.loc 1 4085 5 view .LVU3994
 12822              		.loc 1 4085 23 is_stmt 0 view .LVU3995
 12823 00d6 E369     		ldr	r3, [r4, #28]
 12824              		.loc 1 4085 14 view .LVU3996
 12825 00d8 0193     		str	r3, [sp, #4]
4086:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 12826              		.loc 1 4086 5 is_stmt 1 view .LVU3997
 12827              		.loc 1 4086 15 is_stmt 0 view .LVU3998
 12828 00da 01A8     		add	r0, sp, #4
 12829 00dc FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12830              	.LVL1305:
4087:ad5940lib/ad5940.c ****     if(time_out == 0)
 12831              		.loc 1 4087 5 is_stmt 1 view .LVU3999
 12832              		.loc 1 4087 17 is_stmt 0 view .LVU4000
 12833 00e0 019B     		ldr	r3, [sp, #4]
 12834              		.loc 1 4087 7 view .LVU4001
 12835 00e2 002B     		cmp	r3, #0
 12836 00e4 00F00181 		beq	.L796
4088:ad5940lib/ad5940.c ****     {
4089:ad5940lib/ad5940.c ****       error = AD5940ERR_TIMEOUT;
4090:ad5940lib/ad5940.c ****       goto LPDACCALERROR;
4091:ad5940lib/ad5940.c ****     }  /* Time out error. */
4092:ad5940lib/ad5940.c ****     /* Calculate the offset voltage using Equation2 - Equation1 */
4093:ad5940lib/ad5940.c ****     ADCCode -= ADCCodeVref1p1;  /* Get the code of Vbias0-AGND. Then calculate the offset voltage i
 12837              		.loc 1 4093 5 is_stmt 1 view .LVU4002
 12838              		.loc 1 4093 13 is_stmt 0 view .LVU4003
 12839 00e8 831B     		subs	r3, r0, r6
 12840 00ea 07EE903A 		vmov	s15, r3	@ int
 12841              	.LVL1306:
4094:ad5940lib/ad5940.c ****     pResult->bC2V_DAC12B = ADCCode*pCalCfg->ADCRefVolt*1e3f/32768*1.835f/1.82f; /*mV unit*/
 12842              		.loc 1 4094 5 is_stmt 1 view .LVU4004
 12843              		.loc 1 4094 43 is_stmt 0 view .LVU4005
 12844 00ee 94ED037A 		vldr.32	s14, [r4, #12]
 12845              		.loc 1 4094 35 view .LVU4006
 12846 00f2 F8EEE77A 		vcvt.f32.s32	s15, s15
 12847 00f6 67EE877A 		vmul.f32	s15, s15, s14
 12848              		.loc 1 4094 55 view .LVU4007
 12849 00fa 9FED847A 		vldr.32	s14, .L817+8
 12850 00fe 67EE877A 		vmul.f32	s15, s15, s14
 12851              		.loc 1 4094 60 view .LVU4008
 12852 0102 9FED837A 		vldr.32	s14, .L817+12
 12853 0106 67EE877A 		vmul.f32	s15, s15, s14
 12854              		.loc 1 4094 66 view .LVU4009
 12855 010a 9FED827A 		vldr.32	s14, .L817+16
 12856 010e 67EE877A 		vmul.f32	s15, s15, s14
 12857              		.loc 1 4094 73 view .LVU4010
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 342


 12858 0112 DFED816A 		vldr.32	s13, .L817+20
 12859 0116 87EEA67A 		vdiv.f32	s14, s15, s13
 12860              		.loc 1 4094 26 view .LVU4011
 12861 011a 85ED017A 		vstr.32	s14, [r5, #4]
4095:ad5940lib/ad5940.c ****     /* Measure 6BIT DAC output(Vzero0/1) */
4096:ad5940lib/ad5940.c ****     if(pCalCfg->LpdacSel == LPDAC0)
 12862              		.loc 1 4096 5 is_stmt 1 view .LVU4012
 12863              		.loc 1 4096 15 is_stmt 0 view .LVU4013
 12864 011e 2368     		ldr	r3, [r4]
 12865              	.LVL1307:
 12866              		.loc 1 4096 7 view .LVU4014
 12867 0120 002B     		cmp	r3, #0
 12868 0122 40F0C980 		bne	.L800
4097:ad5940lib/ad5940.c ****       AD5940_ADCMuxCfgS(ADCMUXP_VZERO0, ADCMUXN_VREF1P1); /* Vbias0 is routed to 12BIT LPDAC */
 12869              		.loc 1 4097 7 is_stmt 1 view .LVU4015
 12870 0126 0821     		movs	r1, #8
 12871 0128 1720     		movs	r0, #23
 12872              	.LVL1308:
 12873              		.loc 1 4097 7 is_stmt 0 view .LVU4016
 12874 012a FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 12875              	.LVL1309:
 12876              	.L801:
4098:ad5940lib/ad5940.c ****     else
4099:ad5940lib/ad5940.c ****       AD5940_ADCMuxCfgS(ADCMUXP_VZERO1, ADCMUXN_VREF1P1); /* Vbias1 is routed to 12BIT LPDAC */
4100:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
 12877              		.loc 1 4100 5 is_stmt 1 view .LVU4017
 12878 012e 0520     		movs	r0, #5
 12879 0130 FFF7FEFF 		bl	AD5940_Delay10us
 12880              	.LVL1310:
4101:ad5940lib/ad5940.c ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 12881              		.loc 1 4101 5 view .LVU4018
 12882              		.loc 1 4101 23 is_stmt 0 view .LVU4019
 12883 0134 E369     		ldr	r3, [r4, #28]
 12884              		.loc 1 4101 14 view .LVU4020
 12885 0136 0193     		str	r3, [sp, #4]
4102:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 12886              		.loc 1 4102 5 is_stmt 1 view .LVU4021
 12887              		.loc 1 4102 15 is_stmt 0 view .LVU4022
 12888 0138 01A8     		add	r0, sp, #4
 12889 013a FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12890              	.LVL1311:
4103:ad5940lib/ad5940.c ****     if(time_out == 0)
 12891              		.loc 1 4103 5 is_stmt 1 view .LVU4023
 12892              		.loc 1 4103 17 is_stmt 0 view .LVU4024
 12893 013e 019B     		ldr	r3, [sp, #4]
 12894              		.loc 1 4103 7 view .LVU4025
 12895 0140 002B     		cmp	r3, #0
 12896 0142 00F0D280 		beq	.L796
4104:ad5940lib/ad5940.c ****     {
4105:ad5940lib/ad5940.c ****       error = AD5940ERR_TIMEOUT;
4106:ad5940lib/ad5940.c ****       goto LPDACCALERROR;
4107:ad5940lib/ad5940.c ****     }  /* Time out error. */
4108:ad5940lib/ad5940.c ****     /* Calculate the offset voltage */
4109:ad5940lib/ad5940.c ****     ADCCode -= ADCCodeVref1p1;  /* Get the code of Vbias0-AGND. Then calculate the offset voltage i
 12897              		.loc 1 4109 5 is_stmt 1 view .LVU4026
 12898              		.loc 1 4109 13 is_stmt 0 view .LVU4027
 12899 0146 831B     		subs	r3, r0, r6
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 343


 12900 0148 07EE903A 		vmov	s15, r3	@ int
 12901              	.LVL1312:
4110:ad5940lib/ad5940.c ****     pResult->bC2V_DAC6B = ADCCode*pCalCfg->ADCRefVolt*1e3f/32768*1.835f/1.82f; /*mV unit*/
 12902              		.loc 1 4110 5 is_stmt 1 view .LVU4028
 12903              		.loc 1 4110 42 is_stmt 0 view .LVU4029
 12904 014c 94ED037A 		vldr.32	s14, [r4, #12]
 12905              		.loc 1 4110 34 view .LVU4030
 12906 0150 F8EEE77A 		vcvt.f32.s32	s15, s15
 12907 0154 67EE877A 		vmul.f32	s15, s15, s14
 12908              		.loc 1 4110 54 view .LVU4031
 12909 0158 9FED6C7A 		vldr.32	s14, .L817+8
 12910 015c 67EE877A 		vmul.f32	s15, s15, s14
 12911              		.loc 1 4110 59 view .LVU4032
 12912 0160 9FED6B7A 		vldr.32	s14, .L817+12
 12913 0164 67EE877A 		vmul.f32	s15, s15, s14
 12914              		.loc 1 4110 65 view .LVU4033
 12915 0168 9FED6A7A 		vldr.32	s14, .L817+16
 12916 016c 67EE877A 		vmul.f32	s15, s15, s14
 12917              		.loc 1 4110 72 view .LVU4034
 12918 0170 DFED696A 		vldr.32	s13, .L817+20
 12919 0174 87EEA67A 		vdiv.f32	s14, s15, s13
 12920              		.loc 1 4110 25 view .LVU4035
 12921 0178 85ED037A 		vstr.32	s14, [r5, #12]
4111:ad5940lib/ad5940.c ****   }
4112:ad5940lib/ad5940.c ****   /* Step3: Do gain measurement */
4113:ad5940lib/ad5940.c ****   {
4114:ad5940lib/ad5940.c ****     /* Equation2: ADCCode = Vbias0 - Vref1p1 */
4115:ad5940lib/ad5940.c ****     AD5940_LPDACWriteS(0xfff,0x3f);  /* Set LPDAC output voltage to 2.4V(zero code) */
 12922              		.loc 1 4115 5 is_stmt 1 view .LVU4036
 12923 017c 3F21     		movs	r1, #63
 12924 017e 40F6FF70 		movw	r0, #4095
 12925 0182 FFF7FEFF 		bl	AD5940_LPDACWriteS
 12926              	.LVL1313:
4116:ad5940lib/ad5940.c ****     if(pCalCfg->SettleTime10us > 0)
 12927              		.loc 1 4116 5 view .LVU4037
 12928              		.loc 1 4116 15 is_stmt 0 view .LVU4038
 12929 0186 A069     		ldr	r0, [r4, #24]
 12930              		.loc 1 4116 7 view .LVU4039
 12931 0188 0028     		cmp	r0, #0
 12932 018a 00F39A80 		bgt	.L815
 12933              	.L802:
4117:ad5940lib/ad5940.c ****       AD5940_Delay10us(pCalCfg->SettleTime10us);  /* Delay nx10us */
4118:ad5940lib/ad5940.c ****     if(pCalCfg->LpdacSel == LPDAC0)
 12934              		.loc 1 4118 5 is_stmt 1 view .LVU4040
 12935              		.loc 1 4118 15 is_stmt 0 view .LVU4041
 12936 018e 2368     		ldr	r3, [r4]
 12937              		.loc 1 4118 7 view .LVU4042
 12938 0190 002B     		cmp	r3, #0
 12939 0192 40F09980 		bne	.L803
4119:ad5940lib/ad5940.c ****       AD5940_ADCMuxCfgS(ADCMUXP_VBIAS0, ADCMUXN_VREF1P1); /* Vbias0 is routed to 12BIT LPDAC */
 12940              		.loc 1 4119 7 is_stmt 1 view .LVU4043
 12941 0196 0821     		movs	r1, #8
 12942 0198 1820     		movs	r0, #24
 12943 019a FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 12944              	.LVL1314:
 12945              	.L804:
4120:ad5940lib/ad5940.c ****     else
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 344


4121:ad5940lib/ad5940.c ****       AD5940_ADCMuxCfgS(ADCMUXP_VBIAS1, ADCMUXN_VREF1P1); /* Vbias1 is routed to 12BIT LPDAC */
4122:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
 12946              		.loc 1 4122 5 view .LVU4044
 12947 019e 0520     		movs	r0, #5
 12948 01a0 FFF7FEFF 		bl	AD5940_Delay10us
 12949              	.LVL1315:
4123:ad5940lib/ad5940.c ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 12950              		.loc 1 4123 5 view .LVU4045
 12951              		.loc 1 4123 23 is_stmt 0 view .LVU4046
 12952 01a4 E369     		ldr	r3, [r4, #28]
 12953              		.loc 1 4123 14 view .LVU4047
 12954 01a6 0193     		str	r3, [sp, #4]
4124:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 12955              		.loc 1 4124 5 is_stmt 1 view .LVU4048
 12956              		.loc 1 4124 15 is_stmt 0 view .LVU4049
 12957 01a8 01A8     		add	r0, sp, #4
 12958 01aa FFF7FEFF 		bl	__AD5940_TakeMeasurement
 12959              	.LVL1316:
4125:ad5940lib/ad5940.c ****     if(time_out == 0)
 12960              		.loc 1 4125 5 is_stmt 1 view .LVU4050
 12961              		.loc 1 4125 17 is_stmt 0 view .LVU4051
 12962 01ae 019B     		ldr	r3, [sp, #4]
 12963              		.loc 1 4125 7 view .LVU4052
 12964 01b0 002B     		cmp	r3, #0
 12965 01b2 00F09A80 		beq	.L796
4126:ad5940lib/ad5940.c ****     {
4127:ad5940lib/ad5940.c ****       error = AD5940ERR_TIMEOUT;
4128:ad5940lib/ad5940.c ****       goto LPDACCALERROR;
4129:ad5940lib/ad5940.c ****     }  /* Time out error. */
4130:ad5940lib/ad5940.c ****     /* Calculate the offset voltage */
4131:ad5940lib/ad5940.c ****     ADCCode -= ADCCodeVref1p1;  /* Get the code of Vbias0-AGND. Then calculate the gain factor 'k'.
 12966              		.loc 1 4131 5 is_stmt 1 view .LVU4053
 12967              		.loc 1 4131 13 is_stmt 0 view .LVU4054
 12968 01b6 831B     		subs	r3, r0, r6
 12969 01b8 07EE903A 		vmov	s15, r3	@ int
 12970              	.LVL1317:
4132:ad5940lib/ad5940.c ****     pResult->kC2V_DAC12B = (ADCCode*pCalCfg->ADCRefVolt*1e3f/32768*1.835f/1.82f - pResult->bC2V_DAC
 12971              		.loc 1 4132 5 is_stmt 1 view .LVU4055
 12972              		.loc 1 4132 44 is_stmt 0 view .LVU4056
 12973 01bc 94ED037A 		vldr.32	s14, [r4, #12]
 12974              		.loc 1 4132 36 view .LVU4057
 12975 01c0 F8EEE77A 		vcvt.f32.s32	s15, s15
 12976 01c4 67EE877A 		vmul.f32	s15, s15, s14
 12977              		.loc 1 4132 56 view .LVU4058
 12978 01c8 9FED507A 		vldr.32	s14, .L817+8
 12979 01cc 67EE877A 		vmul.f32	s15, s15, s14
 12980              		.loc 1 4132 61 view .LVU4059
 12981 01d0 9FED4F7A 		vldr.32	s14, .L817+12
 12982 01d4 67EE877A 		vmul.f32	s15, s15, s14
 12983              		.loc 1 4132 67 view .LVU4060
 12984 01d8 9FED4E7A 		vldr.32	s14, .L817+16
 12985 01dc 67EE877A 		vmul.f32	s15, s15, s14
 12986              		.loc 1 4132 74 view .LVU4061
 12987 01e0 DFED4D6A 		vldr.32	s13, .L817+20
 12988 01e4 87EEA67A 		vdiv.f32	s14, s15, s13
 12989              		.loc 1 4132 90 view .LVU4062
 12990 01e8 D5ED017A 		vldr.32	s15, [r5, #4]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 345


 12991              		.loc 1 4132 81 view .LVU4063
 12992 01ec 77EE677A 		vsub.f32	s15, s14, s15
 12993              		.loc 1 4132 104 view .LVU4064
 12994 01f0 DFED4A6A 		vldr.32	s13, .L817+24
 12995 01f4 87EEA67A 		vdiv.f32	s14, s15, s13
 12996              		.loc 1 4132 26 view .LVU4065
 12997 01f8 85ED007A 		vstr.32	s14, [r5]
4133:ad5940lib/ad5940.c ****     /* Measure 6BIT DAC output(Vzero0) */
4134:ad5940lib/ad5940.c ****     if(pCalCfg->LpdacSel == LPDAC0)
 12998              		.loc 1 4134 5 is_stmt 1 view .LVU4066
 12999              		.loc 1 4134 15 is_stmt 0 view .LVU4067
 13000 01fc 2368     		ldr	r3, [r4]
 13001              	.LVL1318:
 13002              		.loc 1 4134 7 view .LVU4068
 13003 01fe 002B     		cmp	r3, #0
 13004 0200 67D1     		bne	.L805
4135:ad5940lib/ad5940.c ****       AD5940_ADCMuxCfgS(ADCMUXP_VZERO0, ADCMUXN_VREF1P1); /* Vbias0 is routed to 12BIT LPDAC */
 13005              		.loc 1 4135 7 is_stmt 1 view .LVU4069
 13006 0202 0821     		movs	r1, #8
 13007 0204 1720     		movs	r0, #23
 13008              	.LVL1319:
 13009              		.loc 1 4135 7 is_stmt 0 view .LVU4070
 13010 0206 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13011              	.LVL1320:
 13012              	.L806:
4136:ad5940lib/ad5940.c ****     else
4137:ad5940lib/ad5940.c ****       AD5940_ADCMuxCfgS(ADCMUXP_VZERO1, ADCMUXN_VREF1P1); /* Vbias1 is routed to 12BIT LPDAC */
4138:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
 13013              		.loc 1 4138 5 is_stmt 1 view .LVU4071
 13014 020a 0520     		movs	r0, #5
 13015 020c FFF7FEFF 		bl	AD5940_Delay10us
 13016              	.LVL1321:
4139:ad5940lib/ad5940.c ****     time_out = pCalCfg->TimeOut10us;   /* Reset time out counter */
 13017              		.loc 1 4139 5 view .LVU4072
 13018              		.loc 1 4139 23 is_stmt 0 view .LVU4073
 13019 0210 E369     		ldr	r3, [r4, #28]
 13020              		.loc 1 4139 14 view .LVU4074
 13021 0212 0193     		str	r3, [sp, #4]
4140:ad5940lib/ad5940.c ****     ADCCode = __AD5940_TakeMeasurement(&time_out);  /* Turn on ADC to get one valid data and then t
 13022              		.loc 1 4140 5 is_stmt 1 view .LVU4075
 13023              		.loc 1 4140 15 is_stmt 0 view .LVU4076
 13024 0214 01A8     		add	r0, sp, #4
 13025 0216 FFF7FEFF 		bl	__AD5940_TakeMeasurement
 13026              	.LVL1322:
4141:ad5940lib/ad5940.c ****     if(time_out == 0)
 13027              		.loc 1 4141 5 is_stmt 1 view .LVU4077
 13028              		.loc 1 4141 17 is_stmt 0 view .LVU4078
 13029 021a 019B     		ldr	r3, [sp, #4]
 13030              		.loc 1 4141 7 view .LVU4079
 13031 021c 002B     		cmp	r3, #0
 13032 021e 64D0     		beq	.L796
4142:ad5940lib/ad5940.c ****     {
4143:ad5940lib/ad5940.c ****       error = AD5940ERR_TIMEOUT;
4144:ad5940lib/ad5940.c ****       goto LPDACCALERROR;
4145:ad5940lib/ad5940.c ****     }  /* Time out error. */
4146:ad5940lib/ad5940.c ****     /* Calculate the offset voltage */
4147:ad5940lib/ad5940.c ****     ADCCode -= ADCCodeVref1p1;  /* Get the code of Vbias0-AGND. Then calculate the offset voltage i
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 346


 13033              		.loc 1 4147 5 is_stmt 1 view .LVU4080
 13034              		.loc 1 4147 13 is_stmt 0 view .LVU4081
 13035 0220 801B     		subs	r0, r0, r6
 13036              	.LVL1323:
4148:ad5940lib/ad5940.c ****     pResult->kC2V_DAC6B = (ADCCode*pCalCfg->ADCRefVolt*1e3f/32768*1.835f/1.82f - pResult->bC2V_DAC6
 13037              		.loc 1 4148 5 is_stmt 1 view .LVU4082
 13038              		.loc 1 4148 43 is_stmt 0 view .LVU4083
 13039 0222 94ED037A 		vldr.32	s14, [r4, #12]
 13040              		.loc 1 4148 35 view .LVU4084
 13041 0226 07EE900A 		vmov	s15, r0	@ int
 13042 022a F8EEE77A 		vcvt.f32.s32	s15, s15
 13043 022e 67EE877A 		vmul.f32	s15, s15, s14
 13044              		.loc 1 4148 55 view .LVU4085
 13045 0232 9FED367A 		vldr.32	s14, .L817+8
 13046 0236 67EE877A 		vmul.f32	s15, s15, s14
 13047              		.loc 1 4148 60 view .LVU4086
 13048 023a 9FED357A 		vldr.32	s14, .L817+12
 13049 023e 67EE877A 		vmul.f32	s15, s15, s14
 13050              		.loc 1 4148 66 view .LVU4087
 13051 0242 9FED347A 		vldr.32	s14, .L817+16
 13052 0246 67EE877A 		vmul.f32	s15, s15, s14
 13053              		.loc 1 4148 73 view .LVU4088
 13054 024a 9FED337A 		vldr.32	s14, .L817+20
 13055 024e C7EE876A 		vdiv.f32	s13, s15, s14
 13056              		.loc 1 4148 89 view .LVU4089
 13057 0252 D5ED037A 		vldr.32	s15, [r5, #12]
 13058              		.loc 1 4148 80 view .LVU4090
 13059 0256 76EEE76A 		vsub.f32	s13, s13, s15
 13060              		.loc 1 4148 102 view .LVU4091
 13061 025a 9FED316A 		vldr.32	s12, .L817+28
 13062 025e 86EE867A 		vdiv.f32	s14, s13, s12
 13063              		.loc 1 4148 25 view .LVU4092
 13064 0262 85ED027A 		vstr.32	s14, [r5, #8]
4149:ad5940lib/ad5940.c ****   }
4150:ad5940lib/ad5940.c ****   /* Step4: calculate the parameters for voltage to code calculation. */
4151:ad5940lib/ad5940.c ****   pResult->kV2C_DAC12B = 1/pResult->kC2V_DAC12B;
 13065              		.loc 1 4151 3 is_stmt 1 view .LVU4093
 13066              		.loc 1 4151 35 is_stmt 0 view .LVU4094
 13067 0266 D5ED005A 		vldr.32	s11, [r5]
 13068              		.loc 1 4151 27 view .LVU4095
 13069 026a B7EE006A 		vmov.f32	s12, #1.0e+0
 13070 026e C6EE256A 		vdiv.f32	s13, s12, s11
 13071              		.loc 1 4151 24 view .LVU4096
 13072 0272 C5ED046A 		vstr.32	s13, [r5, #16]
4152:ad5940lib/ad5940.c ****   pResult->bV2C_DAC12B = -pResult->bC2V_DAC12B/pResult->kC2V_DAC12B;
 13073              		.loc 1 4152 3 is_stmt 1 view .LVU4097
 13074              		.loc 1 4152 34 is_stmt 0 view .LVU4098
 13075 0276 D5ED016A 		vldr.32	s13, [r5, #4]
 13076              		.loc 1 4152 26 view .LVU4099
 13077 027a F1EE666A 		vneg.f32	s13, s13
 13078              		.loc 1 4152 47 view .LVU4100
 13079 027e 86EEA55A 		vdiv.f32	s10, s13, s11
 13080              		.loc 1 4152 24 view .LVU4101
 13081 0282 85ED055A 		vstr.32	s10, [r5, #20]
4153:ad5940lib/ad5940.c ****   pResult->kV2C_DAC6B = 1/pResult->kC2V_DAC6B;
 13082              		.loc 1 4153 3 is_stmt 1 view .LVU4102
 13083              		.loc 1 4153 26 is_stmt 0 view .LVU4103
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 347


 13084 0286 C6EE076A 		vdiv.f32	s13, s12, s14
 13085              		.loc 1 4153 23 view .LVU4104
 13086 028a C5ED066A 		vstr.32	s13, [r5, #24]
4154:ad5940lib/ad5940.c ****   pResult->bV2C_DAC6B = -pResult->bC2V_DAC6B/pResult->kC2V_DAC6B;
 13087              		.loc 1 4154 3 is_stmt 1 view .LVU4105
 13088              		.loc 1 4154 25 is_stmt 0 view .LVU4106
 13089 028e F1EE677A 		vneg.f32	s15, s15
 13090              		.loc 1 4154 45 view .LVU4107
 13091 0292 C7EE876A 		vdiv.f32	s13, s15, s14
 13092              		.loc 1 4154 23 view .LVU4108
 13093 0296 C5ED076A 		vstr.32	s13, [r5, #28]
4155:ad5940lib/ad5940.c ****   /* Restore INTC1 SINC2 configure */
4156:ad5940lib/ad5940.c ****   if(INTCCfg&AFEINTSRC_SINC2RDY);
 13094              		.loc 1 4156 3 is_stmt 1 view .LVU4109
 13095              		.loc 1 4156 5 is_stmt 0 view .LVU4110
 13096 029a 17F0040F 		tst	r7, #4
 13097 029e 1DD0     		beq	.L816
4157:ad5940lib/ad5940.c ****   else
4158:ad5940lib/ad5940.c ****     AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_SINC2RDY, bFALSE); /* Disable SINC2 Interrupt */
4159:ad5940lib/ad5940.c ****   /* Done */
4160:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 13098              		.loc 1 4160 10 view .LVU4111
 13099 02a0 0020     		movs	r0, #0
 13100              	.LVL1324:
 13101              	.L794:
4161:ad5940lib/ad5940.c **** 
4162:ad5940lib/ad5940.c **** LPDACCALERROR:
4163:ad5940lib/ad5940.c ****   AD5940_ADCConvtCtrlS(bFALSE);  /* Stop conversion */
4164:ad5940lib/ad5940.c ****   return error;
4165:ad5940lib/ad5940.c **** }
 13102              		.loc 1 4165 1 view .LVU4112
 13103 02a2 12B0     		add	sp, sp, #72
 13104              	.LCFI184:
 13105              		.cfi_remember_state
 13106              		.cfi_def_cfa_offset 24
 13107              		@ sp needed
 13108 02a4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13109              	.LVL1325:
 13110              	.L814:
 13111              	.LCFI185:
 13112              		.cfi_restore_state
4078:ad5940lib/ad5940.c ****     if(pCalCfg->LpdacSel == LPDAC0)
 13113              		.loc 1 4078 7 is_stmt 1 view .LVU4113
 13114 02a8 FFF7FEFF 		bl	AD5940_Delay10us
 13115              	.LVL1326:
 13116 02ac 08E7     		b	.L797
 13117              	.L798:
4082:ad5940lib/ad5940.c **** 
 13118              		.loc 1 4082 7 view .LVU4114
 13119 02ae 0821     		movs	r1, #8
 13120 02b0 1C20     		movs	r0, #28
 13121 02b2 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13122              	.LVL1327:
 13123 02b6 0BE7     		b	.L799
 13124              	.LVL1328:
 13125              	.L800:
4099:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 348


 13126              		.loc 1 4099 7 view .LVU4115
 13127 02b8 0821     		movs	r1, #8
 13128 02ba 1B20     		movs	r0, #27
 13129              	.LVL1329:
4099:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
 13130              		.loc 1 4099 7 is_stmt 0 view .LVU4116
 13131 02bc FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13132              	.LVL1330:
 13133 02c0 35E7     		b	.L801
 13134              	.L815:
4117:ad5940lib/ad5940.c ****     if(pCalCfg->LpdacSel == LPDAC0)
 13135              		.loc 1 4117 7 is_stmt 1 view .LVU4117
 13136 02c2 FFF7FEFF 		bl	AD5940_Delay10us
 13137              	.LVL1331:
 13138 02c6 62E7     		b	.L802
 13139              	.L803:
4121:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
 13140              		.loc 1 4121 7 view .LVU4118
 13141 02c8 0821     		movs	r1, #8
 13142 02ca 1C20     		movs	r0, #28
 13143 02cc FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13144              	.LVL1332:
 13145 02d0 65E7     		b	.L804
 13146              	.LVL1333:
 13147              	.L805:
4137:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
 13148              		.loc 1 4137 7 view .LVU4119
 13149 02d2 0821     		movs	r1, #8
 13150 02d4 1B20     		movs	r0, #27
 13151              	.LVL1334:
4137:ad5940lib/ad5940.c ****     AD5940_Delay10us(5);  /* Delay 50us */
 13152              		.loc 1 4137 7 is_stmt 0 view .LVU4120
 13153 02d6 FFF7FEFF 		bl	AD5940_ADCMuxCfgS
 13154              	.LVL1335:
 13155 02da 96E7     		b	.L806
 13156              	.LVL1336:
 13157              	.L816:
4158:ad5940lib/ad5940.c ****   /* Done */
 13158              		.loc 1 4158 5 is_stmt 1 view .LVU4121
 13159 02dc 0022     		movs	r2, #0
 13160 02de 0421     		movs	r1, #4
 13161 02e0 0120     		movs	r0, #1
 13162              	.LVL1337:
4158:ad5940lib/ad5940.c ****   /* Done */
 13163              		.loc 1 4158 5 is_stmt 0 view .LVU4122
 13164 02e2 FFF7FEFF 		bl	AD5940_INTCCfg
 13165              	.LVL1338:
4160:ad5940lib/ad5940.c **** 
 13166              		.loc 1 4160 10 view .LVU4123
 13167 02e6 0020     		movs	r0, #0
 13168 02e8 DBE7     		b	.L794
 13169              	.L796:
 13170              	.LVL1339:
4163:ad5940lib/ad5940.c ****   return error;
 13171              		.loc 1 4163 3 is_stmt 1 view .LVU4124
 13172 02ea 0020     		movs	r0, #0
 13173 02ec FFF7FEFF 		bl	AD5940_ADCConvtCtrlS
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 349


 13174              	.LVL1340:
4164:ad5940lib/ad5940.c **** }
 13175              		.loc 1 4164 3 view .LVU4125
4164:ad5940lib/ad5940.c **** }
 13176              		.loc 1 4164 10 is_stmt 0 view .LVU4126
 13177 02f0 6FF00900 		mvn	r0, #9
 13178 02f4 D5E7     		b	.L794
 13179              	.LVL1341:
 13180              	.L807:
 13181              	.LCFI186:
 13182              		.cfi_def_cfa_offset 0
 13183              		.cfi_restore 4
 13184              		.cfi_restore 5
 13185              		.cfi_restore 6
 13186              		.cfi_restore 7
 13187              		.cfi_restore 8
 13188              		.cfi_restore 14
4020:ad5940lib/ad5940.c ****   if(pResult == NULL) return AD5940ERR_NULLP;  
 13189              		.loc 1 4020 30 view .LVU4127
 13190 02f6 6FF00200 		mvn	r0, #2
 13191              	.LVL1342:
 13192              		.loc 1 4165 1 view .LVU4128
 13193 02fa 7047     		bx	lr
 13194              	.LVL1343:
 13195              	.L808:
 13196              	.LCFI187:
 13197              		.cfi_def_cfa_offset 96
 13198              		.cfi_offset 4, -24
 13199              		.cfi_offset 5, -20
 13200              		.cfi_offset 6, -16
 13201              		.cfi_offset 7, -12
 13202              		.cfi_offset 8, -8
 13203              		.cfi_offset 14, -4
4021:ad5940lib/ad5940.c ****   if(pCalCfg->AdcClkFreq > (32000000*0.8))
 13204              		.loc 1 4021 30 view .LVU4129
 13205 02fc 6FF00200 		mvn	r0, #2
 13206              	.LVL1344:
4021:ad5940lib/ad5940.c ****   if(pCalCfg->AdcClkFreq > (32000000*0.8))
 13207              		.loc 1 4021 30 view .LVU4130
 13208 0300 CFE7     		b	.L794
 13209              	.L818:
 13210 0302 00BF     		.align	2
 13211              	.L817:
 13212 0304 E0FF3900 		.word	3801056
 13213 0308 A0000100 		.word	65696
 13214 030c 00007A44 		.word	1148846080
 13215 0310 00000038 		.word	939524096
 13216 0314 48E1EA3F 		.word	1072357704
 13217 0318 C3F5E83F 		.word	1072231875
 13218 031c 00F07F45 		.word	1166012416
 13219 0320 00007C42 		.word	1115422720
 13220              		.cfi_endproc
 13221              	.LFE121:
 13223              		.section	.text.AD5940_LFOSCMeasure,"ax",%progbits
 13224              		.align	1
 13225              		.global	AD5940_LFOSCMeasure
 13226              		.syntax unified
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 350


 13227              		.thumb
 13228              		.thumb_func
 13229              		.fpu fpv5-d16
 13231              	AD5940_LFOSCMeasure:
 13232              	.LVL1345:
 13233              	.LFB122:
4166:ad5940lib/ad5940.c **** 
4167:ad5940lib/ad5940.c **** /**
4168:ad5940lib/ad5940.c ****  * @brief Use system clock to measure LFOSC frequency.
4169:ad5940lib/ad5940.c ****  * @note Set system clock to external crystal to get a better measurement accuracy.
4170:ad5940lib/ad5940.c ****  *       This function use 3 sequences and the start address is specified by parameter.
4171:ad5940lib/ad5940.c ****  * @param pCfg: pointer to structure.
4172:ad5940lib/ad5940.c ****  * @param pFreq:  Pointer to a variable that used to store frequency in Hz. 
4173:ad5940lib/ad5940.c ****  * @return AD5940ERR_OK if succeed.
4174:ad5940lib/ad5940.c **** **/
4175:ad5940lib/ad5940.c **** AD5940Err AD5940_LFOSCMeasure(LFOSCMeasure_Type *pCfg, float *pFreq) /* Measure current LFOSC frequ
4176:ad5940lib/ad5940.c **** {
 13234              		.loc 1 4176 1 is_stmt 1 view -0
 13235              		.cfi_startproc
 13236              		@ args = 0, pretend = 0, frame = 120
 13237              		@ frame_needed = 0, uses_anonymous_args = 0
4177:ad5940lib/ad5940.c ****   /**
4178:ad5940lib/ad5940.c ****    * @code
4179:ad5940lib/ad5940.c ****    *  Sleep wakeup timer running...
4180:ad5940lib/ad5940.c ****    *  -SLP----WKP----SLP----WKP----SLP----WKP
4181:ad5940lib/ad5940.c ****    *  --|-----|-------------|-------------|------------Trigger sequencer when Wakeup Timer over.
4182:ad5940lib/ad5940.c ****    *  --------|SEQA---------|SEQB----------------------Execute SeqA then SeqB
4183:ad5940lib/ad5940.c ****    *  ---------|InitT--------|StopT--------------------SeqA start timer and SeqB trigger interrupt 
4184:ad5940lib/ad5940.c ****    *  ------------------------|INT---------------------
4185:ad5940lib/ad5940.c ****    *  -----------------------------------------|Read---We read SEQTIMEOUT register here
4186:ad5940lib/ad5940.c ****    *  ---------|-----TimerCount----------------|-------
4187:ad5940lib/ad5940.c ****    *  ---------|--------------|---TimerCount2--|-------We change SeqB to reset timer so we measure 
4188:ad5940lib/ad5940.c ****    * @endcode
4189:ad5940lib/ad5940.c ****    * **/
4190:ad5940lib/ad5940.c ****   uint32_t TimerCount, TimerCount2;
 13238              		.loc 1 4190 3 view .LVU4132
4191:ad5940lib/ad5940.c ****   SEQCfg_Type seq_cfg, seq_cfg_backup;
 13239              		.loc 1 4191 3 view .LVU4133
4192:ad5940lib/ad5940.c ****   SEQInfo_Type seqinfo;
 13240              		.loc 1 4192 3 view .LVU4134
4193:ad5940lib/ad5940.c ****   WUPTCfg_Type wupt_cfg;
 13241              		.loc 1 4193 3 view .LVU4135
4194:ad5940lib/ad5940.c ****   uint32_t INTCCfg;
 13242              		.loc 1 4194 3 view .LVU4136
4195:ad5940lib/ad5940.c ****   uint32_t WuptPeriod;
 13243              		.loc 1 4195 3 view .LVU4137
4196:ad5940lib/ad5940.c **** 
4197:ad5940lib/ad5940.c ****   static const uint32_t SeqA[]=
 13244              		.loc 1 4197 3 view .LVU4138
4198:ad5940lib/ad5940.c ****   {
4199:ad5940lib/ad5940.c ****     SEQ_TOUT(0x3fffffff),   /* Set time-out timer. It will always run until disable Sequencer by SP
4200:ad5940lib/ad5940.c ****   };
4201:ad5940lib/ad5940.c ****   static const uint32_t SeqB[]=
 13245              		.loc 1 4201 3 view .LVU4139
4202:ad5940lib/ad5940.c ****   {
4203:ad5940lib/ad5940.c ****     /**
4204:ad5940lib/ad5940.c ****      * Interrupt flag AFEINTSRC_ENDSEQ will be set after this command. So We can inform MCU to read
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 351


4205:ad5940lib/ad5940.c ****      * current timer value. MCU will need some additional time to read back time count.
4206:ad5940lib/ad5940.c ****      * So we use SeqB to measure how much time needed for MCU to read back 
4207:ad5940lib/ad5940.c ****      * */
4208:ad5940lib/ad5940.c ****     SEQ_STOP(),             
4209:ad5940lib/ad5940.c ****   };
4210:ad5940lib/ad5940.c ****   static const uint32_t SeqBB[]=
 13246              		.loc 1 4210 3 view .LVU4140
4211:ad5940lib/ad5940.c ****   {
4212:ad5940lib/ad5940.c ****     SEQ_TOUT(0x3fffffff),   /* Re-Set time-out timer, so we can measure the time needed for MCU to 
4213:ad5940lib/ad5940.c ****     SEQ_STOP(),             /* Interrupt flag AFEINTSRC_ENDSEQ will be set here */
4214:ad5940lib/ad5940.c ****   };
4215:ad5940lib/ad5940.c **** 
4216:ad5940lib/ad5940.c ****   if(pCfg == NULL) return AD5940ERR_NULLP;
 13247              		.loc 1 4216 3 view .LVU4141
 13248              		.loc 1 4216 5 is_stmt 0 view .LVU4142
 13249 0000 0028     		cmp	r0, #0
 13250 0002 00F0D380 		beq	.L823
4176:ad5940lib/ad5940.c ****   /**
 13251              		.loc 1 4176 1 view .LVU4143
 13252 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 13253              	.LCFI188:
 13254              		.cfi_def_cfa_offset 24
 13255              		.cfi_offset 4, -24
 13256              		.cfi_offset 5, -20
 13257              		.cfi_offset 6, -16
 13258              		.cfi_offset 7, -12
 13259              		.cfi_offset 8, -8
 13260              		.cfi_offset 14, -4
 13261 000a 2DED028B 		vpush.64	{d8}
 13262              	.LCFI189:
 13263              		.cfi_def_cfa_offset 32
 13264              		.cfi_offset 80, -32
 13265              		.cfi_offset 81, -28
 13266 000e 9EB0     		sub	sp, sp, #120
 13267              	.LCFI190:
 13268              		.cfi_def_cfa_offset 152
 13269 0010 0E46     		mov	r6, r1
 13270 0012 0546     		mov	r5, r0
4217:ad5940lib/ad5940.c ****   if(pFreq == NULL) return AD5940ERR_NULLP;
 13271              		.loc 1 4217 3 is_stmt 1 view .LVU4144
 13272              		.loc 1 4217 5 is_stmt 0 view .LVU4145
 13273 0014 0029     		cmp	r1, #0
 13274 0016 00F0CC80 		beq	.L824
4218:ad5940lib/ad5940.c ****   if(pCfg->CalDuration < 1.0f)
 13275              		.loc 1 4218 3 is_stmt 1 view .LVU4146
 13276              		.loc 1 4218 10 is_stmt 0 view .LVU4147
 13277 001a 90ED017A 		vldr.32	s14, [r0, #4]
 13278              		.loc 1 4218 5 view .LVU4148
 13279 001e F7EE007A 		vmov.f32	s15, #1.0e+0
 13280 0022 B4EEE77A 		vcmpe.f32	s14, s15
 13281 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 13282 002a 00F1C580 		bmi	.L825
4219:ad5940lib/ad5940.c ****     return AD5940ERR_PARA;
4220:ad5940lib/ad5940.c ****   AD5940_SEQGetCfg(&seq_cfg_backup);
 13283              		.loc 1 4220 3 is_stmt 1 view .LVU4149
 13284 002e 18A8     		add	r0, sp, #96
 13285              	.LVL1346:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 352


 13286              		.loc 1 4220 3 is_stmt 0 view .LVU4150
 13287 0030 FFF7FEFF 		bl	AD5940_SEQGetCfg
 13288              	.LVL1347:
4221:ad5940lib/ad5940.c ****   INTCCfg = AD5940_INTCGetCfg(AFEINTC_1);
 13289              		.loc 1 4221 3 is_stmt 1 view .LVU4151
 13290              		.loc 1 4221 13 is_stmt 0 view .LVU4152
 13291 0034 0120     		movs	r0, #1
 13292 0036 FFF7FEFF 		bl	AD5940_INTCGetCfg
 13293              	.LVL1348:
 13294 003a 0746     		mov	r7, r0
 13295              	.LVL1349:
4222:ad5940lib/ad5940.c ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_ENDSEQ, bTRUE);
 13296              		.loc 1 4222 3 is_stmt 1 view .LVU4153
 13297 003c 0122     		movs	r2, #1
 13298 003e 4FF40041 		mov	r1, #32768
 13299 0042 1046     		mov	r0, r2
 13300              	.LVL1350:
 13301              		.loc 1 4222 3 is_stmt 0 view .LVU4154
 13302 0044 FFF7FEFF 		bl	AD5940_INTCCfg
 13303              	.LVL1351:
4223:ad5940lib/ad5940.c **** 	AD5940_INTCClrFlag(AFEINTSRC_ALLINT);
 13304              		.loc 1 4223 2 is_stmt 1 view .LVU4155
 13305 0048 4FF0FF30 		mov	r0, #-1
 13306 004c FFF7FEFF 		bl	AD5940_INTCClrFlag
 13307              	.LVL1352:
4224:ad5940lib/ad5940.c **** 
4225:ad5940lib/ad5940.c ****   seq_cfg.SeqMemSize = SEQMEMSIZE_2KB;  /* 2kB SRAM is used for sequencer */
 13308              		.loc 1 4225 3 view .LVU4156
 13309              		.loc 1 4225 22 is_stmt 0 view .LVU4157
 13310 0050 0124     		movs	r4, #1
 13311 0052 1B94     		str	r4, [sp, #108]
4226:ad5940lib/ad5940.c ****   seq_cfg.SeqBreakEn = bFALSE;
 13312              		.loc 1 4226 3 is_stmt 1 view .LVU4158
 13313              		.loc 1 4226 22 is_stmt 0 view .LVU4159
 13314 0054 4FF00008 		mov	r8, #0
 13315 0058 8DF87180 		strb	r8, [sp, #113]
4227:ad5940lib/ad5940.c ****   seq_cfg.SeqIgnoreEn = bFALSE;
 13316              		.loc 1 4227 3 is_stmt 1 view .LVU4160
 13317              		.loc 1 4227 23 is_stmt 0 view .LVU4161
 13318 005c 8DF87280 		strb	r8, [sp, #114]
4228:ad5940lib/ad5940.c ****   seq_cfg.SeqCntCRCClr = bFALSE;
 13319              		.loc 1 4228 3 is_stmt 1 view .LVU4162
 13320              		.loc 1 4228 24 is_stmt 0 view .LVU4163
 13321 0060 8DF87380 		strb	r8, [sp, #115]
4229:ad5940lib/ad5940.c ****   seq_cfg.SeqEnable = bTRUE;
 13322              		.loc 1 4229 3 is_stmt 1 view .LVU4164
 13323              		.loc 1 4229 21 is_stmt 0 view .LVU4165
 13324 0064 8DF87040 		strb	r4, [sp, #112]
4230:ad5940lib/ad5940.c ****   seq_cfg.SeqWrTimer = 0;
 13325              		.loc 1 4230 3 is_stmt 1 view .LVU4166
 13326              		.loc 1 4230 22 is_stmt 0 view .LVU4167
 13327 0068 CDF87480 		str	r8, [sp, #116]
4231:ad5940lib/ad5940.c ****   AD5940_SEQCfg(&seq_cfg);          /* Enable sequencer */
 13328              		.loc 1 4231 3 is_stmt 1 view .LVU4168
 13329 006c 1BA8     		add	r0, sp, #108
 13330 006e FFF7FEFF 		bl	AD5940_SEQCfg
 13331              	.LVL1353:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 353


4232:ad5940lib/ad5940.c ****   
4233:ad5940lib/ad5940.c ****   seqinfo.pSeqCmd = SeqA;
 13332              		.loc 1 4233 3 view .LVU4169
 13333              		.loc 1 4233 19 is_stmt 0 view .LVU4170
 13334 0072 534B     		ldr	r3, .L830
 13335 0074 1793     		str	r3, [sp, #92]
4234:ad5940lib/ad5940.c ****   seqinfo.SeqId = SEQID_0;
 13336              		.loc 1 4234 3 is_stmt 1 view .LVU4171
 13337              		.loc 1 4234 17 is_stmt 0 view .LVU4172
 13338 0076 CDF84C80 		str	r8, [sp, #76]
4235:ad5940lib/ad5940.c ****   seqinfo.SeqLen = SEQ_LEN(SeqA);
 13339              		.loc 1 4235 3 is_stmt 1 view .LVU4173
 13340              		.loc 1 4235 18 is_stmt 0 view .LVU4174
 13341 007a 1594     		str	r4, [sp, #84]
4236:ad5940lib/ad5940.c ****   seqinfo.SeqRamAddr = pCfg->CalSeqAddr;
 13342              		.loc 1 4236 3 is_stmt 1 view .LVU4175
 13343              		.loc 1 4236 28 is_stmt 0 view .LVU4176
 13344 007c 2B68     		ldr	r3, [r5]
 13345              		.loc 1 4236 22 view .LVU4177
 13346 007e 1493     		str	r3, [sp, #80]
4237:ad5940lib/ad5940.c ****   seqinfo.WriteSRAM = bTRUE;
 13347              		.loc 1 4237 3 is_stmt 1 view .LVU4178
 13348              		.loc 1 4237 21 is_stmt 0 view .LVU4179
 13349 0080 8DF85840 		strb	r4, [sp, #88]
4238:ad5940lib/ad5940.c ****   AD5940_SEQInfoCfg(&seqinfo);
 13350              		.loc 1 4238 3 is_stmt 1 view .LVU4180
 13351 0084 13A8     		add	r0, sp, #76
 13352 0086 FFF7FEFF 		bl	AD5940_SEQInfoCfg
 13353              	.LVL1354:
4239:ad5940lib/ad5940.c ****   seqinfo.SeqId = SEQID_1;
 13354              		.loc 1 4239 3 view .LVU4181
 13355              		.loc 1 4239 17 is_stmt 0 view .LVU4182
 13356 008a 1394     		str	r4, [sp, #76]
4240:ad5940lib/ad5940.c ****   seqinfo.SeqRamAddr = pCfg->CalSeqAddr + SEQ_LEN(SeqA) ;
 13357              		.loc 1 4240 3 is_stmt 1 view .LVU4183
 13358              		.loc 1 4240 28 is_stmt 0 view .LVU4184
 13359 008c 2B68     		ldr	r3, [r5]
 13360              		.loc 1 4240 41 view .LVU4185
 13361 008e 2344     		add	r3, r3, r4
 13362              		.loc 1 4240 22 view .LVU4186
 13363 0090 1493     		str	r3, [sp, #80]
4241:ad5940lib/ad5940.c ****   seqinfo.SeqLen = SEQ_LEN(SeqB);
 13364              		.loc 1 4241 3 is_stmt 1 view .LVU4187
 13365              		.loc 1 4241 18 is_stmt 0 view .LVU4188
 13366 0092 1594     		str	r4, [sp, #84]
4242:ad5940lib/ad5940.c ****   seqinfo.pSeqCmd = SeqB;
 13367              		.loc 1 4242 3 is_stmt 1 view .LVU4189
 13368              		.loc 1 4242 19 is_stmt 0 view .LVU4190
 13369 0094 4B4B     		ldr	r3, .L830+4
 13370 0096 1793     		str	r3, [sp, #92]
4243:ad5940lib/ad5940.c ****   AD5940_SEQInfoCfg(&seqinfo);      /* Configure sequence0 and sequence1 with command SeqA and SeqB
 13371              		.loc 1 4243 3 is_stmt 1 view .LVU4191
 13372 0098 13A8     		add	r0, sp, #76
 13373 009a FFF7FEFF 		bl	AD5940_SEQInfoCfg
 13374              	.LVL1355:
4244:ad5940lib/ad5940.c **** 	
4245:ad5940lib/ad5940.c ****   wupt_cfg.WuptEn = bFALSE;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 354


 13375              		.loc 1 4245 3 view .LVU4192
 13376              		.loc 1 4245 19 is_stmt 0 view .LVU4193
 13377 009e 8DF84880 		strb	r8, [sp, #72]
4246:ad5940lib/ad5940.c ****   wupt_cfg.WuptOrder[0] = SEQID_0;
 13378              		.loc 1 4246 3 is_stmt 1 view .LVU4194
 13379              		.loc 1 4246 25 is_stmt 0 view .LVU4195
 13380 00a2 CDF80880 		str	r8, [sp, #8]
4247:ad5940lib/ad5940.c ****   wupt_cfg.WuptOrder[1] = SEQID_1;
 13381              		.loc 1 4247 3 is_stmt 1 view .LVU4196
 13382              		.loc 1 4247 25 is_stmt 0 view .LVU4197
 13383 00a6 0394     		str	r4, [sp, #12]
4248:ad5940lib/ad5940.c ****   wupt_cfg.WuptEndSeq = WUPTENDSEQ_B;
 13384              		.loc 1 4248 3 is_stmt 1 view .LVU4198
 13385              		.loc 1 4248 23 is_stmt 0 view .LVU4199
 13386 00a8 0194     		str	r4, [sp, #4]
4249:ad5940lib/ad5940.c ****   wupt_cfg.SeqxWakeupTime[0] = 4;       /* Don't care. >4 is acceptable */
 13387              		.loc 1 4249 3 is_stmt 1 view .LVU4200
 13388              		.loc 1 4249 30 is_stmt 0 view .LVU4201
 13389 00aa 0423     		movs	r3, #4
 13390 00ac 0E93     		str	r3, [sp, #56]
4250:ad5940lib/ad5940.c ****   wupt_cfg.SeqxSleepTime[0] = (uint32_t)((pCfg->CalDuration)*32 + 0.5f) - 1 - 4;
 13391              		.loc 1 4250 3 is_stmt 1 view .LVU4202
 13392              		.loc 1 4250 47 is_stmt 0 view .LVU4203
 13393 00ae 95ED018A 		vldr.32	s16, [r5, #4]
 13394              		.loc 1 4250 61 view .LVU4204
 13395 00b2 DFED457A 		vldr.32	s15, .L830+8
 13396 00b6 28EE278A 		vmul.f32	s16, s16, s15
 13397              		.loc 1 4250 65 view .LVU4205
 13398 00ba F6EE007A 		vmov.f32	s15, #5.0e-1
 13399 00be 38EE278A 		vadd.f32	s16, s16, s15
 13400              		.loc 1 4250 31 view .LVU4206
 13401 00c2 BCEEC88A 		vcvt.u32.f32	s16, s16
 13402              		.loc 1 4250 77 view .LVU4207
 13403 00c6 18EE103A 		vmov	r3, s16	@ int
 13404 00ca 053B     		subs	r3, r3, #5
 13405              		.loc 1 4250 29 view .LVU4208
 13406 00cc 0A93     		str	r3, [sp, #40]
4251:ad5940lib/ad5940.c ****   wupt_cfg.SeqxWakeupTime[1] = 4-1;
 13407              		.loc 1 4251 3 is_stmt 1 view .LVU4209
 13408              		.loc 1 4251 30 is_stmt 0 view .LVU4210
 13409 00ce 0323     		movs	r3, #3
 13410 00d0 0F93     		str	r3, [sp, #60]
4252:ad5940lib/ad5940.c ****   wupt_cfg.SeqxSleepTime[1] = 0xffffffff; /* Don't care */
 13411              		.loc 1 4252 3 is_stmt 1 view .LVU4211
 13412              		.loc 1 4252 29 is_stmt 0 view .LVU4212
 13413 00d2 4FF0FF33 		mov	r3, #-1
 13414 00d6 0B93     		str	r3, [sp, #44]
4253:ad5940lib/ad5940.c ****   WuptPeriod = (wupt_cfg.SeqxSleepTime[0]+1) + (wupt_cfg.SeqxWakeupTime[1]+1);
 13415              		.loc 1 4253 3 is_stmt 1 view .LVU4213
 13416              	.LVL1356:
4254:ad5940lib/ad5940.c ****   AD5940_WUPTCfg(&wupt_cfg);
 13417              		.loc 1 4254 3 view .LVU4214
 13418 00d8 01A8     		add	r0, sp, #4
 13419 00da FFF7FEFF 		bl	AD5940_WUPTCfg
 13420              	.LVL1357:
4255:ad5940lib/ad5940.c ****   
4256:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_ENDSEQ);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 355


 13421              		.loc 1 4256 3 view .LVU4215
 13422 00de 4FF40040 		mov	r0, #32768
 13423 00e2 FFF7FEFF 		bl	AD5940_INTCClrFlag
 13424              	.LVL1358:
4257:ad5940lib/ad5940.c ****   AD5940_WUPTCtrl(bTRUE);
 13425              		.loc 1 4257 3 view .LVU4216
 13426 00e6 2046     		mov	r0, r4
 13427 00e8 FFF7FEFF 		bl	AD5940_WUPTCtrl
 13428              	.LVL1359:
4258:ad5940lib/ad5940.c ****   
4259:ad5940lib/ad5940.c ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_ENDSEQ) == bFALSE);
 13429              		.loc 1 4259 3 view .LVU4217
 13430              	.L821:
 13431              		.loc 1 4259 68 discriminator 1 view .LVU4218
 13432              		.loc 1 4259 8 discriminator 1 view .LVU4219
 13433              		.loc 1 4259 9 is_stmt 0 discriminator 1 view .LVU4220
 13434 00ec 4FF40041 		mov	r1, #32768
 13435 00f0 0120     		movs	r0, #1
 13436 00f2 FFF7FEFF 		bl	AD5940_INTCTestFlag
 13437              	.LVL1360:
 13438              		.loc 1 4259 8 discriminator 1 view .LVU4221
 13439 00f6 0028     		cmp	r0, #0
 13440 00f8 F8D0     		beq	.L821
4260:ad5940lib/ad5940.c ****   TimerCount = AD5940_SEQTimeOutRd();
 13441              		.loc 1 4260 3 is_stmt 1 view .LVU4222
 13442              		.loc 1 4260 16 is_stmt 0 view .LVU4223
 13443 00fa FFF7FEFF 		bl	AD5940_SEQTimeOutRd
 13444              	.LVL1361:
 13445 00fe 8046     		mov	r8, r0
 13446              	.LVL1362:
4261:ad5940lib/ad5940.c ****   
4262:ad5940lib/ad5940.c ****   AD5940_WUPTCtrl(bFALSE);
 13447              		.loc 1 4262 3 is_stmt 1 view .LVU4224
 13448 0100 0020     		movs	r0, #0
 13449              	.LVL1363:
 13450              		.loc 1 4262 3 is_stmt 0 view .LVU4225
 13451 0102 FFF7FEFF 		bl	AD5940_WUPTCtrl
 13452              	.LVL1364:
4263:ad5940lib/ad5940.c **** 	AD5940_WUPTTime(SEQID_0, 4, 4);	/* Set it to minimum value because we don't care about sequence0 n
 13453              		.loc 1 4263 2 is_stmt 1 view .LVU4226
 13454 0106 0422     		movs	r2, #4
 13455 0108 1146     		mov	r1, r2
 13456 010a 0020     		movs	r0, #0
 13457 010c FFF7FEFF 		bl	AD5940_WUPTTime
 13458              	.LVL1365:
4264:ad5940lib/ad5940.c ****   seqinfo.SeqId = SEQID_1;
 13459              		.loc 1 4264 3 view .LVU4227
 13460              		.loc 1 4264 17 is_stmt 0 view .LVU4228
 13461 0110 0124     		movs	r4, #1
 13462 0112 1394     		str	r4, [sp, #76]
4265:ad5940lib/ad5940.c ****   seqinfo.SeqRamAddr = pCfg->CalSeqAddr + SEQ_LEN(SeqA) ;
 13463              		.loc 1 4265 3 is_stmt 1 view .LVU4229
 13464              		.loc 1 4265 28 is_stmt 0 view .LVU4230
 13465 0114 2B68     		ldr	r3, [r5]
 13466              		.loc 1 4265 41 view .LVU4231
 13467 0116 2344     		add	r3, r3, r4
 13468              		.loc 1 4265 22 view .LVU4232
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 356


 13469 0118 1493     		str	r3, [sp, #80]
4266:ad5940lib/ad5940.c ****   seqinfo.SeqLen = SEQ_LEN(SeqBB);
 13470              		.loc 1 4266 3 is_stmt 1 view .LVU4233
 13471              		.loc 1 4266 18 is_stmt 0 view .LVU4234
 13472 011a 0223     		movs	r3, #2
 13473 011c 1593     		str	r3, [sp, #84]
4267:ad5940lib/ad5940.c ****   seqinfo.pSeqCmd = SeqBB;
 13474              		.loc 1 4267 3 is_stmt 1 view .LVU4235
 13475              		.loc 1 4267 19 is_stmt 0 view .LVU4236
 13476 011e 2B4B     		ldr	r3, .L830+12
 13477 0120 1793     		str	r3, [sp, #92]
4268:ad5940lib/ad5940.c ****   seqinfo.WriteSRAM = bTRUE;
 13478              		.loc 1 4268 3 is_stmt 1 view .LVU4237
 13479              		.loc 1 4268 21 is_stmt 0 view .LVU4238
 13480 0122 8DF85840 		strb	r4, [sp, #88]
4269:ad5940lib/ad5940.c ****   AD5940_SEQInfoCfg(&seqinfo);
 13481              		.loc 1 4269 3 is_stmt 1 view .LVU4239
 13482 0126 13A8     		add	r0, sp, #76
 13483 0128 FFF7FEFF 		bl	AD5940_SEQInfoCfg
 13484              	.LVL1366:
4270:ad5940lib/ad5940.c ****   AD5940_SEQCtrlS(bTRUE); /* Enable Sequencer again */
 13485              		.loc 1 4270 3 view .LVU4240
 13486 012c 2046     		mov	r0, r4
 13487 012e FFF7FEFF 		bl	AD5940_SEQCtrlS
 13488              	.LVL1367:
4271:ad5940lib/ad5940.c **** 
4272:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_ENDSEQ);
 13489              		.loc 1 4272 3 view .LVU4241
 13490 0132 4FF40040 		mov	r0, #32768
 13491 0136 FFF7FEFF 		bl	AD5940_INTCClrFlag
 13492              	.LVL1368:
4273:ad5940lib/ad5940.c ****   AD5940_WUPTCtrl(bTRUE);
 13493              		.loc 1 4273 3 view .LVU4242
 13494 013a 2046     		mov	r0, r4
 13495 013c FFF7FEFF 		bl	AD5940_WUPTCtrl
 13496              	.LVL1369:
4274:ad5940lib/ad5940.c ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_ENDSEQ) == bFALSE);
 13497              		.loc 1 4274 3 view .LVU4243
 13498              	.L822:
 13499              		.loc 1 4274 68 discriminator 1 view .LVU4244
 13500              		.loc 1 4274 8 discriminator 1 view .LVU4245
 13501              		.loc 1 4274 9 is_stmt 0 discriminator 1 view .LVU4246
 13502 0140 4FF40041 		mov	r1, #32768
 13503 0144 0120     		movs	r0, #1
 13504 0146 FFF7FEFF 		bl	AD5940_INTCTestFlag
 13505              	.LVL1370:
 13506              		.loc 1 4274 8 discriminator 1 view .LVU4247
 13507 014a 0028     		cmp	r0, #0
 13508 014c F8D0     		beq	.L822
4275:ad5940lib/ad5940.c ****   TimerCount2 = AD5940_SEQTimeOutRd();
 13509              		.loc 1 4275 3 is_stmt 1 view .LVU4248
 13510              		.loc 1 4275 17 is_stmt 0 view .LVU4249
 13511 014e FFF7FEFF 		bl	AD5940_SEQTimeOutRd
 13512              	.LVL1371:
 13513 0152 0446     		mov	r4, r0
 13514              	.LVL1372:
4276:ad5940lib/ad5940.c **** 	AD5940_INTCTestFlag(AFEINTC_0, AFEINTSRC_ENDSEQ);
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 357


 13515              		.loc 1 4276 2 is_stmt 1 view .LVU4250
 13516 0154 4FF40041 		mov	r1, #32768
 13517 0158 0020     		movs	r0, #0
 13518              	.LVL1373:
 13519              		.loc 1 4276 2 is_stmt 0 view .LVU4251
 13520 015a FFF7FEFF 		bl	AD5940_INTCTestFlag
 13521              	.LVL1374:
4277:ad5940lib/ad5940.c **** 
4278:ad5940lib/ad5940.c ****   AD5940_WUPTCtrl(bFALSE);
 13522              		.loc 1 4278 3 is_stmt 1 view .LVU4252
 13523 015e 0020     		movs	r0, #0
 13524 0160 FFF7FEFF 		bl	AD5940_WUPTCtrl
 13525              	.LVL1375:
4279:ad5940lib/ad5940.c ****   AD5940_SEQCfg(&seq_cfg_backup);          /* restore sequencer configuration */
 13526              		.loc 1 4279 3 view .LVU4253
 13527 0164 18A8     		add	r0, sp, #96
 13528 0166 FFF7FEFF 		bl	AD5940_SEQCfg
 13529              	.LVL1376:
4280:ad5940lib/ad5940.c ****   AD5940_INTCCfg(AFEINTC_1, AFEINTSRC_ENDSEQ, (INTCCfg&AFEINTSRC_ENDSEQ)?bTRUE:bFALSE); /* Restore 
 13530              		.loc 1 4280 3 view .LVU4254
 13531 016a C7F3C032 		ubfx	r2, r7, #15, #1
 13532 016e 4FF40041 		mov	r1, #32768
 13533 0172 0120     		movs	r0, #1
 13534 0174 FFF7FEFF 		bl	AD5940_INTCCfg
 13535              	.LVL1377:
4281:ad5940lib/ad5940.c ****   AD5940_INTCClrFlag(AFEINTSRC_ENDSEQ);
 13536              		.loc 1 4281 3 view .LVU4255
 13537 0178 4FF40040 		mov	r0, #32768
 13538 017c FFF7FEFF 		bl	AD5940_INTCClrFlag
 13539              	.LVL1378:
4282:ad5940lib/ad5940.c ****   //printf("Time duration:%d ", (TimerCount2 - TimerCount));
4283:ad5940lib/ad5940.c **** 	*pFreq = pCfg->SystemClkFreq*WuptPeriod/(TimerCount2 - TimerCount);
 13540              		.loc 1 4283 2 view .LVU4256
 13541              		.loc 1 4283 15 is_stmt 0 view .LVU4257
 13542 0180 D5ED027A 		vldr.32	s15, [r5, #8]
 13543              		.loc 1 4283 30 view .LVU4258
 13544 0184 B8EE488A 		vcvt.f32.u32	s16, s16
 13545              	.LVL1379:
 13546              		.loc 1 4283 30 view .LVU4259
 13547 0188 28EE278A 		vmul.f32	s16, s16, s15
 13548              		.loc 1 4283 55 view .LVU4260
 13549 018c A4EB0804 		sub	r4, r4, r8
 13550              	.LVL1380:
 13551              		.loc 1 4283 41 view .LVU4261
 13552 0190 07EE904A 		vmov	s15, r4	@ int
 13553 0194 F8EE677A 		vcvt.f32.u32	s15, s15
 13554 0198 88EE277A 		vdiv.f32	s14, s16, s15
 13555              		.loc 1 4283 9 view .LVU4262
 13556 019c 86ED007A 		vstr.32	s14, [r6]
4284:ad5940lib/ad5940.c ****   return AD5940ERR_OK;
 13557              		.loc 1 4284 3 is_stmt 1 view .LVU4263
 13558              		.loc 1 4284 10 is_stmt 0 view .LVU4264
 13559 01a0 0020     		movs	r0, #0
 13560              	.LVL1381:
 13561              	.L819:
4285:ad5940lib/ad5940.c **** }
 13562              		.loc 1 4285 1 view .LVU4265
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 358


 13563 01a2 1EB0     		add	sp, sp, #120
 13564              	.LCFI191:
 13565              		.cfi_def_cfa_offset 32
 13566              		@ sp needed
 13567 01a4 BDEC028B 		vldm	sp!, {d8}
 13568              	.LCFI192:
 13569              		.cfi_restore 80
 13570              		.cfi_restore 81
 13571              		.cfi_def_cfa_offset 24
 13572 01a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13573              	.LVL1382:
 13574              	.L823:
 13575              	.LCFI193:
 13576              		.cfi_def_cfa_offset 0
 13577              		.cfi_restore 4
 13578              		.cfi_restore 5
 13579              		.cfi_restore 6
 13580              		.cfi_restore 7
 13581              		.cfi_restore 8
 13582              		.cfi_restore 14
4216:ad5940lib/ad5940.c ****   if(pFreq == NULL) return AD5940ERR_NULLP;
 13583              		.loc 1 4216 27 view .LVU4266
 13584 01ac 6FF00200 		mvn	r0, #2
 13585              	.LVL1383:
 13586              		.loc 1 4285 1 view .LVU4267
 13587 01b0 7047     		bx	lr
 13588              	.LVL1384:
 13589              	.L824:
 13590              	.LCFI194:
 13591              		.cfi_def_cfa_offset 152
 13592              		.cfi_offset 4, -24
 13593              		.cfi_offset 5, -20
 13594              		.cfi_offset 6, -16
 13595              		.cfi_offset 7, -12
 13596              		.cfi_offset 8, -8
 13597              		.cfi_offset 14, -4
 13598              		.cfi_offset 80, -32
 13599              		.cfi_offset 81, -28
4217:ad5940lib/ad5940.c ****   if(pCfg->CalDuration < 1.0f)
 13600              		.loc 1 4217 28 view .LVU4268
 13601 01b2 6FF00200 		mvn	r0, #2
 13602              	.LVL1385:
4217:ad5940lib/ad5940.c ****   if(pCfg->CalDuration < 1.0f)
 13603              		.loc 1 4217 28 view .LVU4269
 13604 01b6 F4E7     		b	.L819
 13605              	.LVL1386:
 13606              	.L825:
4219:ad5940lib/ad5940.c ****   AD5940_SEQGetCfg(&seq_cfg_backup);
 13607              		.loc 1 4219 12 view .LVU4270
 13608 01b8 6FF00100 		mvn	r0, #1
 13609              	.LVL1387:
4219:ad5940lib/ad5940.c ****   AD5940_SEQGetCfg(&seq_cfg_backup);
 13610              		.loc 1 4219 12 view .LVU4271
 13611 01bc F1E7     		b	.L819
 13612              	.L831:
 13613 01be 00BF     		.align	2
 13614              	.L830:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 359


 13615 01c0 00000000 		.word	.LANCHOR4
 13616 01c4 00000000 		.word	.LANCHOR5
 13617 01c8 00000042 		.word	1107296256
 13618 01cc 00000000 		.word	.LANCHOR6
 13619              		.cfi_endproc
 13620              	.LFE122:
 13622              		.comm	SeqGenDB,28,4
 13623              		.section	.rodata
 13624              		.align	2
 13625              		.set	.LANCHOR0,. + 0
 13626              	.LC0:
 13627 0000 16000000 		.word	22
 13628 0004 2C000000 		.word	44
 13629 0008 59000000 		.word	89
 13630 000c B2000000 		.word	178
 13631 0010 0B010000 		.word	267
 13632 0014 15020000 		.word	533
 13633 0018 80020000 		.word	640
 13634 001c 9B020000 		.word	667
 13635 0020 20030000 		.word	800
 13636 0024 79030000 		.word	889
 13637 0028 2B040000 		.word	1067
 13638 002c 35050000 		.word	1333
 13639 0030 00000000 		.word	0
 13640              	.LC1:
 13641 0034 05000000 		.word	5
 13642 0038 04000000 		.word	4
 13643 003c 02000000 		.word	2
 13644 0040 00000000 		.word	0
 13645              	.LC3:
 13646 0044 00010203 		.ascii	"\000\001\002\003\006"
 13646      06
 13647 0049 03040506 		.ascii	"\003\004\005\006\007"
 13647      07
 13648 004e 07070909 		.ascii	"\007\007\011\011\012"
 13648      0A
 13649 0053 00       		.space	1
 13650              	.LC2:
 13651 0054 0809     		.short	2312
 13652 0056 0000     		.space	2
 13653 0058 C9020000 		.word	713
 13654 005c 080C     		.short	3080
 13655 005e 0000     		.space	2
 13656 0060 6C200000 		.word	8300
 13657 0064 F021     		.short	8688
 13658 0066 0000     		.space	2
 13659 0068 10000000 		.word	16
 13660 006c 1004     		.short	1040
 13661 006e 0000     		.space	2
 13662 0070 C9020000 		.word	713
 13663 0074 280A     		.short	2600
 13664 0076 0000     		.space	2
 13665 0078 09000000 		.word	9
 13666 007c 8C23     		.short	9100
 13667 007e 0000     		.space	2
 13668 0080 04010000 		.word	260
 13669 0084 040A     		.short	2564
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 360


 13670 0086 0000     		.space	2
 13671 0088 59480000 		.word	18521
 13672 008c 040A     		.short	2564
 13673 008e 0000     		.space	2
 13674 0090 7BF20000 		.word	62075
 13675 0094 000A     		.short	2560
 13676 0096 0000     		.space	2
 13677 0098 09800000 		.word	32777
 13678 009c F022     		.short	8944
 13679 009e 0000     		.space	2
 13680 00a0 00000000 		.word	0
 13681 00a4 3022     		.short	8752
 13682 00a6 0000     		.space	2
 13683 00a8 AFA587DE 		.word	-561535569
 13684 00ac 5022     		.short	8784
 13685 00ae 0000     		.space	2
 13686 00b0 3F100000 		.word	4159
 13687 00b4 B022     		.short	8880
 13688 00b6 0000     		.space	2
 13689 00b8 3C200000 		.word	8252
 13690 00bc 3022     		.short	8752
 13691 00be 0000     		.space	2
 13692 00c0 A0A587DE 		.word	-561535584
 13693              	.LC4:
 13694 00c4 C8000000 		.word	200
 13695 00c8 E8030000 		.word	1000
 13696 00cc 88130000 		.word	5000
 13697 00d0 10270000 		.word	10000
 13698 00d4 204E0000 		.word	20000
 13699 00d8 409C0000 		.word	40000
 13700 00dc 80380100 		.word	80000
 13701 00e0 00710200 		.word	160000
 13702 00e4 00000000 		.word	0
 13703              	.LC5:
 13704 00e8 00000000 		.word	0
 13705 00ec 6E000000 		.word	110
 13706 00f0 E8030000 		.word	1000
 13707 00f4 D0070000 		.word	2000
 13708 00f8 B80B0000 		.word	3000
 13709 00fc A00F0000 		.word	4000
 13710 0100 70170000 		.word	6000
 13711 0104 401F0000 		.word	8000
 13712 0108 10270000 		.word	10000
 13713 010c E02E0000 		.word	12000
 13714 0110 803E0000 		.word	16000
 13715 0114 204E0000 		.word	20000
 13716 0118 C05D0000 		.word	24000
 13717 011c 30750000 		.word	30000
 13718 0120 007D0000 		.word	32000
 13719 0124 409C0000 		.word	40000
 13720 0128 80BB0000 		.word	48000
 13721 012c 00FA0000 		.word	64000
 13722 0130 084C0100 		.word	85000
 13723 0134 00770100 		.word	96000
 13724 0138 A0860100 		.word	100000
 13725 013c C0D40100 		.word	120000
 13726 0140 00F40100 		.word	128000
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 361


 13727 0144 00710200 		.word	160000
 13728 0148 A0FD0200 		.word	196000
 13729 014c 00E80300 		.word	256000
 13730 0150 00D00700 		.word	512000
 13731              	.LC6:
 13732 0154 0000803F 		.word	1065353216
 13733 0158 0000C03F 		.word	1069547520
 13734 015c 00000040 		.word	1073741824
 13735 0160 00008040 		.word	1082130432
 13736 0164 00001041 		.word	1091567616
 13737              		.section	.bss.bIsS2silicon,"aw",%nobits
 13738              		.set	.LANCHOR1,. + 0
 13741              	bIsS2silicon:
 13742 0000 00       		.space	1
 13743              		.section	.rodata.SeqA.8617,"a"
 13744              		.align	2
 13745              		.set	.LANCHOR4,. + 0
 13748              	SeqA.8617:
 13749 0000 FFFFFF7F 		.word	2147483647
 13750              		.section	.rodata.SeqB.8618,"a"
 13751              		.align	2
 13752              		.set	.LANCHOR5,. + 0
 13755              	SeqB.8618:
 13756 0000 00000081 		.word	-2130706432
 13757              		.section	.rodata.SeqBB.8619,"a"
 13758              		.align	2
 13759              		.set	.LANCHOR6,. + 0
 13762              	SeqBB.8619:
 13763 0000 FFFFFF7F 		.word	2147483647
 13764 0004 00000081 		.word	-2130706432
 13765              		.section	.rodata.cal_registers.8481,"a"
 13766              		.align	2
 13767              		.set	.LANCHOR2,. + 0
 13770              	cal_registers.8481:
 13771 0000 4022     		.short	8768
 13772 0002 4422     		.short	8772
 13773 0004 7022     		.short	8816
 13774 0006 CC22     		.short	8908
 13775 0008 7422     		.short	8820
 13776 000a C822     		.short	8904
 13777 000c 7822     		.short	8824
 13778 000e D422     		.short	8916
 13779 0010 9822     		.short	8856
 13780 0012 D022     		.short	8912
 13781              		.section	.rodata.ideal_pga_gain.8491,"a"
 13782              		.align	2
 13783              		.set	.LANCHOR3,. + 0
 13786              	ideal_pga_gain.8491:
 13787 0000 0000803F 		.word	1065353216
 13788 0004 0000C03F 		.word	1069547520
 13789 0008 00000040 		.word	1073741824
 13790 000c 00008040 		.word	1082130432
 13791 0010 00001041 		.word	1091567616
 13792              		.text
 13793              	.Letext0:
 13794              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 13795              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 362


 13796              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 13797              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 13798              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 13799              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 13800              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 13801              		.file 9 "ad5940lib/ad5940.h"
 13802              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 13803              		.file 11 "<built-in>"
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 363


DEFINED SYMBOLS
                            *ABS*:00000000 ad5940.c
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:17     .text.AD5940_SEQGenSearchReg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:24     .text.AD5940_SEQGenSearchReg:00000000 AD5940_SEQGenSearchReg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:85     .text.AD5940_SEQGenSearchReg:0000002c $d
                            *COM*:0000001c SeqGenDB
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:90     .text.AD5940_SEQRegInfoInsert:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:96     .text.AD5940_SEQRegInfoInsert:00000000 AD5940_SEQRegInfoInsert
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:180    .text.AD5940_SEQRegInfoInsert:00000040 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:185    .text._is_value_in_table:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:191    .text._is_value_in_table:00000000 _is_value_in_table
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:260    .text.AD5940_ReadWrite16B:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:266    .text.AD5940_ReadWrite16B:00000000 AD5940_ReadWrite16B
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:314    .text.AD5940_ReadWrite8B:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:320    .text.AD5940_ReadWrite8B:00000000 AD5940_ReadWrite8B
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:359    .text.AD5940_ReadWrite32B:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:365    .text.AD5940_ReadWrite32B:00000000 AD5940_ReadWrite32B
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:434    .text.AD5940_SPIWriteReg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:440    .text.AD5940_SPIWriteReg:00000000 AD5940_SPIWriteReg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:507    .text.AD5940_SPIReadReg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:513    .text.AD5940_SPIReadReg:00000000 AD5940_SPIReadReg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:593    .text.AD5940_SEQGenGetRegDefault:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:599    .text.AD5940_SEQGenGetRegDefault:00000000 AD5940_SEQGenGetRegDefault
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:631    .text.AD5940_SEQReadReg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:637    .text.AD5940_SEQReadReg:00000000 AD5940_SEQReadReg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:700    .text.AD5940_SEQReadReg:00000038 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:705    .text.AD5940_SEQGenInsert:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:712    .text.AD5940_SEQGenInsert:00000000 AD5940_SEQGenInsert
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:766    .text.AD5940_SEQGenInsert:00000028 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:771    .text.AD5940_SEQWriteReg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:777    .text.AD5940_SEQWriteReg:00000000 AD5940_SEQWriteReg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:871    .text.AD5940_SEQWriteReg:0000006c $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:876    .text.AD5940_SEQGenInit:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:883    .text.AD5940_SEQGenInit:00000000 AD5940_SEQGenInit
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:930    .text.AD5940_SEQGenInit:00000024 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:935    .text.AD5940_SEQGenFetchSeq:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:942    .text.AD5940_SEQGenFetchSeq:00000000 AD5940_SEQGenFetchSeq
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:983    .text.AD5940_SEQGenFetchSeq:00000018 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:988    .text.AD5940_SEQGenCtrl:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:995    .text.AD5940_SEQGenCtrl:00000000 AD5940_SEQGenCtrl
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1030   .text.AD5940_SEQGenCtrl:00000018 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1035   .text.AD5940_SEQCycleTime:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1042   .text.AD5940_SEQCycleTime:00000000 AD5940_SEQCycleTime
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1117   .text.AD5940_SEQCycleTime:00000034 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1122   .rodata.AD5940_Notch50HzAvailable.str1.4:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1141   .text.AD5940_Notch50HzAvailable:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1148   .text.AD5940_Notch50HzAvailable:00000000 AD5940_Notch50HzAvailable
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1357   .text.AD5940_Notch50HzAvailable:000000f0 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1368   .rodata.AD5940_Notch60HzAvailable.str1.4:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1375   .text.AD5940_Notch60HzAvailable:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1382   .text.AD5940_Notch60HzAvailable:00000000 AD5940_Notch60HzAvailable
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1582   .text.AD5940_Notch60HzAvailable:000000d8 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1589   .text.AD5940_ClksCalculate:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1596   .text.AD5940_ClksCalculate:00000000 AD5940_ClksCalculate
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1678   .text.AD5940_ClksCalculate:00000064 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1878   .text.AD5940_ClksCalculate:00000170 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1882   .text.AD5940_ClksCalculate:00000174 $t
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 364


C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1964   .text.AD5940_ClksCalculate:000001dc $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1969   .text.AD5940_SweepNext:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1976   .text.AD5940_SweepNext:00000000 AD5940_SweepNext
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2237   .text.AD5940_StructInit:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2244   .text.AD5940_StructInit:00000000 AD5940_StructInit
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2270   .text.AD5940_ADCCode2Volt:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2277   .text.AD5940_ADCCode2Volt:00000000 AD5940_ADCCode2Volt
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2304   .text.AD5940_ADCCode2Volt:00000016 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2308   .text.AD5940_ADCCode2Volt:0000001a $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2362   .text.AD5940_ADCCode2Volt:00000058 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2368   .text.AD5940_ComplexDivFloat:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2375   .text.AD5940_ComplexDivFloat:00000000 AD5940_ComplexDivFloat
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2449   .text.AD5940_ComplexMulFloat:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2456   .text.AD5940_ComplexMulFloat:00000000 AD5940_ComplexMulFloat
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2517   .text.AD5940_ComplexAddFloat:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2524   .text.AD5940_ComplexAddFloat:00000000 AD5940_ComplexAddFloat
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2577   .text.AD5940_ComplexSubFloat:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2584   .text.AD5940_ComplexSubFloat:00000000 AD5940_ComplexSubFloat
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2637   .text.AD5940_ComplexDivInt:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2644   .text.AD5940_ComplexDivInt:00000000 AD5940_ComplexDivInt
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2724   .text.AD5940_ComplexMulInt:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2731   .text.AD5940_ComplexMulInt:00000000 AD5940_ComplexMulInt
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2796   .text.AD5940_ComplexMag:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2803   .text.AD5940_ComplexMag:00000000 AD5940_ComplexMag
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2838   .text.AD5940_ComplexPhase:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2845   .text.AD5940_ComplexPhase:00000000 AD5940_ComplexPhase
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2875   .text.AD5940_FIFORd:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:2882   .text.AD5940_FIFORd:00000000 AD5940_FIFORd
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3042   .text.AD5940_WriteReg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3049   .text.AD5940_WriteReg:00000000 AD5940_WriteReg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3085   .text.AD5940_WriteReg:00000018 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3090   .text.__AD5940_SetDExRTIA:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3096   .text.__AD5940_SetDExRTIA:00000000 __AD5940_SetDExRTIA
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3213   .text.__AD5940_SetDExRTIA:00000060 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3218   .text.AD5940_ReadReg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3225   .text.AD5940_ReadReg:00000000 AD5940_ReadReg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3263   .text.AD5940_ReadReg:00000018 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3268   .rodata.AD5940_Initialize.str1.4:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3276   .text.AD5940_Initialize:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3283   .text.AD5940_Initialize:00000000 AD5940_Initialize
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3426   .text.AD5940_Initialize:00000088 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3435   .text.AD5940_AFECtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3442   .text.AD5940_AFECtrlS:00000000 AD5940_AFECtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3546   .text.AD5940_LPModeCtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3553   .text.AD5940_LPModeCtrlS:00000000 AD5940_LPModeCtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3683   .text.AD5940_AFEPwrBW:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3690   .text.AD5940_AFEPwrBW:00000000 AD5940_AFEPwrBW
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3722   .text.AD5940_REFCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3729   .text.AD5940_REFCfgS:00000000 AD5940_REFCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3944   .text.__AD5940_ReferenceON:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:3950   .text.__AD5940_ReferenceON:00000000 __AD5940_ReferenceON
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4019   .text.AD5940_SWMatrixCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4026   .text.AD5940_SWMatrixCfgS:00000000 AD5940_SWMatrixCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4074   .text.AD5940_HSDacCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4081   .text.AD5940_HSDacCfgS:00000000 AD5940_HSDacCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4149   .text.AD5940_HSTIACfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4156   .text.AD5940_HSTIACfgS:00000000 AD5940_HSTIACfgS
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 365


C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4281   .text.AD5940_HSRTIACfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4288   .text.AD5940_HSRTIACfgS:00000000 AD5940_HSRTIACfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4333   .text.AD5940_WGCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4340   .text.AD5940_WGCfgS:00000000 AD5940_WGCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4481   .text.AD5940_HSLoopCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4488   .text.AD5940_HSLoopCfgS:00000000 AD5940_HSLoopCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4527   .text.AD5940_WGDACCodeS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4534   .text.AD5940_WGDACCodeS:00000000 AD5940_WGDACCodeS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4565   .text.AD5940_WGFreqWordCal:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4572   .text.AD5940_WGFreqWordCal:00000000 AD5940_WGFreqWordCal
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4677   .text.AD5940_WGFreqWordCal:00000078 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4683   .text.AD5940_WGFreqCtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4690   .text.AD5940_WGFreqCtrlS:00000000 AD5940_WGFreqCtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4723   .text.AD5940_LPDACWriteS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4730   .text.AD5940_LPDACWriteS:00000000 AD5940_LPDACWriteS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4766   .text.AD5940_LPDAC0WriteS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4773   .text.AD5940_LPDAC0WriteS:00000000 AD5940_LPDAC0WriteS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4809   .text.AD5940_LPDAC1WriteS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4816   .text.AD5940_LPDAC1WriteS:00000000 AD5940_LPDAC1WriteS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4852   .text.AD5940_LPDACCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4859   .text.AD5940_LPDACCfgS:00000000 AD5940_LPDACCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4974   .text.AD5940_LPAMPCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:4981   .text.AD5940_LPAMPCfgS:00000000 AD5940_LPAMPCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5096   .text.AD5940_LPLoopCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5103   .text.AD5940_LPLoopCfgS:00000000 AD5940_LPLoopCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5131   .text.AD5940_ReadAfeResult:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5138   .text.AD5940_ReadAfeResult:00000000 AD5940_ReadAfeResult
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5158   .text.AD5940_ReadAfeResult:0000000a $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5256   .text.AD5940_ADCBaseCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5263   .text.AD5940_ADCBaseCfgS:00000000 AD5940_ADCBaseCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5309   .text.AD5940_ADCFilterCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5316   .text.AD5940_ADCFilterCfgS:00000000 AD5940_ADCFilterCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5425   .text.AD5940_ADCPowerCtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5432   .text.AD5940_ADCPowerCtrlS:00000000 AD5940_ADCPowerCtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5481   .text.AD5940_ADCConvtCtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5488   .text.AD5940_ADCConvtCtrlS:00000000 AD5940_ADCConvtCtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5537   .text.AD5940_ADCMuxCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5544   .text.AD5940_ADCMuxCfgS:00000000 AD5940_ADCMuxCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5593   .text.AD5940_ADCMuxCfgS:00000024 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5598   .text.AD5940_ADCDigCompCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5605   .text.AD5940_ADCDigCompCfgS:00000000 AD5940_ADCDigCompCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5648   .text.AD5940_StatisticCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5655   .text.AD5940_StatisticCfgS:00000000 AD5940_StatisticCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5711   .text.AD5940_ADCRepeatCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5718   .text.AD5940_ADCRepeatCfgS:00000000 AD5940_ADCRepeatCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5744   .text.AD5940_DFTCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5751   .text.AD5940_DFTCfgS:00000000 AD5940_DFTCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5841   .text.AD5940_DSPCfgS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5848   .text.AD5940_DSPCfgS:00000000 AD5940_DSPCfgS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5888   .text.AD5940_FIFOCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5895   .text.AD5940_FIFOCfg:00000000 AD5940_FIFOCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5984   .text.AD5940_FIFOGetCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5991   .text.AD5940_FIFOGetCfg:00000000 AD5940_FIFOGetCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6074   .text.AD5940_FIFOCtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6081   .text.AD5940_FIFOCtrlS:00000000 AD5940_FIFOCtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6128   .text.AD5940_FIFOThrshSet:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6135   .text.AD5940_FIFOThrshSet:00000000 AD5940_FIFOThrshSet
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 366


C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6161   .text.AD5940_FIFOGetCnt:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6168   .text.AD5940_FIFOGetCnt:00000000 AD5940_FIFOGetCnt
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6191   .text.AD5940_SEQCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6198   .text.AD5940_SEQCfg:00000000 AD5940_SEQCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6313   .text.AD5940_SEQGetCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6320   .text.AD5940_SEQGetCfg:00000000 AD5940_SEQGetCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6395   .text.AD5940_SEQCtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6402   .text.AD5940_SEQCtrlS:00000000 AD5940_SEQCtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6450   .text.AD5940_SEQHaltS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6457   .text.AD5940_SEQHaltS:00000000 AD5940_SEQHaltS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6479   .text.AD5940_SEQMmrTrig:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6486   .text.AD5940_SEQMmrTrig:00000000 AD5940_SEQMmrTrig
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6519   .text.AD5940_SEQCmdWrite:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6526   .text.AD5940_SEQCmdWrite:00000000 AD5940_SEQCmdWrite
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6581   .text.AD5940_SEQInfoCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6588   .text.AD5940_SEQInfoCfg:00000000 AD5940_SEQInfoCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6609   .text.AD5940_SEQInfoCfg:0000000e $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6613   .text.AD5940_SEQInfoCfg:00000012 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6699   .text.AD5940_SEQInfoGet:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6706   .text.AD5940_SEQInfoGet:00000000 AD5940_SEQInfoGet
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6732   .text.AD5940_SEQInfoGet:00000010 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6736   .text.AD5940_SEQInfoGet:00000014 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6831   .text.AD5940_SEQGpioCtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6838   .text.AD5940_SEQGpioCtrlS:00000000 AD5940_SEQGpioCtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6864   .text.AD5940_SEQTimeOutRd:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6871   .text.AD5940_SEQTimeOutRd:00000000 AD5940_SEQTimeOutRd
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6893   .text.AD5940_SEQGpioTrigCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:6900   .text.AD5940_SEQGpioTrigCfg:00000000 AD5940_SEQGpioTrigCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7094   .text.AD5940_WUPTCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7101   .text.AD5940_WUPTCfg:00000000 AD5940_WUPTCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7335   .text.AD5940_WUPTCtrl:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7342   .text.AD5940_WUPTCtrl:00000000 AD5940_WUPTCtrl
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7397   .text.AD5940_WUPTTime:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7404   .text.AD5940_WUPTTime:00000000 AD5940_WUPTTime
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7426   .text.AD5940_WUPTTime:0000000e $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7430   .text.AD5940_WUPTTime:00000012 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7566   .text.AD5940_HFOSC32MHzCtrl:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7573   .text.AD5940_HFOSC32MHzCtrl:00000000 AD5940_HFOSC32MHzCtrl
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7694   .text.AD5940_CLKCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7701   .text.AD5940_CLKCfg:00000000 AD5940_CLKCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7933   .text.AD5940_INTCCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:7940   .text.AD5940_INTCCfg:00000000 AD5940_INTCCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8010   .text.AD5940_INTCGetCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8017   .text.AD5940_INTCGetCfg:00000000 AD5940_INTCGetCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8060   .text.AD5940_INTCClrFlag:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8067   .text.AD5940_INTCClrFlag:00000000 AD5940_INTCClrFlag
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8093   .text.AD5940_INTCTestFlag:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8100   .text.AD5940_INTCTestFlag:00000000 AD5940_INTCTestFlag
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8153   .text.__AD5940_TakeMeasurement:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8159   .text.__AD5940_TakeMeasurement:00000000 __AD5940_TakeMeasurement
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8249   .text.__AD5940_TakeMeasurement:00000050 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8254   .text.AD5940_INTCGetFlag:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8261   .text.AD5940_INTCGetFlag:00000000 AD5940_INTCGetFlag
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8299   .text.AD5940_AGPIOFuncCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8306   .text.AD5940_AGPIOFuncCfg:00000000 AD5940_AGPIOFuncCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8332   .text.AD5940_AGPIOOen:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8339   .text.AD5940_AGPIOOen:00000000 AD5940_AGPIOOen
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 367


C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8365   .text.AD5940_AGPIOIen:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8372   .text.AD5940_AGPIOIen:00000000 AD5940_AGPIOIen
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8398   .text.AD5940_AGPIOIn:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8405   .text.AD5940_AGPIOIn:00000000 AD5940_AGPIOIn
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8427   .text.AD5940_AGPIOPen:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8434   .text.AD5940_AGPIOPen:00000000 AD5940_AGPIOPen
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8460   .text.AD5940_AGPIOCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8467   .text.AD5940_AGPIOCfg:00000000 AD5940_AGPIOCfg
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8511   .text.AD5940_AGPIOSet:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8518   .text.AD5940_AGPIOSet:00000000 AD5940_AGPIOSet
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8544   .text.AD5940_AGPIOClr:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8551   .text.AD5940_AGPIOClr:00000000 AD5940_AGPIOClr
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8577   .text.AD5940_AGPIOToggle:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8584   .text.AD5940_AGPIOToggle:00000000 AD5940_AGPIOToggle
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8610   .text.AD5940_LPModeEnS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8617   .text.AD5940_LPModeEnS:00000000 AD5940_LPModeEnS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8659   .text.AD5940_LPModeEnS:00000020 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8664   .text.AD5940_LPModeClkS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8671   .text.AD5940_LPModeClkS:00000000 AD5940_LPModeClkS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8697   .text.AD5940_SleepKeyCtrlS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8704   .text.AD5940_SleepKeyCtrlS:00000000 AD5940_SleepKeyCtrlS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8730   .text.AD5940_EnterSleepS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8737   .text.AD5940_EnterSleepS:00000000 AD5940_EnterSleepS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8764   .text.AD5940_ShutDownS:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8771   .text.AD5940_ShutDownS:00000000 AD5940_ShutDownS
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8820   .text.AD5940_ShutDownS:00000030 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8825   .text.AD5940_WakeUp:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8832   .text.AD5940_WakeUp:00000000 AD5940_WakeUp
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8885   .text.AD5940_GetADIID:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8892   .text.AD5940_GetADIID:00000000 AD5940_GetADIID
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8914   .text.AD5940_GetChipID:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8921   .text.AD5940_GetChipID:00000000 AD5940_GetChipID
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8943   .text.AD5940_SoftRst:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8950   .text.AD5940_SoftRst:00000000 AD5940_SoftRst
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8978   .text.AD5940_HWReset:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:8985   .text.AD5940_HWReset:00000000 AD5940_HWReset
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:9016   .text.AD5940_ADCPGACal:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:9023   .text.AD5940_ADCPGACal:00000000 AD5940_ADCPGACal
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:9613   .text.AD5940_ADCPGACal:0000027c $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:9624   .text.AD5940_LPTIAOffsetCal:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:9631   .text.AD5940_LPTIAOffsetCal:00000000 AD5940_LPTIAOffsetCal
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:9995   .text.AD5940_LPTIAOffsetCal:00000168 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:10002  .text.AD5940_HSTIAOffsetCal:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:10009  .text.AD5940_HSTIAOffsetCal:00000000 AD5940_HSTIAOffsetCal
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:10027  .text.AD5940_HSRtiaCal:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:10034  .text.AD5940_HSRtiaCal:00000000 AD5940_HSRtiaCal
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:10638  .text.AD5940_HSRtiaCal:00000328 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:10654  .text.AD5940_HSRtiaCal:00000358 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:10764  .text.AD5940_LPRtiaCal:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:10771  .text.AD5940_LPRtiaCal:00000000 AD5940_LPRtiaCal
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:11062  .text.AD5940_LPRtiaCal:000001b0 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:11074  .text.AD5940_LPRtiaCal:000001d4 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:11743  .text.AD5940_LPRtiaCal:000004e0 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:11750  .text.AD5940_LPRtiaCal:000004e4 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:12050  .text.AD5940_LPRtiaCal:0000066c $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:12055  .rodata.AD5940_HSDACCal.str1.4:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:12062  .text.AD5940_HSDACCal:00000000 $t
ARM GAS  C:\Users\root\AppData\Local\Temp\ccjNHqBU.s 			page 368


C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:12069  .text.AD5940_HSDACCal:00000000 AD5940_HSDACCal
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:12601  .text.AD5940_HSDACCal:0000024c $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:12611  .text.AD5940_LPDACCal:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:12618  .text.AD5940_LPDACCal:00000000 AD5940_LPDACCal
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13212  .text.AD5940_LPDACCal:00000304 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13224  .text.AD5940_LFOSCMeasure:00000000 $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13231  .text.AD5940_LFOSCMeasure:00000000 AD5940_LFOSCMeasure
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13615  .text.AD5940_LFOSCMeasure:000001c0 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13624  .rodata:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13741  .bss.bIsS2silicon:00000000 bIsS2silicon
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13742  .bss.bIsS2silicon:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13744  .rodata.SeqA.8617:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13748  .rodata.SeqA.8617:00000000 SeqA.8617
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13751  .rodata.SeqB.8618:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13755  .rodata.SeqB.8618:00000000 SeqB.8618
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13758  .rodata.SeqBB.8619:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13762  .rodata.SeqBB.8619:00000000 SeqBB.8619
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13766  .rodata.cal_registers.8481:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13770  .rodata.cal_registers.8481:00000000 cal_registers.8481
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13782  .rodata.ideal_pga_gain.8491:00000000 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:13786  .rodata.ideal_pga_gain.8491:00000000 ideal_pga_gain.8491
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1683   .text.AD5940_ClksCalculate:00000069 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:1683   .text.AD5940_ClksCalculate:0000006a $t
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5165   .text.AD5940_ReadAfeResult:00000011 $d
C:\Users\root\AppData\Local\Temp\ccjNHqBU.s:5165   .text.AD5940_ReadAfeResult:00000012 $t

UNDEFINED SYMBOLS
AD5940_ReadWriteNBytes
AD5940_CsClr
AD5940_CsSet
log10
pow
memset
sqrt
atan2
memcpy
printf
__aeabi_l2f
AD5940_Delay10us
AD5940_RstClr
AD5940_RstSet
