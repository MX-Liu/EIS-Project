ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Impedance.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.AppIMPSeqCfgGen,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	AppIMPSeqCfgGen:
  25              	.LFB6:
  26              		.file 1 "Core/Src/Impedance.c"
   1:Core/Src/Impedance.c **** /*!
   2:Core/Src/Impedance.c ****  *****************************************************************************
   3:Core/Src/Impedance.c ****  @file:    Impedance.c
   4:Core/Src/Impedance.c ****  @author:  Neo Xu
   5:Core/Src/Impedance.c ****  @brief:   standard 4-wire or 2-wire impedance measurement sequences.
   6:Core/Src/Impedance.c ****  -----------------------------------------------------------------------------
   7:Core/Src/Impedance.c **** 
   8:Core/Src/Impedance.c **** Copyright (c) 2017-2019 Analog Devices, Inc. All Rights Reserved.
   9:Core/Src/Impedance.c **** 
  10:Core/Src/Impedance.c **** This software is proprietary to Analog Devices, Inc. and its licensors.
  11:Core/Src/Impedance.c **** By using this software you agree to the terms of the associated
  12:Core/Src/Impedance.c **** Analog Devices Software License Agreement.
  13:Core/Src/Impedance.c ****  
  14:Core/Src/Impedance.c **** *****************************************************************************/
  15:Core/Src/Impedance.c **** #include "ad5940.h"
  16:Core/Src/Impedance.c **** #include <stdio.h>
  17:Core/Src/Impedance.c **** #include "string.h"
  18:Core/Src/Impedance.c **** #include "math.h"
  19:Core/Src/Impedance.c **** #include "Impedance.h"
  20:Core/Src/Impedance.c **** 
  21:Core/Src/Impedance.c **** /* Default LPDAC resolution(2.5V internal reference). */
  22:Core/Src/Impedance.c **** #define DAC12BITVOLT_1LSB   (2200.0f/4095)  //mV
  23:Core/Src/Impedance.c **** #define DAC6BITVOLT_1LSB    (DAC12BITVOLT_1LSB*64)  //mV
  24:Core/Src/Impedance.c **** 
  25:Core/Src/Impedance.c **** /* 
  26:Core/Src/Impedance.c ****   Application configuration structure. Specified by user from template.
  27:Core/Src/Impedance.c ****   The variables are usable in this whole application.
  28:Core/Src/Impedance.c ****   It includes basic configuration for sequencer generator and application related parameters
  29:Core/Src/Impedance.c **** */
  30:Core/Src/Impedance.c **** AppIMPCfg_Type AppIMPCfg = 
  31:Core/Src/Impedance.c **** {
  32:Core/Src/Impedance.c ****   .bParaChanged = bFALSE,
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 2


  33:Core/Src/Impedance.c ****   .SeqStartAddr = 0,
  34:Core/Src/Impedance.c ****   .MaxSeqLen = 0,
  35:Core/Src/Impedance.c ****   
  36:Core/Src/Impedance.c ****   .SeqStartAddrCal = 0,
  37:Core/Src/Impedance.c ****   .MaxSeqLenCal = 0,
  38:Core/Src/Impedance.c **** 
  39:Core/Src/Impedance.c ****   .ImpODR = 20.0,           /* 20.0 Hz*/
  40:Core/Src/Impedance.c ****   .NumOfData = -1,
  41:Core/Src/Impedance.c ****   .SysClkFreq = 16000000.0,
  42:Core/Src/Impedance.c ****   .WuptClkFreq = 32000.0,
  43:Core/Src/Impedance.c ****   .AdcClkFreq = 16000000.0,
  44:Core/Src/Impedance.c ****   .RcalVal = 10000.0,
  45:Core/Src/Impedance.c **** 
  46:Core/Src/Impedance.c ****   .DswitchSel = SWD_CE0,
  47:Core/Src/Impedance.c ****   .PswitchSel = SWP_CE0,
  48:Core/Src/Impedance.c ****   .NswitchSel = SWN_AIN1,
  49:Core/Src/Impedance.c ****   .TswitchSel = SWT_AIN1,
  50:Core/Src/Impedance.c **** 
  51:Core/Src/Impedance.c ****   .PwrMod = AFEPWR_HP,
  52:Core/Src/Impedance.c **** 
  53:Core/Src/Impedance.c ****   .HstiaRtiaSel = HSTIARTIA_5K,
  54:Core/Src/Impedance.c ****   .ExcitBufGain = EXCITBUFGAIN_2,
  55:Core/Src/Impedance.c ****   .HsDacGain = HSDACGAIN_1,
  56:Core/Src/Impedance.c ****   .HsDacUpdateRate = 7,
  57:Core/Src/Impedance.c ****   //.DacVoltPP = 800.0,
  58:Core/Src/Impedance.c **** 	.DacVoltPP = 600.0,
  59:Core/Src/Impedance.c ****   .BiasVolt = -0.0f,
  60:Core/Src/Impedance.c **** 
  61:Core/Src/Impedance.c ****   .SinFreq = 100000.0, /* 1000Hz */
  62:Core/Src/Impedance.c **** 
  63:Core/Src/Impedance.c ****   .DftNum = DFTNUM_16384,
  64:Core/Src/Impedance.c ****   .DftSrc = DFTSRC_SINC3,
  65:Core/Src/Impedance.c ****   .HanWinEn = bTRUE,
  66:Core/Src/Impedance.c **** 
  67:Core/Src/Impedance.c ****   .AdcPgaGain = ADCPGA_1,
  68:Core/Src/Impedance.c ****   .ADCSinc3Osr = ADCSINC3OSR_2,
  69:Core/Src/Impedance.c ****   .ADCSinc2Osr = ADCSINC2OSR_22,
  70:Core/Src/Impedance.c **** 
  71:Core/Src/Impedance.c ****   .ADCAvgNum = ADCAVGNUM_16,
  72:Core/Src/Impedance.c **** 
  73:Core/Src/Impedance.c ****   .SweepCfg.SweepEn = bTRUE,
  74:Core/Src/Impedance.c ****   .SweepCfg.SweepStart = 1000,
  75:Core/Src/Impedance.c ****   .SweepCfg.SweepStop = 100000.0,
  76:Core/Src/Impedance.c ****   .SweepCfg.SweepPoints = 101,
  77:Core/Src/Impedance.c ****   .SweepCfg.SweepLog = bFALSE,
  78:Core/Src/Impedance.c ****   .SweepCfg.SweepIndex = 0,
  79:Core/Src/Impedance.c **** 
  80:Core/Src/Impedance.c ****   .FifoThresh = 4,
  81:Core/Src/Impedance.c ****   .IMPInited = bFALSE,
  82:Core/Src/Impedance.c ****   .StopRequired = bFALSE,
  83:Core/Src/Impedance.c **** };
  84:Core/Src/Impedance.c **** 
  85:Core/Src/Impedance.c **** /**
  86:Core/Src/Impedance.c ****    This function is provided for upper controllers that want to change 
  87:Core/Src/Impedance.c ****    application parameters specially for user defined parameters.
  88:Core/Src/Impedance.c **** */
  89:Core/Src/Impedance.c **** int32_t AppIMPGetCfg(void *pCfg)
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 3


  90:Core/Src/Impedance.c **** {
  91:Core/Src/Impedance.c ****   if(pCfg)
  92:Core/Src/Impedance.c ****   {
  93:Core/Src/Impedance.c ****     *(AppIMPCfg_Type**)pCfg = &AppIMPCfg;
  94:Core/Src/Impedance.c ****     return AD5940ERR_OK;
  95:Core/Src/Impedance.c ****   }
  96:Core/Src/Impedance.c ****   return AD5940ERR_PARA;
  97:Core/Src/Impedance.c **** }
  98:Core/Src/Impedance.c **** 
  99:Core/Src/Impedance.c **** int32_t AppIMPCtrl(uint32_t Command, void *pPara)
 100:Core/Src/Impedance.c **** {
 101:Core/Src/Impedance.c ****   
 102:Core/Src/Impedance.c ****   switch (Command)
 103:Core/Src/Impedance.c ****   {
 104:Core/Src/Impedance.c ****     case IMPCTRL_START:
 105:Core/Src/Impedance.c ****     {
 106:Core/Src/Impedance.c ****       WUPTCfg_Type wupt_cfg;
 107:Core/Src/Impedance.c **** 
 108:Core/Src/Impedance.c ****       if(AD5940_WakeUp(10) > 10)  /* Wakeup AFE by read register, read 10 times at most */
 109:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 110:Core/Src/Impedance.c ****       if(AppIMPCfg.IMPInited == bFALSE)
 111:Core/Src/Impedance.c ****         return AD5940ERR_APPERROR;
 112:Core/Src/Impedance.c ****       /* Start it */
 113:Core/Src/Impedance.c ****       wupt_cfg.WuptEn = bTRUE;
 114:Core/Src/Impedance.c ****       wupt_cfg.WuptEndSeq = WUPTENDSEQ_A;
 115:Core/Src/Impedance.c ****       wupt_cfg.WuptOrder[0] = SEQID_0;
 116:Core/Src/Impedance.c ****       wupt_cfg.SeqxSleepTime[SEQID_0] = 4;
 117:Core/Src/Impedance.c ****       wupt_cfg.SeqxWakeupTime[SEQID_0] = (uint32_t)(AppIMPCfg.WuptClkFreq/AppIMPCfg.ImpODR)-4;
 118:Core/Src/Impedance.c ****       AD5940_WUPTCfg(&wupt_cfg);
 119:Core/Src/Impedance.c ****       
 120:Core/Src/Impedance.c ****       AppIMPCfg.FifoDataCount = 0;  /* restart */
 121:Core/Src/Impedance.c ****       break;
 122:Core/Src/Impedance.c ****     }
 123:Core/Src/Impedance.c ****     case IMPCTRL_STOPNOW:
 124:Core/Src/Impedance.c ****     {
 125:Core/Src/Impedance.c ****       if(AD5940_WakeUp(10) > 10)  /* Wakeup AFE by read register, read 10 times at most */
 126:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 127:Core/Src/Impedance.c ****       /* Start Wupt right now */
 128:Core/Src/Impedance.c ****       AD5940_WUPTCtrl(bFALSE);
 129:Core/Src/Impedance.c ****       /* There is chance this operation will fail because sequencer could put AFE back 
 130:Core/Src/Impedance.c ****         to hibernate mode just after waking up. Use STOPSYNC is better. */
 131:Core/Src/Impedance.c ****       AD5940_WUPTCtrl(bFALSE);
 132:Core/Src/Impedance.c ****       break;
 133:Core/Src/Impedance.c ****     }
 134:Core/Src/Impedance.c ****     case IMPCTRL_STOPSYNC:
 135:Core/Src/Impedance.c ****     {
 136:Core/Src/Impedance.c ****       AppIMPCfg.StopRequired = bTRUE;
 137:Core/Src/Impedance.c ****       break;
 138:Core/Src/Impedance.c ****     }
 139:Core/Src/Impedance.c ****     case IMPCTRL_GETFREQ:
 140:Core/Src/Impedance.c ****       {
 141:Core/Src/Impedance.c ****         if(pPara == 0)
 142:Core/Src/Impedance.c ****           return AD5940ERR_PARA;
 143:Core/Src/Impedance.c ****         if(AppIMPCfg.SweepCfg.SweepEn == bTRUE)
 144:Core/Src/Impedance.c ****           *(float*)pPara = AppIMPCfg.FreqofData;
 145:Core/Src/Impedance.c ****         else
 146:Core/Src/Impedance.c ****           *(float*)pPara = AppIMPCfg.SinFreq;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 4


 147:Core/Src/Impedance.c ****       }
 148:Core/Src/Impedance.c ****     break;
 149:Core/Src/Impedance.c ****     case IMPCTRL_SHUTDOWN:
 150:Core/Src/Impedance.c ****     {
 151:Core/Src/Impedance.c ****       AppIMPCtrl(IMPCTRL_STOPNOW, 0);  /* Stop the measurement if it's running. */
 152:Core/Src/Impedance.c ****       /* Turn off LPloop related blocks which are not controlled automatically by hibernate operati
 153:Core/Src/Impedance.c ****       AFERefCfg_Type aferef_cfg;
 154:Core/Src/Impedance.c ****       LPLoopCfg_Type lp_loop;
 155:Core/Src/Impedance.c ****       memset(&aferef_cfg, 0, sizeof(aferef_cfg));
 156:Core/Src/Impedance.c ****       AD5940_REFCfgS(&aferef_cfg);
 157:Core/Src/Impedance.c ****       memset(&lp_loop, 0, sizeof(lp_loop));
 158:Core/Src/Impedance.c ****       AD5940_LPLoopCfgS(&lp_loop);
 159:Core/Src/Impedance.c ****       AD5940_EnterSleepS();  /* Enter Hibernate */
 160:Core/Src/Impedance.c ****     }
 161:Core/Src/Impedance.c ****     break;
 162:Core/Src/Impedance.c ****     default:
 163:Core/Src/Impedance.c ****     break;
 164:Core/Src/Impedance.c ****   }
 165:Core/Src/Impedance.c ****   return AD5940ERR_OK;
 166:Core/Src/Impedance.c **** }
 167:Core/Src/Impedance.c **** 
 168:Core/Src/Impedance.c **** /* generated code snnipet */
 169:Core/Src/Impedance.c **** float AppIMPGetCurrFreq(void)
 170:Core/Src/Impedance.c **** {
 171:Core/Src/Impedance.c ****   if(AppIMPCfg.SweepCfg.SweepEn == bTRUE)
 172:Core/Src/Impedance.c ****     return AppIMPCfg.FreqofData;
 173:Core/Src/Impedance.c ****   else
 174:Core/Src/Impedance.c ****     return AppIMPCfg.SinFreq;
 175:Core/Src/Impedance.c **** }
 176:Core/Src/Impedance.c **** 
 177:Core/Src/Impedance.c **** /* Application initialization */
 178:Core/Src/Impedance.c **** static AD5940Err AppIMPSeqCfgGen(void)
 179:Core/Src/Impedance.c **** {
  27              		.loc 1 179 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 232
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 BAB0     		sub	sp, sp, #232
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 240
 180:Core/Src/Impedance.c ****   AD5940Err error = AD5940ERR_OK;
  39              		.loc 1 180 3 view .LVU1
  40              	.LVL0:
 181:Core/Src/Impedance.c ****   const uint32_t *pSeqCmd;
  41              		.loc 1 181 3 view .LVU2
 182:Core/Src/Impedance.c ****   uint32_t SeqLen;
  42              		.loc 1 182 3 view .LVU3
 183:Core/Src/Impedance.c ****   AFERefCfg_Type aferef_cfg;
  43              		.loc 1 183 3 view .LVU4
 184:Core/Src/Impedance.c ****   HSLoopCfg_Type HsLoopCfg;
  44              		.loc 1 184 3 view .LVU5
 185:Core/Src/Impedance.c ****   DSPCfg_Type dsp_cfg;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 5


  45              		.loc 1 185 3 view .LVU6
 186:Core/Src/Impedance.c ****   float sin_freq;
  46              		.loc 1 186 3 view .LVU7
 187:Core/Src/Impedance.c **** 
 188:Core/Src/Impedance.c ****   /* Start sequence generator here */
 189:Core/Src/Impedance.c ****   AD5940_SEQGenCtrl(bTRUE);
  47              		.loc 1 189 3 view .LVU8
  48 0004 0120     		movs	r0, #1
  49 0006 FFF7FEFF 		bl	AD5940_SEQGenCtrl
  50              	.LVL1:
 190:Core/Src/Impedance.c ****   
 191:Core/Src/Impedance.c ****   AD5940_AFECtrlS(AFECTRL_ALL, bFALSE);  /* Init all to disable state */
  51              		.loc 1 191 3 view .LVU9
  52 000a 0021     		movs	r1, #0
  53 000c 9748     		ldr	r0, .L21
  54 000e FFF7FEFF 		bl	AD5940_AFECtrlS
  55              	.LVL2:
 192:Core/Src/Impedance.c **** 
 193:Core/Src/Impedance.c ****   aferef_cfg.HpBandgapEn = bTRUE;
  56              		.loc 1 193 3 view .LVU10
  57              		.loc 1 193 26 is_stmt 0 view .LVU11
  58 0012 0123     		movs	r3, #1
  59 0014 8DF8D030 		strb	r3, [sp, #208]
 194:Core/Src/Impedance.c ****   aferef_cfg.Hp1V1BuffEn = bTRUE;
  60              		.loc 1 194 3 is_stmt 1 view .LVU12
  61              		.loc 1 194 26 is_stmt 0 view .LVU13
  62 0018 8DF8D230 		strb	r3, [sp, #210]
 195:Core/Src/Impedance.c ****   aferef_cfg.Hp1V8BuffEn = bTRUE;
  63              		.loc 1 195 3 is_stmt 1 view .LVU14
  64              		.loc 1 195 26 is_stmt 0 view .LVU15
  65 001c 8DF8D130 		strb	r3, [sp, #209]
 196:Core/Src/Impedance.c ****   aferef_cfg.Disc1V1Cap = bFALSE;
  66              		.loc 1 196 3 is_stmt 1 view .LVU16
  67              		.loc 1 196 25 is_stmt 0 view .LVU17
  68 0020 0023     		movs	r3, #0
  69 0022 8DF8DC30 		strb	r3, [sp, #220]
 197:Core/Src/Impedance.c ****   aferef_cfg.Disc1V8Cap = bFALSE;
  70              		.loc 1 197 3 is_stmt 1 view .LVU18
  71              		.loc 1 197 25 is_stmt 0 view .LVU19
  72 0026 8DF8DB30 		strb	r3, [sp, #219]
 198:Core/Src/Impedance.c ****   aferef_cfg.Hp1V8ThemBuff = bFALSE;
  73              		.loc 1 198 3 is_stmt 1 view .LVU20
  74              		.loc 1 198 28 is_stmt 0 view .LVU21
  75 002a 8DF8D930 		strb	r3, [sp, #217]
 199:Core/Src/Impedance.c ****   aferef_cfg.Hp1V8Ilimit = bFALSE;
  76              		.loc 1 199 3 is_stmt 1 view .LVU22
  77              		.loc 1 199 26 is_stmt 0 view .LVU23
  78 002e 8DF8DA30 		strb	r3, [sp, #218]
 200:Core/Src/Impedance.c ****   aferef_cfg.Lp1V1BuffEn = bFALSE;
  79              		.loc 1 200 3 is_stmt 1 view .LVU24
  80              		.loc 1 200 26 is_stmt 0 view .LVU25
  81 0032 8DF8D430 		strb	r3, [sp, #212]
 201:Core/Src/Impedance.c ****   aferef_cfg.Lp1V8BuffEn = bFALSE;
  82              		.loc 1 201 3 is_stmt 1 view .LVU26
  83              		.loc 1 201 26 is_stmt 0 view .LVU27
  84 0036 8DF8D330 		strb	r3, [sp, #211]
 202:Core/Src/Impedance.c ****   /* LP reference control - turn off them to save power*/
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 6


 203:Core/Src/Impedance.c ****   if(AppIMPCfg.BiasVolt != 0.0f)    /* With bias voltage */
  85              		.loc 1 203 3 is_stmt 1 view .LVU28
  86              		.loc 1 203 15 is_stmt 0 view .LVU29
  87 003a 8D4B     		ldr	r3, .L21+4
  88 003c D3ED157A 		vldr.32	s15, [r3, #84]
  89              		.loc 1 203 5 view .LVU30
  90 0040 F5EE407A 		vcmp.f32	s15, #0
  91 0044 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  92 0048 00F0E380 		beq	.L2
 204:Core/Src/Impedance.c ****   {
 205:Core/Src/Impedance.c ****     aferef_cfg.LpBandgapEn = bTRUE;
  93              		.loc 1 205 5 is_stmt 1 view .LVU31
  94              		.loc 1 205 28 is_stmt 0 view .LVU32
  95 004c 0123     		movs	r3, #1
  96 004e 8DF8D530 		strb	r3, [sp, #213]
 206:Core/Src/Impedance.c ****     aferef_cfg.LpRefBufEn = bTRUE;
  97              		.loc 1 206 5 is_stmt 1 view .LVU33
  98              		.loc 1 206 27 is_stmt 0 view .LVU34
  99 0052 8DF8D630 		strb	r3, [sp, #214]
 100              	.L3:
 207:Core/Src/Impedance.c ****   }
 208:Core/Src/Impedance.c ****   else
 209:Core/Src/Impedance.c ****   {
 210:Core/Src/Impedance.c ****     aferef_cfg.LpBandgapEn = bFALSE;
 211:Core/Src/Impedance.c ****     aferef_cfg.LpRefBufEn = bFALSE;
 212:Core/Src/Impedance.c ****   }
 213:Core/Src/Impedance.c ****   aferef_cfg.LpRefBoostEn = bFALSE;
 101              		.loc 1 213 3 is_stmt 1 view .LVU35
 102              		.loc 1 213 27 is_stmt 0 view .LVU36
 103 0056 0024     		movs	r4, #0
 104 0058 8DF8D740 		strb	r4, [sp, #215]
 214:Core/Src/Impedance.c ****   AD5940_REFCfgS(&aferef_cfg);	
 105              		.loc 1 214 3 is_stmt 1 view .LVU37
 106 005c 34A8     		add	r0, sp, #208
 107 005e FFF7FEFF 		bl	AD5940_REFCfgS
 108              	.LVL3:
 215:Core/Src/Impedance.c ****   HsLoopCfg.HsDacCfg.ExcitBufGain = AppIMPCfg.ExcitBufGain;
 109              		.loc 1 215 3 view .LVU38
 110              		.loc 1 215 46 is_stmt 0 view .LVU39
 111 0062 834B     		ldr	r3, .L21+4
 112 0064 5A6C     		ldr	r2, [r3, #68]
 113              		.loc 1 215 35 view .LVU40
 114 0066 1C92     		str	r2, [sp, #112]
 216:Core/Src/Impedance.c ****   HsLoopCfg.HsDacCfg.HsDacGain = AppIMPCfg.HsDacGain;
 115              		.loc 1 216 3 is_stmt 1 view .LVU41
 116              		.loc 1 216 43 is_stmt 0 view .LVU42
 117 0068 9A6C     		ldr	r2, [r3, #72]
 118              		.loc 1 216 32 view .LVU43
 119 006a 1D92     		str	r2, [sp, #116]
 217:Core/Src/Impedance.c ****   HsLoopCfg.HsDacCfg.HsDacUpdateRate = AppIMPCfg.HsDacUpdateRate;
 120              		.loc 1 217 3 is_stmt 1 view .LVU44
 121              		.loc 1 217 49 is_stmt 0 view .LVU45
 122 006c DA6C     		ldr	r2, [r3, #76]
 123              		.loc 1 217 38 view .LVU46
 124 006e 1E92     		str	r2, [sp, #120]
 218:Core/Src/Impedance.c **** 
 219:Core/Src/Impedance.c ****   HsLoopCfg.HsTiaCfg.DiodeClose = bFALSE;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 7


 125              		.loc 1 219 3 is_stmt 1 view .LVU47
 126              		.loc 1 219 33 is_stmt 0 view .LVU48
 127 0070 8DF8BC40 		strb	r4, [sp, #188]
 220:Core/Src/Impedance.c **** 	if(AppIMPCfg.BiasVolt != 0.0f)    /* With bias voltage */
 128              		.loc 1 220 2 is_stmt 1 view .LVU49
 129              		.loc 1 220 14 is_stmt 0 view .LVU50
 130 0074 D3ED157A 		vldr.32	s15, [r3, #84]
 131              		.loc 1 220 4 view .LVU51
 132 0078 F5EE407A 		vcmp.f32	s15, #0
 133 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 134 0080 00F0CD80 		beq	.L4
 221:Core/Src/Impedance.c **** 		HsLoopCfg.HsTiaCfg.HstiaBias = HSTIABIAS_VZERO0;
 135              		.loc 1 221 3 is_stmt 1 view .LVU52
 136              		.loc 1 221 32 is_stmt 0 view .LVU53
 137 0084 0123     		movs	r3, #1
 138 0086 2C93     		str	r3, [sp, #176]
 139              	.L5:
 222:Core/Src/Impedance.c **** 	else
 223:Core/Src/Impedance.c **** 		HsLoopCfg.HsTiaCfg.HstiaBias = HSTIABIAS_1P1;
 224:Core/Src/Impedance.c ****   HsLoopCfg.HsTiaCfg.HstiaCtia = 31; /* 31pF + 2pF */
 140              		.loc 1 224 3 is_stmt 1 view .LVU54
 141              		.loc 1 224 32 is_stmt 0 view .LVU55
 142 0088 1F23     		movs	r3, #31
 143 008a 2E93     		str	r3, [sp, #184]
 225:Core/Src/Impedance.c ****   HsLoopCfg.HsTiaCfg.HstiaDeRload = HSTIADERLOAD_OPEN;
 144              		.loc 1 225 3 is_stmt 1 view .LVU56
 145              		.loc 1 225 35 is_stmt 0 view .LVU57
 146 008c 0523     		movs	r3, #5
 147 008e 3193     		str	r3, [sp, #196]
 226:Core/Src/Impedance.c ****   HsLoopCfg.HsTiaCfg.HstiaDeRtia = HSTIADERTIA_OPEN;
 148              		.loc 1 226 3 is_stmt 1 view .LVU58
 149              		.loc 1 226 34 is_stmt 0 view .LVU59
 150 0090 0B23     		movs	r3, #11
 151 0092 3093     		str	r3, [sp, #192]
 227:Core/Src/Impedance.c ****   HsLoopCfg.HsTiaCfg.HstiaRtiaSel = AppIMPCfg.HstiaRtiaSel;
 152              		.loc 1 227 3 is_stmt 1 view .LVU60
 153              		.loc 1 227 46 is_stmt 0 view .LVU61
 154 0094 764B     		ldr	r3, .L21+4
 155 0096 1A6C     		ldr	r2, [r3, #64]
 156              		.loc 1 227 35 view .LVU62
 157 0098 2D92     		str	r2, [sp, #180]
 228:Core/Src/Impedance.c **** 
 229:Core/Src/Impedance.c ****   HsLoopCfg.SWMatCfg.Dswitch = AppIMPCfg.DswitchSel;
 158              		.loc 1 229 3 is_stmt 1 view .LVU63
 159              		.loc 1 229 41 is_stmt 0 view .LVU64
 160 009a DA6A     		ldr	r2, [r3, #44]
 161              		.loc 1 229 30 view .LVU65
 162 009c 1892     		str	r2, [sp, #96]
 230:Core/Src/Impedance.c ****   HsLoopCfg.SWMatCfg.Pswitch = AppIMPCfg.PswitchSel;
 163              		.loc 1 230 3 is_stmt 1 view .LVU66
 164              		.loc 1 230 41 is_stmt 0 view .LVU67
 165 009e 1A6B     		ldr	r2, [r3, #48]
 166              		.loc 1 230 30 view .LVU68
 167 00a0 1992     		str	r2, [sp, #100]
 231:Core/Src/Impedance.c ****   HsLoopCfg.SWMatCfg.Nswitch = AppIMPCfg.NswitchSel;
 168              		.loc 1 231 3 is_stmt 1 view .LVU69
 169              		.loc 1 231 41 is_stmt 0 view .LVU70
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 8


 170 00a2 5A6B     		ldr	r2, [r3, #52]
 171              		.loc 1 231 30 view .LVU71
 172 00a4 1A92     		str	r2, [sp, #104]
 232:Core/Src/Impedance.c ****   HsLoopCfg.SWMatCfg.Tswitch = SWT_TRTIA|AppIMPCfg.TswitchSel;
 173              		.loc 1 232 3 is_stmt 1 view .LVU72
 174              		.loc 1 232 51 is_stmt 0 view .LVU73
 175 00a6 9A6B     		ldr	r2, [r3, #56]
 176              		.loc 1 232 41 view .LVU74
 177 00a8 42F48072 		orr	r2, r2, #256
 178              		.loc 1 232 30 view .LVU75
 179 00ac 1B92     		str	r2, [sp, #108]
 233:Core/Src/Impedance.c **** 
 234:Core/Src/Impedance.c ****   HsLoopCfg.WgCfg.WgType = WGTYPE_SIN;
 180              		.loc 1 234 3 is_stmt 1 view .LVU76
 181              		.loc 1 234 26 is_stmt 0 view .LVU77
 182 00ae 0222     		movs	r2, #2
 183 00b0 1F92     		str	r2, [sp, #124]
 235:Core/Src/Impedance.c ****   HsLoopCfg.WgCfg.GainCalEn = bTRUE;
 184              		.loc 1 235 3 is_stmt 1 view .LVU78
 185              		.loc 1 235 29 is_stmt 0 view .LVU79
 186 00b2 0122     		movs	r2, #1
 187 00b4 8DF88020 		strb	r2, [sp, #128]
 236:Core/Src/Impedance.c ****   HsLoopCfg.WgCfg.OffsetCalEn = bTRUE;
 188              		.loc 1 236 3 is_stmt 1 view .LVU80
 189              		.loc 1 236 31 is_stmt 0 view .LVU81
 190 00b8 8DF88120 		strb	r2, [sp, #129]
 237:Core/Src/Impedance.c ****   if(AppIMPCfg.SweepCfg.SweepEn == bTRUE)
 191              		.loc 1 237 3 is_stmt 1 view .LVU82
 192              		.loc 1 237 24 is_stmt 0 view .LVU83
 193 00bc 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 194              		.loc 1 237 5 view .LVU84
 195 00c0 9342     		cmp	r3, r2
 196 00c2 00F0AF80 		beq	.L19
 238:Core/Src/Impedance.c ****   {
 239:Core/Src/Impedance.c ****     AppIMPCfg.FreqofData = AppIMPCfg.SweepCfg.SweepStart;
 240:Core/Src/Impedance.c ****     AppIMPCfg.SweepCurrFreq = AppIMPCfg.SweepCfg.SweepStart;
 241:Core/Src/Impedance.c ****     AD5940_SweepNext(&AppIMPCfg.SweepCfg, &AppIMPCfg.SweepNextFreq);
 242:Core/Src/Impedance.c ****     sin_freq = AppIMPCfg.SweepCurrFreq;
 243:Core/Src/Impedance.c ****   }
 244:Core/Src/Impedance.c ****   else
 245:Core/Src/Impedance.c ****   {
 246:Core/Src/Impedance.c ****     sin_freq = AppIMPCfg.SinFreq;
 197              		.loc 1 246 5 is_stmt 1 view .LVU85
 198              		.loc 1 246 14 is_stmt 0 view .LVU86
 199 00c6 6A4B     		ldr	r3, .L21+4
 200 00c8 93ED160A 		vldr.32	s0, [r3, #88]
 201              	.LVL4:
 247:Core/Src/Impedance.c ****     AppIMPCfg.FreqofData = sin_freq;
 202              		.loc 1 247 5 is_stmt 1 view .LVU87
 203              		.loc 1 247 26 is_stmt 0 view .LVU88
 204 00cc 83ED250A 		vstr.32	s0, [r3, #148]
 205              	.L7:
 248:Core/Src/Impedance.c ****   }
 249:Core/Src/Impedance.c ****   HsLoopCfg.WgCfg.SinCfg.SinFreqWord = AD5940_WGFreqWordCal(sin_freq, AppIMPCfg.SysClkFreq);
 206              		.loc 1 249 3 is_stmt 1 view .LVU89
 207              		.loc 1 249 40 is_stmt 0 view .LVU90
 208 00d0 674C     		ldr	r4, .L21+4
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 9


 209 00d2 D4ED080A 		vldr.32	s1, [r4, #32]
 210 00d6 FFF7FEFF 		bl	AD5940_WGFreqWordCal
 211              	.LVL5:
 212              		.loc 1 249 38 view .LVU91
 213 00da 2790     		str	r0, [sp, #156]
 250:Core/Src/Impedance.c ****   HsLoopCfg.WgCfg.SinCfg.SinAmplitudeWord = (uint32_t)(AppIMPCfg.DacVoltPP/800.0f*2047 + 0.5f);
 214              		.loc 1 250 3 is_stmt 1 view .LVU92
 215              		.loc 1 250 65 is_stmt 0 view .LVU93
 216 00dc D4ED146A 		vldr.32	s13, [r4, #80]
 217              		.loc 1 250 75 view .LVU94
 218 00e0 9FED647A 		vldr.32	s14, .L21+8
 219 00e4 C6EE877A 		vdiv.f32	s15, s13, s14
 220              		.loc 1 250 82 view .LVU95
 221 00e8 9FED637A 		vldr.32	s14, .L21+12
 222 00ec 67EE877A 		vmul.f32	s15, s15, s14
 223              		.loc 1 250 88 view .LVU96
 224 00f0 B6EE007A 		vmov.f32	s14, #5.0e-1
 225 00f4 77EE877A 		vadd.f32	s15, s15, s14
 226              		.loc 1 250 45 view .LVU97
 227 00f8 FCEEE77A 		vcvt.u32.f32	s15, s15
 228              		.loc 1 250 43 view .LVU98
 229 00fc CDED287A 		vstr.32	s15, [sp, #160]	@ int
 251:Core/Src/Impedance.c ****   HsLoopCfg.WgCfg.SinCfg.SinOffsetWord = 0;
 230              		.loc 1 251 3 is_stmt 1 view .LVU99
 231              		.loc 1 251 40 is_stmt 0 view .LVU100
 232 0100 0023     		movs	r3, #0
 233 0102 2993     		str	r3, [sp, #164]
 252:Core/Src/Impedance.c ****   HsLoopCfg.WgCfg.SinCfg.SinPhaseWord = 0;
 234              		.loc 1 252 3 is_stmt 1 view .LVU101
 235              		.loc 1 252 39 is_stmt 0 view .LVU102
 236 0104 2A93     		str	r3, [sp, #168]
 253:Core/Src/Impedance.c ****   AD5940_HSLoopCfgS(&HsLoopCfg);
 237              		.loc 1 253 3 is_stmt 1 view .LVU103
 238 0106 18A8     		add	r0, sp, #96
 239 0108 FFF7FEFF 		bl	AD5940_HSLoopCfgS
 240              	.LVL6:
 254:Core/Src/Impedance.c ****   if(AppIMPCfg.BiasVolt != 0.0f)    /* With bias voltage */
 241              		.loc 1 254 3 view .LVU104
 242              		.loc 1 254 15 is_stmt 0 view .LVU105
 243 010c D4ED157A 		vldr.32	s15, [r4, #84]
 244              		.loc 1 254 5 view .LVU106
 245 0110 F5EE407A 		vcmp.f32	s15, #0
 246 0114 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 247 0118 39D0     		beq	.L8
 248              	.LBB2:
 255:Core/Src/Impedance.c ****   {
 256:Core/Src/Impedance.c ****     LPDACCfg_Type lpdac_cfg;
 249              		.loc 1 256 5 is_stmt 1 view .LVU107
 257:Core/Src/Impedance.c ****     
 258:Core/Src/Impedance.c ****     lpdac_cfg.LpdacSel = LPDAC0;
 250              		.loc 1 258 5 view .LVU108
 251              		.loc 1 258 24 is_stmt 0 view .LVU109
 252 011a 0023     		movs	r3, #0
 253 011c 0093     		str	r3, [sp]
 259:Core/Src/Impedance.c ****     lpdac_cfg.LpDacVbiasMux = LPDACVBIAS_12BIT; /* Use Vbias to tuning BiasVolt. */
 254              		.loc 1 259 5 is_stmt 1 view .LVU110
 255              		.loc 1 259 29 is_stmt 0 view .LVU111
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 10


 256 011e 0393     		str	r3, [sp, #12]
 260:Core/Src/Impedance.c ****     lpdac_cfg.LpDacVzeroMux = LPDACVZERO_6BIT;  /* Vbias-Vzero = BiasVolt */
 257              		.loc 1 260 5 is_stmt 1 view .LVU112
 258              		.loc 1 260 29 is_stmt 0 view .LVU113
 259 0120 0293     		str	r3, [sp, #8]
 261:Core/Src/Impedance.c ****     lpdac_cfg.DacData6Bit = 0x40>>1;            /* Set Vzero to middle scale. */
 260              		.loc 1 261 5 is_stmt 1 view .LVU114
 261              		.loc 1 261 27 is_stmt 0 view .LVU115
 262 0122 2023     		movs	r3, #32
 263 0124 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 262:Core/Src/Impedance.c ****     if(AppIMPCfg.BiasVolt<-1100.0f) AppIMPCfg.BiasVolt = -1100.0f + DAC12BITVOLT_1LSB;
 264              		.loc 1 262 5 is_stmt 1 view .LVU116
 265              		.loc 1 262 7 is_stmt 0 view .LVU117
 266 0128 9FED547A 		vldr.32	s14, .L21+16
 267 012c F4EEC77A 		vcmpe.f32	s15, s14
 268 0130 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 269 0134 01D5     		bpl	.L9
 270              		.loc 1 262 37 is_stmt 1 discriminator 1 view .LVU118
 271              		.loc 1 262 56 is_stmt 0 discriminator 1 view .LVU119
 272 0136 524A     		ldr	r2, .L21+20
 273 0138 6265     		str	r2, [r4, #84]	@ float
 274              	.L9:
 263:Core/Src/Impedance.c ****     if(AppIMPCfg.BiasVolt> 1100.0f) AppIMPCfg.BiasVolt = 1100.0f - DAC12BITVOLT_1LSB;
 275              		.loc 1 263 5 is_stmt 1 view .LVU120
 276              		.loc 1 263 17 is_stmt 0 view .LVU121
 277 013a 4D4B     		ldr	r3, .L21+4
 278 013c 93ED157A 		vldr.32	s14, [r3, #84]
 279              		.loc 1 263 7 view .LVU122
 280 0140 DFED507A 		vldr.32	s15, .L21+24
 281 0144 B4EEE77A 		vcmpe.f32	s14, s15
 282 0148 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 283 014c 01DD     		ble	.L11
 284              		.loc 1 263 37 is_stmt 1 discriminator 1 view .LVU123
 285              		.loc 1 263 56 is_stmt 0 discriminator 1 view .LVU124
 286 014e 4E4A     		ldr	r2, .L21+28
 287 0150 5A65     		str	r2, [r3, #84]	@ float
 288              	.L11:
 264:Core/Src/Impedance.c ****     lpdac_cfg.DacData12Bit = (uint32_t)((AppIMPCfg.BiasVolt + 1100.0f)/DAC12BITVOLT_1LSB);
 289              		.loc 1 264 5 is_stmt 1 view .LVU125
 290              		.loc 1 264 51 is_stmt 0 view .LVU126
 291 0152 474B     		ldr	r3, .L21+4
 292 0154 93ED157A 		vldr.32	s14, [r3, #84]
 293              		.loc 1 264 61 view .LVU127
 294 0158 DFED4A7A 		vldr.32	s15, .L21+24
 295 015c 37EE277A 		vadd.f32	s14, s14, s15
 296              		.loc 1 264 71 view .LVU128
 297 0160 DFED4A6A 		vldr.32	s13, .L21+32
 298 0164 C7EE267A 		vdiv.f32	s15, s14, s13
 299              		.loc 1 264 30 view .LVU129
 300 0168 FCEEE77A 		vcvt.u32.f32	s15, s15
 301              		.loc 1 264 28 view .LVU130
 302 016c 17EE903A 		vmov	r3, s15	@ int
 303 0170 ADF81A30 		strh	r3, [sp, #26]	@ movhi
 265:Core/Src/Impedance.c ****     lpdac_cfg.DataRst = bFALSE;      /* Do not reset data register */
 304              		.loc 1 265 5 is_stmt 1 view .LVU131
 305              		.loc 1 265 23 is_stmt 0 view .LVU132
 306 0174 0023     		movs	r3, #0
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 11


 307 0176 8DF81830 		strb	r3, [sp, #24]
 266:Core/Src/Impedance.c ****     lpdac_cfg.LpDacSW = LPDACSW_VBIAS2LPPA|LPDACSW_VBIAS2PIN|LPDACSW_VZERO2LPTIA|LPDACSW_VZERO2PIN|
 308              		.loc 1 266 5 is_stmt 1 view .LVU133
 309              		.loc 1 266 23 is_stmt 0 view .LVU134
 310 017a 1F22     		movs	r2, #31
 311 017c 0492     		str	r2, [sp, #16]
 267:Core/Src/Impedance.c ****     lpdac_cfg.LpDacRef = LPDACREF_2P5;
 312              		.loc 1 267 5 is_stmt 1 view .LVU135
 313              		.loc 1 267 24 is_stmt 0 view .LVU136
 314 017e 0593     		str	r3, [sp, #20]
 268:Core/Src/Impedance.c ****     lpdac_cfg.LpDacSrc = LPDACSRC_MMR;      /* Use MMR data, we use LPDAC to generate bias voltage 
 315              		.loc 1 268 5 is_stmt 1 view .LVU137
 316              		.loc 1 268 24 is_stmt 0 view .LVU138
 317 0180 0193     		str	r3, [sp, #4]
 269:Core/Src/Impedance.c ****     lpdac_cfg.PowerEn = bTRUE;              /* Power up LPDAC */
 318              		.loc 1 269 5 is_stmt 1 view .LVU139
 319              		.loc 1 269 23 is_stmt 0 view .LVU140
 320 0182 0123     		movs	r3, #1
 321 0184 8DF81930 		strb	r3, [sp, #25]
 270:Core/Src/Impedance.c ****     AD5940_LPDACCfgS(&lpdac_cfg);
 322              		.loc 1 270 5 is_stmt 1 view .LVU141
 323 0188 6846     		mov	r0, sp
 324 018a FFF7FEFF 		bl	AD5940_LPDACCfgS
 325              	.LVL7:
 326              	.L8:
 327              	.LBE2:
 271:Core/Src/Impedance.c ****   }
 272:Core/Src/Impedance.c ****   dsp_cfg.ADCBaseCfg.ADCMuxN = ADCMUXN_HSTIA_N;
 328              		.loc 1 272 3 view .LVU142
 329              		.loc 1 272 30 is_stmt 0 view .LVU143
 330 018e 0122     		movs	r2, #1
 331 0190 0992     		str	r2, [sp, #36]
 273:Core/Src/Impedance.c ****   dsp_cfg.ADCBaseCfg.ADCMuxP = ADCMUXP_HSTIA_P;
 332              		.loc 1 273 3 is_stmt 1 view .LVU144
 333              		.loc 1 273 30 is_stmt 0 view .LVU145
 334 0192 0892     		str	r2, [sp, #32]
 274:Core/Src/Impedance.c ****   dsp_cfg.ADCBaseCfg.ADCPga = AppIMPCfg.AdcPgaGain;
 335              		.loc 1 274 3 is_stmt 1 view .LVU146
 336              		.loc 1 274 40 is_stmt 0 view .LVU147
 337 0194 364C     		ldr	r4, .L21+4
 338 0196 A36E     		ldr	r3, [r4, #104]
 339              		.loc 1 274 29 view .LVU148
 340 0198 0A93     		str	r3, [sp, #40]
 275:Core/Src/Impedance.c ****   
 276:Core/Src/Impedance.c ****   memset(&dsp_cfg.ADCDigCompCfg, 0, sizeof(dsp_cfg.ADCDigCompCfg));
 341              		.loc 1 276 3 is_stmt 1 view .LVU149
 342 019a 0023     		movs	r3, #0
 343 019c 1093     		str	r3, [sp, #64]
 344 019e 1193     		str	r3, [sp, #68]
 277:Core/Src/Impedance.c ****   
 278:Core/Src/Impedance.c ****   dsp_cfg.ADCFilterCfg.ADCAvgNum = AppIMPCfg.ADCAvgNum;
 345              		.loc 1 278 3 view .LVU150
 346              		.loc 1 278 45 is_stmt 0 view .LVU151
 347 01a0 94F86E10 		ldrb	r1, [r4, #110]	@ zero_extendqisi2
 348              		.loc 1 278 34 view .LVU152
 349 01a4 0D91     		str	r1, [sp, #52]
 279:Core/Src/Impedance.c ****   dsp_cfg.ADCFilterCfg.ADCRate = ADCRATE_800KHZ;	/* Tell filter block clock rate of ADC*/
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 12


 350              		.loc 1 279 3 is_stmt 1 view .LVU153
 351              		.loc 1 279 32 is_stmt 0 view .LVU154
 352 01a6 0E92     		str	r2, [sp, #56]
 280:Core/Src/Impedance.c ****   dsp_cfg.ADCFilterCfg.ADCSinc2Osr = AppIMPCfg.ADCSinc2Osr;
 353              		.loc 1 280 3 is_stmt 1 view .LVU155
 354              		.loc 1 280 47 is_stmt 0 view .LVU156
 355 01a8 94F86D10 		ldrb	r1, [r4, #109]	@ zero_extendqisi2
 356              		.loc 1 280 36 view .LVU157
 357 01ac 0C91     		str	r1, [sp, #48]
 281:Core/Src/Impedance.c ****   dsp_cfg.ADCFilterCfg.ADCSinc3Osr = AppIMPCfg.ADCSinc3Osr;
 358              		.loc 1 281 3 is_stmt 1 view .LVU158
 359              		.loc 1 281 47 is_stmt 0 view .LVU159
 360 01ae 94F86C10 		ldrb	r1, [r4, #108]	@ zero_extendqisi2
 361              		.loc 1 281 36 view .LVU160
 362 01b2 0B91     		str	r1, [sp, #44]
 282:Core/Src/Impedance.c ****   dsp_cfg.ADCFilterCfg.BpNotch = bTRUE;
 363              		.loc 1 282 3 is_stmt 1 view .LVU161
 364              		.loc 1 282 32 is_stmt 0 view .LVU162
 365 01b4 8DF83C20 		strb	r2, [sp, #60]
 283:Core/Src/Impedance.c ****   dsp_cfg.ADCFilterCfg.BpSinc3 = bFALSE;
 366              		.loc 1 283 3 is_stmt 1 view .LVU163
 367              		.loc 1 283 32 is_stmt 0 view .LVU164
 368 01b8 8DF83D30 		strb	r3, [sp, #61]
 284:Core/Src/Impedance.c ****   dsp_cfg.ADCFilterCfg.Sinc2NotchEnable = bTRUE;
 369              		.loc 1 284 3 is_stmt 1 view .LVU165
 370              		.loc 1 284 41 is_stmt 0 view .LVU166
 371 01bc 8DF83E20 		strb	r2, [sp, #62]
 285:Core/Src/Impedance.c ****   dsp_cfg.DftCfg.DftNum = AppIMPCfg.DftNum;
 372              		.loc 1 285 3 is_stmt 1 view .LVU167
 373              		.loc 1 285 36 is_stmt 0 view .LVU168
 374 01c0 E26D     		ldr	r2, [r4, #92]
 375              		.loc 1 285 25 view .LVU169
 376 01c2 1292     		str	r2, [sp, #72]
 286:Core/Src/Impedance.c ****   dsp_cfg.DftCfg.DftSrc = AppIMPCfg.DftSrc;
 377              		.loc 1 286 3 is_stmt 1 view .LVU170
 378              		.loc 1 286 36 is_stmt 0 view .LVU171
 379 01c4 226E     		ldr	r2, [r4, #96]
 380              		.loc 1 286 25 view .LVU172
 381 01c6 1392     		str	r2, [sp, #76]
 287:Core/Src/Impedance.c ****   dsp_cfg.DftCfg.HanWinEn = AppIMPCfg.HanWinEn;
 382              		.loc 1 287 3 is_stmt 1 view .LVU173
 383              		.loc 1 287 38 is_stmt 0 view .LVU174
 384 01c8 94F86420 		ldrb	r2, [r4, #100]	@ zero_extendqisi2
 385              		.loc 1 287 27 view .LVU175
 386 01cc 8DF85020 		strb	r2, [sp, #80]
 288:Core/Src/Impedance.c ****   
 289:Core/Src/Impedance.c ****   memset(&dsp_cfg.StatCfg, 0, sizeof(dsp_cfg.StatCfg));
 387              		.loc 1 289 3 is_stmt 1 view .LVU176
 388 01d0 1593     		str	r3, [sp, #84]
 389 01d2 1693     		str	r3, [sp, #88]
 390 01d4 1793     		str	r3, [sp, #92]
 290:Core/Src/Impedance.c ****   AD5940_DSPCfgS(&dsp_cfg);
 391              		.loc 1 290 3 view .LVU177
 392 01d6 08A8     		add	r0, sp, #32
 393 01d8 FFF7FEFF 		bl	AD5940_DSPCfgS
 394              	.LVL8:
 291:Core/Src/Impedance.c ****     
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 13


 292:Core/Src/Impedance.c ****   /* Enable all of them. They are automatically turned off during hibernate mode to save power */
 293:Core/Src/Impedance.c ****   if(AppIMPCfg.BiasVolt == 0.0f)
 395              		.loc 1 293 3 view .LVU178
 396              		.loc 1 293 15 is_stmt 0 view .LVU179
 397 01dc D4ED157A 		vldr.32	s15, [r4, #84]
 398              		.loc 1 293 5 view .LVU180
 399 01e0 F5EE407A 		vcmp.f32	s15, #0
 400 01e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 401 01e8 2BD1     		bne	.L13
 294:Core/Src/Impedance.c ****     AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR|AFECTRL_EXTBUFPWR|\
 402              		.loc 1 294 5 is_stmt 1 view .LVU181
 403 01ea 0121     		movs	r1, #1
 404 01ec 2848     		ldr	r0, .L21+36
 405 01ee FFF7FEFF 		bl	AD5940_AFECtrlS
 406              	.LVL9:
 407              	.L14:
 295:Core/Src/Impedance.c ****                 AFECTRL_WG|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|\
 296:Core/Src/Impedance.c ****                 AFECTRL_SINC2NOTCH, bTRUE);
 297:Core/Src/Impedance.c ****   else
 298:Core/Src/Impedance.c ****     AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR|AFECTRL_EXTBUFPWR|\
 299:Core/Src/Impedance.c ****                 AFECTRL_WG|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|\
 300:Core/Src/Impedance.c ****                 AFECTRL_SINC2NOTCH|AFECTRL_DCBUFPWR, bTRUE);
 301:Core/Src/Impedance.c ****     /* Sequence end. */
 302:Core/Src/Impedance.c ****   AD5940_SEQGenInsert(SEQ_STOP()); /* Add one extra command to disable sequencer for initialization
 408              		.loc 1 302 3 view .LVU182
 409 01f2 4FF00140 		mov	r0, #-2130706432
 410 01f6 FFF7FEFF 		bl	AD5940_SEQGenInsert
 411              	.LVL10:
 303:Core/Src/Impedance.c **** 
 304:Core/Src/Impedance.c ****   /* Stop here */
 305:Core/Src/Impedance.c ****   error = AD5940_SEQGenFetchSeq(&pSeqCmd, &SeqLen);
 412              		.loc 1 305 3 view .LVU183
 413              		.loc 1 305 11 is_stmt 0 view .LVU184
 414 01fa 38A9     		add	r1, sp, #224
 415 01fc 39A8     		add	r0, sp, #228
 416 01fe FFF7FEFF 		bl	AD5940_SEQGenFetchSeq
 417              	.LVL11:
 418 0202 0446     		mov	r4, r0
 419              	.LVL12:
 306:Core/Src/Impedance.c ****   AD5940_SEQGenCtrl(bFALSE); /* Stop sequencer generator */
 420              		.loc 1 306 3 is_stmt 1 view .LVU185
 421 0204 0020     		movs	r0, #0
 422              	.LVL13:
 423              		.loc 1 306 3 is_stmt 0 view .LVU186
 424 0206 FFF7FEFF 		bl	AD5940_SEQGenCtrl
 425              	.LVL14:
 307:Core/Src/Impedance.c ****   if(error == AD5940ERR_OK)
 426              		.loc 1 307 3 is_stmt 1 view .LVU187
 427              		.loc 1 307 5 is_stmt 0 view .LVU188
 428 020a FCB1     		cbz	r4, .L20
 429              	.L1:
 308:Core/Src/Impedance.c ****   {
 309:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.SeqId = SEQID_1;
 310:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.SeqRamAddr = AppIMPCfg.SeqStartAddr;
 311:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.pSeqCmd = pSeqCmd;
 312:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.SeqLen = SeqLen;
 313:Core/Src/Impedance.c ****     /* Write command to SRAM */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 14


 314:Core/Src/Impedance.c ****     AD5940_SEQCmdWrite(AppIMPCfg.InitSeqInfo.SeqRamAddr, pSeqCmd, SeqLen);
 315:Core/Src/Impedance.c ****   }
 316:Core/Src/Impedance.c ****   else
 317:Core/Src/Impedance.c ****     return error; /* Error */
 318:Core/Src/Impedance.c ****   return AD5940ERR_OK;
 319:Core/Src/Impedance.c **** }
 430              		.loc 1 319 1 view .LVU189
 431 020c 2046     		mov	r0, r4
 432 020e 3AB0     		add	sp, sp, #232
 433              	.LCFI2:
 434              		.cfi_remember_state
 435              		.cfi_def_cfa_offset 8
 436              		@ sp needed
 437 0210 10BD     		pop	{r4, pc}
 438              	.LVL15:
 439              	.L2:
 440              	.LCFI3:
 441              		.cfi_restore_state
 210:Core/Src/Impedance.c ****     aferef_cfg.LpRefBufEn = bFALSE;
 442              		.loc 1 210 5 is_stmt 1 view .LVU190
 210:Core/Src/Impedance.c ****     aferef_cfg.LpRefBufEn = bFALSE;
 443              		.loc 1 210 28 is_stmt 0 view .LVU191
 444 0212 0023     		movs	r3, #0
 445 0214 8DF8D530 		strb	r3, [sp, #213]
 211:Core/Src/Impedance.c ****   }
 446              		.loc 1 211 5 is_stmt 1 view .LVU192
 211:Core/Src/Impedance.c ****   }
 447              		.loc 1 211 27 is_stmt 0 view .LVU193
 448 0218 8DF8D630 		strb	r3, [sp, #214]
 449 021c 1BE7     		b	.L3
 450              	.L4:
 223:Core/Src/Impedance.c ****   HsLoopCfg.HsTiaCfg.HstiaCtia = 31; /* 31pF + 2pF */
 451              		.loc 1 223 3 is_stmt 1 view .LVU194
 223:Core/Src/Impedance.c ****   HsLoopCfg.HsTiaCfg.HstiaCtia = 31; /* 31pF + 2pF */
 452              		.loc 1 223 32 is_stmt 0 view .LVU195
 453 021e 0023     		movs	r3, #0
 454 0220 2C93     		str	r3, [sp, #176]
 455 0222 31E7     		b	.L5
 456              	.L19:
 239:Core/Src/Impedance.c ****     AppIMPCfg.SweepCurrFreq = AppIMPCfg.SweepCfg.SweepStart;
 457              		.loc 1 239 5 is_stmt 1 view .LVU196
 239:Core/Src/Impedance.c ****     AppIMPCfg.SweepCurrFreq = AppIMPCfg.SweepCfg.SweepStart;
 458              		.loc 1 239 46 is_stmt 0 view .LVU197
 459 0224 124C     		ldr	r4, .L21+4
 460 0226 636F     		ldr	r3, [r4, #116]	@ float
 239:Core/Src/Impedance.c ****     AppIMPCfg.SweepCurrFreq = AppIMPCfg.SweepCfg.SweepStart;
 461              		.loc 1 239 26 view .LVU198
 462 0228 C4F89430 		str	r3, [r4, #148]	@ float
 240:Core/Src/Impedance.c ****     AD5940_SweepNext(&AppIMPCfg.SweepCfg, &AppIMPCfg.SweepNextFreq);
 463              		.loc 1 240 5 is_stmt 1 view .LVU199
 240:Core/Src/Impedance.c ****     AD5940_SweepNext(&AppIMPCfg.SweepCfg, &AppIMPCfg.SweepNextFreq);
 464              		.loc 1 240 29 is_stmt 0 view .LVU200
 465 022c C4F88C30 		str	r3, [r4, #140]	@ float
 241:Core/Src/Impedance.c ****     sin_freq = AppIMPCfg.SweepCurrFreq;
 466              		.loc 1 241 5 is_stmt 1 view .LVU201
 467 0230 04F19001 		add	r1, r4, #144
 468 0234 04F17000 		add	r0, r4, #112
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 15


 469 0238 FFF7FEFF 		bl	AD5940_SweepNext
 470              	.LVL16:
 242:Core/Src/Impedance.c ****   }
 471              		.loc 1 242 5 view .LVU202
 242:Core/Src/Impedance.c ****   }
 472              		.loc 1 242 14 is_stmt 0 view .LVU203
 473 023c 94ED230A 		vldr.32	s0, [r4, #140]
 474              	.LVL17:
 242:Core/Src/Impedance.c ****   }
 475              		.loc 1 242 14 view .LVU204
 476 0240 46E7     		b	.L7
 477              	.LVL18:
 478              	.L13:
 298:Core/Src/Impedance.c ****                 AFECTRL_WG|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|\
 479              		.loc 1 298 5 is_stmt 1 view .LVU205
 480 0242 0121     		movs	r1, #1
 481 0244 1348     		ldr	r0, .L21+40
 482 0246 FFF7FEFF 		bl	AD5940_AFECtrlS
 483              	.LVL19:
 484 024a D2E7     		b	.L14
 485              	.LVL20:
 486              	.L20:
 309:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.SeqRamAddr = AppIMPCfg.SeqStartAddr;
 487              		.loc 1 309 5 view .LVU206
 309:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.SeqRamAddr = AppIMPCfg.SeqStartAddr;
 488              		.loc 1 309 33 is_stmt 0 view .LVU207
 489 024c 084B     		ldr	r3, .L21+4
 490 024e 0122     		movs	r2, #1
 491 0250 C3F89C20 		str	r2, [r3, #156]
 310:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.pSeqCmd = pSeqCmd;
 492              		.loc 1 310 5 is_stmt 1 view .LVU208
 310:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.pSeqCmd = pSeqCmd;
 493              		.loc 1 310 49 is_stmt 0 view .LVU209
 494 0254 5868     		ldr	r0, [r3, #4]
 310:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.pSeqCmd = pSeqCmd;
 495              		.loc 1 310 38 view .LVU210
 496 0256 C3F8A000 		str	r0, [r3, #160]
 311:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.SeqLen = SeqLen;
 497              		.loc 1 311 5 is_stmt 1 view .LVU211
 311:Core/Src/Impedance.c ****     AppIMPCfg.InitSeqInfo.SeqLen = SeqLen;
 498              		.loc 1 311 35 is_stmt 0 view .LVU212
 499 025a 3999     		ldr	r1, [sp, #228]
 500 025c C3F8AC10 		str	r1, [r3, #172]
 312:Core/Src/Impedance.c ****     /* Write command to SRAM */
 501              		.loc 1 312 5 is_stmt 1 view .LVU213
 312:Core/Src/Impedance.c ****     /* Write command to SRAM */
 502              		.loc 1 312 34 is_stmt 0 view .LVU214
 503 0260 389A     		ldr	r2, [sp, #224]
 504 0262 C3F8A420 		str	r2, [r3, #164]
 314:Core/Src/Impedance.c ****   }
 505              		.loc 1 314 5 is_stmt 1 view .LVU215
 506 0266 FFF7FEFF 		bl	AD5940_SEQCmdWrite
 507              	.LVL21:
 318:Core/Src/Impedance.c **** }
 508              		.loc 1 318 3 view .LVU216
 318:Core/Src/Impedance.c **** }
 509              		.loc 1 318 10 is_stmt 0 view .LVU217
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 16


 510 026a CFE7     		b	.L1
 511              	.L22:
 512              		.align	2
 513              	.L21:
 514 026c E0FF3900 		.word	3801056
 515 0270 00000000 		.word	.LANCHOR0
 516 0274 00004844 		.word	1145569280
 517 0278 00E0FF44 		.word	1157619712
 518 027c 008089C4 		.word	-997621760
 519 0280 CF6E89C4 		.word	-997626161
 520 0284 00808944 		.word	1149861888
 521 0288 CF6E8944 		.word	1149857487
 522 028c 9988093F 		.word	1057589401
 523 0290 404E1100 		.word	1134144
 524 0294 404E3100 		.word	3231296
 525              		.cfi_endproc
 526              	.LFE6:
 528              		.section	.text.AppIMPSeqMeasureGen,"ax",%progbits
 529              		.align	1
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu fpv5-d16
 535              	AppIMPSeqMeasureGen:
 536              	.LFB7:
 320:Core/Src/Impedance.c **** 
 321:Core/Src/Impedance.c **** 
 322:Core/Src/Impedance.c **** static AD5940Err AppIMPSeqMeasureGen(void)
 323:Core/Src/Impedance.c **** {
 537              		.loc 1 323 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 64
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 70B5     		push	{r4, r5, r6, lr}
 542              	.LCFI4:
 543              		.cfi_def_cfa_offset 16
 544              		.cfi_offset 4, -16
 545              		.cfi_offset 5, -12
 546              		.cfi_offset 6, -8
 547              		.cfi_offset 14, -4
 548 0002 90B0     		sub	sp, sp, #64
 549              	.LCFI5:
 550              		.cfi_def_cfa_offset 80
 324:Core/Src/Impedance.c ****   AD5940Err error = AD5940ERR_OK;
 551              		.loc 1 324 3 view .LVU219
 552              	.LVL22:
 325:Core/Src/Impedance.c ****   const uint32_t *pSeqCmd;
 553              		.loc 1 325 3 view .LVU220
 326:Core/Src/Impedance.c ****   uint32_t SeqLen;
 554              		.loc 1 326 3 view .LVU221
 327:Core/Src/Impedance.c ****   
 328:Core/Src/Impedance.c ****   uint32_t WaitClks;
 555              		.loc 1 328 3 view .LVU222
 329:Core/Src/Impedance.c ****   SWMatrixCfg_Type sw_cfg;
 556              		.loc 1 329 3 view .LVU223
 330:Core/Src/Impedance.c ****   ClksCalInfo_Type clks_cal;
 557              		.loc 1 330 3 view .LVU224
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 17


 331:Core/Src/Impedance.c **** 
 332:Core/Src/Impedance.c ****   clks_cal.DataType = DATATYPE_DFT;
 558              		.loc 1 332 3 view .LVU225
 559              		.loc 1 332 21 is_stmt 0 view .LVU226
 560 0004 0323     		movs	r3, #3
 561 0006 0193     		str	r3, [sp, #4]
 333:Core/Src/Impedance.c ****   clks_cal.DftSrc = AppIMPCfg.DftSrc;
 562              		.loc 1 333 3 is_stmt 1 view .LVU227
 563              		.loc 1 333 30 is_stmt 0 view .LVU228
 564 0008 4D4C     		ldr	r4, .L27
 565 000a 236E     		ldr	r3, [r4, #96]
 566              		.loc 1 333 19 view .LVU229
 567 000c 0693     		str	r3, [sp, #24]
 334:Core/Src/Impedance.c ****   clks_cal.DataCount = 1L<<(AppIMPCfg.DftNum+2); /* 2^(DFTNUMBER+2) */
 568              		.loc 1 334 3 is_stmt 1 view .LVU230
 569              		.loc 1 334 38 is_stmt 0 view .LVU231
 570 000e E36D     		ldr	r3, [r4, #92]
 571              		.loc 1 334 45 view .LVU232
 572 0010 0233     		adds	r3, r3, #2
 573              		.loc 1 334 26 view .LVU233
 574 0012 0125     		movs	r5, #1
 575 0014 05FA03F3 		lsl	r3, r5, r3
 576              		.loc 1 334 22 view .LVU234
 577 0018 0293     		str	r3, [sp, #8]
 335:Core/Src/Impedance.c ****   clks_cal.ADCSinc2Osr = AppIMPCfg.ADCSinc2Osr;
 578              		.loc 1 335 3 is_stmt 1 view .LVU235
 579              		.loc 1 335 35 is_stmt 0 view .LVU236
 580 001a 94F86D30 		ldrb	r3, [r4, #109]	@ zero_extendqisi2
 581              		.loc 1 335 24 view .LVU237
 582 001e 0493     		str	r3, [sp, #16]
 336:Core/Src/Impedance.c ****   clks_cal.ADCSinc3Osr = AppIMPCfg.ADCSinc3Osr;
 583              		.loc 1 336 3 is_stmt 1 view .LVU238
 584              		.loc 1 336 35 is_stmt 0 view .LVU239
 585 0020 94F86C30 		ldrb	r3, [r4, #108]	@ zero_extendqisi2
 586              		.loc 1 336 24 view .LVU240
 587 0024 0393     		str	r3, [sp, #12]
 337:Core/Src/Impedance.c ****   clks_cal.ADCAvgNum = AppIMPCfg.ADCAvgNum;
 588              		.loc 1 337 3 is_stmt 1 view .LVU241
 589              		.loc 1 337 33 is_stmt 0 view .LVU242
 590 0026 94F86E30 		ldrb	r3, [r4, #110]	@ zero_extendqisi2
 591              		.loc 1 337 22 view .LVU243
 592 002a 0593     		str	r3, [sp, #20]
 338:Core/Src/Impedance.c ****   clks_cal.RatioSys2AdcClk = AppIMPCfg.SysClkFreq/AppIMPCfg.AdcClkFreq;
 593              		.loc 1 338 3 is_stmt 1 view .LVU244
 594              		.loc 1 338 39 is_stmt 0 view .LVU245
 595 002c D4ED086A 		vldr.32	s13, [r4, #32]
 596              		.loc 1 338 60 view .LVU246
 597 0030 94ED097A 		vldr.32	s14, [r4, #36]
 598              		.loc 1 338 50 view .LVU247
 599 0034 C6EE877A 		vdiv.f32	s15, s13, s14
 600              		.loc 1 338 28 view .LVU248
 601 0038 CDED087A 		vstr.32	s15, [sp, #32]
 339:Core/Src/Impedance.c ****   AD5940_ClksCalculate(&clks_cal, &WaitClks);
 602              		.loc 1 339 3 is_stmt 1 view .LVU249
 603 003c 0DA9     		add	r1, sp, #52
 604 003e 01A8     		add	r0, sp, #4
 605 0040 FFF7FEFF 		bl	AD5940_ClksCalculate
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 18


 606              	.LVL23:
 340:Core/Src/Impedance.c **** 
 341:Core/Src/Impedance.c ****   AD5940_SEQGenCtrl(bTRUE);
 607              		.loc 1 341 3 view .LVU250
 608 0044 2846     		mov	r0, r5
 609 0046 FFF7FEFF 		bl	AD5940_SEQGenCtrl
 610              	.LVL24:
 342:Core/Src/Impedance.c ****   AD5940_SEQGpioCtrlS(AGPIO_Pin2); /* Set GPIO1, clear others that under control */
 611              		.loc 1 342 3 view .LVU251
 612 004a 0420     		movs	r0, #4
 613 004c FFF7FEFF 		bl	AD5940_SEQGpioCtrlS
 614              	.LVL25:
 343:Core/Src/Impedance.c ****   AD5940_SEQGenInsert(SEQ_WAIT(16*250));  /* @todo wait 250us? */
 615              		.loc 1 343 3 view .LVU252
 616 0050 4FF47A60 		mov	r0, #4000
 617 0054 FFF7FEFF 		bl	AD5940_SEQGenInsert
 618              	.LVL26:
 344:Core/Src/Impedance.c ****   sw_cfg.Dswitch = SWD_RCAL0;
 619              		.loc 1 344 3 view .LVU253
 620              		.loc 1 344 18 is_stmt 0 view .LVU254
 621 0058 0995     		str	r5, [sp, #36]
 345:Core/Src/Impedance.c ****   sw_cfg.Pswitch = SWP_RCAL0;
 622              		.loc 1 345 3 is_stmt 1 view .LVU255
 623              		.loc 1 345 18 is_stmt 0 view .LVU256
 624 005a 0A95     		str	r5, [sp, #40]
 346:Core/Src/Impedance.c ****   sw_cfg.Nswitch = SWN_RCAL1;
 625              		.loc 1 346 3 is_stmt 1 view .LVU257
 626              		.loc 1 346 18 is_stmt 0 view .LVU258
 627 005c 4FF40073 		mov	r3, #512
 628 0060 0B93     		str	r3, [sp, #44]
 347:Core/Src/Impedance.c ****   sw_cfg.Tswitch = SWT_RCAL1|SWT_TRTIA;
 629              		.loc 1 347 3 is_stmt 1 view .LVU259
 630              		.loc 1 347 18 is_stmt 0 view .LVU260
 631 0062 4FF41063 		mov	r3, #2304
 632 0066 0C93     		str	r3, [sp, #48]
 348:Core/Src/Impedance.c ****   AD5940_SWMatrixCfgS(&sw_cfg);
 633              		.loc 1 348 3 is_stmt 1 view .LVU261
 634 0068 09A8     		add	r0, sp, #36
 635 006a FFF7FEFF 		bl	AD5940_SWMatrixCfgS
 636              	.LVL27:
 349:Core/Src/Impedance.c **** 	AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR|AFECTRL_EXTBUFPWR|\
 637              		.loc 1 349 2 view .LVU262
 638 006e 354E     		ldr	r6, .L27+4
 639 0070 2946     		mov	r1, r5
 640 0072 3046     		mov	r0, r6
 641 0074 FFF7FEFF 		bl	AD5940_AFECtrlS
 642              	.LVL28:
 350:Core/Src/Impedance.c ****                 AFECTRL_WG|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|\
 351:Core/Src/Impedance.c ****                 AFECTRL_SINC2NOTCH, bTRUE);
 352:Core/Src/Impedance.c ****   AD5940_AFECtrlS(AFECTRL_WG|AFECTRL_ADCPWR, bTRUE);  /* Enable Waveform generator */
 643              		.loc 1 352 3 view .LVU263
 644 0078 2946     		mov	r1, r5
 645 007a 4FF48140 		mov	r0, #16512
 646 007e FFF7FEFF 		bl	AD5940_AFECtrlS
 647              	.LVL29:
 353:Core/Src/Impedance.c ****   //delay for signal settling DFT_WAIT
 354:Core/Src/Impedance.c ****   AD5940_SEQGenInsert(SEQ_WAIT(16*10));
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 19


 648              		.loc 1 354 3 view .LVU264
 649 0082 A020     		movs	r0, #160
 650 0084 FFF7FEFF 		bl	AD5940_SEQGenInsert
 651              	.LVL30:
 355:Core/Src/Impedance.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);  /* Start ADC convert and DFT */
 652              		.loc 1 355 3 view .LVU265
 653 0088 2946     		mov	r1, r5
 654 008a 4FF40140 		mov	r0, #33024
 655 008e FFF7FEFF 		bl	AD5940_AFECtrlS
 656              	.LVL31:
 356:Core/Src/Impedance.c ****   AD5940_SEQGenInsert(SEQ_WAIT(WaitClks));
 657              		.loc 1 356 3 view .LVU266
 658 0092 0D98     		ldr	r0, [sp, #52]
 659 0094 20F04040 		bic	r0, r0, #-1073741824
 660 0098 FFF7FEFF 		bl	AD5940_SEQGenInsert
 661              	.LVL32:
 357:Core/Src/Impedance.c ****   //wait for first data ready
 358:Core/Src/Impedance.c ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG, bFALSE);  /* Stop ADC conve
 662              		.loc 1 358 3 view .LVU267
 663 009c 0021     		movs	r1, #0
 664 009e 4CF28010 		movw	r0, #49536
 665 00a2 FFF7FEFF 		bl	AD5940_AFECtrlS
 666              	.LVL33:
 359:Core/Src/Impedance.c **** 
 360:Core/Src/Impedance.c ****   /* Configure matrix for external Rz */
 361:Core/Src/Impedance.c ****   sw_cfg.Dswitch = AppIMPCfg.DswitchSel;
 667              		.loc 1 361 3 view .LVU268
 668              		.loc 1 361 29 is_stmt 0 view .LVU269
 669 00a6 E36A     		ldr	r3, [r4, #44]
 670              		.loc 1 361 18 view .LVU270
 671 00a8 0993     		str	r3, [sp, #36]
 362:Core/Src/Impedance.c ****   sw_cfg.Pswitch = AppIMPCfg.PswitchSel;
 672              		.loc 1 362 3 is_stmt 1 view .LVU271
 673              		.loc 1 362 29 is_stmt 0 view .LVU272
 674 00aa 236B     		ldr	r3, [r4, #48]
 675              		.loc 1 362 18 view .LVU273
 676 00ac 0A93     		str	r3, [sp, #40]
 363:Core/Src/Impedance.c ****   sw_cfg.Nswitch = AppIMPCfg.NswitchSel;
 677              		.loc 1 363 3 is_stmt 1 view .LVU274
 678              		.loc 1 363 29 is_stmt 0 view .LVU275
 679 00ae 636B     		ldr	r3, [r4, #52]
 680              		.loc 1 363 18 view .LVU276
 681 00b0 0B93     		str	r3, [sp, #44]
 364:Core/Src/Impedance.c ****   sw_cfg.Tswitch = SWT_TRTIA|AppIMPCfg.TswitchSel;
 682              		.loc 1 364 3 is_stmt 1 view .LVU277
 683              		.loc 1 364 39 is_stmt 0 view .LVU278
 684 00b2 A36B     		ldr	r3, [r4, #56]
 685              		.loc 1 364 29 view .LVU279
 686 00b4 43F48073 		orr	r3, r3, #256
 687              		.loc 1 364 18 view .LVU280
 688 00b8 0C93     		str	r3, [sp, #48]
 365:Core/Src/Impedance.c ****   AD5940_SWMatrixCfgS(&sw_cfg);
 689              		.loc 1 365 3 is_stmt 1 view .LVU281
 690 00ba 09A8     		add	r0, sp, #36
 691 00bc FFF7FEFF 		bl	AD5940_SWMatrixCfgS
 692              	.LVL34:
 366:Core/Src/Impedance.c ****   AD5940_AFECtrlS(AFECTRL_ADCPWR|AFECTRL_WG, bTRUE);  /* Enable Waveform generator */
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 20


 693              		.loc 1 366 3 view .LVU282
 694 00c0 2946     		mov	r1, r5
 695 00c2 4FF48140 		mov	r0, #16512
 696 00c6 FFF7FEFF 		bl	AD5940_AFECtrlS
 697              	.LVL35:
 367:Core/Src/Impedance.c ****   AD5940_SEQGenInsert(SEQ_WAIT(16*10));  //delay for signal settling DFT_WAIT
 698              		.loc 1 367 3 view .LVU283
 699 00ca A020     		movs	r0, #160
 700 00cc FFF7FEFF 		bl	AD5940_SEQGenInsert
 701              	.LVL36:
 368:Core/Src/Impedance.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT, bTRUE);  /* Start ADC convert and DFT */
 702              		.loc 1 368 3 view .LVU284
 703 00d0 2946     		mov	r1, r5
 704 00d2 4FF40140 		mov	r0, #33024
 705 00d6 FFF7FEFF 		bl	AD5940_AFECtrlS
 706              	.LVL37:
 369:Core/Src/Impedance.c ****   AD5940_SEQGenInsert(SEQ_WAIT(WaitClks));  /* wait for first data ready */
 707              		.loc 1 369 3 view .LVU285
 708 00da 0D98     		ldr	r0, [sp, #52]
 709 00dc 20F04040 		bic	r0, r0, #-1073741824
 710 00e0 FFF7FEFF 		bl	AD5940_SEQGenInsert
 711              	.LVL38:
 370:Core/Src/Impedance.c ****   AD5940_AFECtrlS(AFECTRL_ADCCNV|AFECTRL_DFT|AFECTRL_WG|AFECTRL_ADCPWR, bFALSE);  /* Stop ADC conve
 712              		.loc 1 370 3 view .LVU286
 713 00e4 0021     		movs	r1, #0
 714 00e6 4CF28010 		movw	r0, #49536
 715 00ea FFF7FEFF 		bl	AD5940_AFECtrlS
 716              	.LVL39:
 371:Core/Src/Impedance.c ****     AD5940_AFECtrlS(AFECTRL_HSTIAPWR|AFECTRL_INAMPPWR|AFECTRL_EXTBUFPWR|\
 717              		.loc 1 371 5 view .LVU287
 718 00ee 0021     		movs	r1, #0
 719 00f0 3046     		mov	r0, r6
 720 00f2 FFF7FEFF 		bl	AD5940_AFECtrlS
 721              	.LVL40:
 372:Core/Src/Impedance.c ****                 AFECTRL_WG|AFECTRL_DACREFPWR|AFECTRL_HSDACPWR|\
 373:Core/Src/Impedance.c ****                 AFECTRL_SINC2NOTCH, bFALSE);
 374:Core/Src/Impedance.c ****   AD5940_SEQGpioCtrlS(0); /* Clr GPIO1 */
 722              		.loc 1 374 3 view .LVU288
 723 00f6 0020     		movs	r0, #0
 724 00f8 FFF7FEFF 		bl	AD5940_SEQGpioCtrlS
 725              	.LVL41:
 375:Core/Src/Impedance.c **** 
 376:Core/Src/Impedance.c ****   AD5940_EnterSleepS();/* Goto hibernate */
 726              		.loc 1 376 3 view .LVU289
 727 00fc FFF7FEFF 		bl	AD5940_EnterSleepS
 728              	.LVL42:
 377:Core/Src/Impedance.c **** 
 378:Core/Src/Impedance.c ****   /* Sequence end. */
 379:Core/Src/Impedance.c ****   error = AD5940_SEQGenFetchSeq(&pSeqCmd, &SeqLen);
 729              		.loc 1 379 3 view .LVU290
 730              		.loc 1 379 11 is_stmt 0 view .LVU291
 731 0100 0EA9     		add	r1, sp, #56
 732 0102 0FA8     		add	r0, sp, #60
 733 0104 FFF7FEFF 		bl	AD5940_SEQGenFetchSeq
 734              	.LVL43:
 735 0108 0446     		mov	r4, r0
 736              	.LVL44:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 21


 380:Core/Src/Impedance.c ****   AD5940_SEQGenCtrl(bFALSE); /* Stop sequencer generator */
 737              		.loc 1 380 3 is_stmt 1 view .LVU292
 738 010a 0020     		movs	r0, #0
 739              	.LVL45:
 740              		.loc 1 380 3 is_stmt 0 view .LVU293
 741 010c FFF7FEFF 		bl	AD5940_SEQGenCtrl
 742              	.LVL46:
 381:Core/Src/Impedance.c **** 
 382:Core/Src/Impedance.c ****   if(error == AD5940ERR_OK)
 743              		.loc 1 382 3 is_stmt 1 view .LVU294
 744              		.loc 1 382 5 is_stmt 0 view .LVU295
 745 0110 14B1     		cbz	r4, .L26
 746              	.L23:
 383:Core/Src/Impedance.c ****   {
 384:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.SeqId = SEQID_0;
 385:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.SeqRamAddr = AppIMPCfg.InitSeqInfo.SeqRamAddr + AppIMPCfg.InitSeqInfo.
 386:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.pSeqCmd = pSeqCmd;
 387:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.SeqLen = SeqLen;
 388:Core/Src/Impedance.c ****     /* Write command to SRAM */
 389:Core/Src/Impedance.c ****     AD5940_SEQCmdWrite(AppIMPCfg.MeasureSeqInfo.SeqRamAddr, pSeqCmd, SeqLen);
 390:Core/Src/Impedance.c ****   }
 391:Core/Src/Impedance.c ****   else
 392:Core/Src/Impedance.c ****     return error; /* Error */
 393:Core/Src/Impedance.c ****   return AD5940ERR_OK;
 394:Core/Src/Impedance.c **** }
 747              		.loc 1 394 1 view .LVU296
 748 0112 2046     		mov	r0, r4
 749 0114 10B0     		add	sp, sp, #64
 750              	.LCFI6:
 751              		.cfi_remember_state
 752              		.cfi_def_cfa_offset 16
 753              		@ sp needed
 754 0116 70BD     		pop	{r4, r5, r6, pc}
 755              	.LVL47:
 756              	.L26:
 757              	.LCFI7:
 758              		.cfi_restore_state
 384:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.SeqRamAddr = AppIMPCfg.InitSeqInfo.SeqRamAddr + AppIMPCfg.InitSeqInfo.
 759              		.loc 1 384 5 is_stmt 1 view .LVU297
 384:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.SeqRamAddr = AppIMPCfg.InitSeqInfo.SeqRamAddr + AppIMPCfg.InitSeqInfo.
 760              		.loc 1 384 36 is_stmt 0 view .LVU298
 761 0118 094B     		ldr	r3, .L27
 762 011a 0022     		movs	r2, #0
 763 011c C3F8B020 		str	r2, [r3, #176]
 385:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.pSeqCmd = pSeqCmd;
 764              		.loc 1 385 5 is_stmt 1 view .LVU299
 385:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.pSeqCmd = pSeqCmd;
 765              		.loc 1 385 64 is_stmt 0 view .LVU300
 766 0120 D3F8A000 		ldr	r0, [r3, #160]
 385:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.pSeqCmd = pSeqCmd;
 767              		.loc 1 385 99 view .LVU301
 768 0124 D3F8A420 		ldr	r2, [r3, #164]
 385:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.pSeqCmd = pSeqCmd;
 769              		.loc 1 385 76 view .LVU302
 770 0128 1044     		add	r0, r0, r2
 385:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.pSeqCmd = pSeqCmd;
 771              		.loc 1 385 41 view .LVU303
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 22


 772 012a C3F8B400 		str	r0, [r3, #180]
 386:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.SeqLen = SeqLen;
 773              		.loc 1 386 5 is_stmt 1 view .LVU304
 386:Core/Src/Impedance.c ****     AppIMPCfg.MeasureSeqInfo.SeqLen = SeqLen;
 774              		.loc 1 386 38 is_stmt 0 view .LVU305
 775 012e 0F99     		ldr	r1, [sp, #60]
 776 0130 C3F8C010 		str	r1, [r3, #192]
 387:Core/Src/Impedance.c ****     /* Write command to SRAM */
 777              		.loc 1 387 5 is_stmt 1 view .LVU306
 387:Core/Src/Impedance.c ****     /* Write command to SRAM */
 778              		.loc 1 387 37 is_stmt 0 view .LVU307
 779 0134 0E9A     		ldr	r2, [sp, #56]
 780 0136 C3F8B820 		str	r2, [r3, #184]
 389:Core/Src/Impedance.c ****   }
 781              		.loc 1 389 5 is_stmt 1 view .LVU308
 782 013a FFF7FEFF 		bl	AD5940_SEQCmdWrite
 783              	.LVL48:
 393:Core/Src/Impedance.c **** }
 784              		.loc 1 393 3 view .LVU309
 393:Core/Src/Impedance.c **** }
 785              		.loc 1 393 10 is_stmt 0 view .LVU310
 786 013e E8E7     		b	.L23
 787              	.L28:
 788              		.align	2
 789              	.L27:
 790 0140 00000000 		.word	.LANCHOR0
 791 0144 404E1100 		.word	1134144
 792              		.cfi_endproc
 793              	.LFE7:
 795              		.section	.text.AppIMPGetCfg,"ax",%progbits
 796              		.align	1
 797              		.global	AppIMPGetCfg
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu fpv5-d16
 803              	AppIMPGetCfg:
 804              	.LVL49:
 805              	.LFB3:
  90:Core/Src/Impedance.c ****   if(pCfg)
 806              		.loc 1 90 1 is_stmt 1 view -0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              		@ link register save eliminated.
  91:Core/Src/Impedance.c ****   {
 811              		.loc 1 91 3 view .LVU312
  91:Core/Src/Impedance.c ****   {
 812              		.loc 1 91 5 is_stmt 0 view .LVU313
 813 0000 18B1     		cbz	r0, .L31
  93:Core/Src/Impedance.c ****     return AD5940ERR_OK;
 814              		.loc 1 93 5 is_stmt 1 view .LVU314
  93:Core/Src/Impedance.c ****     return AD5940ERR_OK;
 815              		.loc 1 93 29 is_stmt 0 view .LVU315
 816 0002 034A     		ldr	r2, .L32
 817 0004 0260     		str	r2, [r0]
  94:Core/Src/Impedance.c ****   }
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 23


 818              		.loc 1 94 5 is_stmt 1 view .LVU316
  94:Core/Src/Impedance.c ****   }
 819              		.loc 1 94 12 is_stmt 0 view .LVU317
 820 0006 0020     		movs	r0, #0
 821              	.LVL50:
  94:Core/Src/Impedance.c ****   }
 822              		.loc 1 94 12 view .LVU318
 823 0008 7047     		bx	lr
 824              	.LVL51:
 825              	.L31:
  96:Core/Src/Impedance.c **** }
 826              		.loc 1 96 10 view .LVU319
 827 000a 6FF00100 		mvn	r0, #1
 828              	.LVL52:
  97:Core/Src/Impedance.c **** 
 829              		.loc 1 97 1 view .LVU320
 830 000e 7047     		bx	lr
 831              	.L33:
 832              		.align	2
 833              	.L32:
 834 0010 00000000 		.word	.LANCHOR0
 835              		.cfi_endproc
 836              	.LFE3:
 838              		.section	.text.AppIMPCtrl,"ax",%progbits
 839              		.align	1
 840              		.global	AppIMPCtrl
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu fpv5-d16
 846              	AppIMPCtrl:
 847              	.LVL53:
 848              	.LFB4:
 100:Core/Src/Impedance.c ****   
 849              		.loc 1 100 1 is_stmt 1 view -0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 88
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 100:Core/Src/Impedance.c ****   
 853              		.loc 1 100 1 is_stmt 0 view .LVU322
 854 0000 30B5     		push	{r4, r5, lr}
 855              	.LCFI8:
 856              		.cfi_def_cfa_offset 12
 857              		.cfi_offset 4, -12
 858              		.cfi_offset 5, -8
 859              		.cfi_offset 14, -4
 860 0002 97B0     		sub	sp, sp, #92
 861              	.LCFI9:
 862              		.cfi_def_cfa_offset 104
 102:Core/Src/Impedance.c ****   {
 863              		.loc 1 102 3 is_stmt 1 view .LVU323
 864 0004 0428     		cmp	r0, #4
 865 0006 6DD8     		bhi	.L44
 866 0008 DFE800F0 		tbb	[pc, r0]
 867              	.L37:
 868 000c 03       		.byte	(.L41-.L37)/2
 869 000d 2E       		.byte	(.L40-.L37)/2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 24


 870 000e 3B       		.byte	(.L39-.L37)/2
 871 000f 42       		.byte	(.L38-.L37)/2
 872 0010 53       		.byte	(.L36-.L37)/2
 873 0011 00       		.p2align 1
 874              	.L41:
 875              	.LBB3:
 106:Core/Src/Impedance.c **** 
 876              		.loc 1 106 7 view .LVU324
 108:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 877              		.loc 1 108 7 view .LVU325
 108:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 878              		.loc 1 108 10 is_stmt 0 view .LVU326
 879 0012 0A20     		movs	r0, #10
 880              	.LVL54:
 108:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 881              		.loc 1 108 10 view .LVU327
 882 0014 FFF7FEFF 		bl	AD5940_WakeUp
 883              	.LVL55:
 108:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 884              		.loc 1 108 9 view .LVU328
 885 0018 0A28     		cmp	r0, #10
 886 001a 22D8     		bhi	.L45
 110:Core/Src/Impedance.c ****         return AD5940ERR_APPERROR;
 887              		.loc 1 110 7 is_stmt 1 view .LVU329
 110:Core/Src/Impedance.c ****         return AD5940ERR_APPERROR;
 888              		.loc 1 110 19 is_stmt 0 view .LVU330
 889 001c 354B     		ldr	r3, .L52
 890 001e 93F89830 		ldrb	r3, [r3, #152]	@ zero_extendqisi2
 110:Core/Src/Impedance.c ****         return AD5940ERR_APPERROR;
 891              		.loc 1 110 9 view .LVU331
 892 0022 13B9     		cbnz	r3, .L50
 111:Core/Src/Impedance.c ****       /* Start it */
 893              		.loc 1 111 16 view .LVU332
 894 0024 6FF06300 		mvn	r0, #99
 895 0028 30E0     		b	.L34
 896              	.L50:
 113:Core/Src/Impedance.c ****       wupt_cfg.WuptEndSeq = WUPTENDSEQ_A;
 897              		.loc 1 113 7 is_stmt 1 view .LVU333
 113:Core/Src/Impedance.c ****       wupt_cfg.WuptEndSeq = WUPTENDSEQ_A;
 898              		.loc 1 113 23 is_stmt 0 view .LVU334
 899 002a 0123     		movs	r3, #1
 900 002c 8DF85430 		strb	r3, [sp, #84]
 114:Core/Src/Impedance.c ****       wupt_cfg.WuptOrder[0] = SEQID_0;
 901              		.loc 1 114 7 is_stmt 1 view .LVU335
 114:Core/Src/Impedance.c ****       wupt_cfg.WuptOrder[0] = SEQID_0;
 902              		.loc 1 114 27 is_stmt 0 view .LVU336
 903 0030 0024     		movs	r4, #0
 904 0032 0494     		str	r4, [sp, #16]
 115:Core/Src/Impedance.c ****       wupt_cfg.SeqxSleepTime[SEQID_0] = 4;
 905              		.loc 1 115 7 is_stmt 1 view .LVU337
 115:Core/Src/Impedance.c ****       wupt_cfg.SeqxSleepTime[SEQID_0] = 4;
 906              		.loc 1 115 29 is_stmt 0 view .LVU338
 907 0034 0594     		str	r4, [sp, #20]
 116:Core/Src/Impedance.c ****       wupt_cfg.SeqxWakeupTime[SEQID_0] = (uint32_t)(AppIMPCfg.WuptClkFreq/AppIMPCfg.ImpODR)-4;
 908              		.loc 1 116 7 is_stmt 1 view .LVU339
 116:Core/Src/Impedance.c ****       wupt_cfg.SeqxWakeupTime[SEQID_0] = (uint32_t)(AppIMPCfg.WuptClkFreq/AppIMPCfg.ImpODR)-4;
 909              		.loc 1 116 39 is_stmt 0 view .LVU340
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 25


 910 0036 0423     		movs	r3, #4
 911 0038 0D93     		str	r3, [sp, #52]
 117:Core/Src/Impedance.c ****       AD5940_WUPTCfg(&wupt_cfg);
 912              		.loc 1 117 7 is_stmt 1 view .LVU341
 117:Core/Src/Impedance.c ****       AD5940_WUPTCfg(&wupt_cfg);
 913              		.loc 1 117 62 is_stmt 0 view .LVU342
 914 003a 2E4D     		ldr	r5, .L52
 915 003c D5ED076A 		vldr.32	s13, [r5, #28]
 117:Core/Src/Impedance.c ****       AD5940_WUPTCfg(&wupt_cfg);
 916              		.loc 1 117 84 view .LVU343
 917 0040 95ED057A 		vldr.32	s14, [r5, #20]
 117:Core/Src/Impedance.c ****       AD5940_WUPTCfg(&wupt_cfg);
 918              		.loc 1 117 74 view .LVU344
 919 0044 C6EE877A 		vdiv.f32	s15, s13, s14
 117:Core/Src/Impedance.c ****       AD5940_WUPTCfg(&wupt_cfg);
 920              		.loc 1 117 42 view .LVU345
 921 0048 FCEEE77A 		vcvt.u32.f32	s15, s15
 922 004c 17EE903A 		vmov	r3, s15	@ int
 117:Core/Src/Impedance.c ****       AD5940_WUPTCfg(&wupt_cfg);
 923              		.loc 1 117 92 view .LVU346
 924 0050 043B     		subs	r3, r3, #4
 117:Core/Src/Impedance.c ****       AD5940_WUPTCfg(&wupt_cfg);
 925              		.loc 1 117 40 view .LVU347
 926 0052 1193     		str	r3, [sp, #68]
 118:Core/Src/Impedance.c ****       
 927              		.loc 1 118 7 is_stmt 1 view .LVU348
 928 0054 04A8     		add	r0, sp, #16
 929 0056 FFF7FEFF 		bl	AD5940_WUPTCfg
 930              	.LVL56:
 120:Core/Src/Impedance.c ****       break;
 931              		.loc 1 120 7 view .LVU349
 120:Core/Src/Impedance.c ****       break;
 932              		.loc 1 120 31 is_stmt 0 view .LVU350
 933 005a C5F8C840 		str	r4, [r5, #200]
 121:Core/Src/Impedance.c ****     }
 934              		.loc 1 121 7 is_stmt 1 view .LVU351
 935              	.LBE3:
 165:Core/Src/Impedance.c **** }
 936              		.loc 1 165 10 is_stmt 0 view .LVU352
 937 005e 2046     		mov	r0, r4
 938 0060 14E0     		b	.L34
 939              	.L45:
 940              	.LBB4:
 109:Core/Src/Impedance.c ****       if(AppIMPCfg.IMPInited == bFALSE)
 941              		.loc 1 109 16 view .LVU353
 942 0062 6FF00800 		mvn	r0, #8
 943 0066 11E0     		b	.L34
 944              	.LVL57:
 945              	.L40:
 109:Core/Src/Impedance.c ****       if(AppIMPCfg.IMPInited == bFALSE)
 946              		.loc 1 109 16 view .LVU354
 947              	.LBE4:
 125:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 948              		.loc 1 125 7 is_stmt 1 view .LVU355
 125:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 949              		.loc 1 125 10 is_stmt 0 view .LVU356
 950 0068 0A20     		movs	r0, #10
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 26


 951              	.LVL58:
 125:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 952              		.loc 1 125 10 view .LVU357
 953 006a FFF7FEFF 		bl	AD5940_WakeUp
 954              	.LVL59:
 125:Core/Src/Impedance.c ****         return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 955              		.loc 1 125 9 view .LVU358
 956 006e 0A28     		cmp	r0, #10
 957 0070 3AD8     		bhi	.L47
 128:Core/Src/Impedance.c ****       /* There is chance this operation will fail because sequencer could put AFE back 
 958              		.loc 1 128 7 is_stmt 1 view .LVU359
 959 0072 0020     		movs	r0, #0
 960 0074 FFF7FEFF 		bl	AD5940_WUPTCtrl
 961              	.LVL60:
 131:Core/Src/Impedance.c ****       break;
 962              		.loc 1 131 7 view .LVU360
 963 0078 0020     		movs	r0, #0
 964 007a FFF7FEFF 		bl	AD5940_WUPTCtrl
 965              	.LVL61:
 132:Core/Src/Impedance.c ****     }
 966              		.loc 1 132 7 view .LVU361
 165:Core/Src/Impedance.c **** }
 967              		.loc 1 165 10 is_stmt 0 view .LVU362
 968 007e 0020     		movs	r0, #0
 132:Core/Src/Impedance.c ****     }
 969              		.loc 1 132 7 view .LVU363
 970 0080 04E0     		b	.L34
 971              	.LVL62:
 972              	.L39:
 136:Core/Src/Impedance.c ****       break;
 973              		.loc 1 136 7 is_stmt 1 view .LVU364
 136:Core/Src/Impedance.c ****       break;
 974              		.loc 1 136 30 is_stmt 0 view .LVU365
 975 0082 1C4B     		ldr	r3, .L52
 976 0084 0122     		movs	r2, #1
 977 0086 83F8C420 		strb	r2, [r3, #196]
 137:Core/Src/Impedance.c ****     }
 978              		.loc 1 137 7 is_stmt 1 view .LVU366
 165:Core/Src/Impedance.c **** }
 979              		.loc 1 165 10 is_stmt 0 view .LVU367
 980 008a 0020     		movs	r0, #0
 981              	.LVL63:
 982              	.L34:
 166:Core/Src/Impedance.c **** 
 983              		.loc 1 166 1 view .LVU368
 984 008c 17B0     		add	sp, sp, #92
 985              	.LCFI10:
 986              		.cfi_remember_state
 987              		.cfi_def_cfa_offset 12
 988              		@ sp needed
 989 008e 30BD     		pop	{r4, r5, pc}
 990              	.LVL64:
 991              	.L38:
 992              	.LCFI11:
 993              		.cfi_restore_state
 141:Core/Src/Impedance.c ****           return AD5940ERR_PARA;
 994              		.loc 1 141 9 is_stmt 1 view .LVU369
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 27


 141:Core/Src/Impedance.c ****           return AD5940ERR_PARA;
 995              		.loc 1 141 11 is_stmt 0 view .LVU370
 996 0090 69B3     		cbz	r1, .L48
 143:Core/Src/Impedance.c ****           *(float*)pPara = AppIMPCfg.FreqofData;
 997              		.loc 1 143 9 is_stmt 1 view .LVU371
 143:Core/Src/Impedance.c ****           *(float*)pPara = AppIMPCfg.FreqofData;
 998              		.loc 1 143 30 is_stmt 0 view .LVU372
 999 0092 184B     		ldr	r3, .L52
 1000 0094 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 143:Core/Src/Impedance.c ****           *(float*)pPara = AppIMPCfg.FreqofData;
 1001              		.loc 1 143 11 view .LVU373
 1002 0098 012B     		cmp	r3, #1
 1003 009a 04D0     		beq	.L51
 146:Core/Src/Impedance.c ****       }
 1004              		.loc 1 146 11 is_stmt 1 view .LVU374
 146:Core/Src/Impedance.c ****       }
 1005              		.loc 1 146 37 is_stmt 0 view .LVU375
 1006 009c 154B     		ldr	r3, .L52
 1007 009e 9B6D     		ldr	r3, [r3, #88]	@ float
 146:Core/Src/Impedance.c ****       }
 1008              		.loc 1 146 26 view .LVU376
 1009 00a0 0B60     		str	r3, [r1]	@ float
 165:Core/Src/Impedance.c **** }
 1010              		.loc 1 165 10 view .LVU377
 1011 00a2 0020     		movs	r0, #0
 1012              	.LVL65:
 165:Core/Src/Impedance.c **** }
 1013              		.loc 1 165 10 view .LVU378
 1014 00a4 F2E7     		b	.L34
 1015              	.LVL66:
 1016              	.L51:
 144:Core/Src/Impedance.c ****         else
 1017              		.loc 1 144 11 is_stmt 1 view .LVU379
 144:Core/Src/Impedance.c ****         else
 1018              		.loc 1 144 37 is_stmt 0 view .LVU380
 1019 00a6 134B     		ldr	r3, .L52
 1020 00a8 D3F89430 		ldr	r3, [r3, #148]	@ float
 144:Core/Src/Impedance.c ****         else
 1021              		.loc 1 144 26 view .LVU381
 1022 00ac 0B60     		str	r3, [r1]	@ float
 165:Core/Src/Impedance.c **** }
 1023              		.loc 1 165 10 view .LVU382
 1024 00ae 0020     		movs	r0, #0
 1025              	.LVL67:
 165:Core/Src/Impedance.c **** }
 1026              		.loc 1 165 10 view .LVU383
 1027 00b0 ECE7     		b	.L34
 1028              	.LVL68:
 1029              	.L36:
 1030              	.LBB5:
 151:Core/Src/Impedance.c ****       /* Turn off LPloop related blocks which are not controlled automatically by hibernate operati
 1031              		.loc 1 151 7 is_stmt 1 view .LVU384
 1032 00b2 0021     		movs	r1, #0
 1033              	.LVL69:
 151:Core/Src/Impedance.c ****       /* Turn off LPloop related blocks which are not controlled automatically by hibernate operati
 1034              		.loc 1 151 7 is_stmt 0 view .LVU385
 1035 00b4 0120     		movs	r0, #1
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 28


 1036              	.LVL70:
 151:Core/Src/Impedance.c ****       /* Turn off LPloop related blocks which are not controlled automatically by hibernate operati
 1037              		.loc 1 151 7 view .LVU386
 1038 00b6 FFF7FEFF 		bl	AppIMPCtrl
 1039              	.LVL71:
 153:Core/Src/Impedance.c ****       LPLoopCfg_Type lp_loop;
 1040              		.loc 1 153 7 is_stmt 1 view .LVU387
 154:Core/Src/Impedance.c ****       memset(&aferef_cfg, 0, sizeof(aferef_cfg));
 1041              		.loc 1 154 7 view .LVU388
 155:Core/Src/Impedance.c ****       AD5940_REFCfgS(&aferef_cfg);
 1042              		.loc 1 155 7 view .LVU389
 1043 00ba 0024     		movs	r4, #0
 1044 00bc 0094     		str	r4, [sp]
 1045 00be 0194     		str	r4, [sp, #4]
 1046 00c0 0294     		str	r4, [sp, #8]
 1047 00c2 8DF80C40 		strb	r4, [sp, #12]
 156:Core/Src/Impedance.c ****       memset(&lp_loop, 0, sizeof(lp_loop));
 1048              		.loc 1 156 7 view .LVU390
 1049 00c6 6846     		mov	r0, sp
 1050 00c8 FFF7FEFF 		bl	AD5940_REFCfgS
 1051              	.LVL72:
 157:Core/Src/Impedance.c ****       AD5940_LPLoopCfgS(&lp_loop);
 1052              		.loc 1 157 7 view .LVU391
 1053 00cc 3C22     		movs	r2, #60
 1054 00ce 2146     		mov	r1, r4
 1055 00d0 04A8     		add	r0, sp, #16
 1056 00d2 FFF7FEFF 		bl	memset
 1057              	.LVL73:
 158:Core/Src/Impedance.c ****       AD5940_EnterSleepS();  /* Enter Hibernate */
 1058              		.loc 1 158 7 view .LVU392
 1059 00d6 04A8     		add	r0, sp, #16
 1060 00d8 FFF7FEFF 		bl	AD5940_LPLoopCfgS
 1061              	.LVL74:
 159:Core/Src/Impedance.c ****     }
 1062              		.loc 1 159 7 view .LVU393
 1063 00dc FFF7FEFF 		bl	AD5940_EnterSleepS
 1064              	.LVL75:
 1065              	.LBE5:
 161:Core/Src/Impedance.c ****     default:
 1066              		.loc 1 161 5 view .LVU394
 165:Core/Src/Impedance.c **** }
 1067              		.loc 1 165 10 is_stmt 0 view .LVU395
 1068 00e0 2046     		mov	r0, r4
 161:Core/Src/Impedance.c ****     default:
 1069              		.loc 1 161 5 view .LVU396
 1070 00e2 D3E7     		b	.L34
 1071              	.LVL76:
 1072              	.L44:
 1073              	.LBB6:
 111:Core/Src/Impedance.c ****       /* Start it */
 1074              		.loc 1 111 16 view .LVU397
 1075 00e4 0020     		movs	r0, #0
 1076              	.LVL77:
 111:Core/Src/Impedance.c ****       /* Start it */
 1077              		.loc 1 111 16 view .LVU398
 1078 00e6 D1E7     		b	.L34
 1079              	.LVL78:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 29


 1080              	.L47:
 111:Core/Src/Impedance.c ****       /* Start it */
 1081              		.loc 1 111 16 view .LVU399
 1082              	.LBE6:
 126:Core/Src/Impedance.c ****       /* Start Wupt right now */
 1083              		.loc 1 126 16 view .LVU400
 1084 00e8 6FF00800 		mvn	r0, #8
 1085 00ec CEE7     		b	.L34
 1086              	.LVL79:
 1087              	.L48:
 142:Core/Src/Impedance.c ****         if(AppIMPCfg.SweepCfg.SweepEn == bTRUE)
 1088              		.loc 1 142 18 view .LVU401
 1089 00ee 6FF00100 		mvn	r0, #1
 1090              	.LVL80:
 142:Core/Src/Impedance.c ****         if(AppIMPCfg.SweepCfg.SweepEn == bTRUE)
 1091              		.loc 1 142 18 view .LVU402
 1092 00f2 CBE7     		b	.L34
 1093              	.L53:
 1094              		.align	2
 1095              	.L52:
 1096 00f4 00000000 		.word	.LANCHOR0
 1097              		.cfi_endproc
 1098              	.LFE4:
 1100              		.section	.text.AppIMPGetCurrFreq,"ax",%progbits
 1101              		.align	1
 1102              		.global	AppIMPGetCurrFreq
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv5-d16
 1108              	AppIMPGetCurrFreq:
 1109              	.LFB5:
 170:Core/Src/Impedance.c ****   if(AppIMPCfg.SweepCfg.SweepEn == bTRUE)
 1110              		.loc 1 170 1 is_stmt 1 view -0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              		@ link register save eliminated.
 171:Core/Src/Impedance.c ****     return AppIMPCfg.FreqofData;
 1115              		.loc 1 171 3 view .LVU404
 171:Core/Src/Impedance.c ****     return AppIMPCfg.FreqofData;
 1116              		.loc 1 171 24 is_stmt 0 view .LVU405
 1117 0000 064B     		ldr	r3, .L58
 1118 0002 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 171:Core/Src/Impedance.c ****     return AppIMPCfg.FreqofData;
 1119              		.loc 1 171 5 view .LVU406
 1120 0006 012B     		cmp	r3, #1
 1121 0008 03D0     		beq	.L57
 174:Core/Src/Impedance.c **** }
 1122              		.loc 1 174 5 is_stmt 1 view .LVU407
 174:Core/Src/Impedance.c **** }
 1123              		.loc 1 174 21 is_stmt 0 view .LVU408
 1124 000a 044B     		ldr	r3, .L58
 1125 000c 93ED160A 		vldr.32	s0, [r3, #88]
 175:Core/Src/Impedance.c **** 
 1126              		.loc 1 175 1 view .LVU409
 1127 0010 7047     		bx	lr
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 30


 1128              	.L57:
 172:Core/Src/Impedance.c ****   else
 1129              		.loc 1 172 5 is_stmt 1 view .LVU410
 172:Core/Src/Impedance.c ****   else
 1130              		.loc 1 172 21 is_stmt 0 view .LVU411
 1131 0012 024B     		ldr	r3, .L58
 1132 0014 93ED250A 		vldr.32	s0, [r3, #148]
 1133 0018 7047     		bx	lr
 1134              	.L59:
 1135 001a 00BF     		.align	2
 1136              	.L58:
 1137 001c 00000000 		.word	.LANCHOR0
 1138              		.cfi_endproc
 1139              	.LFE5:
 1141              		.section	.text.AppIMPInit,"ax",%progbits
 1142              		.align	1
 1143              		.global	AppIMPInit
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv5-d16
 1149              	AppIMPInit:
 1150              	.LVL81:
 1151              	.LFB8:
 395:Core/Src/Impedance.c **** 
 396:Core/Src/Impedance.c **** 
 397:Core/Src/Impedance.c **** /* This function provide application initialize. It can also enable Wupt that will automatically tr
 398:Core/Src/Impedance.c **** int32_t AppIMPInit(uint32_t *pBuffer, uint32_t BufferSize)
 399:Core/Src/Impedance.c **** {
 1152              		.loc 1 399 1 is_stmt 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 32
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              		.loc 1 399 1 is_stmt 0 view .LVU413
 1157 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1158              	.LCFI12:
 1159              		.cfi_def_cfa_offset 20
 1160              		.cfi_offset 4, -20
 1161              		.cfi_offset 5, -16
 1162              		.cfi_offset 6, -12
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
 1165 0002 89B0     		sub	sp, sp, #36
 1166              	.LCFI13:
 1167              		.cfi_def_cfa_offset 56
 1168 0004 0646     		mov	r6, r0
 1169 0006 0F46     		mov	r7, r1
 400:Core/Src/Impedance.c ****   AD5940Err error = AD5940ERR_OK;  
 1170              		.loc 1 400 3 is_stmt 1 view .LVU414
 1171              	.LVL82:
 401:Core/Src/Impedance.c ****   SEQCfg_Type seq_cfg;
 1172              		.loc 1 401 3 view .LVU415
 402:Core/Src/Impedance.c ****   FIFOCfg_Type fifo_cfg;
 1173              		.loc 1 402 3 view .LVU416
 403:Core/Src/Impedance.c **** 
 404:Core/Src/Impedance.c ****   if(AD5940_WakeUp(10) > 10)  /* Wakeup AFE by read register, read 10 times at most */
 1174              		.loc 1 404 3 view .LVU417
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 31


 1175              		.loc 1 404 6 is_stmt 0 view .LVU418
 1176 0008 0A20     		movs	r0, #10
 1177              	.LVL83:
 1178              		.loc 1 404 6 view .LVU419
 1179 000a FFF7FEFF 		bl	AD5940_WakeUp
 1180              	.LVL84:
 1181              		.loc 1 404 5 view .LVU420
 1182 000e 0A28     		cmp	r0, #10
 1183 0010 6DD8     		bhi	.L65
 405:Core/Src/Impedance.c ****     return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 406:Core/Src/Impedance.c **** 
 407:Core/Src/Impedance.c ****   /* Configure sequencer and stop it */
 408:Core/Src/Impedance.c ****   seq_cfg.SeqMemSize = SEQMEMSIZE_2KB;  /* 2kB SRAM is used for sequencer, others for data FIFO */
 1184              		.loc 1 408 3 is_stmt 1 view .LVU421
 1185              		.loc 1 408 22 is_stmt 0 view .LVU422
 1186 0012 0124     		movs	r4, #1
 1187 0014 0594     		str	r4, [sp, #20]
 409:Core/Src/Impedance.c ****   seq_cfg.SeqBreakEn = bFALSE;
 1188              		.loc 1 409 3 is_stmt 1 view .LVU423
 1189              		.loc 1 409 22 is_stmt 0 view .LVU424
 1190 0016 0025     		movs	r5, #0
 1191 0018 8DF81950 		strb	r5, [sp, #25]
 410:Core/Src/Impedance.c ****   seq_cfg.SeqIgnoreEn = bTRUE;
 1192              		.loc 1 410 3 is_stmt 1 view .LVU425
 1193              		.loc 1 410 23 is_stmt 0 view .LVU426
 1194 001c 8DF81A40 		strb	r4, [sp, #26]
 411:Core/Src/Impedance.c ****   seq_cfg.SeqCntCRCClr = bTRUE;
 1195              		.loc 1 411 3 is_stmt 1 view .LVU427
 1196              		.loc 1 411 24 is_stmt 0 view .LVU428
 1197 0020 8DF81B40 		strb	r4, [sp, #27]
 412:Core/Src/Impedance.c ****   seq_cfg.SeqEnable = bFALSE;
 1198              		.loc 1 412 3 is_stmt 1 view .LVU429
 1199              		.loc 1 412 21 is_stmt 0 view .LVU430
 1200 0024 8DF81850 		strb	r5, [sp, #24]
 413:Core/Src/Impedance.c ****   seq_cfg.SeqWrTimer = 0;
 1201              		.loc 1 413 3 is_stmt 1 view .LVU431
 1202              		.loc 1 413 22 is_stmt 0 view .LVU432
 1203 0028 0795     		str	r5, [sp, #28]
 414:Core/Src/Impedance.c ****   AD5940_SEQCfg(&seq_cfg);
 1204              		.loc 1 414 3 is_stmt 1 view .LVU433
 1205 002a 05A8     		add	r0, sp, #20
 1206 002c FFF7FEFF 		bl	AD5940_SEQCfg
 1207              	.LVL85:
 415:Core/Src/Impedance.c ****   
 416:Core/Src/Impedance.c ****   /* Reconfigure FIFO */
 417:Core/Src/Impedance.c ****   AD5940_FIFOCtrlS(FIFOSRC_DFT, bFALSE);									/* Disable FIFO firstly */
 1208              		.loc 1 417 3 view .LVU434
 1209 0030 2946     		mov	r1, r5
 1210 0032 0220     		movs	r0, #2
 1211 0034 FFF7FEFF 		bl	AD5940_FIFOCtrlS
 1212              	.LVL86:
 418:Core/Src/Impedance.c ****   fifo_cfg.FIFOEn = bTRUE;
 1213              		.loc 1 418 3 view .LVU435
 1214              		.loc 1 418 19 is_stmt 0 view .LVU436
 1215 0038 8DF80040 		strb	r4, [sp]
 419:Core/Src/Impedance.c ****   fifo_cfg.FIFOMode = FIFOMODE_FIFO;
 1216              		.loc 1 419 3 is_stmt 1 view .LVU437
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 32


 1217              		.loc 1 419 21 is_stmt 0 view .LVU438
 1218 003c 0223     		movs	r3, #2
 1219 003e 0193     		str	r3, [sp, #4]
 420:Core/Src/Impedance.c ****   fifo_cfg.FIFOSize = FIFOSIZE_4KB;                       /* 4kB for FIFO, The reset 2kB for sequen
 1220              		.loc 1 420 3 is_stmt 1 view .LVU439
 1221              		.loc 1 420 21 is_stmt 0 view .LVU440
 1222 0040 0293     		str	r3, [sp, #8]
 421:Core/Src/Impedance.c ****   fifo_cfg.FIFOSrc = FIFOSRC_DFT;
 1223              		.loc 1 421 3 is_stmt 1 view .LVU441
 1224              		.loc 1 421 20 is_stmt 0 view .LVU442
 1225 0042 0393     		str	r3, [sp, #12]
 422:Core/Src/Impedance.c ****   fifo_cfg.FIFOThresh = AppIMPCfg.FifoThresh;              /* DFT result. One pair for RCAL, anothe
 1226              		.loc 1 422 3 is_stmt 1 view .LVU443
 1227              		.loc 1 422 34 is_stmt 0 view .LVU444
 1228 0044 2E4C     		ldr	r4, .L69
 1229 0046 D4F88830 		ldr	r3, [r4, #136]
 1230              		.loc 1 422 23 view .LVU445
 1231 004a 0493     		str	r3, [sp, #16]
 423:Core/Src/Impedance.c ****   AD5940_FIFOCfg(&fifo_cfg);
 1232              		.loc 1 423 3 is_stmt 1 view .LVU446
 1233 004c 6846     		mov	r0, sp
 1234 004e FFF7FEFF 		bl	AD5940_FIFOCfg
 1235              	.LVL87:
 424:Core/Src/Impedance.c ****   AD5940_INTCClrFlag(AFEINTSRC_ALLINT);
 1236              		.loc 1 424 3 view .LVU447
 1237 0052 4FF0FF30 		mov	r0, #-1
 1238 0056 FFF7FEFF 		bl	AD5940_INTCClrFlag
 1239              	.LVL88:
 425:Core/Src/Impedance.c **** 
 426:Core/Src/Impedance.c ****   /* Start sequence generator */
 427:Core/Src/Impedance.c ****   /* Initialize sequencer generator */
 428:Core/Src/Impedance.c ****   if((AppIMPCfg.IMPInited == bFALSE)||\
 1240              		.loc 1 428 3 view .LVU448
 1241              		.loc 1 428 16 is_stmt 0 view .LVU449
 1242 005a 94F89830 		ldrb	r3, [r4, #152]	@ zero_extendqisi2
 1243              		.loc 1 428 5 view .LVU450
 1244 005e A3B3     		cbz	r3, .L62
 429:Core/Src/Impedance.c ****        (AppIMPCfg.bParaChanged == bTRUE))
 1245              		.loc 1 429 18 discriminator 1 view .LVU451
 1246 0060 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 428:Core/Src/Impedance.c ****        (AppIMPCfg.bParaChanged == bTRUE))
 1247              		.loc 1 428 37 discriminator 1 view .LVU452
 1248 0062 012B     		cmp	r3, #1
 1249 0064 31D0     		beq	.L62
 1250              	.LVL89:
 1251              	.L63:
 430:Core/Src/Impedance.c ****   {
 431:Core/Src/Impedance.c ****     if(pBuffer == 0)  return AD5940ERR_PARA;
 432:Core/Src/Impedance.c ****     if(BufferSize == 0) return AD5940ERR_PARA;   
 433:Core/Src/Impedance.c ****     AD5940_SEQGenInit(pBuffer, BufferSize);
 434:Core/Src/Impedance.c **** 
 435:Core/Src/Impedance.c ****     /* Generate initialize sequence */
 436:Core/Src/Impedance.c ****     error = AppIMPSeqCfgGen(); /* Application initialization sequence using either MCU or sequencer
 437:Core/Src/Impedance.c ****     if(error != AD5940ERR_OK) return error;
 438:Core/Src/Impedance.c **** 
 439:Core/Src/Impedance.c ****     /* Generate measurement sequence */
 440:Core/Src/Impedance.c ****     error = AppIMPSeqMeasureGen();
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 33


 441:Core/Src/Impedance.c ****     if(error != AD5940ERR_OK) return error;
 442:Core/Src/Impedance.c **** 
 443:Core/Src/Impedance.c ****     AppIMPCfg.bParaChanged = bFALSE; /* Clear this flag as we already implemented the new configura
 444:Core/Src/Impedance.c ****   }
 445:Core/Src/Impedance.c **** 
 446:Core/Src/Impedance.c ****   /* Initialization sequencer  */
 447:Core/Src/Impedance.c ****   AppIMPCfg.InitSeqInfo.WriteSRAM = bFALSE;
 1252              		.loc 1 447 3 is_stmt 1 view .LVU453
 1253              		.loc 1 447 35 is_stmt 0 view .LVU454
 1254 0066 264C     		ldr	r4, .L69
 1255 0068 0023     		movs	r3, #0
 1256 006a 84F8A830 		strb	r3, [r4, #168]
 448:Core/Src/Impedance.c ****   AD5940_SEQInfoCfg(&AppIMPCfg.InitSeqInfo);
 1257              		.loc 1 448 3 is_stmt 1 view .LVU455
 1258 006e 04F19C00 		add	r0, r4, #156
 1259 0072 FFF7FEFF 		bl	AD5940_SEQInfoCfg
 1260              	.LVL90:
 449:Core/Src/Impedance.c ****   seq_cfg.SeqEnable = bTRUE;
 1261              		.loc 1 449 3 view .LVU456
 1262              		.loc 1 449 21 is_stmt 0 view .LVU457
 1263 0076 0123     		movs	r3, #1
 1264 0078 8DF81830 		strb	r3, [sp, #24]
 450:Core/Src/Impedance.c ****   AD5940_SEQCfg(&seq_cfg);  /* Enable sequencer */
 1265              		.loc 1 450 3 is_stmt 1 view .LVU458
 1266 007c 05A8     		add	r0, sp, #20
 1267 007e FFF7FEFF 		bl	AD5940_SEQCfg
 1268              	.LVL91:
 451:Core/Src/Impedance.c ****   AD5940_SEQMmrTrig(AppIMPCfg.InitSeqInfo.SeqId);
 1269              		.loc 1 451 3 view .LVU459
 1270 0082 D4F89C00 		ldr	r0, [r4, #156]
 1271 0086 FFF7FEFF 		bl	AD5940_SEQMmrTrig
 1272              	.LVL92:
 452:Core/Src/Impedance.c ****   while(AD5940_INTCTestFlag(AFEINTC_1, AFEINTSRC_ENDSEQ) == bFALSE);
 1273              		.loc 1 452 3 view .LVU460
 1274              	.L64:
 1275              		.loc 1 452 68 discriminator 1 view .LVU461
 1276              		.loc 1 452 8 discriminator 1 view .LVU462
 1277              		.loc 1 452 9 is_stmt 0 discriminator 1 view .LVU463
 1278 008a 4FF40041 		mov	r1, #32768
 1279 008e 0120     		movs	r0, #1
 1280 0090 FFF7FEFF 		bl	AD5940_INTCTestFlag
 1281              	.LVL93:
 1282              		.loc 1 452 8 discriminator 1 view .LVU464
 1283 0094 0028     		cmp	r0, #0
 1284 0096 F8D0     		beq	.L64
 453:Core/Src/Impedance.c ****   
 454:Core/Src/Impedance.c ****   /* Measurement sequence  */
 455:Core/Src/Impedance.c ****   AppIMPCfg.MeasureSeqInfo.WriteSRAM = bFALSE;
 1285              		.loc 1 455 3 is_stmt 1 view .LVU465
 1286              		.loc 1 455 38 is_stmt 0 view .LVU466
 1287 0098 194D     		ldr	r5, .L69
 1288 009a 0024     		movs	r4, #0
 1289 009c 85F8BC40 		strb	r4, [r5, #188]
 456:Core/Src/Impedance.c ****   AD5940_SEQInfoCfg(&AppIMPCfg.MeasureSeqInfo);
 1290              		.loc 1 456 3 is_stmt 1 view .LVU467
 1291 00a0 05F1B000 		add	r0, r5, #176
 1292 00a4 FFF7FEFF 		bl	AD5940_SEQInfoCfg
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 34


 1293              	.LVL94:
 457:Core/Src/Impedance.c **** 
 458:Core/Src/Impedance.c ****   seq_cfg.SeqEnable = bTRUE;
 1294              		.loc 1 458 3 view .LVU468
 1295              		.loc 1 458 21 is_stmt 0 view .LVU469
 1296 00a8 0126     		movs	r6, #1
 1297              	.LVL95:
 1298              		.loc 1 458 21 view .LVU470
 1299 00aa 8DF81860 		strb	r6, [sp, #24]
 459:Core/Src/Impedance.c ****   AD5940_SEQCfg(&seq_cfg);  /* Enable sequencer, and wait for trigger */
 1300              		.loc 1 459 3 is_stmt 1 view .LVU471
 1301 00ae 05A8     		add	r0, sp, #20
 1302 00b0 FFF7FEFF 		bl	AD5940_SEQCfg
 1303              	.LVL96:
 460:Core/Src/Impedance.c ****   AD5940_ClrMCUIntFlag();   /* Clear interrupt flag generated before */
 1304              		.loc 1 460 3 view .LVU472
 1305 00b4 FFF7FEFF 		bl	AD5940_ClrMCUIntFlag
 1306              	.LVL97:
 461:Core/Src/Impedance.c **** 
 462:Core/Src/Impedance.c ****   AD5940_AFEPwrBW(AppIMPCfg.PwrMod, AFEBW_250KHZ);
 1307              		.loc 1 462 3 view .LVU473
 1308 00b8 0321     		movs	r1, #3
 1309 00ba E86B     		ldr	r0, [r5, #60]
 1310 00bc FFF7FEFF 		bl	AD5940_AFEPwrBW
 1311              	.LVL98:
 463:Core/Src/Impedance.c **** 
 464:Core/Src/Impedance.c ****   AppIMPCfg.IMPInited = bTRUE;  /* IMP application has been initialized. */
 1312              		.loc 1 464 3 view .LVU474
 1313              		.loc 1 464 23 is_stmt 0 view .LVU475
 1314 00c0 85F89860 		strb	r6, [r5, #152]
 465:Core/Src/Impedance.c ****   return AD5940ERR_OK;
 1315              		.loc 1 465 3 is_stmt 1 view .LVU476
 1316              		.loc 1 465 10 is_stmt 0 view .LVU477
 1317 00c4 2046     		mov	r0, r4
 1318              	.L60:
 466:Core/Src/Impedance.c **** }
 1319              		.loc 1 466 1 view .LVU478
 1320 00c6 09B0     		add	sp, sp, #36
 1321              	.LCFI14:
 1322              		.cfi_remember_state
 1323              		.cfi_def_cfa_offset 20
 1324              		@ sp needed
 1325 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1326              	.LVL99:
 1327              	.L62:
 1328              	.LCFI15:
 1329              		.cfi_restore_state
 431:Core/Src/Impedance.c ****     if(BufferSize == 0) return AD5940ERR_PARA;   
 1330              		.loc 1 431 5 is_stmt 1 view .LVU479
 431:Core/Src/Impedance.c ****     if(BufferSize == 0) return AD5940ERR_PARA;   
 1331              		.loc 1 431 7 is_stmt 0 view .LVU480
 1332 00ca 9EB1     		cbz	r6, .L66
 432:Core/Src/Impedance.c ****     AD5940_SEQGenInit(pBuffer, BufferSize);
 1333              		.loc 1 432 5 is_stmt 1 view .LVU481
 432:Core/Src/Impedance.c ****     AD5940_SEQGenInit(pBuffer, BufferSize);
 1334              		.loc 1 432 7 is_stmt 0 view .LVU482
 1335 00cc AFB1     		cbz	r7, .L67
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 35


 433:Core/Src/Impedance.c **** 
 1336              		.loc 1 433 5 is_stmt 1 view .LVU483
 1337 00ce 3946     		mov	r1, r7
 1338 00d0 3046     		mov	r0, r6
 1339 00d2 FFF7FEFF 		bl	AD5940_SEQGenInit
 1340              	.LVL100:
 436:Core/Src/Impedance.c ****     if(error != AD5940ERR_OK) return error;
 1341              		.loc 1 436 5 view .LVU484
 436:Core/Src/Impedance.c ****     if(error != AD5940ERR_OK) return error;
 1342              		.loc 1 436 13 is_stmt 0 view .LVU485
 1343 00d6 FFF7FEFF 		bl	AppIMPSeqCfgGen
 1344              	.LVL101:
 437:Core/Src/Impedance.c **** 
 1345              		.loc 1 437 5 is_stmt 1 view .LVU486
 437:Core/Src/Impedance.c **** 
 1346              		.loc 1 437 7 is_stmt 0 view .LVU487
 1347 00da 0028     		cmp	r0, #0
 1348 00dc F3D1     		bne	.L60
 440:Core/Src/Impedance.c ****     if(error != AD5940ERR_OK) return error;
 1349              		.loc 1 440 5 is_stmt 1 view .LVU488
 440:Core/Src/Impedance.c ****     if(error != AD5940ERR_OK) return error;
 1350              		.loc 1 440 13 is_stmt 0 view .LVU489
 1351 00de FFF7FEFF 		bl	AppIMPSeqMeasureGen
 1352              	.LVL102:
 441:Core/Src/Impedance.c **** 
 1353              		.loc 1 441 5 is_stmt 1 view .LVU490
 441:Core/Src/Impedance.c **** 
 1354              		.loc 1 441 7 is_stmt 0 view .LVU491
 1355 00e2 0028     		cmp	r0, #0
 1356 00e4 EFD1     		bne	.L60
 443:Core/Src/Impedance.c ****   }
 1357              		.loc 1 443 5 is_stmt 1 view .LVU492
 443:Core/Src/Impedance.c ****   }
 1358              		.loc 1 443 28 is_stmt 0 view .LVU493
 1359 00e6 064B     		ldr	r3, .L69
 1360 00e8 0022     		movs	r2, #0
 1361 00ea 1A70     		strb	r2, [r3]
 1362 00ec BBE7     		b	.L63
 1363              	.LVL103:
 1364              	.L65:
 405:Core/Src/Impedance.c **** 
 1365              		.loc 1 405 12 view .LVU494
 1366 00ee 6FF00800 		mvn	r0, #8
 1367 00f2 E8E7     		b	.L60
 1368              	.L66:
 431:Core/Src/Impedance.c ****     if(BufferSize == 0) return AD5940ERR_PARA;   
 1369              		.loc 1 431 30 view .LVU495
 1370 00f4 6FF00100 		mvn	r0, #1
 1371 00f8 E5E7     		b	.L60
 1372              	.L67:
 432:Core/Src/Impedance.c ****     AD5940_SEQGenInit(pBuffer, BufferSize);
 1373              		.loc 1 432 32 view .LVU496
 1374 00fa 6FF00100 		mvn	r0, #1
 1375 00fe E2E7     		b	.L60
 1376              	.L70:
 1377              		.align	2
 1378              	.L69:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 36


 1379 0100 00000000 		.word	.LANCHOR0
 1380              		.cfi_endproc
 1381              	.LFE8:
 1383              		.section	.text.AppIMPRegModify,"ax",%progbits
 1384              		.align	1
 1385              		.global	AppIMPRegModify
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1389              		.fpu fpv5-d16
 1391              	AppIMPRegModify:
 1392              	.LVL104:
 1393              	.LFB9:
 467:Core/Src/Impedance.c **** 
 468:Core/Src/Impedance.c **** /* Modify registers when AFE wakeup */
 469:Core/Src/Impedance.c **** int32_t AppIMPRegModify(int32_t * const pData, uint32_t *pDataCount)
 470:Core/Src/Impedance.c **** {
 1394              		.loc 1 470 1 is_stmt 1 view -0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		.loc 1 470 1 is_stmt 0 view .LVU498
 1399 0000 08B5     		push	{r3, lr}
 1400              	.LCFI16:
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 3, -8
 1403              		.cfi_offset 14, -4
 471:Core/Src/Impedance.c ****   if(AppIMPCfg.NumOfData > 0)
 1404              		.loc 1 471 3 is_stmt 1 view .LVU499
 1405              		.loc 1 471 15 is_stmt 0 view .LVU500
 1406 0002 144B     		ldr	r3, .L79
 1407 0004 9A69     		ldr	r2, [r3, #24]
 1408              		.loc 1 471 5 view .LVU501
 1409 0006 002A     		cmp	r2, #0
 1410 0008 09DD     		ble	.L72
 472:Core/Src/Impedance.c ****   {
 473:Core/Src/Impedance.c ****     AppIMPCfg.FifoDataCount += *pDataCount/4;
 1411              		.loc 1 473 5 is_stmt 1 view .LVU502
 1412              		.loc 1 473 32 is_stmt 0 view .LVU503
 1413 000a 0868     		ldr	r0, [r1]
 1414              	.LVL105:
 1415              		.loc 1 473 29 view .LVU504
 1416 000c 1946     		mov	r1, r3
 1417              	.LVL106:
 1418              		.loc 1 473 29 view .LVU505
 1419 000e D3F8C830 		ldr	r3, [r3, #200]
 1420 0012 03EB9003 		add	r3, r3, r0, lsr #2
 1421 0016 C1F8C830 		str	r3, [r1, #200]
 474:Core/Src/Impedance.c ****     if(AppIMPCfg.FifoDataCount >= AppIMPCfg.NumOfData)
 1422              		.loc 1 474 5 is_stmt 1 view .LVU506
 1423              		.loc 1 474 7 is_stmt 0 view .LVU507
 1424 001a 9342     		cmp	r3, r2
 1425 001c 0AD2     		bcs	.L76
 1426              	.L72:
 475:Core/Src/Impedance.c ****     {
 476:Core/Src/Impedance.c ****       AD5940_WUPTCtrl(bFALSE);
 477:Core/Src/Impedance.c ****       return AD5940ERR_OK;
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 37


 478:Core/Src/Impedance.c ****     }
 479:Core/Src/Impedance.c ****   }
 480:Core/Src/Impedance.c ****   if(AppIMPCfg.StopRequired == bTRUE)
 1427              		.loc 1 480 3 is_stmt 1 view .LVU508
 1428              		.loc 1 480 15 is_stmt 0 view .LVU509
 1429 001e 0D4B     		ldr	r3, .L79
 1430 0020 93F8C430 		ldrb	r3, [r3, #196]	@ zero_extendqisi2
 1431              		.loc 1 480 5 view .LVU510
 1432 0024 012B     		cmp	r3, #1
 1433 0026 09D0     		beq	.L77
 481:Core/Src/Impedance.c ****   {
 482:Core/Src/Impedance.c ****     AD5940_WUPTCtrl(bFALSE);
 483:Core/Src/Impedance.c ****     return AD5940ERR_OK;
 484:Core/Src/Impedance.c ****   }
 485:Core/Src/Impedance.c ****   if(AppIMPCfg.SweepCfg.SweepEn) /* Need to set new frequency and set power mode */
 1434              		.loc 1 485 3 is_stmt 1 view .LVU511
 1435              		.loc 1 485 24 is_stmt 0 view .LVU512
 1436 0028 0A4B     		ldr	r3, .L79
 1437 002a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1438              		.loc 1 485 5 view .LVU513
 1439 002e 4BB9     		cbnz	r3, .L78
 1440              	.L73:
 486:Core/Src/Impedance.c ****   {
 487:Core/Src/Impedance.c ****     AD5940_WGFreqCtrlS(AppIMPCfg.SweepNextFreq, AppIMPCfg.SysClkFreq);
 488:Core/Src/Impedance.c ****   }
 489:Core/Src/Impedance.c ****   return AD5940ERR_OK;
 490:Core/Src/Impedance.c **** }
 1441              		.loc 1 490 1 view .LVU514
 1442 0030 0020     		movs	r0, #0
 1443 0032 08BD     		pop	{r3, pc}
 1444              	.L76:
 476:Core/Src/Impedance.c ****       return AD5940ERR_OK;
 1445              		.loc 1 476 7 is_stmt 1 view .LVU515
 1446 0034 0020     		movs	r0, #0
 1447 0036 FFF7FEFF 		bl	AD5940_WUPTCtrl
 1448              	.LVL107:
 477:Core/Src/Impedance.c ****     }
 1449              		.loc 1 477 7 view .LVU516
 477:Core/Src/Impedance.c ****     }
 1450              		.loc 1 477 14 is_stmt 0 view .LVU517
 1451 003a F9E7     		b	.L73
 1452              	.L77:
 482:Core/Src/Impedance.c ****     return AD5940ERR_OK;
 1453              		.loc 1 482 5 is_stmt 1 view .LVU518
 1454 003c 0020     		movs	r0, #0
 1455 003e FFF7FEFF 		bl	AD5940_WUPTCtrl
 1456              	.LVL108:
 483:Core/Src/Impedance.c ****   }
 1457              		.loc 1 483 5 view .LVU519
 483:Core/Src/Impedance.c ****   }
 1458              		.loc 1 483 12 is_stmt 0 view .LVU520
 1459 0042 F5E7     		b	.L73
 1460              	.L78:
 487:Core/Src/Impedance.c ****   }
 1461              		.loc 1 487 5 is_stmt 1 view .LVU521
 1462 0044 034B     		ldr	r3, .L79
 1463 0046 D3ED080A 		vldr.32	s1, [r3, #32]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 38


 1464 004a 93ED240A 		vldr.32	s0, [r3, #144]
 1465 004e FFF7FEFF 		bl	AD5940_WGFreqCtrlS
 1466              	.LVL109:
 1467 0052 EDE7     		b	.L73
 1468              	.L80:
 1469              		.align	2
 1470              	.L79:
 1471 0054 00000000 		.word	.LANCHOR0
 1472              		.cfi_endproc
 1473              	.LFE9:
 1475              		.section	.text.AppIMPDataProcess,"ax",%progbits
 1476              		.align	1
 1477              		.global	AppIMPDataProcess
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1481              		.fpu fpv5-d16
 1483              	AppIMPDataProcess:
 1484              	.LVL110:
 1485              	.LFB10:
 491:Core/Src/Impedance.c **** 
 492:Core/Src/Impedance.c **** /* Depending on the data type, do appropriate data pre-process before return back to controller */
 493:Core/Src/Impedance.c **** int32_t AppIMPDataProcess(int32_t * const pData, uint32_t *pDataCount)
 494:Core/Src/Impedance.c **** {
 1486              		.loc 1 494 1 view -0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490              		.loc 1 494 1 is_stmt 0 view .LVU523
 1491 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1492              	.LCFI17:
 1493              		.cfi_def_cfa_offset 32
 1494              		.cfi_offset 3, -32
 1495              		.cfi_offset 4, -28
 1496              		.cfi_offset 5, -24
 1497              		.cfi_offset 6, -20
 1498              		.cfi_offset 7, -16
 1499              		.cfi_offset 8, -12
 1500              		.cfi_offset 9, -8
 1501              		.cfi_offset 14, -4
 1502 0004 2DED048B 		vpush.64	{d8, d9}
 1503              	.LCFI18:
 1504              		.cfi_def_cfa_offset 48
 1505              		.cfi_offset 80, -48
 1506              		.cfi_offset 81, -44
 1507              		.cfi_offset 82, -40
 1508              		.cfi_offset 83, -36
 1509 0008 0546     		mov	r5, r0
 1510 000a 0F46     		mov	r7, r1
 495:Core/Src/Impedance.c ****   uint32_t DataCount = *pDataCount;
 1511              		.loc 1 495 3 is_stmt 1 view .LVU524
 1512              		.loc 1 495 12 is_stmt 0 view .LVU525
 1513 000c 0868     		ldr	r0, [r1]
 1514              	.LVL111:
 496:Core/Src/Impedance.c ****   uint32_t ImpResCount = DataCount/4;
 1515              		.loc 1 496 3 is_stmt 1 view .LVU526
 1516              		.loc 1 496 12 is_stmt 0 view .LVU527
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 39


 1517 000e 8608     		lsrs	r6, r0, #2
 1518              	.LVL112:
 497:Core/Src/Impedance.c **** 
 498:Core/Src/Impedance.c ****   fImpPol_Type * const pOut = (fImpPol_Type*)pData;
 1519              		.loc 1 498 3 is_stmt 1 view .LVU528
 499:Core/Src/Impedance.c ****   iImpCar_Type * pSrcData = (iImpCar_Type*)pData;
 1520              		.loc 1 499 3 view .LVU529
 500:Core/Src/Impedance.c **** 
 501:Core/Src/Impedance.c ****   *pDataCount = 0;
 1521              		.loc 1 501 3 view .LVU530
 1522              		.loc 1 501 15 is_stmt 0 view .LVU531
 1523 0010 0023     		movs	r3, #0
 1524 0012 0B60     		str	r3, [r1]
 502:Core/Src/Impedance.c **** 
 503:Core/Src/Impedance.c ****   DataCount = (DataCount/4)*4;/* We expect RCAL data together with Rz data. One DFT result has two 
 1525              		.loc 1 503 3 is_stmt 1 view .LVU532
 1526              		.loc 1 503 13 is_stmt 0 view .LVU533
 1527 0014 20F00300 		bic	r0, r0, #3
 1528              	.LVL113:
 504:Core/Src/Impedance.c **** 
 505:Core/Src/Impedance.c ****   /* Convert DFT result to int32_t type */
 506:Core/Src/Impedance.c ****   for(uint32_t i=0; i<DataCount; i++)
 1529              		.loc 1 506 3 is_stmt 1 view .LVU534
 1530              	.LBB7:
 1531              		.loc 1 506 7 view .LVU535
 1532              		.loc 1 506 3 is_stmt 0 view .LVU536
 1533 0018 00E0     		b	.L82
 1534              	.LVL114:
 1535              	.L83:
 1536              		.loc 1 506 34 is_stmt 1 discriminator 2 view .LVU537
 1537              		.loc 1 506 35 is_stmt 0 discriminator 2 view .LVU538
 1538 001a 0133     		adds	r3, r3, #1
 1539              	.LVL115:
 1540              	.L82:
 1541              		.loc 1 506 21 is_stmt 1 discriminator 1 view .LVU539
 1542              		.loc 1 506 3 is_stmt 0 discriminator 1 view .LVU540
 1543 001c 8342     		cmp	r3, r0
 1544 001e 0DD2     		bcs	.L89
 507:Core/Src/Impedance.c ****   {
 508:Core/Src/Impedance.c ****     pData[i] &= 0x3ffff; /* @todo option to check ECC */
 1545              		.loc 1 508 5 is_stmt 1 view .LVU541
 1546              		.loc 1 508 14 is_stmt 0 view .LVU542
 1547 0020 55F82320 		ldr	r2, [r5, r3, lsl #2]
 1548 0024 C2F31102 		ubfx	r2, r2, #0, #18
 1549 0028 45F82320 		str	r2, [r5, r3, lsl #2]
 509:Core/Src/Impedance.c ****     if(pData[i]&(1L<<17)) /* Bit17 is sign bit */
 1550              		.loc 1 509 5 is_stmt 1 view .LVU543
 1551              		.loc 1 509 7 is_stmt 0 view .LVU544
 1552 002c 12F4003F 		tst	r2, #131072
 1553 0030 F3D0     		beq	.L83
 510:Core/Src/Impedance.c ****     {
 511:Core/Src/Impedance.c ****       pData[i] |= 0xfffc0000; /* Data is 18bit in two's complement, bit17 is the sign bit */
 1554              		.loc 1 511 7 is_stmt 1 view .LVU545
 1555              		.loc 1 511 16 is_stmt 0 view .LVU546
 1556 0032 3E49     		ldr	r1, .L91
 1557 0034 1143     		orrs	r1, r1, r2
 1558 0036 45F82310 		str	r1, [r5, r3, lsl #2]
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 40


 1559 003a EEE7     		b	.L83
 1560              	.L89:
 1561              		.loc 1 511 16 view .LVU547
 1562              	.LBE7:
 499:Core/Src/Impedance.c **** 
 1563              		.loc 1 499 18 view .LVU548
 1564 003c 2C46     		mov	r4, r5
 1565              	.LBB8:
 512:Core/Src/Impedance.c ****     }
 513:Core/Src/Impedance.c ****   }
 514:Core/Src/Impedance.c ****   for(uint32_t i=0; i<ImpResCount; i++)
 1566              		.loc 1 514 16 view .LVU549
 1567 003e 4FF00008 		mov	r8, #0
 1568 0042 57E0     		b	.L85
 1569              	.LVL116:
 1570              	.L86:
 1571              	.LBB9:
 515:Core/Src/Impedance.c ****   {
 516:Core/Src/Impedance.c ****     iImpCar_Type *pDftRcal, *pDftRz;
 1572              		.loc 1 516 5 is_stmt 1 discriminator 3 view .LVU550
 517:Core/Src/Impedance.c **** 
 518:Core/Src/Impedance.c ****     pDftRcal = pSrcData++;
 1573              		.loc 1 518 5 discriminator 3 view .LVU551
 519:Core/Src/Impedance.c ****     pDftRz = pSrcData++;
 1574              		.loc 1 519 5 discriminator 3 view .LVU552
 520:Core/Src/Impedance.c ****     float RzMag,RzPhase;
 1575              		.loc 1 520 5 discriminator 3 view .LVU553
 521:Core/Src/Impedance.c ****     float RcalMag, RcalPhase;
 1576              		.loc 1 521 5 discriminator 3 view .LVU554
 522:Core/Src/Impedance.c ****     
 523:Core/Src/Impedance.c ****     RcalMag = sqrt((float)pDftRcal->Real*pDftRcal->Real+(float)pDftRcal->Image*pDftRcal->Image);
 1577              		.loc 1 523 5 discriminator 3 view .LVU555
 1578              		.loc 1 523 35 is_stmt 0 discriminator 3 view .LVU556
 1579 0044 04F11009 		add	r9, r4, #16
 1580              	.LVL117:
 1581              		.loc 1 523 35 discriminator 3 view .LVU557
 1582 0048 94ED000A 		vldr.32	s0, [r4]	@ int
 1583              		.loc 1 523 20 discriminator 3 view .LVU558
 1584 004c B8EEC00A 		vcvt.f32.s32	s0, s0
 1585              		.loc 1 523 41 discriminator 3 view .LVU559
 1586 0050 20EE000A 		vmul.f32	s0, s0, s0
 1587              		.loc 1 523 57 discriminator 3 view .LVU560
 1588 0054 D4ED017A 		vldr.32	s15, [r4, #4]	@ int
 1589 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
 1590              		.loc 1 523 79 discriminator 3 view .LVU561
 1591 005c 67EEA77A 		vmul.f32	s15, s15, s15
 1592              		.loc 1 523 56 discriminator 3 view .LVU562
 1593 0060 30EE270A 		vadd.f32	s0, s0, s15
 1594              		.loc 1 523 15 discriminator 3 view .LVU563
 1595 0064 B7EEC00A 		vcvt.f64.f32	d0, s0
 1596 0068 FFF7FEFF 		bl	sqrt
 1597              	.LVL118:
 1598              		.loc 1 523 13 discriminator 3 view .LVU564
 1599 006c B7EEC09B 		vcvt.f32.f64	s18, d0
 1600              	.LVL119:
 524:Core/Src/Impedance.c ****     RcalPhase = atan2(-pDftRcal->Image,pDftRcal->Real);
 1601              		.loc 1 524 5 is_stmt 1 discriminator 3 view .LVU565
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 41


 1602              		.loc 1 524 32 is_stmt 0 discriminator 3 view .LVU566
 1603 0070 6368     		ldr	r3, [r4, #4]
 1604              		.loc 1 524 23 discriminator 3 view .LVU567
 1605 0072 5B42     		rsbs	r3, r3, #0
 1606 0074 00EE103A 		vmov	s0, r3	@ int
 1607              		.loc 1 524 17 discriminator 3 view .LVU568
 1608 0078 D4ED007A 		vldr.32	s15, [r4]	@ int
 1609 007c B8EEE71B 		vcvt.f64.s32	d1, s15
 1610 0080 B8EEC00B 		vcvt.f64.s32	d0, s0
 1611 0084 FFF7FEFF 		bl	atan2
 1612              	.LVL120:
 1613              		.loc 1 524 15 discriminator 3 view .LVU569
 1614 0088 B7EEC08B 		vcvt.f32.f64	s16, d0
 1615              	.LVL121:
 525:Core/Src/Impedance.c **** 		
 526:Core/Src/Impedance.c ****     RzMag = sqrt((float)pDftRz->Real*pDftRz->Real+(float)pDftRz->Image*pDftRz->Image);
 1616              		.loc 1 526 5 is_stmt 1 discriminator 3 view .LVU570
 1617              		.loc 1 526 18 is_stmt 0 discriminator 3 view .LVU571
 1618 008c D4ED027A 		vldr.32	s15, [r4, #8]	@ int
 1619 0090 F8EEE77A 		vcvt.f32.s32	s15, s15
 1620              		.loc 1 526 37 discriminator 3 view .LVU572
 1621 0094 67EEA77A 		vmul.f32	s15, s15, s15
 1622              		.loc 1 526 51 discriminator 3 view .LVU573
 1623 0098 94ED037A 		vldr.32	s14, [r4, #12]	@ int
 1624 009c B8EEC70A 		vcvt.f32.s32	s0, s14
 1625              		.loc 1 526 71 discriminator 3 view .LVU574
 1626 00a0 20EE000A 		vmul.f32	s0, s0, s0
 1627              		.loc 1 526 50 discriminator 3 view .LVU575
 1628 00a4 37EE800A 		vadd.f32	s0, s15, s0
 1629              		.loc 1 526 13 discriminator 3 view .LVU576
 1630 00a8 B7EEC00A 		vcvt.f64.f32	d0, s0
 1631 00ac FFF7FEFF 		bl	sqrt
 1632              	.LVL122:
 1633              		.loc 1 526 11 discriminator 3 view .LVU577
 1634 00b0 F7EEC08B 		vcvt.f32.f64	s17, d0
 1635              	.LVL123:
 527:Core/Src/Impedance.c ****     RzPhase = atan2(-pDftRz->Image,pDftRz->Real);
 1636              		.loc 1 527 5 is_stmt 1 discriminator 3 view .LVU578
 1637              		.loc 1 527 28 is_stmt 0 discriminator 3 view .LVU579
 1638 00b4 E368     		ldr	r3, [r4, #12]
 1639              		.loc 1 527 21 discriminator 3 view .LVU580
 1640 00b6 5B42     		rsbs	r3, r3, #0
 1641 00b8 00EE103A 		vmov	s0, r3	@ int
 1642              		.loc 1 527 42 discriminator 3 view .LVU581
 1643 00bc 94ED021A 		vldr.32	s2, [r4, #8]	@ int
 1644              		.loc 1 527 15 discriminator 3 view .LVU582
 1645 00c0 B8EEC11B 		vcvt.f64.s32	d1, s2
 1646 00c4 B8EEC00B 		vcvt.f64.s32	d0, s0
 1647 00c8 FFF7FEFF 		bl	atan2
 1648              	.LVL124:
 1649              		.loc 1 527 13 discriminator 3 view .LVU583
 1650 00cc B7EEC00B 		vcvt.f32.f64	s0, d0
 1651              	.LVL125:
 528:Core/Src/Impedance.c **** 
 529:Core/Src/Impedance.c ****     RzMag = RcalMag/RzMag*AppIMPCfg.RcalVal;
 1652              		.loc 1 529 5 is_stmt 1 discriminator 3 view .LVU584
 1653              		.loc 1 529 20 is_stmt 0 discriminator 3 view .LVU585
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 42


 1654 00d0 C9EE287A 		vdiv.f32	s15, s18, s17
 1655              		.loc 1 529 36 discriminator 3 view .LVU586
 1656 00d4 164B     		ldr	r3, .L91+4
 1657 00d6 93ED0A7A 		vldr.32	s14, [r3, #40]
 1658              		.loc 1 529 11 discriminator 3 view .LVU587
 1659 00da 67EE877A 		vmul.f32	s15, s15, s14
 1660              	.LVL126:
 530:Core/Src/Impedance.c ****     RzPhase = RcalPhase - RzPhase;
 1661              		.loc 1 530 5 is_stmt 1 discriminator 3 view .LVU588
 1662              		.loc 1 530 13 is_stmt 0 discriminator 3 view .LVU589
 1663 00de 38EE408A 		vsub.f32	s16, s16, s0
 1664              	.LVL127:
 531:Core/Src/Impedance.c ****     //printf("V:%d,%d,I:%d,%d ",pDftRcal->Real,pDftRcal->Image, pDftRz->Real, pDftRz->Image);
 532:Core/Src/Impedance.c ****     
 533:Core/Src/Impedance.c ****     pOut[i].Magnitude = RzMag;
 1665              		.loc 1 533 5 is_stmt 1 discriminator 3 view .LVU590
 1666              		.loc 1 533 9 is_stmt 0 discriminator 3 view .LVU591
 1667 00e2 05EBC803 		add	r3, r5, r8, lsl #3
 1668              		.loc 1 533 23 discriminator 3 view .LVU592
 1669 00e6 C3ED007A 		vstr.32	s15, [r3]
 534:Core/Src/Impedance.c ****     pOut[i].Phase = RzPhase;
 1670              		.loc 1 534 5 is_stmt 1 discriminator 3 view .LVU593
 1671              		.loc 1 534 19 is_stmt 0 discriminator 3 view .LVU594
 1672 00ea 83ED018A 		vstr.32	s16, [r3, #4]
 1673              	.LBE9:
 514:Core/Src/Impedance.c ****   {
 1674              		.loc 1 514 36 is_stmt 1 discriminator 3 view .LVU595
 514:Core/Src/Impedance.c ****   {
 1675              		.loc 1 514 37 is_stmt 0 discriminator 3 view .LVU596
 1676 00ee 08F10108 		add	r8, r8, #1
 1677              	.LVL128:
 1678              	.LBB10:
 519:Core/Src/Impedance.c ****     float RzMag,RzPhase;
 1679              		.loc 1 519 22 discriminator 3 view .LVU597
 1680 00f2 4C46     		mov	r4, r9
 1681              	.LVL129:
 1682              	.L85:
 519:Core/Src/Impedance.c ****     float RzMag,RzPhase;
 1683              		.loc 1 519 22 discriminator 3 view .LVU598
 1684              	.LBE10:
 514:Core/Src/Impedance.c ****   {
 1685              		.loc 1 514 21 is_stmt 1 discriminator 1 view .LVU599
 514:Core/Src/Impedance.c ****   {
 1686              		.loc 1 514 3 is_stmt 0 discriminator 1 view .LVU600
 1687 00f4 B045     		cmp	r8, r6
 1688 00f6 A5D3     		bcc	.L86
 514:Core/Src/Impedance.c ****   {
 1689              		.loc 1 514 3 discriminator 1 view .LVU601
 1690              	.LBE8:
 535:Core/Src/Impedance.c ****   }
 536:Core/Src/Impedance.c ****   *pDataCount = ImpResCount; 
 1691              		.loc 1 536 3 is_stmt 1 view .LVU602
 1692              		.loc 1 536 15 is_stmt 0 view .LVU603
 1693 00f8 3E60     		str	r6, [r7]
 537:Core/Src/Impedance.c ****   AppIMPCfg.FreqofData = AppIMPCfg.SweepCurrFreq;
 1694              		.loc 1 537 3 is_stmt 1 view .LVU604
 1695              		.loc 1 537 35 is_stmt 0 view .LVU605
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 43


 1696 00fa 0D4B     		ldr	r3, .L91+4
 1697 00fc D3F88C20 		ldr	r2, [r3, #140]	@ float
 1698              		.loc 1 537 24 view .LVU606
 1699 0100 C3F89420 		str	r2, [r3, #148]	@ float
 538:Core/Src/Impedance.c ****   /* Calculate next frequency point */
 539:Core/Src/Impedance.c ****   if(AppIMPCfg.SweepCfg.SweepEn == bTRUE)
 1700              		.loc 1 539 3 is_stmt 1 view .LVU607
 1701              		.loc 1 539 24 is_stmt 0 view .LVU608
 1702 0104 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1703              		.loc 1 539 5 view .LVU609
 1704 0108 012B     		cmp	r3, #1
 1705 010a 04D0     		beq	.L90
 1706              	.L87:
 540:Core/Src/Impedance.c ****   {
 541:Core/Src/Impedance.c ****     AppIMPCfg.FreqofData = AppIMPCfg.SweepCurrFreq;
 542:Core/Src/Impedance.c ****     AppIMPCfg.SweepCurrFreq = AppIMPCfg.SweepNextFreq;
 543:Core/Src/Impedance.c ****     AD5940_SweepNext(&AppIMPCfg.SweepCfg, &AppIMPCfg.SweepNextFreq);
 544:Core/Src/Impedance.c ****   }
 545:Core/Src/Impedance.c **** 
 546:Core/Src/Impedance.c ****   return 0;
 1707              		.loc 1 546 3 is_stmt 1 view .LVU610
 547:Core/Src/Impedance.c **** }
 1708              		.loc 1 547 1 is_stmt 0 view .LVU611
 1709 010c 0020     		movs	r0, #0
 1710 010e BDEC048B 		vldm	sp!, {d8-d9}
 1711              	.LCFI19:
 1712              		.cfi_remember_state
 1713              		.cfi_restore 82
 1714              		.cfi_restore 83
 1715              		.cfi_restore 80
 1716              		.cfi_restore 81
 1717              		.cfi_def_cfa_offset 32
 1718 0112 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1719              	.LVL130:
 1720              	.L90:
 1721              	.LCFI20:
 1722              		.cfi_restore_state
 541:Core/Src/Impedance.c ****     AppIMPCfg.SweepCurrFreq = AppIMPCfg.SweepNextFreq;
 1723              		.loc 1 541 5 is_stmt 1 view .LVU612
 542:Core/Src/Impedance.c ****     AD5940_SweepNext(&AppIMPCfg.SweepCfg, &AppIMPCfg.SweepNextFreq);
 1724              		.loc 1 542 5 view .LVU613
 542:Core/Src/Impedance.c ****     AD5940_SweepNext(&AppIMPCfg.SweepCfg, &AppIMPCfg.SweepNextFreq);
 1725              		.loc 1 542 40 is_stmt 0 view .LVU614
 1726 0116 0648     		ldr	r0, .L91+4
 1727 0118 D0F89030 		ldr	r3, [r0, #144]	@ float
 542:Core/Src/Impedance.c ****     AD5940_SweepNext(&AppIMPCfg.SweepCfg, &AppIMPCfg.SweepNextFreq);
 1728              		.loc 1 542 29 view .LVU615
 1729 011c C0F88C30 		str	r3, [r0, #140]	@ float
 543:Core/Src/Impedance.c ****   }
 1730              		.loc 1 543 5 is_stmt 1 view .LVU616
 1731 0120 00F19001 		add	r1, r0, #144
 1732 0124 7030     		adds	r0, r0, #112
 1733 0126 FFF7FEFF 		bl	AD5940_SweepNext
 1734              	.LVL131:
 1735 012a EFE7     		b	.L87
 1736              	.L92:
 1737              		.align	2
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 44


 1738              	.L91:
 1739 012c 0000FCFF 		.word	-262144
 1740 0130 00000000 		.word	.LANCHOR0
 1741              		.cfi_endproc
 1742              	.LFE10:
 1744              		.section	.text.AppIMPISR,"ax",%progbits
 1745              		.align	1
 1746              		.global	AppIMPISR
 1747              		.syntax unified
 1748              		.thumb
 1749              		.thumb_func
 1750              		.fpu fpv5-d16
 1752              	AppIMPISR:
 1753              	.LVL132:
 1754              	.LFB11:
 548:Core/Src/Impedance.c **** 
 549:Core/Src/Impedance.c **** /**
 550:Core/Src/Impedance.c **** 
 551:Core/Src/Impedance.c **** */
 552:Core/Src/Impedance.c **** int32_t AppIMPISR(void *pBuff, uint32_t *pCount)
 553:Core/Src/Impedance.c **** {
 1755              		.loc 1 553 1 view -0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 8
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759              		.loc 1 553 1 is_stmt 0 view .LVU618
 1760 0000 30B5     		push	{r4, r5, lr}
 1761              	.LCFI21:
 1762              		.cfi_def_cfa_offset 12
 1763              		.cfi_offset 4, -12
 1764              		.cfi_offset 5, -8
 1765              		.cfi_offset 14, -4
 1766 0002 83B0     		sub	sp, sp, #12
 1767              	.LCFI22:
 1768              		.cfi_def_cfa_offset 24
 1769 0004 0546     		mov	r5, r0
 1770 0006 0C46     		mov	r4, r1
 554:Core/Src/Impedance.c ****   uint32_t BuffCount;
 1771              		.loc 1 554 3 is_stmt 1 view .LVU619
 555:Core/Src/Impedance.c ****   uint32_t FifoCnt;
 1772              		.loc 1 555 3 view .LVU620
 556:Core/Src/Impedance.c ****   BuffCount = *pCount;
 1773              		.loc 1 556 3 view .LVU621
 1774              	.LVL133:
 557:Core/Src/Impedance.c ****   
 558:Core/Src/Impedance.c ****   *pCount = 0;
 1775              		.loc 1 558 3 view .LVU622
 1776              		.loc 1 558 11 is_stmt 0 view .LVU623
 1777 0008 0023     		movs	r3, #0
 1778 000a 0B60     		str	r3, [r1]
 1779              	.LVL134:
 559:Core/Src/Impedance.c ****   
 560:Core/Src/Impedance.c ****   if(AD5940_WakeUp(10) > 10)  /* Wakeup AFE by read register, read 10 times at most */
 1780              		.loc 1 560 3 is_stmt 1 view .LVU624
 1781              		.loc 1 560 6 is_stmt 0 view .LVU625
 1782 000c 0A20     		movs	r0, #10
 1783              	.LVL135:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 45


 1784              		.loc 1 560 6 view .LVU626
 1785 000e FFF7FEFF 		bl	AD5940_WakeUp
 1786              	.LVL136:
 1787              		.loc 1 560 5 view .LVU627
 1788 0012 0A28     		cmp	r0, #10
 1789 0014 27D8     		bhi	.L95
 561:Core/Src/Impedance.c ****     return AD5940ERR_WAKEUP;  /* Wakeup Failed */
 562:Core/Src/Impedance.c ****   AD5940_SleepKeyCtrlS(SLPKEY_LOCK);  /* Prohibit AFE to enter sleep mode. */
 1790              		.loc 1 562 3 is_stmt 1 view .LVU628
 1791 0016 0020     		movs	r0, #0
 1792 0018 FFF7FEFF 		bl	AD5940_SleepKeyCtrlS
 1793              	.LVL137:
 563:Core/Src/Impedance.c **** 
 564:Core/Src/Impedance.c ****   if(AD5940_INTCTestFlag(AFEINTC_0, AFEINTSRC_DATAFIFOTHRESH) == bTRUE)
 1794              		.loc 1 564 3 view .LVU629
 1795              		.loc 1 564 6 is_stmt 0 view .LVU630
 1796 001c 4FF00071 		mov	r1, #33554432
 1797 0020 0020     		movs	r0, #0
 1798 0022 FFF7FEFF 		bl	AD5940_INTCTestFlag
 1799              	.LVL138:
 1800              		.loc 1 564 5 view .LVU631
 1801 0026 0128     		cmp	r0, #1
 1802 0028 02D0     		beq	.L98
 565:Core/Src/Impedance.c ****   {
 566:Core/Src/Impedance.c ****     /* Now there should be 4 data in FIFO */
 567:Core/Src/Impedance.c ****     FifoCnt = (AD5940_FIFOGetCnt()/4)*4;
 568:Core/Src/Impedance.c ****     
 569:Core/Src/Impedance.c ****     if(FifoCnt > BuffCount)
 570:Core/Src/Impedance.c ****     {
 571:Core/Src/Impedance.c ****       ///@todo buffer is limited.
 572:Core/Src/Impedance.c ****     }
 573:Core/Src/Impedance.c ****     AD5940_FIFORd((uint32_t *)pBuff, FifoCnt);
 574:Core/Src/Impedance.c ****     AD5940_INTCClrFlag(AFEINTSRC_DATAFIFOTHRESH);
 575:Core/Src/Impedance.c ****     AppIMPRegModify(pBuff, &FifoCnt);   /* If there is need to do AFE re-configure, do it here when
 576:Core/Src/Impedance.c ****     //AD5940_EnterSleepS(); /* Manually put AFE back to hibernate mode. This operation only takes e
 577:Core/Src/Impedance.c ****     AD5940_SleepKeyCtrlS(SLPKEY_UNLOCK);  /* Allow AFE to enter sleep mode. */
 578:Core/Src/Impedance.c ****     /* Process data */ 
 579:Core/Src/Impedance.c ****     AppIMPDataProcess((int32_t*)pBuff,&FifoCnt); 
 580:Core/Src/Impedance.c ****     *pCount = FifoCnt;
 581:Core/Src/Impedance.c ****     return 0;
 582:Core/Src/Impedance.c ****   }
 583:Core/Src/Impedance.c ****   
 584:Core/Src/Impedance.c ****   return 0;
 1803              		.loc 1 584 10 view .LVU632
 1804 002a 0020     		movs	r0, #0
 1805              	.L93:
 585:Core/Src/Impedance.c **** } 
 1806              		.loc 1 585 1 view .LVU633
 1807 002c 03B0     		add	sp, sp, #12
 1808              	.LCFI23:
 1809              		.cfi_remember_state
 1810              		.cfi_def_cfa_offset 12
 1811              		@ sp needed
 1812 002e 30BD     		pop	{r4, r5, pc}
 1813              	.LVL139:
 1814              	.L98:
 1815              	.LCFI24:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 46


 1816              		.cfi_restore_state
 567:Core/Src/Impedance.c ****     
 1817              		.loc 1 567 5 is_stmt 1 view .LVU634
 567:Core/Src/Impedance.c ****     
 1818              		.loc 1 567 16 is_stmt 0 view .LVU635
 1819 0030 FFF7FEFF 		bl	AD5940_FIFOGetCnt
 1820              	.LVL140:
 567:Core/Src/Impedance.c ****     
 1821              		.loc 1 567 38 view .LVU636
 1822 0034 20F00301 		bic	r1, r0, #3
 567:Core/Src/Impedance.c ****     
 1823              		.loc 1 567 13 view .LVU637
 1824 0038 0191     		str	r1, [sp, #4]
 569:Core/Src/Impedance.c ****     {
 1825              		.loc 1 569 5 is_stmt 1 view .LVU638
 572:Core/Src/Impedance.c ****     AD5940_FIFORd((uint32_t *)pBuff, FifoCnt);
 1826              		.loc 1 572 5 view .LVU639
 573:Core/Src/Impedance.c ****     AD5940_INTCClrFlag(AFEINTSRC_DATAFIFOTHRESH);
 1827              		.loc 1 573 5 view .LVU640
 1828 003a 2846     		mov	r0, r5
 1829 003c FFF7FEFF 		bl	AD5940_FIFORd
 1830              	.LVL141:
 574:Core/Src/Impedance.c ****     AppIMPRegModify(pBuff, &FifoCnt);   /* If there is need to do AFE re-configure, do it here when
 1831              		.loc 1 574 5 view .LVU641
 1832 0040 4FF00070 		mov	r0, #33554432
 1833 0044 FFF7FEFF 		bl	AD5940_INTCClrFlag
 1834              	.LVL142:
 575:Core/Src/Impedance.c ****     //AD5940_EnterSleepS(); /* Manually put AFE back to hibernate mode. This operation only takes e
 1835              		.loc 1 575 5 view .LVU642
 1836 0048 01A9     		add	r1, sp, #4
 1837 004a 2846     		mov	r0, r5
 1838 004c FFF7FEFF 		bl	AppIMPRegModify
 1839              	.LVL143:
 577:Core/Src/Impedance.c ****     /* Process data */ 
 1840              		.loc 1 577 5 view .LVU643
 1841 0050 0648     		ldr	r0, .L99
 1842 0052 FFF7FEFF 		bl	AD5940_SleepKeyCtrlS
 1843              	.LVL144:
 579:Core/Src/Impedance.c ****     *pCount = FifoCnt;
 1844              		.loc 1 579 5 view .LVU644
 1845 0056 01A9     		add	r1, sp, #4
 1846 0058 2846     		mov	r0, r5
 1847 005a FFF7FEFF 		bl	AppIMPDataProcess
 1848              	.LVL145:
 580:Core/Src/Impedance.c ****     return 0;
 1849              		.loc 1 580 5 view .LVU645
 580:Core/Src/Impedance.c ****     return 0;
 1850              		.loc 1 580 13 is_stmt 0 view .LVU646
 1851 005e 019B     		ldr	r3, [sp, #4]
 1852 0060 2360     		str	r3, [r4]
 581:Core/Src/Impedance.c ****   }
 1853              		.loc 1 581 5 is_stmt 1 view .LVU647
 581:Core/Src/Impedance.c ****   }
 1854              		.loc 1 581 12 is_stmt 0 view .LVU648
 1855 0062 0020     		movs	r0, #0
 1856 0064 E2E7     		b	.L93
 1857              	.L95:
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 47


 561:Core/Src/Impedance.c ****   AD5940_SleepKeyCtrlS(SLPKEY_LOCK);  /* Prohibit AFE to enter sleep mode. */
 1858              		.loc 1 561 12 view .LVU649
 1859 0066 6FF00800 		mvn	r0, #8
 1860 006a DFE7     		b	.L93
 1861              	.L100:
 1862              		.align	2
 1863              	.L99:
 1864 006c E5470A00 		.word	673765
 1865              		.cfi_endproc
 1866              	.LFE11:
 1868              		.global	AppIMPCfg
 1869              		.section	.data.AppIMPCfg,"aw"
 1870              		.align	2
 1871              		.set	.LANCHOR0,. + 0
 1874              	AppIMPCfg:
 1875 0000 00       		.byte	0
 1876 0001 000000   		.space	3
 1877 0004 00000000 		.word	0
 1878 0008 00000000 		.word	0
 1879 000c 00000000 		.word	0
 1880 0010 00000000 		.word	0
 1881 0014 0000A041 		.word	1101004800
 1882 0018 FFFFFFFF 		.word	-1
 1883 001c 0000FA46 		.word	1190789120
 1884 0020 0024744B 		.word	1265902592
 1885 0024 0024744B 		.word	1265902592
 1886 0028 00401C46 		.word	1176256512
 1887 002c 10000000 		.word	16
 1888 0030 00040000 		.word	1024
 1889 0034 02000000 		.word	2
 1890 0038 02000000 		.word	2
 1891 003c 01000000 		.word	1
 1892 0040 02000000 		.word	2
 1893 0044 00000000 		.word	0
 1894 0048 00000000 		.word	0
 1895 004c 07000000 		.word	7
 1896 0050 00001644 		.word	1142292480
 1897 0054 00000080 		.word	-2147483648
 1898 0058 0050C347 		.word	1203982336
 1899 005c 0C000000 		.word	12
 1900 0060 01000000 		.word	1
 1901 0064 01       		.byte	1
 1902 0065 000000   		.space	3
 1903 0068 00000000 		.word	0
 1904 006c 02       		.byte	2
 1905 006d 00       		.byte	0
 1906 006e 03       		.byte	3
 1907 006f 00       		.space	1
 1908 0070 01       		.byte	1
 1909 0071 000000   		.space	3
 1910 0074 00007A44 		.word	1148846080
 1911 0078 0050C347 		.word	1203982336
 1912 007c 65000000 		.word	101
 1913 0080 00       		.byte	0
 1914 0081 000000   		.space	3
 1915 0084 00000000 		.word	0
 1916 0088 04000000 		.word	4
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 48


 1917 008c 00000000 		.space	12
 1917      00000000 
 1917      00000000 
 1918 0098 00       		.byte	0
 1919 0099 00000000 		.space	43
 1919      00000000 
 1919      00000000 
 1919      00000000 
 1919      00000000 
 1920 00c4 00       		.byte	0
 1921 00c5 00000000 		.space	7
 1921      000000
 1922              		.text
 1923              	.Letext0:
 1924              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 1925              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1926              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1927              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1928              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1929              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1930              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1931              		.file 9 "ad5940lib/ad5940.h"
 1932              		.file 10 "Core/Inc/Impedance.h"
 1933              		.file 11 "<built-in>"
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 49


DEFINED SYMBOLS
                            *ABS*:00000000 Impedance.c
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:17     .text.AppIMPSeqCfgGen:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:24     .text.AppIMPSeqCfgGen:00000000 AppIMPSeqCfgGen
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:514    .text.AppIMPSeqCfgGen:0000026c $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:529    .text.AppIMPSeqMeasureGen:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:535    .text.AppIMPSeqMeasureGen:00000000 AppIMPSeqMeasureGen
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:790    .text.AppIMPSeqMeasureGen:00000140 $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:796    .text.AppIMPGetCfg:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:803    .text.AppIMPGetCfg:00000000 AppIMPGetCfg
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:834    .text.AppIMPGetCfg:00000010 $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:839    .text.AppIMPCtrl:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:846    .text.AppIMPCtrl:00000000 AppIMPCtrl
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:868    .text.AppIMPCtrl:0000000c $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1096   .text.AppIMPCtrl:000000f4 $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1101   .text.AppIMPGetCurrFreq:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1108   .text.AppIMPGetCurrFreq:00000000 AppIMPGetCurrFreq
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1137   .text.AppIMPGetCurrFreq:0000001c $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1142   .text.AppIMPInit:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1149   .text.AppIMPInit:00000000 AppIMPInit
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1379   .text.AppIMPInit:00000100 $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1384   .text.AppIMPRegModify:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1391   .text.AppIMPRegModify:00000000 AppIMPRegModify
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1471   .text.AppIMPRegModify:00000054 $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1476   .text.AppIMPDataProcess:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1483   .text.AppIMPDataProcess:00000000 AppIMPDataProcess
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1739   .text.AppIMPDataProcess:0000012c $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1745   .text.AppIMPISR:00000000 $t
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1752   .text.AppIMPISR:00000000 AppIMPISR
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1864   .text.AppIMPISR:0000006c $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1874   .data.AppIMPCfg:00000000 AppIMPCfg
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:1870   .data.AppIMPCfg:00000000 $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:873    .text.AppIMPCtrl:00000011 $d
C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s:873    .text.AppIMPCtrl:00000012 $t

UNDEFINED SYMBOLS
AD5940_SEQGenCtrl
AD5940_AFECtrlS
AD5940_REFCfgS
AD5940_WGFreqWordCal
AD5940_HSLoopCfgS
AD5940_LPDACCfgS
AD5940_DSPCfgS
AD5940_SEQGenInsert
AD5940_SEQGenFetchSeq
AD5940_SweepNext
AD5940_SEQCmdWrite
AD5940_ClksCalculate
AD5940_SEQGpioCtrlS
AD5940_SWMatrixCfgS
AD5940_EnterSleepS
AD5940_WakeUp
AD5940_WUPTCfg
AD5940_WUPTCtrl
memset
AD5940_LPLoopCfgS
AD5940_SEQCfg
ARM GAS  C:\Users\root\AppData\Local\Temp\ccrkZ4MJ.s 			page 50


AD5940_FIFOCtrlS
AD5940_FIFOCfg
AD5940_INTCClrFlag
AD5940_SEQInfoCfg
AD5940_SEQMmrTrig
AD5940_INTCTestFlag
AD5940_ClrMCUIntFlag
AD5940_AFEPwrBW
AD5940_SEQGenInit
AD5940_WGFreqCtrlS
sqrt
atan2
AD5940_SleepKeyCtrlS
AD5940_FIFOGetCnt
AD5940_FIFORd
